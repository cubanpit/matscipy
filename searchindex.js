Search.setIndex({"docnames": ["api", "applications/cylinder_configurations", "applications/elastic_constants", "applications/electrochemistry", "applications/electrochemistry_1", "applications/electrochemistry_2", "applications/electrochemistry_3", "applications/fracture_mechanics", "applications/gamma_surface_advanced", "applications/gamma_surfaces", "applications/index", "applications/multispecies_dislocations", "applications/plasticity", "applications/quadrupole_dislocations", "applications/quasi_static_crack", "applications/tribology", "applications/visualisation", "calculators/index", "calculators/manybody", "cli/calculators", "cli/diffusion", "cli/electrochemistry", "cli/fracture_mechanics", "cli/index", "cli/structure", "conf", "generated/matscipy", "generated/matscipy.angle_distribution", "generated/matscipy.atomic_strain", "generated/matscipy.calculators", "generated/matscipy.calculators.calculator", "generated/matscipy.calculators.committee", "generated/matscipy.calculators.committee.committee", "generated/matscipy.calculators.committee.log", "generated/matscipy.calculators.committee.utils", "generated/matscipy.calculators.eam", "generated/matscipy.calculators.eam.average_atom", "generated/matscipy.calculators.eam.calculator", "generated/matscipy.calculators.eam.io", "generated/matscipy.calculators.ewald", "generated/matscipy.calculators.ewald.calculator", "generated/matscipy.calculators.fitting", "generated/matscipy.calculators.manybody", "generated/matscipy.calculators.manybody.calculator", "generated/matscipy.calculators.manybody.explicit_forms", "generated/matscipy.calculators.manybody.explicit_forms.harmonic", "generated/matscipy.calculators.manybody.explicit_forms.kumagai", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "generated/matscipy.calculators.manybody.newmb", "generated/matscipy.calculators.manybody.potentials", "generated/matscipy.calculators.mcfm", "generated/matscipy.calculators.mcfm.calculator", "generated/matscipy.calculators.mcfm.cluster_data", "generated/matscipy.calculators.mcfm.mcfm_parallel", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.qm_cluster", "generated/matscipy.calculators.mcfm.qm_cluster_tools", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "generated/matscipy.calculators.pair_potential", "generated/matscipy.calculators.pair_potential.calculator", "generated/matscipy.calculators.polydisperse", "generated/matscipy.calculators.polydisperse.calculator", "generated/matscipy.calculators.supercell_calculator", "generated/matscipy.cauchy_born", "generated/matscipy.cli", "generated/matscipy.cli.calculators", "generated/matscipy.cli.calculators.average_eam_potential", "generated/matscipy.cli.diffusion", "generated/matscipy.cli.diffusion.rms", "generated/matscipy.cli.electrochemistry", "generated/matscipy.cli.electrochemistry.continuous2discrete", "generated/matscipy.cli.electrochemistry.poisson_nernst_planck_solver", "generated/matscipy.cli.electrochemistry.stericify", "generated/matscipy.cli.fracture_mechanics", "generated/matscipy.cli.fracture_mechanics.quasistatic_crack", "generated/matscipy.cli.fracture_mechanics.setup_crack", "generated/matscipy.cli.fracture_mechanics.sinclair_crack", "generated/matscipy.cli.glasses", "generated/matscipy.cli.glasses.quench", "generated/matscipy.deformation", "generated/matscipy.dislocation", "generated/matscipy.drift", "generated/matscipy.elasticity", "generated/matscipy.electrochemistry", "generated/matscipy.electrochemistry.continuous2discrete", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver_fenics", "generated/matscipy.electrochemistry.steric_correction", "generated/matscipy.ffi", "generated/matscipy.fracture_mechanics", "generated/matscipy.fracture_mechanics.clusters", "generated/matscipy.fracture_mechanics.crack", "generated/matscipy.fracture_mechanics.crackpathsel", "generated/matscipy.fracture_mechanics.energy_release", "generated/matscipy.fracture_mechanics.idealbrittlesolid", "generated/matscipy.gamma_surface", "generated/matscipy.hessian_finite_differences", "generated/matscipy.hydrogenate", "generated/matscipy.io", "generated/matscipy.io.lammpsdata", "generated/matscipy.io.metis", "generated/matscipy.io.opls", "generated/matscipy.io.tbl", "generated/matscipy.logger", "generated/matscipy.molecules", "generated/matscipy.neighbours", "generated/matscipy.numerical", "generated/matscipy.numpy_tricks", "generated/matscipy.opls", "generated/matscipy.optimize", "generated/matscipy.precon", "generated/matscipy.pressurecoupling", "generated/matscipy.rings", "generated/matscipy.socketcalc", "generated/matscipy.spatial_correlation_function", "generated/matscipy.surface", "generated/matscipy.surface_reconstruction", "generated/matscipy.utils", "getting_started", "index", "tools/angle_distribution", "tools/index", "tools/neighbour_list", "tools/pair_distribution", "tools/ring_analysis", "topology/index", "topology/setup_non-reactive_simulations", "topology/topology_building_aC"], "filenames": ["api.rst", "applications/cylinder_configurations.ipynb", "applications/elastic_constants.ipynb", "applications/electrochemistry.rst", "applications/electrochemistry_1.py", "applications/electrochemistry_2.py", "applications/electrochemistry_3.py", "applications/fracture_mechanics.rst", "applications/gamma_surface_advanced.ipynb", "applications/gamma_surfaces.ipynb", "applications/index.rst", "applications/multispecies_dislocations.ipynb", "applications/plasticity.rst", "applications/quadrupole_dislocations.ipynb", "applications/quasi_static_crack.ipynb", "applications/tribology.ipynb", "applications/visualisation.py", "calculators/index.rst", "calculators/manybody.ipynb", "cli/calculators.md", "cli/diffusion.md", "cli/electrochemistry.md", "cli/fracture_mechanics.md", "cli/index.rst", "cli/structure.md", "conf.py", "generated/matscipy.rst", "generated/matscipy.angle_distribution.rst", "generated/matscipy.atomic_strain.rst", "generated/matscipy.calculators.rst", "generated/matscipy.calculators.calculator.rst", "generated/matscipy.calculators.committee.rst", "generated/matscipy.calculators.committee.committee.rst", "generated/matscipy.calculators.committee.log.rst", "generated/matscipy.calculators.committee.utils.rst", "generated/matscipy.calculators.eam.rst", "generated/matscipy.calculators.eam.average_atom.rst", "generated/matscipy.calculators.eam.calculator.rst", "generated/matscipy.calculators.eam.io.rst", "generated/matscipy.calculators.ewald.rst", "generated/matscipy.calculators.ewald.calculator.rst", "generated/matscipy.calculators.fitting.rst", "generated/matscipy.calculators.manybody.rst", "generated/matscipy.calculators.manybody.calculator.rst", "generated/matscipy.calculators.manybody.explicit_forms.rst", "generated/matscipy.calculators.manybody.explicit_forms.harmonic.rst", "generated/matscipy.calculators.manybody.explicit_forms.kumagai.rst", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber.rst", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner.rst", "generated/matscipy.calculators.manybody.newmb.rst", "generated/matscipy.calculators.manybody.potentials.rst", "generated/matscipy.calculators.mcfm.rst", "generated/matscipy.calculators.mcfm.calculator.rst", "generated/matscipy.calculators.mcfm.cluster_data.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.qm_cluster.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.rst", "generated/matscipy.calculators.pair_potential.rst", "generated/matscipy.calculators.pair_potential.calculator.rst", "generated/matscipy.calculators.polydisperse.rst", "generated/matscipy.calculators.polydisperse.calculator.rst", "generated/matscipy.calculators.supercell_calculator.rst", "generated/matscipy.cauchy_born.rst", "generated/matscipy.cli.rst", "generated/matscipy.cli.calculators.rst", "generated/matscipy.cli.calculators.average_eam_potential.rst", "generated/matscipy.cli.diffusion.rst", "generated/matscipy.cli.diffusion.rms.rst", "generated/matscipy.cli.electrochemistry.rst", "generated/matscipy.cli.electrochemistry.continuous2discrete.rst", "generated/matscipy.cli.electrochemistry.poisson_nernst_planck_solver.rst", "generated/matscipy.cli.electrochemistry.stericify.rst", "generated/matscipy.cli.fracture_mechanics.rst", "generated/matscipy.cli.fracture_mechanics.quasistatic_crack.rst", "generated/matscipy.cli.fracture_mechanics.setup_crack.rst", "generated/matscipy.cli.fracture_mechanics.sinclair_crack.rst", "generated/matscipy.cli.glasses.rst", "generated/matscipy.cli.glasses.quench.rst", "generated/matscipy.deformation.rst", "generated/matscipy.dislocation.rst", "generated/matscipy.drift.rst", "generated/matscipy.elasticity.rst", "generated/matscipy.electrochemistry.rst", "generated/matscipy.electrochemistry.continuous2discrete.rst", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution.rst", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver.rst", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.rst", "generated/matscipy.electrochemistry.steric_correction.rst", "generated/matscipy.ffi.rst", "generated/matscipy.fracture_mechanics.rst", "generated/matscipy.fracture_mechanics.clusters.rst", "generated/matscipy.fracture_mechanics.crack.rst", "generated/matscipy.fracture_mechanics.crackpathsel.rst", "generated/matscipy.fracture_mechanics.energy_release.rst", "generated/matscipy.fracture_mechanics.idealbrittlesolid.rst", "generated/matscipy.gamma_surface.rst", "generated/matscipy.hessian_finite_differences.rst", "generated/matscipy.hydrogenate.rst", "generated/matscipy.io.rst", "generated/matscipy.io.lammpsdata.rst", "generated/matscipy.io.metis.rst", "generated/matscipy.io.opls.rst", "generated/matscipy.io.tbl.rst", "generated/matscipy.logger.rst", "generated/matscipy.molecules.rst", "generated/matscipy.neighbours.rst", "generated/matscipy.numerical.rst", "generated/matscipy.numpy_tricks.rst", "generated/matscipy.opls.rst", "generated/matscipy.optimize.rst", "generated/matscipy.precon.rst", "generated/matscipy.pressurecoupling.rst", "generated/matscipy.rings.rst", "generated/matscipy.socketcalc.rst", "generated/matscipy.spatial_correlation_function.rst", "generated/matscipy.surface.rst", "generated/matscipy.surface_reconstruction.rst", "generated/matscipy.utils.rst", "getting_started.rst", "index.rst", "tools/angle_distribution.ipynb", "tools/index.rst", "tools/neighbour_list.ipynb", "tools/pair_distribution.ipynb", "tools/ring_analysis.ipynb", "topology/index.rst", "topology/setup_non-reactive_simulations.ipynb", "topology/topology_building_aC.ipynb"], "titles": ["API Reference", "Building cylindrical configurations with dislocations", "Elastic Constants", "Electrochemistry", "One-dimensional Poisson-Nernst-Planck systems", "Poisson-Nernst-Planck systems by finite element method", "Steric correction", "Fracture Mechanics", "Advanced Features of <code class=\"docutils literal notranslate\"><span class=\"pre\">gamma_surface.py</span></code>", "Generating Gamma Surfaces &amp; Stacking Faults", "Application domains", "Multi-species Dislocation Systems", "Plasticity", "Dislocation Quadrupoles", "Quasi static fracture simulations", "Tribology", "&lt;no title&gt;", "Interatomic potentials", "Many-body potentials", "Interatomic potentials", "Diffusion", "Electrochemistry", "Fracture mechanics", "Command line interface", "Structure generation", "&lt;no title&gt;", "matscipy", "matscipy.angle_distribution", "matscipy.atomic_strain", "matscipy.calculators", "matscipy.calculators.calculator", "matscipy.calculators.committee", "matscipy.calculators.committee.committee", "matscipy.calculators.committee.log", "matscipy.calculators.committee.utils", "matscipy.calculators.eam", "matscipy.calculators.eam.average_atom", "matscipy.calculators.eam.calculator", "matscipy.calculators.eam.io", "matscipy.calculators.ewald", "matscipy.calculators.ewald.calculator", "matscipy.calculators.fitting", "matscipy.calculators.manybody", "matscipy.calculators.manybody.calculator", "matscipy.calculators.manybody.explicit_forms", "matscipy.calculators.manybody.explicit_forms.harmonic", "matscipy.calculators.manybody.explicit_forms.kumagai", "matscipy.calculators.manybody.explicit_forms.stillinger_weber", "matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "matscipy.calculators.manybody.newmb", "matscipy.calculators.manybody.potentials", "matscipy.calculators.mcfm", "matscipy.calculators.mcfm.calculator", "matscipy.calculators.mcfm.cluster_data", "matscipy.calculators.mcfm.mcfm_parallel", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "matscipy.calculators.mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.qm_cluster", "matscipy.calculators.mcfm.qm_cluster_tools", "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "matscipy.calculators.pair_potential", "matscipy.calculators.pair_potential.calculator", "matscipy.calculators.polydisperse", "matscipy.calculators.polydisperse.calculator", "matscipy.calculators.supercell_calculator", "matscipy.cauchy_born", "matscipy.cli", "matscipy.cli.calculators", "matscipy.cli.calculators.average_eam_potential", "matscipy.cli.diffusion", "matscipy.cli.diffusion.rms", "matscipy.cli.electrochemistry", "matscipy.cli.electrochemistry.continuous2discrete", "matscipy.cli.electrochemistry.poisson_nernst_planck_solver", "matscipy.cli.electrochemistry.stericify", "matscipy.cli.fracture_mechanics", "matscipy.cli.fracture_mechanics.quasistatic_crack", "matscipy.cli.fracture_mechanics.setup_crack", "matscipy.cli.fracture_mechanics.sinclair_crack", "matscipy.cli.glasses", "matscipy.cli.glasses.quench", "matscipy.deformation", "matscipy.dislocation", "matscipy.drift", "matscipy.elasticity", "matscipy.electrochemistry", "matscipy.electrochemistry.continuous2discrete", "matscipy.electrochemistry.poisson_boltzmann_distribution", "matscipy.electrochemistry.poisson_nernst_planck_solver", "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics", "matscipy.electrochemistry.steric_correction", "matscipy.ffi", "matscipy.fracture_mechanics", "matscipy.fracture_mechanics.clusters", "matscipy.fracture_mechanics.crack", "matscipy.fracture_mechanics.crackpathsel", "matscipy.fracture_mechanics.energy_release", "matscipy.fracture_mechanics.idealbrittlesolid", "matscipy.gamma_surface", "matscipy.hessian_finite_differences", "matscipy.hydrogenate", "matscipy.io", "matscipy.io.lammpsdata", "matscipy.io.metis", "matscipy.io.opls", "matscipy.io.tbl", "matscipy.logger", "matscipy.molecules", "matscipy.neighbours", "matscipy.numerical", "matscipy.numpy_tricks", "matscipy.opls", "matscipy.optimize", "matscipy.precon", "matscipy.pressurecoupling", "matscipy.rings", "matscipy.socketcalc", "matscipy.spatial_correlation_function", "matscipy.surface", "matscipy.surface_reconstruction", "matscipy.utils", "<cite>matscipy</cite>", "<cite>matscipy</cite>", "Angle-distribution function", "Analysis tools", "Neighbour list", "Pair-distribution function", "Ring analysis", "Structure and topology generation", "Setups for non-reactive simulations with LAMMPS", "Topology building for LAMMPS non-reactive MD simulations of amorphous carbon"], "terms": {"The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 30, 32, 36, 37, 38, 40, 43, 45, 49, 51, 52, 60, 62, 63, 64, 66, 68, 69, 70, 87, 89, 92, 93, 94, 99, 102, 103, 109, 113, 116, 117, 118, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135], "matscipi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 23, 25, 128, 129, 130, 131, 132, 133, 134, 135], "provid": [1, 3, 4, 6, 7, 8, 9, 12, 14, 15, 23, 26, 32, 58, 64, 70, 87, 90, 99, 103, 116, 123, 124, 125, 126, 127, 133, 135], "set": [1, 2, 3, 6, 9, 10, 13, 14, 15, 17, 21, 25, 30, 32, 33, 37, 38, 40, 41, 43, 49, 51, 52, 62, 63, 64, 66, 68, 69, 70, 77, 87, 89, 90, 93, 95, 99, 102, 103, 107, 110, 116, 118, 121, 123, 134, 135], "tool": [1, 4, 12, 15, 16, 86, 87, 113, 127, 133], "creat": [1, 2, 4, 5, 6, 8, 9, 12, 15, 19, 25, 30, 32, 33, 36, 37, 40, 43, 49, 51, 52, 63, 66, 68, 69, 87, 95, 102, 113, 116, 118, 121, 123, 130, 134, 135], "atomist": [1, 2, 3, 4, 6, 7, 12, 14, 15, 22, 66, 68, 70, 87, 89, 99], "contain": [1, 9, 10, 12, 13, 15, 22, 25, 30, 32, 37, 38, 40, 43, 49, 51, 52, 63, 66, 68, 69, 70, 87, 89, 93, 94, 99, 102, 107, 109, 113, 115, 116, 121, 123, 124, 129, 130, 134, 135], "In": [1, 2, 4, 5, 8, 9, 11, 13, 15, 21, 24, 30, 32, 37, 40, 41, 43, 49, 51, 52, 63, 66, 68, 69, 87, 102, 113, 116, 121, 123, 124, 134, 135], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 27, 28, 30, 32, 37, 38, 40, 43, 45, 49, 51, 52, 56, 59, 60, 62, 63, 64, 66, 68, 69, 70, 78, 86, 87, 89, 91, 92, 93, 94, 95, 96, 99, 102, 105, 109, 113, 114, 116, 117, 118, 120, 121, 123, 124, 128, 130, 131, 133, 134, 135], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 20, 22, 24, 30, 32, 36, 37, 40, 43, 49, 51, 52, 59, 63, 66, 68, 69, 70, 79, 87, 95, 99, 102, 109, 110, 113, 116, 119, 121, 123, 124, 126, 127, 130, 134, 135], "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 30, 32, 37, 40, 43, 45, 49, 51, 52, 66, 68, 69, 70, 87, 102, 113, 116, 121, 123, 128, 130, 131, 134, 135], "focu": 1, "order": [1, 4, 6, 9, 10, 11, 13, 14, 19, 21, 25, 30, 37, 40, 43, 49, 50, 66, 68, 70, 87, 89, 93, 94, 113, 116, 117, 119, 121, 123], "start": [1, 9, 11, 12, 13, 15, 25, 30, 37, 38, 40, 43, 49, 66, 68, 87, 89, 99, 103, 116, 121, 123, 134, 135], "cylind": [1, 13, 87, 99], "bulk": [1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 22, 87, 89, 92, 93, 94, 99, 101, 124, 125, 135], "materi": [1, 2, 7, 14, 15, 22, 36, 87, 105, 119, 126, 127], "orient": [1, 9, 14, 87, 103, 124], "along": [1, 4, 8, 9, 13, 14, 15, 37, 70, 87, 89, 91, 103, 115, 116, 119, 122, 123, 124], "vector": [1, 6, 9, 13, 27, 30, 37, 40, 43, 45, 46, 47, 70, 89, 93, 94, 103, 113, 114, 116, 118, 123, 125, 128, 130], "futur": [1, 30, 32, 37, 43, 68, 69, 102, 121, 123], "line": [1, 4, 5, 6, 9, 13, 14, 15, 21, 24, 25, 38, 78, 87, 99, 103, 109, 119, 121, 123, 125, 135], "vec": [1, 45, 122, 128], "l": [1, 4, 5, 6, 21, 40, 66, 68, 87, 89, 93, 94, 95, 119, 123], "By": [1, 9, 13, 14, 30, 32, 37, 43, 68, 69, 102, 109, 116, 121, 123], "convent": [1, 20, 89, 93, 113, 116, 135], "assum": [1, 4, 13, 14, 32, 89, 93, 94, 99, 113, 116], "z": [1, 4, 5, 6, 8, 9, 13, 15, 70, 87, 89, 91, 92, 93, 94, 95, 99, 103, 109, 113, 116, 123, 124, 125, 134, 135], "direct": [1, 2, 4, 6, 8, 9, 13, 14, 15, 22, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 91, 95, 99, 102, 103, 105, 113, 116, 119, 121, 123, 124], "cell": [1, 3, 6, 10, 11, 12, 13, 14, 15, 16, 21, 30, 32, 37, 40, 43, 51, 52, 68, 69, 70, 86, 89, 93, 94, 98, 99, 102, 103, 109, 113, 116, 119, 121, 123, 125, 131, 134], "alwai": [1, 9, 87, 123, 124, 125], "correspond": [1, 4, 8, 9, 12, 15, 30, 32, 33, 36, 37, 40, 43, 49, 66, 68, 70, 87, 89, 93, 94, 109, 113, 116, 123, 124, 133], "Then": [1, 4, 99, 123], "displac": [1, 6, 7, 11, 13, 14, 18, 20, 28, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 87, 89, 97, 99, 102, 104, 114, 116, 121, 124, 126, 127], "field": [1, 2, 7, 10, 11, 12, 22, 36, 38, 70, 87, 90, 95, 97, 99, 102, 109, 123, 133, 135], "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 36, 37, 38, 40, 43, 45, 48, 49, 50, 51, 52, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 87, 89, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "appli": [1, 3, 4, 7, 8, 9, 10, 11, 15, 20, 21, 64, 70, 79, 87, 89, 91, 93, 94, 95, 99, 103, 109, 113, 116, 117, 118, 119, 121, 123, 124, 125, 134], "outer": [1, 22, 93], "radial": [1, 99], "shell": [1, 131], "fix": [1, 15, 22, 25, 87, 94, 99, 101, 116, 119, 123], "stabilis": 1, "so": [1, 4, 5, 6, 9, 11, 25, 45, 64, 89, 96, 116, 123, 134], "end": [1, 13, 15, 87, 99, 100, 116], "up": [1, 2, 13, 14, 15, 58, 59, 68, 87, 93, 99, 120, 121, 123, 128, 130, 131, 134], "period": [1, 9, 11, 13, 20, 87, 88, 98, 103, 105, 113, 116, 121, 124, 125, 135], "boundari": [1, 3, 6, 7, 9, 10, 15, 20, 21, 22, 66, 68, 79, 86, 92, 93, 94, 95, 99, 105, 113, 116, 124, 125, 135], "condit": [1, 3, 7, 10, 15, 21, 22, 86, 87, 93, 94, 99, 105, 113, 116, 123, 124, 125, 135], "x": [1, 4, 5, 6, 14, 25, 36, 46, 47, 49, 70, 87, 89, 91, 92, 93, 94, 95, 99, 101, 102, 103, 105, 109, 111, 113, 115, 116, 117, 118, 123, 124, 125, 128, 131, 134, 135], "y": [1, 4, 6, 8, 9, 14, 15, 25, 36, 49, 70, 87, 89, 91, 95, 99, 102, 103, 109, 113, 116, 118, 123, 124, 125, 134], "As": [1, 5, 8, 9, 11, 13, 87, 123, 124, 126, 127, 130, 134], "shown": [1, 4, 5, 25, 30, 37, 68, 69, 102, 121], "figur": [1, 4, 5, 16, 87], "abov": [1, 2, 4, 5, 6, 8, 9, 13, 14, 22, 24, 45, 51, 52, 63, 70, 87, 113, 119, 123, 124, 131], "ar": [1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 15, 18, 22, 23, 25, 30, 32, 36, 37, 38, 40, 41, 43, 45, 49, 51, 52, 59, 63, 64, 66, 68, 69, 70, 86, 87, 89, 91, 93, 94, 95, 99, 102, 103, 105, 109, 113, 116, 119, 121, 122, 123, 124, 125, 128, 130, 133, 134, 135], "characteris": 1, "burger": [1, 13, 87], "b": [1, 4, 6, 13, 14, 18, 19, 25, 28, 30, 36, 37, 38, 40, 41, 43, 49, 66, 68, 87, 89, 93, 95, 99, 102, 105, 116, 120, 122, 123, 128, 134], "parallel": [1, 9, 55, 70, 99, 116], "while": [1, 5, 15, 64, 91, 109, 116, 121, 122, 123, 130], "have": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 25, 30, 32, 37, 40, 41, 43, 45, 49, 51, 52, 66, 68, 69, 70, 87, 89, 99, 102, 103, 113, 115, 116, 118, 121, 123, 134], "perpendicular": [1, 99, 125], "us": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 30, 32, 37, 38, 40, 43, 49, 51, 52, 53, 56, 58, 59, 62, 63, 64, 66, 68, 69, 70, 87, 89, 92, 93, 94, 98, 99, 102, 103, 104, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 131, 134, 135], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 15, 19, 22, 24, 25, 30, 32, 36, 37, 38, 40, 43, 46, 47, 49, 51, 52, 63, 64, 66, 68, 69, 70, 86, 87, 88, 89, 91, 92, 99, 102, 103, 107, 109, 113, 116, 117, 119, 121, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135], "anisotrop": [1, 12, 87, 89, 99], "solut": [1, 3, 5, 6, 7, 10, 12, 21, 22, 30, 37, 40, 43, 49, 66, 68, 87, 89, 92, 93, 94, 99], "within": [1, 4, 6, 12, 21, 25, 30, 37, 64, 87, 94, 95, 99, 113, 116, 121, 123, 124, 125], "stroh": [1, 12, 87], "formal": [1, 7, 12], "gener": [1, 3, 4, 7, 8, 10, 11, 12, 13, 18, 19, 21, 23, 25, 30, 36, 37, 43, 49, 51, 52, 64, 66, 70, 77, 86, 87, 89, 91, 93, 94, 98, 103, 113, 118, 123, 124, 125, 126, 127, 129, 134], "implement": [1, 2, 5, 6, 7, 12, 17, 18, 30, 31, 32, 35, 37, 40, 43, 46, 47, 48, 49, 50, 51, 52, 58, 66, 68, 69, 70, 93, 94, 95, 99, 102, 117, 121, 123, 124, 126, 127, 130, 132], "atomman": [1, 12, 87], "packag": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 18, 87, 92, 96, 126, 127, 134, 135], "For": [1, 4, 8, 9, 11, 12, 15, 25, 30, 36, 37, 43, 45, 51, 52, 66, 68, 70, 87, 89, 99, 107, 109, 110, 113, 116, 119, 123, 125, 130], "interact": [1, 2, 11, 15, 16, 18, 22, 38, 40, 45, 49, 50, 66, 68, 87, 107, 109, 112, 116, 123, 133, 134, 135], "visualis": [1, 8, 9, 11, 13, 14, 16, 87], "structur": [1, 2, 7, 8, 9, 11, 12, 13, 14, 16, 18, 23, 30, 32, 37, 38, 40, 41, 43, 49, 51, 52, 55, 62, 63, 64, 66, 68, 69, 70, 87, 89, 102, 103, 109, 113, 116, 121, 123, 124, 125, 126, 127, 130, 134, 135], "nglview": [1, 11, 14, 16, 87, 135], "which": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 22, 25, 30, 32, 37, 40, 43, 45, 49, 51, 52, 56, 62, 63, 64, 66, 68, 69, 70, 87, 89, 92, 99, 102, 103, 105, 109, 113, 115, 116, 117, 119, 121, 123, 124, 128, 129, 130, 133, 134, 135], "allow": [1, 8, 9, 13, 25, 40, 70, 87, 95, 99, 103, 116, 117, 123, 124, 130, 135], "view": [1, 2, 8, 11, 13, 16, 18, 87, 108, 116, 123, 134, 135], "ipython": [1, 2, 16, 18], "jupyt": [1, 25], "notebook": [1, 3, 16, 25, 134], "also": [1, 2, 7, 8, 9, 11, 14, 15, 18, 22, 25, 30, 32, 37, 40, 43, 49, 51, 52, 63, 66, 68, 69, 70, 87, 99, 102, 103, 116, 121, 123, 130, 133], "color": [1, 2, 4, 5, 6, 11, 13, 87, 99, 125], "atom": [1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 24, 30, 32, 35, 36, 37, 38, 40, 41, 43, 45, 49, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 77, 79, 87, 88, 89, 91, 99, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134], "accord": [1, 3, 7, 8, 15, 16, 21, 22, 32, 64, 70, 87, 89, 91, 93, 94, 113, 123, 132], "crystallograph": [1, 12, 99, 123], "identifi": [1, 8, 32, 113, 124, 125, 130, 132], "common": [1, 8, 13, 62, 87, 103, 113, 116, 123, 125, 126, 127, 132], "neighbour": [1, 8, 27, 28, 30, 37, 43, 51, 52, 58, 59, 60, 62, 63, 64, 66, 68, 87, 99, 102, 103, 108, 127, 128, 129, 131, 133, 135], "analysi": [1, 8, 12, 87, 93, 94, 103, 125, 127, 130], "algoritm": 1, "its": [1, 4, 5, 6, 15, 18, 25, 30, 32, 37, 41, 43, 62, 63, 64, 66, 68, 69, 87, 89, 95, 102, 105, 116, 121, 123, 135], "extent": 1, "ovito": [1, 6, 12, 87, 125], "part": [1, 8, 12, 15, 25, 32, 38, 40, 87, 119, 123, 135], "default": [1, 4, 9, 11, 12, 13, 21, 23, 25, 26, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 91, 92, 93, 94, 95, 99, 102, 109, 113, 115, 116, 117, 121, 122, 123], "depend": [1, 2, 8, 9, 11, 12, 25, 41, 70, 96, 123], "requir": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 18, 32, 77, 79, 87, 89, 99, 103, 116, 121, 123, 125, 128, 133, 134, 135], "separ": [1, 13, 19, 30, 37, 40, 43, 49, 66, 68, 87, 89, 103, 109, 119, 123, 135], "instal": [1, 10, 23, 96], "keep": [1, 9, 25, 123], "mind": [1, 2, 6, 11, 95], "run": [1, 9, 12, 14, 15, 18, 51, 52, 56, 64, 69, 87, 89, 92, 99, 103, 116, 119, 121, 135], "well": [1, 3, 4, 9, 12, 13, 36, 70, 123], "test": [1, 2, 5, 10, 13, 14, 18, 26, 92, 116, 123, 125, 128, 131, 132], "test_disloc": [1, 12], "py": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 24, 25, 26, 79, 87, 89, 134, 135], "sinc": [1, 14, 15, 30, 32, 37, 40, 43, 49, 51, 52, 59, 66, 68, 69, 102, 121, 123, 130, 134], "major": [1, 12, 87, 123], "modul": [1, 2, 3, 6, 7, 8, 12, 14, 15, 25, 26, 29, 31, 35, 39, 42, 44, 51, 54, 57, 58, 61, 65, 67, 71, 72, 74, 76, 80, 84, 87, 89, 90, 96, 97, 104, 106, 123, 125, 127, 134], "thu": [1, 4, 6, 9, 11, 12, 13, 93, 94, 116], "skip": [1, 9, 12, 87, 123], "found": [1, 4, 11, 66, 68, 70, 93, 94, 99, 103, 109, 116, 119, 123, 124, 134, 135], "your": [1, 9, 12, 25, 116, 126, 127, 135], "pleas": [1, 6, 30, 32, 37, 43, 68, 69, 102, 116, 121, 135], "note": [1, 11, 15, 25, 36, 37, 45, 70, 87, 89, 99, 107, 109, 116, 123, 128, 134, 135], "veri": [1, 2, 8, 9, 13, 14, 116, 123, 134, 135], "small": [1, 2, 4, 9, 13, 14, 15, 18, 22, 64, 70, 89, 113, 119, 125], "radiu": [1, 6, 8, 11, 13, 21, 79, 87, 95, 113, 125], "product": [1, 6, 118, 123], "calcul": [1, 2, 4, 7, 8, 9, 13, 14, 15, 17, 18, 22, 24, 28, 70, 89, 92, 97, 99, 102, 103, 114, 116, 118, 119, 120, 121, 122, 123, 124, 128, 130, 131], "one": [1, 4, 6, 9, 11, 13, 14, 15, 30, 32, 37, 43, 50, 63, 64, 68, 69, 70, 79, 87, 89, 91, 93, 94, 95, 102, 109, 113, 116, 121, 122, 123, 124], "should": [1, 2, 8, 9, 11, 12, 25, 30, 32, 36, 37, 40, 43, 49, 51, 52, 62, 63, 64, 66, 68, 69, 70, 87, 89, 99, 102, 103, 109, 116, 119, 121, 123, 125, 134, 135], "do": [1, 4, 6, 9, 11, 12, 13, 14, 25, 30, 32, 37, 43, 51, 52, 68, 69, 92, 102, 113, 116, 118, 119, 121, 123], "converg": [1, 3, 4, 6, 9, 10, 13, 14, 15, 30, 37, 40, 43, 49, 66, 68, 87, 89, 92, 93, 94, 117], "size": [1, 2, 4, 6, 11, 13, 14, 15, 16, 25, 30, 37, 40, 41, 43, 49, 56, 66, 68, 70, 87, 89, 90, 93, 94, 99, 100, 113, 114, 115, 117, 123, 131], "ensur": [1, 6, 14, 15, 66, 116, 117, 135], "affect": [1, 16, 116, 123, 135], "studi": [1, 11, 12, 13, 15, 87], "import": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 18, 22, 24, 25, 36, 95, 96, 99, 113, 116, 123, 128, 130, 131, 132, 134, 135], "numpi": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 18, 21, 22, 25, 28, 37, 70, 87, 94, 95, 99, 110, 113, 115, 116, 118, 119, 123, 128, 130, 131, 132, 134, 135], "np": [1, 2, 4, 5, 6, 8, 11, 13, 14, 15, 16, 18, 22, 30, 37, 38, 51, 52, 53, 56, 58, 59, 63, 64, 68, 69, 70, 87, 89, 91, 93, 95, 99, 102, 103, 113, 115, 121, 123, 125, 128, 130, 131, 132, 134, 135], "necessari": [1, 4, 11, 12, 14, 51, 52, 62, 63, 64, 89, 123, 124], "render": [1, 11, 25, 123], "3d": [1, 6, 11, 70, 87, 89, 125], "defin": [1, 2, 4, 5, 8, 13, 14, 15, 30, 32, 33, 45, 49, 50, 70, 87, 89, 102, 109, 112, 113, 116, 123, 124, 125, 135], "dimensionless": [1, 4, 87, 89, 99], "alat": [1, 8, 9, 11, 13, 14, 87], "frame": [1, 4, 5, 6, 13, 14, 70, 85, 87, 89, 99, 124, 125], "each": [1, 4, 5, 9, 13, 20, 25, 28, 30, 37, 38, 40, 43, 49, 51, 52, 64, 66, 68, 70, 87, 89, 91, 92, 93, 94, 99, 103, 109, 110, 113, 116, 117, 119, 123, 124, 125, 130, 133, 134, 135], "kind": [1, 12, 13, 36, 37, 38, 87, 123], "ha": [1, 4, 5, 6, 7, 8, 9, 12, 13, 15, 26, 30, 32, 36, 37, 38, 40, 43, 49, 59, 66, 68, 69, 86, 87, 89, 99, 102, 115, 116, 117, 121, 123, 124, 128, 130, 131, 132], "sever": 1, "describ": [1, 2, 9, 13, 18, 19, 22, 87, 93, 94, 99, 102, 116, 117, 123, 128, 131, 135], "geometr": [1, 38, 109, 116], "layout": [1, 16, 123], "posit": [1, 4, 6, 14, 15, 18, 22, 24, 30, 32, 37, 43, 49, 51, 52, 63, 68, 69, 70, 77, 87, 89, 93, 94, 95, 99, 101, 102, 103, 109, 113, 116, 119, 121, 123, 134, 135], "Such": [1, 134], "store": [1, 25, 32, 41, 53, 56, 64, 78, 87, 99, 102, 109, 113, 116, 118, 123, 130, 134], "attribut": [1, 30, 32, 37, 38, 40, 41, 43, 49, 51, 52, 66, 68, 69, 87, 93, 94, 99, 102, 113, 116, 118, 119, 121, 123], "class": [1, 8, 9, 11, 12, 13, 14, 15, 18, 25, 30, 32, 37, 38, 40, 41, 43, 45, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 86, 87, 88, 89, 93, 94, 95, 99, 102, 103, 107, 111, 112, 113, 116, 118, 119, 121, 123, 124], "thei": [1, 2, 11, 12, 25, 30, 37, 59, 64, 68, 69, 102, 109, 113, 118, 121, 123, 125, 134], "can": [1, 2, 4, 8, 9, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24, 25, 30, 32, 36, 37, 40, 43, 45, 49, 51, 52, 58, 59, 64, 66, 68, 69, 70, 87, 89, 93, 94, 95, 99, 102, 109, 110, 113, 116, 119, 121, 123, 124, 125, 126, 127, 128, 130, 131, 134, 135], "without": [1, 9, 18, 22, 34, 51, 52, 87, 95, 123], "actual": [1, 2, 13, 22, 24, 87, 95, 99, 119, 123, 130], "need": [1, 6, 9, 13, 14, 15, 25, 30, 32, 37, 40, 43, 45, 49, 51, 52, 62, 63, 64, 66, 68, 69, 70, 87, 95, 99, 102, 113, 121, 123, 124, 128, 131, 134], "construct": [1, 9, 11, 12, 13, 40, 49, 51, 52, 66, 87, 93, 94, 109, 112, 113, 123, 134], "from": [1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 27, 30, 32, 34, 36, 37, 38, 40, 43, 49, 50, 51, 52, 58, 59, 63, 66, 68, 69, 70, 77, 79, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 107, 109, 110, 112, 113, 114, 116, 117, 119, 121, 123, 124, 125, 128, 130, 131, 132, 134, 135], "bccmixed111disloc": [1, 87], "print": [1, 6, 8, 11, 14, 22, 51, 52, 63, 64, 87, 89, 95, 99, 113, 116, 121, 123, 134, 135], "bcc": [1, 10, 12, 14, 41, 87, 98, 103, 125], "miller": [1, 8, 9, 87, 99, 103, 123], "indic": [1, 9, 37, 58, 59, 63, 87, 92, 95, 99, 103, 104, 113, 114, 115, 116, 119, 123, 125, 130, 135], "ax": [1, 2, 4, 5, 6, 12, 13, 14, 70, 87, 91, 99, 103, 116, 123, 125], "burgers_dimensionless": [1, 87], "core": [1, 11, 13, 51, 52, 53, 63, 87, 123], "fraction": [1, 11, 103], "coord": [1, 11, 95, 113, 122], "n": [1, 2, 4, 5, 6, 8, 9, 14, 22, 30, 36, 37, 38, 40, 43, 49, 66, 68, 87, 92, 93, 94, 95, 98, 99, 100, 102, 103, 113, 116, 123, 125, 128, 131], "unit_cell_core_position_dimensionless": [1, 87], "unit": [1, 4, 6, 9, 14, 15, 16, 18, 24, 25, 30, 32, 37, 43, 68, 69, 70, 78, 87, 89, 92, 93, 94, 95, 99, 102, 103, 109, 116, 119, 121, 123], "usr": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 87, 134, 135], "lib": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 87, 123, 134, 135], "python3": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 87, 134, 135], "dist": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 87, 134, 135], "scipi": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 30, 37, 87, 89, 93, 94, 95, 99, 113, 118, 134, 135], "__init__": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 25, 30, 32, 37, 40, 41, 43, 45, 49, 50, 51, 52, 53, 59, 60, 62, 63, 64, 66, 68, 69, 70, 86, 87, 88, 89, 93, 94, 95, 99, 102, 103, 107, 111, 112, 113, 116, 118, 119, 121, 124, 134, 135], "146": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 134, 135], "userwarn": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 134, 135], "A": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 19, 21, 22, 25, 28, 30, 32, 36, 37, 38, 40, 43, 49, 50, 51, 52, 58, 59, 66, 68, 69, 70, 87, 89, 92, 99, 102, 103, 109, 113, 115, 116, 118, 119, 121, 123, 124, 125, 132, 134, 135], "version": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 25, 70, 87, 96, 116, 117, 121, 123, 134, 135], "17": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 25, 123, 130, 134, 135], "3": [1, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 18, 22, 24, 30, 37, 38, 40, 53, 59, 64, 68, 69, 70, 77, 79, 87, 91, 92, 93, 94, 95, 99, 100, 102, 109, 112, 113, 116, 117, 118, 121, 122, 123, 124, 125, 128, 131, 132, 134, 135], "25": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 87, 134, 135], "0": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 18, 21, 22, 24, 25, 30, 32, 36, 37, 38, 40, 41, 43, 45, 49, 50, 51, 52, 59, 60, 64, 66, 68, 69, 70, 79, 86, 87, 89, 92, 93, 94, 95, 98, 99, 100, 102, 103, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 130, 131, 132, 134, 135], "detect": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 18, 22, 87, 134, 135], "26": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 87, 134, 135], "warn": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 25, 33, 51, 52, 95, 111, 116, 125, 134, 135], "f": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 18, 24, 36, 37, 38, 43, 45, 66, 68, 70, 87, 92, 93, 94, 95, 99, 100, 116, 117, 119, 123, 134, 135], "np_minvers": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 134, 135], "np_maxvers": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 134, 135], "5": [1, 2, 4, 5, 6, 11, 13, 14, 15, 16, 21, 22, 24, 36, 38, 53, 70, 79, 86, 87, 89, 95, 98, 99, 100, 101, 102, 109, 113, 116, 121, 123, 125, 128, 130, 131, 132, 134, 135], "16666667": [1, 87], "disloc_mod": 1, "inspect": [1, 3, 10], "find": [1, 6, 14, 62, 63, 64, 70, 87, 95, 99, 103, 113, 116, 123, 128, 131], "all": [1, 4, 6, 9, 12, 14, 15, 18, 20, 21, 25, 30, 32, 37, 38, 40, 43, 49, 51, 52, 59, 62, 64, 66, 68, 69, 70, 79, 87, 89, 93, 94, 99, 101, 102, 103, 105, 109, 112, 113, 116, 119, 121, 122, 123, 125, 130, 134, 135], "inherit": [1, 25, 123], "abstract": [1, 43, 49, 66, 87, 96, 113, 121], "base": [1, 2, 8, 9, 11, 12, 14, 25, 30, 32, 37, 38, 40, 41, 43, 45, 49, 50, 51, 52, 53, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 86, 87, 88, 89, 93, 94, 95, 99, 102, 103, 107, 111, 112, 113, 116, 117, 118, 119, 121, 123, 124, 125, 128, 133, 134, 135], "cubiccrystaldisloc": [1, 8, 12, 87, 103], "name": [1, 4, 6, 8, 9, 11, 14, 16, 25, 26, 30, 32, 33, 37, 38, 40, 41, 43, 49, 51, 52, 64, 66, 68, 69, 79, 87, 99, 102, 107, 108, 109, 110, 111, 116, 121, 123, 125, 135], "attr": 1, "__dict__": 1, "item": [1, 87, 116, 123], "isclass": 1, "issubclass": 1, "cubiccrystaldissociateddisloc": [1, 8, 12, 87, 103], "cubiccrystaldislocationquadrupol": [1, 87], "quadrupol": [1, 10, 12, 87], "bccscrew111disloc": [1, 13, 87], "bccedge111disloc": [1, 87], "bccedge111bardisloc": [1, 87], "bccedge100disloc": [1, 8, 87], "bccedge100110disloc": [1, 87], "diamondglide30degreeparti": [1, 87], "diamondglide90degreeparti": [1, 11, 13, 87], "diamondglidescrew": [1, 8, 87, 103], "diamondglide60degre": [1, 87], "fccscrewshockleyparti": [1, 87], "fccedgeshockleyparti": [1, 87], "fccscrew110disloc": [1, 13, 87], "fccedge110disloc": [1, 8, 87, 103], "case": [1, 4, 5, 9, 11, 13, 30, 32, 37, 40, 43, 49, 51, 52, 63, 66, 68, 69, 70, 87, 93, 94, 99, 102, 113, 116, 121, 123, 124, 135], "take": [1, 5, 11, 13, 14, 22, 24, 45, 70, 86, 87, 89, 116, 123], "tungsten": [1, 87], "lattic": [1, 2, 7, 8, 11, 12, 14, 15, 18, 38, 70, 87, 98, 99, 102, 103, 109, 113, 116, 118, 124, 125, 134], "paramet": [1, 2, 4, 5, 12, 13, 14, 15, 16, 22, 23, 24, 26, 27, 30, 32, 36, 37, 38, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 79, 87, 89, 91, 92, 93, 94, 95, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 133, 134, 135], "elast": [1, 7, 10, 11, 12, 18, 22, 30, 36, 37, 40, 43, 49, 66, 68, 87, 97, 99, 119, 126, 127, 135], "constant": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 18, 22, 24, 30, 36, 37, 38, 40, 41, 43, 49, 66, 68, 70, 87, 89, 92, 93, 94, 99, 102, 103, 109, 116, 119, 124, 125, 126, 127], "It": [1, 8, 14, 20, 22, 32, 51, 52, 89, 113, 116, 123, 126, 127, 128], "possibl": [1, 6, 11, 13, 25, 30, 87, 89, 113, 116, 123, 124], "valu": [1, 4, 5, 6, 14, 15, 23, 25, 26, 32, 38, 41, 46, 47, 64, 70, 87, 89, 92, 93, 94, 95, 99, 101, 103, 109, 113, 116, 117, 118, 119, 122, 123, 128, 134], "literatur": [1, 9, 134], "howev": [1, 2, 9, 11, 12, 13, 14, 36, 113, 123, 134], "you": [1, 8, 9, 12, 15, 25, 116, 121, 123, 134, 135], "plan": [1, 12], "relax": [1, 2, 9, 11, 14, 22, 24, 30, 37, 40, 41, 43, 49, 66, 68, 70, 87, 89, 99, 101, 103, 119, 134], "interatom": [1, 2, 8, 15, 23, 32, 36, 99, 127, 129, 133, 135], "potenti": [1, 2, 4, 5, 6, 8, 9, 13, 14, 15, 21, 22, 23, 24, 30, 32, 36, 37, 38, 40, 41, 43, 45, 46, 47, 48, 49, 51, 52, 55, 60, 64, 66, 68, 70, 87, 92, 93, 94, 95, 99, 101, 109, 113, 116, 124, 127, 129, 134, 135], "conveni": [1, 13, 109, 118, 123, 135], "method": [1, 3, 4, 6, 8, 10, 12, 13, 30, 32, 35, 37, 38, 40, 41, 43, 45, 49, 50, 51, 52, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 87, 89, 93, 94, 95, 99, 102, 103, 107, 111, 112, 113, 116, 118, 119, 121, 123, 124, 125, 134], "get_elastic_const": [1, 8, 9, 13, 30, 37, 40, 43, 49, 66, 68, 87], "desir": [1, 2, 5, 6, 8, 11, 13, 40, 89, 93, 123, 135], "embed": [1, 13, 35, 36, 37, 38], "marinica": [1, 13, 87], "et": [1, 9, 13, 15, 18, 25, 32, 66, 68, 135], "al": [1, 9, 13, 15, 18, 25, 32, 66, 68, 116, 135], "2013": [1, 13, 87], "paper": [1, 13, 25, 87], "eam4": [1, 13], "forc": [1, 2, 4, 14, 18, 30, 32, 37, 40, 41, 43, 45, 49, 51, 52, 53, 66, 68, 69, 70, 87, 89, 99, 100, 102, 103, 104, 109, 114, 116, 117, 118, 119, 121, 123, 124, 130, 133, 135], "energi": [1, 2, 9, 13, 14, 18, 22, 30, 32, 36, 37, 38, 40, 41, 43, 49, 50, 51, 52, 56, 64, 66, 68, 69, 87, 99, 100, 101, 102, 103, 109, 110, 113, 116, 119, 121, 130], "eam": [1, 2, 13, 23, 69], "eam_calc": [1, 13], "w_eam4": [1, 13], "function": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 18, 19, 21, 22, 23, 25, 26, 27, 28, 30, 33, 34, 36, 37, 38, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 55, 56, 60, 62, 63, 64, 66, 68, 70, 73, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 134], "accept": [1, 2, 5, 8, 13, 30, 37, 40, 43, 49, 59, 66, 68, 70, 89, 103, 113, 123, 132, 135], "ani": [1, 4, 8, 9, 13, 22, 25, 30, 32, 36, 37, 40, 43, 49, 51, 52, 58, 63, 66, 68, 69, 70, 87, 102, 116, 121, 123, 125, 134], "ASE": [1, 4, 6, 8, 13, 14, 15, 17, 30, 37, 51, 52, 56, 70, 99, 103, 107, 109, 113, 116, 119, 121, 124, 126, 127, 134], "type": [1, 2, 8, 13, 21, 26, 37, 38, 51, 52, 53, 58, 59, 62, 63, 64, 70, 87, 89, 91, 92, 93, 94, 95, 99, 101, 103, 105, 107, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 123, 124, 125, 131, 133, 134], "c11": [1, 8, 9, 11, 13, 14, 15, 22, 41, 87, 89, 99, 119], "c12": [1, 8, 9, 11, 13, 14, 22, 41, 87, 89, 99], "c44": [1, 8, 9, 11, 13, 14, 22, 41, 87, 89, 99], "symbol": [1, 2, 4, 6, 8, 9, 11, 13, 14, 15, 18, 36, 38, 50, 59, 87, 96, 103, 113, 116, 123, 125, 135], "w": [1, 10, 12, 15, 36, 40, 41, 45, 49, 50, 66, 87, 89, 99, 111, 119, 123, 125], "verbos": [1, 2, 8, 9, 12, 13, 21, 30, 32, 37, 40, 43, 49, 51, 52, 60, 63, 64, 66, 68, 69, 79, 87, 89, 99, 102, 117, 121], "fals": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 16, 25, 30, 32, 37, 40, 41, 43, 49, 51, 52, 56, 64, 66, 68, 69, 70, 87, 89, 93, 98, 99, 102, 103, 107, 110, 111, 113, 116, 118, 121, 122, 123, 124, 125, 131, 135], "3f": [1, 18], "angstrom": [1, 4, 6, 8, 87, 95, 116, 128, 131], "2f": [1, 2, 18], "gpa": [1, 14, 15, 18, 22, 87, 119], "143": 1, "538": 1, "90": [1, 4, 11, 13, 116, 135], "219": 1, "93": [1, 19, 36], "178": 1, "80": [1, 92], "good": [1, 5, 123], "agreement": [1, 3, 10, 87], "number": [1, 4, 5, 6, 8, 9, 14, 15, 18, 22, 27, 30, 32, 36, 37, 38, 40, 43, 49, 51, 52, 56, 58, 59, 66, 68, 69, 70, 87, 89, 91, 92, 93, 94, 95, 98, 99, 102, 103, 105, 107, 109, 113, 115, 116, 120, 121, 123, 124, 128, 130, 131, 132, 135], "523": 1, "202": 1, "161": 1, "notat": [1, 36, 37, 70, 89, 103, 114, 116], "mean": [1, 4, 8, 11, 15, 18, 32, 36, 38, 40, 64, 70, 87, 99, 116, 117, 123, 126, 127, 128], "glide": [1, 8, 10, 12, 87, 103], "plane": [1, 9, 10, 12, 13, 87, 89, 93, 99, 102, 103, 116, 123, 124, 135], "geometri": [1, 11, 14, 87, 99, 116, 125, 135], "112": [1, 11], "think": 1, "about": [1, 4, 13, 15, 25, 32, 51, 52, 70, 87, 89, 99, 109, 116, 123, 134], "object": [1, 2, 8, 13, 14, 15, 16, 26, 30, 32, 37, 40, 41, 43, 49, 51, 52, 53, 55, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 82, 86, 87, 88, 89, 93, 95, 99, 102, 103, 105, 107, 108, 109, 111, 112, 113, 116, 118, 119, 121, 123, 124, 125, 134], "inform": [1, 12, 13, 15, 21, 25, 30, 32, 37, 38, 40, 43, 49, 51, 52, 64, 66, 68, 69, 87, 99, 102, 107, 109, 121, 123, 134], "pass": [1, 8, 9, 11, 12, 13, 14, 30, 32, 37, 43, 68, 69, 70, 87, 89, 99, 102, 103, 110, 116, 118, 121, 123, 125], "a_0": 1, "c_": [1, 14, 36, 89], "11": [1, 6, 8, 11, 13, 14, 18, 22, 87, 95, 116, 123, 134], "12": [1, 5, 6, 11, 14, 66, 87, 92, 93, 94, 95, 99, 109, 116, 123, 130, 134], "44": [1, 4, 14, 87, 89, 120], "element": [1, 3, 10, 14, 15, 19, 21, 36, 38, 59, 70, 87, 109, 113, 116, 123, 124, 125, 134, 135], "constructor": [1, 87, 93, 99, 121], "w_screw": 1, "57169501": 1, "go": [1, 2], "build_cylind": [1, 8, 11, 13, 87], "automat": [1, 15, 22, 23, 87, 103, 116, 119, 121, 134], "onli": [1, 2, 4, 8, 9, 11, 12, 15, 27, 36, 38, 40, 43, 45, 51, 52, 59, 64, 66, 68, 70, 87, 89, 92, 99, 101, 103, 104, 105, 113, 114, 115, 116, 118, 119, 122, 123, 128, 130, 135], "chose": 1, "return": [1, 2, 4, 6, 9, 13, 14, 16, 18, 26, 30, 32, 36, 37, 38, 40, 43, 45, 49, 50, 51, 52, 58, 59, 62, 63, 64, 66, 68, 69, 70, 86, 87, 89, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 105, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 131, 134, 135], "refer": [1, 3, 9, 10, 14, 25, 36, 37, 38, 49, 51, 52, 66, 68, 93, 94, 95, 99, 101, 109, 114, 116, 123, 127], "iter": [1, 5, 13, 30, 37, 40, 43, 49, 50, 66, 68, 86, 87, 89, 93, 94, 103, 116, 123], "until": [1, 9, 121], "achiev": [1, 6, 8, 9, 13, 30, 37, 40, 43, 49, 66, 68, 89], "output": [1, 4, 5, 12, 13, 25, 30, 32, 37, 38, 40, 43, 49, 51, 52, 56, 66, 68, 69, 70, 79, 87, 89, 99, 102, 109, 115, 117, 121, 123, 133], "show": [1, 2, 4, 5, 6, 8, 9, 11, 15, 16, 25, 87, 99, 103, 123, 130, 134], "differ": [1, 2, 4, 6, 9, 10, 11, 12, 13, 24, 30, 32, 37, 38, 40, 43, 49, 51, 52, 56, 66, 68, 69, 70, 87, 92, 93, 94, 95, 99, 102, 103, 104, 109, 113, 114, 116, 121, 123, 124, 126, 127, 133, 134], "between": [1, 4, 6, 8, 9, 13, 15, 30, 37, 38, 41, 79, 87, 92, 93, 99, 101, 103, 109, 113, 116, 118, 123, 124, 125, 128, 130, 131, 134], "step": [1, 3, 10, 14, 15, 20, 24, 30, 37, 40, 43, 49, 51, 52, 66, 68, 87, 89, 92, 99, 103, 114, 117, 119, 123, 128, 135], "unconstrain": [1, 87], "region": [1, 8, 15, 21, 22, 51, 52, 53, 63, 64, 87, 93, 94, 99, 101, 119, 135], "around": [1, 64, 70, 87, 99, 116, 123, 124, 126, 127], "ad": [1, 11, 12, 25, 51, 52, 63, 64, 70, 87, 116, 123], "top": [1, 9, 18, 25, 70, 87, 119, 124, 126, 127, 130], "10": [1, 4, 5, 6, 8, 9, 11, 13, 14, 21, 22, 32, 41, 51, 52, 60, 63, 68, 70, 87, 91, 93, 94, 95, 99, 103, 109, 111, 113, 116, 117, 119, 123, 124, 131, 134], "two": [1, 2, 4, 6, 8, 9, 11, 12, 13, 15, 25, 30, 36, 37, 49, 58, 63, 79, 87, 99, 116, 123, 124, 125, 126, 127, 128, 130, 134, 135], "time": [1, 5, 9, 14, 15, 24, 58, 59, 70, 87, 95, 99, 109, 110, 113, 118, 119, 121, 123, 130, 134], "larger": [1, 62, 63, 64, 70, 122, 123], "than": [1, 2, 4, 11, 13, 15, 27, 28, 30, 32, 37, 43, 59, 68, 69, 70, 87, 93, 94, 102, 113, 117, 121, 122, 123, 125, 128], "cutoff": [1, 2, 15, 22, 27, 28, 37, 38, 40, 43, 50, 59, 66, 68, 87, 98, 99, 100, 102, 105, 109, 113, 116, 120, 122, 124, 125, 128, 130, 131, 132, 134, 135], "fix_mask": 1, "arrai": [1, 4, 6, 11, 13, 14, 15, 30, 37, 38, 40, 43, 46, 47, 49, 51, 52, 53, 56, 58, 59, 63, 64, 66, 68, 70, 87, 89, 91, 93, 94, 95, 98, 99, 101, 103, 105, 110, 112, 113, 115, 116, 117, 118, 119, 120, 123, 124, 125, 130, 134, 135], "via": [1, 9, 14, 21, 68, 94, 104, 116, 121, 123], "w_screw_dislo": 1, "get_arrai": [1, 41, 116], "w_screw_bulk": 1, "20": [1, 4, 8, 13, 15, 25, 79, 87, 91, 93, 94, 99, 109, 116, 123], "ncell": 1, "nburger": 1, "lenth": 1, "linalg": [1, 6, 14, 25, 28, 70], "norm": [1, 6, 14, 28, 30, 37, 40, 43, 46, 47, 49, 66, 68, 87, 89, 99, 117, 118, 122, 123], "scf": 1, "d1": 1, "d2": 1, "_inf": 1, "0007002983806931873": 1, "0003518249861804712": 1, "0001767544009220745": 1, "8": [1, 5, 6, 9, 11, 13, 14, 15, 22, 25, 38, 41, 66, 87, 92, 93, 94, 95, 99, 109, 111, 116, 122, 123, 130, 134, 135], "880016897117038e": 1, "05": [1, 4, 5, 6, 14, 21, 22, 30, 37, 40, 43, 49, 66, 68, 70, 89, 92, 93, 94, 95, 104, 114], "4": [1, 2, 4, 5, 6, 9, 13, 14, 15, 18, 22, 38, 53, 66, 70, 87, 95, 99, 109, 113, 116, 123, 131, 134, 135], "4612580869241025e": 1, "241304711536607e": 1, "6": [1, 2, 4, 5, 6, 8, 11, 13, 14, 18, 22, 30, 37, 38, 59, 66, 68, 69, 70, 87, 89, 94, 95, 99, 102, 109, 113, 116, 121, 123, 124, 130, 132, 134, 135], "1260157359777034e": 1, "7": [1, 2, 5, 6, 8, 14, 21, 22, 24, 38, 87, 95, 109, 116, 123, 134], "657023923633098e": 1, "06": [1, 5, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 87, 89, 102, 117, 121, 125, 134], "8420490619796013e": 1, "9": [1, 2, 5, 6, 8, 14, 18, 22, 24, 38, 93, 94, 95, 99, 113, 116, 123, 134], "427825474326072e": 1, "173294831464005e": 1, "07": [1, 4, 93, 94, 95], "46": [1, 14], "19820981": 1, "45424812": 1, "72225562": 1, "72": 1, "now": [1, 4, 6, 11, 14, 15, 18, 51, 52, 62, 63, 64, 99, 123, 134], "view_cyl": [1, 8, 11, 13, 87], "look": [1, 4, 5, 6, 9, 13, 21, 24, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121, 123, 134], "ngl": [1, 2, 18, 134], "hover": 1, "mous": 1, "over": [1, 2, 11, 32, 95, 99, 123, 130], "chemic": [1, 8, 11, 14, 70, 87, 103, 116, 135], "cna": [1, 8, 13], "algorithm": [1, 6, 12, 15, 95, 113, 114, 118, 123, 125, 132], "arrow": [1, 87], "displai": [1, 2, 16, 18, 25], "moreov": 1, "control": [1, 3, 4, 5, 8, 11, 13, 21, 22, 23, 26, 87, 93, 94, 117, 123, 133, 135], "translat": [1, 9, 15, 32, 87, 116, 123, 134], "right": [1, 4, 5, 6, 13, 36, 37, 45, 87, 93, 94, 99, 125, 128, 131], "click": 1, "drag": 1, "rotat": [1, 4, 9, 14, 70, 87, 89, 103, 116, 124, 125, 135], "left": [1, 5, 13, 36, 37, 45, 87, 93, 94, 99, 123, 128, 131], "axi": [1, 6, 8, 13, 14, 15, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 91, 95, 102, 103, 113, 115, 116, 119, 121, 123, 125], "ctrl": 1, "zoom": [1, 8, 11, 13, 135], "scroll": 1, "wheel": 1, "seen": [1, 8, 124], "most": [1, 2, 4, 9, 12, 13, 14, 116, 117, 123, 135], "some": [1, 2, 4, 5, 8, 9, 11, 12, 13, 21, 25, 33, 51, 52, 59, 70, 99, 102, 110, 119, 123, 124, 128, 130], "grei": [1, 4, 5, 6], "other": [1, 4, 5, 6, 9, 10, 11, 12, 14, 17, 25, 36, 41, 64, 70, 79, 87, 95, 113, 116, 122, 123, 124, 126, 127, 128, 131, 134, 135], "These": [1, 4, 12, 23, 25, 30, 37, 40, 43, 49, 66, 68, 87, 99, 123], "repres": [1, 9, 14, 15, 32, 55, 62, 63, 64, 87, 99, 121], "defect": [1, 9, 12], "where": [1, 7, 11, 12, 13, 23, 30, 37, 64, 68, 70, 87, 93, 94, 95, 99, 113, 116, 118, 123, 124, 128, 131], "could": [1, 9, 11, 15, 24, 116, 123], "assign": [1, 2, 51, 52, 53, 70, 87, 122, 123, 133], "artifici": [1, 99], "free": [1, 9, 70, 99, 116, 119, 123, 124], "surfac": [1, 4, 7, 8, 10, 12, 14, 15, 22, 70, 87, 92, 98, 99, 103, 124, 135], "here": [1, 4, 5, 6, 9, 13, 14, 25, 87, 93, 94, 99, 108, 116, 121, 128, 131, 134, 135], "length": [1, 4, 5, 6, 8, 13, 16, 22, 27, 37, 87, 92, 93, 94, 99, 103, 105, 109, 113, 115, 116, 117, 120, 123, 128, 130, 132], "frac": [1, 18, 37, 45, 87, 99, 128, 131], "sqrt": [1, 2, 6, 30, 37, 68, 87, 92, 93, 94, 95, 118, 123], "With": [1, 4, 8, 10, 11, 91, 113], "infinit": [1, 4, 7, 13, 89], "long": [1, 13, 40, 58, 87, 115, 116, 123, 131, 135], "straight": [1, 12, 14, 87], "make": [1, 4, 5, 6, 8, 9, 13, 14, 15, 21, 25, 30, 32, 58, 59, 63, 70, 87, 93, 94, 107, 109, 116, 123], "easier": [1, 87, 116, 123], "see": [1, 2, 4, 8, 9, 11, 12, 13, 15, 25, 28, 36, 38, 70, 87, 89, 93, 94, 99, 101, 108, 116, 120, 121, 123], "might": [1, 15, 116], "notic": [1, 4, 116], "outsid": [1, 59, 87, 113, 116], "simul": [1, 6, 7, 10, 12, 22, 56, 60, 62, 63, 64, 66, 77, 78, 79, 88, 92, 93, 94, 95, 109, 113, 116, 119, 126, 127, 131, 133], "box": [1, 4, 6, 30, 37, 40, 43, 49, 66, 68, 79, 87, 91, 95, 113, 114, 130], "To": [1, 6, 8, 9, 11, 12, 13, 14, 15, 18, 87, 99, 116, 123, 124, 134, 135], "increas": [1, 15, 22, 87, 92, 99, 103, 119, 123, 130], "reli": [1, 12], "magic": 1, "simpli": [1, 11, 14, 36, 123, 135], "multipli": [1, 64, 93, 94], "longer_w_screw_dislo": 1, "If": [1, 6, 9, 12, 21, 25, 30, 32, 37, 40, 43, 49, 51, 52, 58, 59, 63, 64, 66, 68, 69, 70, 87, 89, 91, 92, 93, 95, 99, 102, 103, 105, 109, 113, 116, 118, 119, 121, 123, 125, 130], "want": [1, 4, 6, 9, 30, 37, 68, 69, 70, 77, 102, 116, 121, 123, 130, 135], "save": [1, 9, 15, 51, 52, 59, 70, 87, 108, 110, 124, 135], "file": [1, 4, 5, 6, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 33, 34, 37, 38, 40, 43, 49, 51, 52, 66, 68, 69, 70, 77, 79, 87, 89, 102, 107, 108, 109, 110, 116, 119, 121, 123, 133, 134], "further": [1, 25, 59, 121, 123], "input": [1, 8, 19, 22, 62, 63, 64, 79, 99, 103, 109, 113, 118, 121, 123, 125, 133, 134], "code": [1, 9, 12, 13, 14, 15, 18, 25, 89, 116, 121, 123, 126, 127, 130, 135], "write": [1, 4, 6, 14, 15, 22, 30, 32, 34, 37, 38, 43, 45, 68, 69, 89, 102, 107, 109, 110, 116, 119, 121, 123, 133, 134, 135], "filenam": [1, 25, 32, 87, 109, 116, 119, 123], "support": [1, 3, 7, 12, 13, 18, 25, 30, 32, 37, 38, 43, 51, 52, 68, 69, 97, 102, 116, 121, 123, 125], "wide": [1, 10, 129], "rang": [1, 2, 4, 40, 41, 89, 95, 113, 124], "format": [1, 4, 6, 16, 21, 22, 25, 30, 36, 37, 38, 40, 43, 49, 66, 68, 77, 87, 95, 108, 109, 111, 113, 116, 121, 123, 124, 125, 130, 134], "includ": [1, 2, 7, 9, 14, 15, 23, 25, 27, 36, 53, 63, 64, 70, 87, 97, 99, 101, 109, 113, 116, 123, 125, 126, 127, 128, 133, 134, 135], "xyz": [1, 4, 21, 22, 77, 87, 109, 116, 121, 134, 135], "lammp": [1, 4, 6, 12, 21, 38, 40, 77, 79, 86, 107, 109, 116, 127, 133], "data": [1, 2, 4, 6, 8, 11, 21, 32, 38, 51, 52, 53, 55, 56, 64, 70, 77, 79, 87, 103, 107, 109, 110, 112, 113, 115, 119, 121, 123, 130], "forget": 1, "account": [1, 2, 6, 15, 89, 113, 116], "like": [1, 8, 9, 11, 14, 21, 24, 25, 30, 32, 36, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 102, 109, 116, 121, 123, 130, 134], "said": 1, "befor": [1, 4, 6, 25, 70, 87, 89, 99, 103, 116, 118, 121, 123, 124], "vectpr": 1, "same": [1, 4, 8, 11, 12, 13, 14, 18, 25, 36, 70, 87, 94, 95, 99, 103, 109, 113, 115, 116, 119, 121, 123, 134, 135], "w_edg": 1, "w_edge_bulk": 1, "w_edge_dislo": 1, "15": [1, 4, 6, 11, 13, 22, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 87, 92, 93, 94, 102, 109, 121, 123, 134, 135], "08751883578064723": 1, "040861196124218124": 1, "022825263559017595": 1, "013827362573782642": 1, "008309453605807038": 1, "004949366223313656": 1, "002920835307407499": 1, "001707589422488942": 1, "0009889006148837698": 1, "0005672574174525047": 1, "0003222508524113876": 1, "00018124374430700252": 1, "00010087332160230167": 1, "13": [1, 5, 6, 123, 134], "551627821231975e": 1, "14": [1, 2, 5, 13, 87, 94, 123, 134], "0181880222079904e": 1, "6185334900387094e": 1, "16": [1, 4, 5, 14, 25, 66, 87, 123], "543846241548803e": 1, "426490514020109e": 1, "18": [1, 4, 6, 14, 123], "2410081775836588e": 1, "19": [1, 4, 8, 77, 95, 123], "1012012560707163e": 1, "193489800436879e": 1, "32": [1, 123], "66706744": 1, "31": [1, 11, 22, 99], "11797368": 1, "69970164": 1, "more": [1, 2, 9, 10, 11, 12, 13, 30, 32, 37, 43, 45, 51, 52, 59, 63, 68, 69, 87, 93, 94, 102, 109, 113, 116, 121, 123, 124, 134], "scale": [1, 2, 8, 11, 13, 15, 16, 32, 64, 68, 87, 89, 116], "bar": [1, 4, 6, 25, 45, 87, 123], "bar1": 1, "angl": [1, 27, 45, 50, 87, 99, 109, 112, 113, 116, 123, 127, 129, 133, 134], "70": [1, 12], "lead": [1, 5, 11, 21, 92, 116, 123], "both": [1, 5, 6, 9, 13, 15, 19, 22, 87, 89, 116, 123, 130], "compon": [1, 3, 9, 11, 16, 37, 70, 87, 89, 99, 103, 116, 122, 123, 124, 130, 135], "w_mix": 1, "w_mixed_bulk": 1, "w_mixed_dislo": 1, "1456039707936717": 1, "059907573464541675": 1, "028503341908167584": 1, "014419391826502067": 1, "007081941950075232": 1, "003368346473116495": 1, "0015423024365132931": 1, "0007171164954145048": 1, "0005234232461244215": 1, "0003433121906495362": 1, "00021084706513319063": 1, "00012359047161103476": 1, "984771376150611e": 1, "827834935354879e": 1, "0405799376010947e": 1, "0596408768437371e": 1, "359853927577873e": 1, "6369154058070166e": 1, "257692343825667e": 1, "78128418915469e": 1, "call": [1, 5, 8, 9, 13, 14, 23, 25, 28, 30, 32, 37, 40, 43, 49, 51, 52, 59, 60, 66, 68, 69, 70, 87, 89, 93, 94, 99, 102, 103, 109, 116, 117, 118, 119, 121, 123, 124, 134], "burdger": 1, "form": [1, 5, 9, 11, 12, 13, 18, 36, 46, 47, 48, 66, 68, 70, 87, 89, 99, 103, 113, 116, 123, 124], "reaction": [1, 4], "abund": 1, "share": [1, 11, 56, 103, 113, 123], "plai": [1, 2], "role": [1, 2, 25], "impur": [1, 87], "segreg": 1, "w_100110_edg": 1, "14339003": 1, "w_100110_edge_bulk": 1, "w_100110_edge_dislo": 1, "line_color": [1, 87], "1280057024455897": 1, "06116283180138693": 1, "033228942952467116": 1, "01883401090377368": 1, "010317674555602646": 1, "005479968807368396": 1, "0028203538962097985": 1, "0014016587037598283": 1, "000667833269524451": 1, "00030095624285227107": 1, "00012483600670459838": 1, "214731613225389e": 1, "1322790716401556e": 1, "3733459126494836e": 1, "100906770108324e": 1, "2556644481520607e": 1, "252149701431065e": 1, "062447767738675e": 1, "2105784651671456e": 1, "168236141602108e": 1, "090321286178479e": 1, "ly": [1, 87], "w_100_edg": 1, "w_100_edge_bulk": 1, "w_100_edge_dislo": 1, "14861912042082115": 1, "06368262746234166": 1, "031187863915751214": 1, "0157549793956056": 1, "007773687670121807": 1, "0037396753216583922": 1, "00174733333716387": 1, "0007877019555050102": 1, "00036781757086612465": 1, "0002595603858464024": 1, "00016731771283629016": 1, "00010183918931772062": 1, "948393096466553e": 1, "364317526699523e": 1, "852288603898522e": 1, "958811746590968e": 1, "237887889419923e": 1, "6968616098077547e": 1, "3589880443198865e": 1, "694323613221087e": 1, "fcc": [1, 2, 9, 10, 12, 14, 41, 87, 98, 103, 116, 125], "consid": [1, 2, 6, 11, 22, 27, 64, 86, 87, 116, 128, 130, 134], "ni": [1, 10, 12, 93, 94], "bonni": 1, "fecuni": [1, 13], "alloi": [1, 2, 11, 13, 19, 36, 37, 38, 66], "520": 1, "244": 1, "148": 1, "85": [1, 59, 87, 109, 113, 134, 135], "125": 1, "62": 1, "ni_screw": 1, "76": [1, 14], "ni_screw_bulk": 1, "ni_screw_dislo": 1, "43": 1, "11101947": 1, "42": [1, 18, 134], "6777319": 1, "48901587": 1, "49": [1, 119], "due": [1, 4, 7, 11, 25, 30, 37, 40, 43, 49, 66, 68, 70, 77, 92, 124], "stabl": [1, 22, 87, 123, 135], "intrins": 1, "stack": [1, 10, 12, 87, 103, 113], "fault": [1, 10, 12, 87, 103], "isf": 1, "shocklei": 1, "partial": [1, 4, 8, 9, 11, 12, 13, 37, 45, 87, 123], "bar10": 1, "rightarrow": 1, "mathrm": [1, 2, 4, 5, 6, 37], "bar21": 1, "partial_dist": [1, 8, 13, 87], "distanc": [1, 4, 5, 6, 9, 13, 15, 27, 30, 36, 37, 38, 40, 43, 45, 50, 59, 66, 79, 86, 87, 92, 95, 99, 101, 102, 103, 109, 112, 113, 116, 118, 122, 124, 125, 128, 130, 131, 134], "obtain": [1, 5, 7, 30, 32, 37, 40, 43, 49, 51, 52, 55, 66, 68, 70, 89, 99, 113, 123], "patial_dist": 1, "glide_dist": [1, 13, 87], "nexpect": 1, "1f": [1, 2, 18], "022220814733477506": 1, "0107739038928778": 1, "005185027906170064": 1, "002475082781572463": 1, "0011712409716692351": 1, "0005491236463885107": 1, "00025489205141415727": 1, "00011703200541851588": 1, "308539745557672e": 1, "5718688654086108e": 1, "2808643934048014e": 1, "368516532406776e": 1, "1610626539113618e": 1, "5662580029607298e": 1, "746418797527355e": 1, "expect": [1, 4, 24, 93, 94, 95, 112, 116, 123, 125], "togeth": [1, 12, 14, 87, 116], "green": [1, 6, 70, 99], "hcp": 1, "pink": 1, "result": [1, 4, 5, 6, 12, 30, 32, 37, 40, 43, 49, 51, 52, 64, 66, 68, 69, 70, 87, 89, 92, 99, 102, 109, 113, 114, 116, 118, 121, 123, 125], "local": [1, 4, 8, 13, 14, 15, 30, 37, 40, 43, 49, 66, 68, 87, 89, 104, 113, 114, 116, 117, 123], "chang": [1, 2, 11, 13, 15, 30, 32, 37, 40, 43, 49, 51, 52, 63, 66, 68, 69, 87, 102, 116, 121, 123], "layer": [1, 3, 6, 9, 10, 13, 15, 21, 87, 93, 94, 103, 124], "ni_edg": 1, "ni_edge_bulk": 1, "ni_edge_dislo": 1, "15473510917799116": 1, "06777415250108576": 1, "03475439294804093": 1, "018101177738677518": 1, "008961495147710302": 1, "004180664619767474": 1, "0017958199824296694": 1, "0013438620432931758": 1, "0009841068440427092": 1, "0006551466763722313": 1, "0004090684271416123": 1, "00024307855806582346": 1, "00013844319756284307": 1, "578385209161542e": 1, "9850835624632985e": 1, "0050308024432972e": 1, "565850800474784e": 1, "656306369719976e": 1, "4986817410421747e": 1, "2860867572156431e": 1, "310074034537871e": 1, "31326979": 1, "31110195": 1, "06447946338433494": 1, "0334524697645955": 1, "017489485207730193": 1, "009570765143307236": 1, "005227931148117371": 1, "002848373595293774": 1, "0016133883618037678": 1, "0009239710238140367": 1, "0005255198257729868": 1, "000297021349456493": 1, "000166910817984596": 1, "32994713158733e": 1, "18968735267189e": 1, "8735088627621086e": 1, "5842041526277495e": 1, "698292994012424e": 1, "757294939351786e": 1, "5921033584078157e": 1, "4072127053482708e": 1, "612349910146587e": 1, "si": [1, 4, 6, 9, 13, 14, 15, 18, 22, 78, 92, 93, 94, 95, 103, 124], "work": [1, 4, 8, 9, 11, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 93, 94, 99, 102, 113, 115, 116, 119, 121, 123, 130], "d": [1, 6, 13, 22, 25, 28, 30, 32, 37, 40, 41, 43, 49, 50, 51, 52, 66, 68, 69, 95, 99, 100, 102, 113, 114, 116, 120, 121, 123, 128, 130, 131], "holland": [1, 13], "m": [1, 4, 5, 6, 9, 13, 14, 15, 18, 22, 30, 37, 40, 43, 49, 66, 68, 87, 89, 92, 93, 94, 95, 100, 102, 103, 119, 123], "marder": [1, 13, 102], "manybodi": [1, 8, 9, 13, 14, 15, 18], "explicit_form": [1, 8, 9, 13, 14, 15, 18], "stillinger_web": [1, 13, 14, 15, 18], "stillingerweb": [1, 13, 14, 15, 18, 47], "holland_marder_prl_80_746_si": [1, 13, 14], "calc": [1, 2, 8, 9, 13, 14, 15, 18, 22, 24, 30, 41, 69, 70, 87, 99, 116, 123, 124], "431": [1, 15], "201": [1, 14], "51": [1, 4, 6, 14], "64": [1, 14, 66], "118": [1, 14], "si_screw": 1, "71547494": 1, "si_screw_bulk": 1, "si_screw_dislo": 1, "add_bond": [1, 11, 13, 87], "true": [1, 4, 5, 6, 8, 9, 11, 13, 14, 15, 22, 25, 26, 30, 32, 34, 36, 37, 40, 43, 49, 51, 52, 58, 59, 63, 64, 66, 68, 69, 70, 87, 89, 93, 94, 95, 99, 102, 103, 105, 107, 109, 110, 113, 114, 116, 118, 119, 121, 122, 123, 125, 135], "bond": [1, 16, 22, 27, 45, 53, 62, 63, 64, 87, 99, 105, 109, 112, 113, 116, 128, 130, 133, 134], "bit": [1, 118, 123], "56069608": 1, "47": [1, 11], "03340562": 1, "84026149": 1, "84": [1, 8], "modif": [1, 123], "gradual": 1, "how": [1, 9, 13, 15, 25, 30, 37, 40, 43, 49, 66, 68, 87, 89, 99, 123, 125, 126, 127, 128, 130, 131, 134, 135], "far": [1, 13, 92, 99], "outcom": 1, "u": [1, 2, 6, 8, 9, 14, 18, 21, 25, 45, 87, 92, 93, 94, 95, 99, 123], "1st": [1, 116, 117], "2nd": [1, 87, 93, 94, 116, 117], "neighbor": [1, 22, 30, 37, 58, 59, 105, 113, 116, 120, 125, 128, 130, 131, 132, 135], "similar": [1, 8, 9, 12, 22, 87, 112, 116, 123, 130], "mechan": [1, 6, 10, 13, 15, 23, 87, 99, 124, 126, 127], "exist": [1, 4, 9, 11, 26, 32, 87, 109, 116, 123, 134], "hexagon": [1, 116], "particular": [1, 2, 41, 87, 123, 130], "symmetri": [1, 2, 11, 14, 70, 87, 89, 98, 124], "30": [1, 4, 6, 8, 14, 116, 123], "si_60_degree_screw": 1, "si_60_degree_screw_bulk": 1, "si_60_degree_screw_dislo": 1, "solid": [2, 12, 68, 102], "respond": [2, 12], "extern": [2, 25, 32], "load": [2, 12, 15, 18, 70, 89, 110, 119, 123, 128, 131, 132], "through": [2, 4, 8, 9, 20, 87, 103, 116, 123, 124, 125], "revers": [2, 87, 113, 121, 123], "respons": [2, 7, 14, 60, 62, 63, 64, 87, 89, 97, 135], "strength": [2, 14, 92, 93, 94], "character": [2, 116], "moduli": [2, 18, 89], "comput": [2, 6, 14, 18, 20, 21, 22, 27, 28, 30, 32, 37, 38, 40, 43, 45, 46, 47, 49, 51, 52, 66, 68, 70, 87, 89, 92, 93, 94, 99, 101, 104, 107, 112, 113, 114, 116, 117, 120, 121, 122, 126, 127, 128, 130, 131, 132], "deform": [2, 7, 12, 15, 28, 30, 37, 40, 43, 49, 66, 68, 70, 87, 89, 99, 101, 114, 124], "system": [2, 3, 6, 7, 9, 10, 12, 16, 18, 21, 22, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 78, 79, 87, 88, 89, 90, 93, 94, 96, 99, 102, 109, 113, 116, 117, 118, 120, 121, 125, 126, 127, 131, 132, 134], "underli": [2, 15, 123], "crystal": [2, 8, 9, 11, 12, 14, 15, 38, 41, 70, 87, 89, 99, 101, 102, 103], "analyt": [2, 3, 5, 6, 10, 43, 87, 89], "detail": [2, 6, 87, 89, 116, 117, 123], "below": [2, 4, 6, 7, 9, 13, 14, 15, 22, 58, 87, 109, 119, 123, 124], "basic": [2, 4, 5, 7, 9, 10, 13, 19, 30, 32, 37, 43, 68, 69, 87, 102, 116, 121, 129, 134], "prerequisit": 2, "multi": [2, 10, 12, 70, 87, 115, 124], "model": [2, 6, 8, 9, 11, 12, 13, 15, 21, 31, 32, 66, 70, 87, 124], "continuum": [2, 6, 7, 11, 14, 70, 90, 95, 97, 99], "tutori": [2, 7, 10, 14, 15, 135], "wai": [2, 8, 9, 13, 30, 87, 93, 113, 116, 123, 134, 135], "configur": [2, 3, 4, 10, 12, 14, 15, 22, 25, 30, 34, 36, 37, 40, 43, 49, 59, 66, 68, 87, 89, 95, 99, 101, 104, 105, 109, 113, 114, 116, 119, 120, 121, 128, 131, 132, 134], "let": [2, 6, 8, 11, 13, 15, 16], "": [2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 18, 21, 25, 30, 32, 36, 37, 46, 87, 89, 91, 93, 94, 95, 99, 109, 111, 113, 116, 117, 119, 120, 121, 123, 133, 134, 135], "first": [2, 4, 5, 6, 9, 13, 14, 15, 18, 30, 37, 38, 43, 50, 58, 59, 63, 66, 68, 69, 70, 87, 93, 94, 95, 102, 109, 113, 116, 118, 121, 123, 130], "ase": [2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 18, 22, 24, 30, 37, 40, 43, 49, 55, 58, 59, 62, 63, 64, 66, 68, 70, 77, 79, 87, 89, 99, 101, 103, 104, 105, 112, 113, 114, 116, 117, 118, 119, 120, 124, 125, 128, 130, 131, 132, 134, 135], "cubic": [2, 4, 8, 10, 11, 12, 14, 15, 22, 70, 87, 89, 98, 99, 103, 113, 123, 124, 125], "facecenteredcub": [2, 14, 113], "def": [2, 4, 5, 6, 13, 14, 16, 18, 135], "interactive_view": [2, 11, 16, 18], "visual": [2, 3, 5, 10, 11, 13, 18, 103, 134], "v": [2, 3, 5, 6, 10, 12, 15, 18, 21, 25, 37, 45, 87, 89, 92, 93, 94, 95, 99, 116, 119, 123, 131], "viewer": [2, 18, 116, 134], "resiz": [2, 18, 123], "widget": [2, 16, 18], "_remote_cal": [2, 16, 18], "setsiz": [2, 16, 18], "target": [2, 4, 6, 11, 15, 16, 18, 25, 41, 95], "arg": [2, 13, 16, 18, 27, 45, 60, 66, 70, 87, 93, 94, 95, 98, 99, 102, 103, 116, 117, 123], "300px": [2, 16, 18], "center": [2, 4, 5, 6, 9, 10, 12, 14, 15, 16, 18, 87, 88, 94, 99, 116, 130, 134], "1": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 18, 21, 22, 24, 25, 36, 37, 38, 40, 41, 50, 51, 52, 53, 59, 64, 66, 68, 70, 79, 87, 89, 92, 93, 94, 95, 98, 99, 100, 102, 103, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 130, 131, 134, 135], "cu": [2, 113], "pbc": [2, 4, 6, 14, 15, 30, 32, 37, 51, 52, 68, 69, 87, 102, 113, 116, 121, 125, 134], "ll": 2, "lennard": [2, 66, 109, 116], "jone": [2, 66, 109, 116], "lennardjonescut": [2, 66], "pair_potenti": 2, "pairpotenti": [2, 40, 66], "reference_st": 2, "atomic_numb": [2, 36, 37, 38], "cu_num": 2, "sigma": [2, 50, 66, 99, 109, 116], "2": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 18, 21, 22, 24, 37, 38, 45, 53, 64, 66, 70, 79, 87, 89, 92, 93, 94, 95, 99, 100, 102, 103, 109, 110, 112, 113, 116, 117, 119, 121, 122, 123, 124, 125, 128, 130, 131, 134, 135], "map": [2, 22, 25, 49, 87, 94, 113, 123], "copper": 2, "pair": [2, 6, 13, 30, 36, 37, 38, 40, 43, 45, 49, 50, 59, 66, 68, 95, 109, 113, 116, 118, 127, 129, 130, 134], "epsilon": [2, 50, 66, 68, 100, 109, 116], "sensibl": [2, 125], "equilibrium": [2, 14, 45, 64, 87, 101, 109, 116], "assert_allclos": 2, "latex": [2, 25, 123], "e_": 2, "pot": 2, "get_potential_energi": [2, 14, 18, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 99, 102, 116, 121], "neg": [2, 123], "assert": [2, 123, 135], "get_forc": [2, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 99, 102, 116, 121], "atol": [2, 30, 37, 40, 43, 49, 66, 68, 89], "3e": 2, "889": 2, "measure_triclinic_elastic_const": [2, 89], "full": [2, 4, 6, 7, 9, 13, 14, 25, 32, 36, 70, 77, 79, 87, 89, 99, 107, 109, 116, 123, 134], "hook": 2, "tensor": [2, 11, 28, 30, 37, 40, 43, 49, 66, 68, 70, 87, 89, 99, 116], "finit": [2, 3, 6, 7, 8, 10, 21, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 90, 93, 94, 102, 114, 121, 125, 131], "fit_elastic_const": [2, 14, 89], "least": [2, 59, 70, 87, 99, 109, 115, 123], "squar": [2, 13, 40, 50, 70, 87, 95, 99, 126, 127], "full_3x3x3x3_to_voigt_6x6": [2, 18, 89], "c_finite_differ": 2, "c_least_squar": 2, "_": [2, 4, 5, 6, 11, 36, 37, 45, 93, 94, 95, 128, 134], "plot": [2, 4, 5, 6, 8, 9, 13, 16, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 77, 87, 89, 99, 102, 103, 116, 121, 128, 131, 132], "matplotlib": [2, 4, 5, 6, 9, 13, 14, 16, 87, 89, 99, 103, 116, 128, 131, 132], "pyplot": [2, 4, 5, 6, 13, 14, 16, 89, 99, 128, 131, 132], "plt": [2, 4, 5, 6, 13, 14, 16, 87, 99, 128, 131, 132], "spy_const": 2, "imshow": [2, 103], "cmap": 2, "rdpu": 2, "interpol": [2, 4, 6, 95, 103], "none": [2, 4, 6, 13, 25, 26, 28, 30, 32, 33, 37, 38, 40, 41, 43, 49, 50, 51, 52, 53, 55, 56, 60, 63, 64, 66, 68, 69, 70, 85, 87, 89, 93, 94, 95, 98, 99, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 125], "label": [2, 4, 5, 6, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 109, 121, 125], "full_lik": 2, "dtype": [2, 87, 95, 107, 113, 116, 123, 125, 130, 134], "lambda": [2, 4, 6, 13, 21, 64, 95, 102], "arang": [2, 95, 113, 123, 128, 135], "mu": [2, 36, 37, 102], "max_c": 2, "max": [2, 6, 13, 30, 37, 40, 43, 49, 66, 68, 87, 89, 95, 116, 123, 135], "shape": [2, 4, 5, 6, 11, 30, 37, 38, 43, 66, 68, 70, 87, 95, 99, 112, 113, 116, 121, 122, 123], "j": [2, 4, 5, 6, 9, 14, 18, 22, 27, 32, 37, 48, 49, 66, 68, 87, 89, 92, 93, 94, 95, 99, 100, 101, 102, 103, 108, 113, 116, 117, 123, 128, 130, 135], "white": [2, 13], "els": [2, 14, 16, 25, 40, 43, 66, 87, 100, 103, 116, 122, 135], "black": 2, "numer": [2, 3, 7, 10, 15, 22, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 104, 111, 121, 123], "ab": [2, 5, 46, 47, 135], "1e": [2, 4, 5, 13, 14, 22, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 93, 94, 95, 102, 104, 114, 117, 121, 125], "sim": 2, "annot": 2, "horizontalalign": 2, "verticalalign": 2, "set_xtick": [2, 14], "set_ytick": [2, 14], "set_xticklabel": 2, "c": [2, 4, 5, 6, 8, 11, 14, 18, 21, 22, 25, 36, 50, 59, 66, 77, 87, 89, 92, 93, 94, 95, 99, 102, 103, 109, 113, 116, 117, 123, 130, 132, 134, 135], "set_yticklabel": 2, "fig": [2, 4, 5, 6, 13, 14, 16, 103], "subplot": [2, 4, 5, 6, 13, 14, 87, 99], "figsiz": [2, 4, 5, 6, 13], "set_titl": [2, 4, 6, 14], "therefor": [2, 11, 87, 113, 116, 134], "directli": [2, 25, 70, 103, 118, 122, 123], "get_properti": [2, 18, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 94, 102, 116, 121], "elastic_const": [2, 30, 40, 43, 49, 66, 68], "evalu": [2, 51, 52, 56, 70, 89, 95, 99, 116, 123], "non": [2, 4, 6, 25, 28, 30, 37, 40, 43, 45, 49, 51, 52, 62, 63, 64, 66, 68, 87, 89, 92, 93, 94, 109, 114, 116, 119, 123, 127, 133], "affin": [2, 18, 28, 30, 37, 40, 43, 49, 66, 68, 89, 114], "mode": [2, 12, 41, 56, 87, 99, 111, 116, 119, 122, 123, 126, 127], "random": [2, 11, 19, 24, 36, 87, 95, 113, 116, 123], "our": [2, 4, 5, 6, 9, 11, 14, 21, 87, 123], "mimic": 2, "glassi": 2, "io": [2, 4, 5, 6, 14, 15, 18, 22, 25, 36, 116, 128, 131, 132, 134, 135], "read": [2, 15, 18, 19, 22, 25, 26, 30, 32, 36, 37, 38, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 102, 107, 109, 116, 121, 123, 124, 128, 131, 132, 133, 134, 135], "pathlib": [2, 123], "path": [2, 7, 8, 9, 22, 25, 32, 87, 103, 107, 120, 123, 132], "data_path": 2, "cuzr_glass_460_atom": 2, "gz": 2, "zrcu": [2, 36], "onecolumn": [2, 36], "2244": 2, "minim": [2, 6, 25, 68, 87, 93, 94, 95, 99, 117], "procedur": [2, 24, 134], "argument": [2, 8, 9, 11, 13, 22, 30, 32, 37, 43, 68, 69, 70, 87, 89, 93, 94, 99, 102, 105, 110, 116, 121, 123, 130, 132], "optim": [2, 5, 14, 22, 24, 41, 87, 89, 93, 94, 95, 99, 103, 109, 118, 123], "fire": 2, "delta": [2, 36, 37, 87, 89, 95, 122, 128, 131], "increment": [2, 89, 99, 104, 114], "c_affin": 2, "c_relax": 2, "adjust": [2, 15, 87, 116, 119, 124], "fmax": [2, 14, 22, 41, 87, 89, 117, 123, 124], "precis": [2, 92, 93, 123], "One": [2, 3, 10, 12, 25, 95, 99, 123, 124], "significantli": 2, "reduc": [2, 4, 9, 14, 98, 116], "when": [2, 8, 11, 12, 13, 25, 30, 32, 37, 43, 68, 69, 70, 87, 93, 94, 99, 102, 103, 116, 118, 121, 123, 125, 135], "intern": [2, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 89, 94, 102, 116, 121, 124], "reduct": 2, "stop": [2, 30, 32, 37, 38, 40, 43, 49, 66, 68, 69, 70, 89, 102, 120, 121], "criterion": [2, 9, 116, 128], "ideal": [2, 11, 12, 99, 102, 116], "lower": [2, 4, 5, 6, 9, 13, 15, 68, 95, 119, 124, 135], "higher": [2, 30, 123], "demonstr": [2, 134], "purpos": [2, 4, 13, 30, 32, 36, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 102, 116, 118, 121, 123, 134], "three": [3, 4, 14, 37, 40, 43, 49, 50, 66, 68, 70, 87, 89, 99, 113, 116, 123, 124, 130, 135], "prepar": [3, 5, 10, 121], "usual": [3, 5, 14, 109, 123], "encount": [3, 15, 135], "context": [3, 8], "electrolyt": [3, 4, 6], "dimension": [3, 10, 40, 43, 66, 68, 117, 123], "poisson": [3, 6, 10, 18, 21, 78, 89, 90, 92, 93, 94, 99], "nernst": [3, 10, 21, 78, 90, 93, 94], "planck": [3, 10, 21, 78, 90, 93, 94], "inert": [3, 5, 6, 10], "electrod": [3, 5, 6, 10], "solv": [3, 5, 6, 10, 13, 21, 78, 87, 93, 94, 118], "dirichlet": [3, 10, 93, 94], "zero": [3, 10, 13, 15, 30, 37, 40, 43, 45, 49, 50, 66, 68, 69, 87, 89, 93, 100, 102, 116, 121, 123], "flux": [3, 10, 93, 94], "valid": [3, 5, 10, 32, 43, 87, 89, 125], "half": [3, 5, 6, 10, 11, 13, 116], "space": [3, 5, 6, 10, 38, 40, 91, 93, 94, 123, 129], "interv": [3, 10, 13, 94], "pnp": [3, 5, 10, 21, 93, 94], "electrochem": [3, 6, 10], "continu": [3, 7, 10, 15, 21, 23, 77, 90, 91, 95, 99, 100, 121, 135], "doubl": [3, 6, 10, 14, 63, 87, 95, 113], "theori": [3, 6, 10, 12, 19, 32, 87, 92], "discret": [3, 5, 6, 7, 10, 21, 77, 90, 93, 94, 95], "coordin": [3, 10, 11, 21, 37, 70, 77, 79, 87, 90, 91, 95, 99, 100, 102, 103, 113, 116, 124, 125, 128, 130, 135], "stern": [3, 10, 21, 93, 94], "robin": [3, 10, 21, 93, 94], "sampl": [3, 10, 11, 21, 32, 34, 70, 79, 90, 91, 95, 120, 134], "distribut": [3, 5, 10, 21, 27, 68, 77, 78, 91, 92, 93, 94, 95, 113, 116, 122, 127, 129], "export": [3, 10, 77, 79], "solver": [3, 4, 10, 21, 30, 37, 40, 41, 43, 49, 66, 68, 87, 89, 90, 93, 94, 117], "moder": [3, 10], "issu": [3, 4, 10, 77, 103], "extrem": [3, 9, 10, 11, 13, 103, 124], "nonlinear": [3, 4, 10, 66], "steric": [3, 10, 21, 79, 90, 93, 94, 95], "correct": [3, 10, 15, 25, 30, 37, 40, 43, 49, 66, 68, 70, 79, 87, 89, 90, 95, 116, 123, 124], "concentr": [3, 4, 5, 10, 19, 36, 92, 93, 94, 95], "enforc": [3, 10, 21, 51, 52, 93, 94, 95], "radii": [3, 4, 10, 21, 59, 79, 95], "initi": [3, 4, 7, 10, 13, 22, 24, 32, 40, 45, 51, 52, 58, 59, 60, 66, 70, 87, 89, 93, 94, 95, 99, 107, 112, 113, 116, 117, 121, 123, 135], "thank": 3, "luka": [3, 77, 92], "elflein": [3, 77, 92], "develop": [3, 8, 12], "christian": 3, "seidl": 3, "earli": 3, "experiment": [3, 7, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121], "andrea": 3, "greiner": 3, "discuss": [3, 6, 11], "inspir": 3, "transport": [3, 123], "problem": [3, 5, 10, 89, 93, 94, 95, 123, 126, 127], "volum": [3, 4, 5, 15, 21, 86, 87, 91, 93, 94, 101, 114, 116, 131], "fint": 3, "meng": 3, "yonggang": 3, "zhang": 3, "jun": 3, "pose": 3, "interest": [3, 8, 12], "tribolog": [3, 15], "spark": 3, "electrochemistri": [4, 5, 6, 10, 23, 126, 127], "poissonnernstplancksystem": [4, 5, 93, 94], "interfac": [4, 5, 6, 12, 14, 15, 21, 30, 58, 60, 78, 87, 92, 93, 94, 96, 121, 123, 125, 135], "classic": [4, 6, 51, 52, 116], "arbitrari": [4, 21, 43, 89, 109, 116, 123], "ionic": [4, 92, 93, 94], "speci": [4, 6, 10, 12, 38, 79, 87, 90, 92, 93, 94, 109, 113, 134], "archetyp": 4, "open": [4, 5, 6, 15, 93, 94, 119, 123], "govern": 4, "equat": [4, 6, 21, 92, 93, 94], "d_i": 4, "diffus": [4, 13, 23, 126, 127], "th": [4, 64, 68, 94, 123], "c_i": [4, 92, 93, 94], "infti": [4, 131], "u_i": [4, 45, 99], "electr": [4, 116], "mobil": 4, "z_i": [4, 92, 93, 94], "charg": [4, 5, 6, 30, 37, 40, 68, 69, 79, 92, 93, 94, 102, 109, 116, 121, 135], "phi": [4, 5, 6, 49, 50, 70, 92, 95, 116, 128], "electrostat": [4, 6, 92], "phi_0": 4, "compar": [4, 7, 11, 32, 87, 95, 123], "epsilon_0": 4, "vacuum": [4, 8, 9, 14, 15, 22, 41, 92, 93, 94, 99, 102, 103, 105, 116, 123, 130], "permitt": [4, 92, 93, 94], "epsilon_r": 4, "rel": [4, 5, 9, 15, 25, 87, 92, 93, 94, 99, 116, 117], "solvent": 4, "faradai": [4, 92, 93, 94], "follow": [4, 5, 6, 11, 12, 13, 15, 18, 22, 24, 25, 30, 32, 37, 40, 43, 45, 49, 51, 52, 66, 68, 69, 87, 93, 94, 99, 102, 109, 116, 119, 121, 123, 130, 134, 135], "mm": [4, 5, 6, 21, 51, 52, 87], "text": [4, 11, 18, 21, 25, 36, 107, 123, 128, 132], "nacl": [4, 21], "bia": 4, "against": [4, 9, 92], "special": [4, 9, 25, 30, 32, 37, 40, 43, 49, 51, 52, 63, 64, 66, 68, 69, 102, 121, 123], "binari": [4, 6, 21, 123], "few": [4, 5, 6, 13, 116], "sc": [4, 5, 6, 41, 98], "ion": [4, 6, 62, 63, 64, 92, 93, 94], "na": [4, 5, 6, 68, 79], "cl": [4, 5, 6, 50, 79], "delta_u": [4, 5, 93, 94], "log": [4, 15, 23, 41, 89, 94, 95, 111, 117, 119], "deriv": [4, 10, 15, 18, 30, 36, 37, 40, 41, 43, 45, 49, 50, 66, 68, 70, 89, 99, 114, 116], "grid": [4, 5, 38, 91, 93, 94, 99, 103, 122], "use_standard_interface_bc": [4, 5, 93, 94], "total": [4, 8, 24, 36, 37, 51, 52, 56, 87, 93, 94, 113, 116, 122, 123, 128, 131, 134], "electromigr": 4, "ui": [4, 14, 99], "nij": [4, 5, 93, 94], "hold": [4, 62, 70, 123], "point": [4, 5, 6, 9, 13, 21, 38, 40, 70, 79, 87, 91, 93, 94, 95, 103, 116, 118, 119, 122, 123, 124, 125, 134], "quickli": [4, 5, 14], "retriev": [4, 6], "deby": [4, 5, 6, 92, 93, 94], "lambda_d": [4, 92, 93, 94], "deb": [4, 5, 6], "just": [4, 5, 11, 13, 24, 36, 87, 116, 123, 130], "possion": 4, "boltzmann": [4, 5, 6, 92], "poisson_boltzmann_distribut": [4, 5, 6], "short": [4, 25, 40, 123], "hand": [4, 12, 93, 94, 125], "densiti": [4, 5, 6, 9, 24, 36, 37, 38, 85, 92, 93, 94, 103, 128, 131], "aris": [4, 6, 13, 116], "charge_dens": [4, 5, 6, 92, 93, 94, 95], "linspac": [4, 5, 6, 22, 95, 99], "100": [4, 5, 9, 10, 12, 14, 15, 16, 21, 36, 41, 51, 52, 63, 87, 91, 95, 109, 113, 117, 119, 131], "rho": [4, 5, 6, 50, 95], "littl": [4, 9, 123], "helper": [4, 6, 41, 107], "prettifi": 4, "make_patch_spines_invis": [4, 5, 6], "set_frame_on": [4, 5, 6], "patch": [4, 5, 6], "set_vis": [4, 5, 6], "sp": [4, 5, 6, 132, 135], "spine": [4, 5, 6], "next": [4, 6, 14, 15, 87, 123, 134, 135], "pb": [4, 5], "limit": [4, 51, 52, 63, 103, 123], "convinc": 4, "ax1": [4, 5, 6, 14], "ax4": [4, 5], "nrow": [4, 5], "ncol": [4, 5], "axvlin": [4, 5, 6, 99], "nano": [4, 5, 6], "linestyl": [4, 5, 6, 99], "02": [4, 5, 6, 14, 110], "01": [4, 5, 13, 14, 22, 41, 87, 89, 95, 99, 102, 109, 110, 117, 118, 119, 135], "marker": [4, 5, 6, 94], "tomato": 4, "linewidth": [4, 5, 6, 99], "tab": [4, 5], "red": [4, 5, 6, 11, 99], "ax2": [4, 5, 6, 14], "twinx": [4, 5, 6], "ones": [4, 5, 6, 25, 41, 87, 135], "bisqu": [4, 5], "orang": [4, 5, 6, 8], "lightskyblu": [4, 5], "blue": [4, 5, 6, 99], "ax3": [4, 5, 6], "offset": [4, 5, 6, 8, 13, 87, 103, 109, 123], "tick": [4, 5, 6], "alreadi": [4, 5, 6, 15, 32, 70, 89, 116, 119, 121, 123, 134], "been": [4, 5, 6, 7, 15, 26, 30, 32, 37, 38, 40, 43, 49, 51, 52, 66, 68, 69, 70, 89, 102, 103, 116, 117, 121], "place": [4, 5, 6, 11, 13, 25, 70, 87, 91, 116, 123], "set_posit": [4, 5, 6, 116], "off": [4, 5, 6, 9, 11, 13, 53, 63, 87, 92, 99, 119, 122], "detach": [4, 5, 6], "invis": [4, 5, 6], "activ": [4, 5, 6, 9, 63, 121], "second": [4, 5, 6, 9, 10, 18, 30, 37, 40, 43, 50, 66, 68, 87, 93, 94, 95, 109, 113, 116, 121, 123], "semilogi": [4, 5], "set_ylabel": [4, 5, 6], "r": [4, 5, 6, 15, 18, 21, 38, 40, 43, 45, 49, 50, 66, 68, 70, 87, 89, 92, 93, 94, 95, 99, 100, 101, 109, 116, 117, 119, 128, 130, 131, 132, 134], "set_xlabel": [4, 5, 6], "nm": [4, 5, 6, 21, 95], "legend": [4, 5, 6], "loc": [4, 5, 6], "upper": [4, 5, 6, 9, 15, 30, 37, 40, 43, 49, 66, 68, 89, 95, 119, 123, 124, 135], "bbox_to_anchor": [4, 5, 6], "fontsiz": [4, 5, 6], "tight_layout": [4, 5, 6], "anoth": [4, 11, 13, 15, 25, 32, 87, 116, 121, 123], "after": [4, 8, 13, 15, 25, 30, 37, 40, 43, 49, 51, 52, 66, 68, 87, 89, 94, 99, 103, 105, 117, 121, 123, 134], "bazant": 4, "i_": 4, "farada": 4, "current": [4, 15, 22, 24, 25, 30, 32, 36, 37, 40, 43, 49, 51, 52, 66, 68, 69, 87, 99, 101, 102, 103, 116, 117, 118, 121, 123, 125], "i_j": 4, "nu_": 4, "ij": [4, 18, 28, 37, 45, 49, 50, 87, 89, 113, 128, 130, 131, 135], "stochiometr": 4, "coeffici": [4, 14, 30, 37, 40, 43, 49, 64, 66, 68, 89, 93, 94, 109], "n_j": 4, "electron": [4, 36, 37, 38], "particip": [4, 116], "lambda_": [4, 93, 94], "width": [4, 6, 16, 123], "compact": [4, 12, 21], "assumpt": [4, 89, 113], "strong": 4, "close": [4, 5, 6, 9, 11, 13, 15, 16, 87, 92, 103, 119, 121, 123, 125], "mai": [4, 5, 6, 8, 9, 13, 25, 30, 32, 37, 43, 68, 69, 87, 88, 96, 102, 113, 121, 123, 124, 135], "facilit": [4, 51, 52, 60], "again": [4, 5, 9, 15, 94, 119, 123], "e": [4, 6, 8, 9, 13, 14, 15, 16, 18, 25, 27, 28, 30, 32, 36, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 86, 87, 89, 91, 92, 93, 94, 95, 99, 100, 102, 103, 107, 109, 113, 116, 118, 119, 121, 123, 124, 125, 128, 130, 133, 135], "absenc": 4, "applic": [4, 25, 99, 119, 127, 129], "predefin": [4, 116], "use_standard_cell_bc": [4, 93, 94], "xij": [4, 93, 94], "familiar": [4, 12], "manner": [4, 8, 87], "averag": [4, 23, 32, 36, 38, 64, 87, 99, 123, 131], "fill": [4, 30, 37, 40, 43, 49, 55, 66, 68, 87, 89, 91, 123], "gap": [4, 21], "gold": 4, "wt": 4, "aqueou": [4, 21], "box_ang": 4, "50": [4, 11, 14, 22, 91, 99, 128, 134], "box_m": 4, "meter": 4, "vol_angcub": 4, "prod": [4, 6, 123], "vol_mcub": 4, "solubl": 4, "water": [4, 92, 130, 135], "estim": [4, 14, 40, 89, 99, 117], "molar": [4, 92, 93, 94], "weight_concentration_nacl": 4, "salin": [4, 6], "mass": [4, 15, 30, 36, 37, 38, 40, 43, 49, 66, 68, 88, 116, 119], "g": [4, 6, 8, 13, 14, 16, 18, 24, 25, 30, 36, 38, 43, 45, 66, 86, 87, 89, 92, 93, 94, 95, 99, 103, 116, 119, 121, 123, 124, 135], "cm\u00b3": 4, "saline_mass_density_kg_per_l": 4, "cm": [4, 24], "kg": 4, "http": [4, 8, 11, 25, 32, 38, 70, 87, 89, 93, 94, 95, 108, 116, 117, 123, 125], "www": 4, "engineeringtoolbox": 4, "com": [4, 87, 89, 116, 123, 125], "inorgan": 4, "sodium": 4, "salt": 4, "d_1957": 4, "html": [4, 13, 16, 25, 38, 93, 94, 95, 116], "saline_mass_density_g_per_l": 4, "kilo": 4, "molar_mass_h2o": 4, "015": 4, "mol": [4, 92, 93, 94], "molar_mass_nacl": 4, "58": [4, 11], "cnacl_m": 4, "cnacl_mm": 4, "round": [4, 123], "milli": 4, "n_nacl": 4, "avogadro": 4, "nearli": 4, "300": [4, 15, 24], "\u00e5": [4, 6, 130, 131], "magnitud": [4, 13], "0e": [4, 21, 87, 123], "modifi": [4, 6, 9, 13, 14, 51, 52, 87, 95, 116, 117, 123, 125, 135], "200": [4, 5, 6, 13, 87, 93, 94, 103], "maxit": [4, 30, 37, 40, 43, 49, 66, 68, 89, 93, 94, 95], "particularli": [4, 96, 134], "use_stern_layer_cell_bc": [4, 93, 94], "linear": [4, 5, 7, 14, 21, 22, 32, 89, 93, 94, 97, 99, 102, 116, 118], "behavior": [4, 5, 109, 116, 123], "continuous2discret": [4, 6, 21, 95], "callabl": [4, 93, 94, 95, 124], "henc": [4, 6, 9, 14, 131], "convert": [4, 9, 13, 14, 16, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 99, 101, 102, 121, 123, 134], "physic": [4, 13, 36, 40, 63, 66, 124], "interp1d": [4, 6, 95], "normal": [4, 8, 9, 14, 15, 22, 45, 87, 92, 99, 103, 116, 119, 123, 124, 128], "na_coordinate_sampl": 4, "count": [4, 6, 38, 91, 95, 99, 105, 113, 115, 116, 120, 123, 130, 135], "util": [4, 9, 10, 13, 20, 23, 51, 52, 103, 127, 128, 129, 130, 131], "get_histogram": [4, 6], "bin": [4, 6, 27, 113, 115, 131], "spatial": [4, 37, 93, 94, 95, 122], "dimens": [4, 30, 37, 43, 66, 68, 70, 87, 91, 95, 103, 109, 115, 122, 123, 124], "histx": [4, 6], "histi": [4, 6], "histz": [4, 6], "n_bin": [4, 6], "get_cent": [4, 6], "astyp": [4, 6, 15, 123, 135], "float": [4, 6, 9, 27, 30, 37, 38, 40, 43, 49, 59, 64, 66, 68, 70, 87, 89, 92, 93, 94, 95, 99, 101, 103, 104, 105, 109, 113, 114, 116, 117, 118, 119, 120, 123, 124, 125, 134], "plot_dist": [4, 6], "histogram": [4, 6, 27, 113, 131], "reference_distribut": [4, 6], "option": [4, 5, 6, 13, 14, 25, 26, 27, 30, 32, 37, 40, 43, 49, 66, 68, 69, 70, 87, 89, 91, 93, 94, 95, 99, 102, 103, 105, 109, 113, 115, 116, 117, 120, 121, 122, 123, 125], "hist": [4, 6], "fi": 4, "align": [4, 6, 8, 87, 123], "empir": [4, 6, 15, 116, 119], "edgecolor": [4, 6], "ref": [4, 6, 36, 87, 99], "sum": [4, 6, 14, 18, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 87, 92, 93, 94, 95, 100, 102, 113, 121, 123, 128, 130, 135], "eventu": 4, "uniform": [4, 91, 93, 94, 125], "similarli": [4, 13, 103, 123], "chlorin": 4, "cl_coordinate_sampl": 4, "standard": [4, 8, 14, 32, 36, 89, 99, 116, 123], "speak": 4, "\u00e5ngstr\u00f6m": [4, 6], "per": [4, 23, 25, 30, 37, 51, 52, 64, 70, 79, 87, 91, 92, 93, 94, 99, 101, 103, 110, 113, 116, 123, 125, 129, 135], "sample_s": [4, 6, 91, 95], "int": [4, 11, 15, 22, 27, 30, 37, 38, 40, 43, 49, 51, 52, 56, 58, 59, 62, 63, 64, 66, 68, 70, 87, 89, 91, 93, 94, 99, 102, 103, 109, 113, 115, 116, 117, 119, 123, 124, 125, 128, 134, 135], "na_atom": 4, "cl_atom": 4, "nacl_c_4_m_u_0": 4, "5_v_box_5x5x5nm_lambda_s_5_ang": 4, "real": [4, 6, 40, 87, 99, 123, 129], "style": [4, 16, 25, 36, 38, 77, 79, 87, 107, 117, 123], "0b1": [4, 77], "had": [4, 121, 123], "older": 4, "atom_styl": [4, 6], "plot_atom": [4, 13, 103], "80x": 4, "10y": 4, "10z": 4, "set_axis_off": 4, "k": [4, 15, 18, 22, 40, 45, 49, 50, 66, 89, 92, 93, 94, 95, 99, 102, 113, 116, 119, 123, 128, 135], "t": [4, 9, 11, 13, 15, 22, 30, 32, 37, 43, 68, 69, 70, 87, 92, 93, 94, 95, 99, 102, 103, 113, 116, 121, 123, 130, 135], "chu": 4, "bayli": 4, "voltag": 4, "relat": [4, 8, 9, 70, 86, 87, 124], "thin": [4, 99], "film": 4, "siam": 4, "journal": [4, 66, 68], "mathemat": 4, "jul": 4, "2006": 4, "doi": [4, 6, 8, 11, 32, 87, 117], "1137": 4, "040609938": 4, "o": [4, 15, 25, 89, 116, 123, 130, 135], "zur": 4, "der": 4, "elektrolytischen": 4, "doppelschicht": 4, "zeitschrift": 4, "f\u00fcr": 4, "elektrochemi": 4, "und": 4, "angewandt": 4, "physikalisch": 4, "chemi": 4, "vol": [4, 6, 40], "21": [4, 101, 123], "22": [4, 14, 123], "pp": [4, 6, 87, 89], "508": 4, "516": 4, "1924": 4, "1002": [4, 6], "bbpc": 4, "192400182": 4, "israelachvili": 4, "intermolecular": 4, "academ": 4, "press": 4, "london": [4, 130], "1991": [4, 120], "poisson_nernst_planck_solv": 5, "own": [5, 21, 25, 93, 94, 123, 126, 127], "poissonnernstplancksystemfen": [5, 94], "poisson_nernst_planck_solver_fen": 5, "fenic": [5, 21, 25, 94], "highli": 5, "latter": [5, 21, 41, 96, 133], "offer": [5, 6, 8, 21], "improv": [5, 9], "former": [5, 123], "illustr": [5, 87], "begin": [5, 99, 109, 123], "necess": 5, "ionic_strength": [5, 92, 93, 94], "bolzmann": 5, "gamma": [5, 10, 12, 15, 36, 37, 87, 92, 103, 119], "3rd": 5, "parti": [5, 21], "At": 5, "across": [5, 6, 9, 21, 93, 94, 116], "100e": [5, 93, 94], "std_interfac": 5, "hybr": 5, "xtol": 5, "uij": [5, 93, 94], "lamj": [5, 93, 94], "fenics_interfac": 5, "_root": 5, "208": 5, "runtimewarn": 5, "doe": [5, 9, 11, 14, 16, 22, 25, 70, 89, 116, 121, 123], "callback": [5, 30, 37, 40, 43, 49, 66, 68, 89, 93, 94, 99, 117], "ffc": 5, "jit": 5, "compil": [5, 96, 123], "No": [5, 87, 116], "jacobian": [5, 93, 104, 114], "specifi": [5, 6, 9, 15, 19, 22, 23, 30, 37, 38, 40, 43, 49, 59, 63, 66, 68, 70, 78, 87, 89, 91, 92, 95, 99, 103, 109, 110, 113, 116, 123, 134, 135], "variat": [5, 87], "differenti": [5, 87], "residu": [5, 30, 37, 40, 43, 49, 66, 68, 89, 93, 94, 99, 117, 118], "newton": [5, 93, 94], "287e": 5, "tol": [5, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 94, 102, 121, 125], "000e": 5, "00": [5, 6, 14, 113], "09": [5, 6, 95], "656e": 5, "161e": 5, "03": [5, 14], "172e": 5, "262e": 5, "975e": 5, "362e": 5, "783e": 5, "04": 5, "966e": 5, "937e": 5, "345e": 5, "finish": [5, 6, 25, 121], "fall": [5, 21], "onto": [5, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121, 123, 130], "fem": [5, 94], "frameon": 5, "third": [5, 21, 116], "outperform": 5, "o\u00f6": 5, "std_interface_high_potenti": 5, "progress": [5, 87], "measur": [5, 6, 7, 9, 28, 30, 37, 40, 43, 49, 66, 68, 70, 87, 89, 95, 99, 114, 132], "last": [5, 6, 15, 25, 30, 32, 37, 40, 43, 49, 51, 52, 59, 63, 66, 68, 69, 102, 116, 119, 121, 123], "ten": 5, "appar": 5, "fenics_interface_high_potenti": 5, "521e": 5, "062e": 5, "413e": 5, "796e": 5, "388e": 5, "177e": 5, "087e": 5, "132e": 5, "834e": 5, "154e": 5, "217e": 5, "454e": 5, "592e": 5, "724e": 5, "292e": 5, "prove": 5, "particl": [6, 68, 92, 95, 109, 116], "arbitrarili": [6, 91, 123, 135], "avoid": [6, 9, 90, 99, 113, 123], "overlap": [6, 11, 64, 90, 95, 113], "yield": [6, 36, 89, 116], "usabl": 6, "dens": [6, 30, 37, 40, 43, 49, 66, 68, 89, 95, 118], "pack": [6, 13, 95, 99], "steric_correct": [6, 21], "sub": [6, 32, 34, 62, 63, 64, 123, 124], "Its": 6, "apply_steric_correct": [6, 95], "assur": [6, 21, 79], "re": [6, 14, 25, 70, 95, 99], "pseudo": 6, "packmol": 6, "python": [6, 12, 23, 94, 109, 123, 125, 126, 127, 134], "involv": [6, 9, 13, 133, 134], "previou": [6, 8, 9, 11, 13, 15, 99, 121, 123], "document": [6, 13, 16, 25, 94, 109, 116, 123, 134], "section": [6, 9, 11, 13, 25, 45, 87], "adjac": [6, 70, 99, 124], "simpl": [6, 21, 45, 66, 70, 86, 87, 93, 94, 109, 116, 117, 122, 123, 124, 128, 130, 134], "although": [6, 123], "1d": [6, 21, 70, 78, 87, 90, 93, 94, 123], "later": [6, 9, 64, 70, 135], "xsize": [6, 95], "ysize": [6, 95], "5e": [6, 87, 95, 123], "zsize": [6, 95], "20e": 6, "2000": [6, 95], "fundament": [6, 22], "par2": 6, "box3": 6, "ax_row": 6, "zip": [6, 36, 99], "expos": [6, 87, 123], "closest": [6, 95, 123], "scipy_distance_based_closest_pair": [6, 95], "state": [6, 9, 11, 25, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 70, 87, 99, 102, 121], "xstack": 6, "vstack": [6, 95], "box6": 6, "corner": [6, 95, 121], "mindsq": [6, 95], "p1": [6, 95, 125], "p2": [6, 95, 125], "pmin": [6, 95], "min": [6, 95, 123, 135], "pmax": [6, 41, 95], "minimum": [6, 15, 20, 79, 87, 95, 113, 115, 116, 123], "wise": [6, 94, 95, 123], "4e": [6, 95], "maximum": [6, 30, 37, 40, 43, 49, 66, 68, 87, 89, 93, 94, 95, 103, 118, 120, 123, 125, 132, 134], "352188695855715e": 6, "4566e": 6, "7113e": 6, "3501e": 6, "08": [6, 22, 95], "3269e": 6, "6958e": 6, "3537e": 6, "0000e": 6, "3292e": 6, "1885e": 6, "2696e": 6, "9992e": [6, 95], "9942e": 6, "9953e": 6, "bfg": [6, 95], "2e": 6, "x1": [6, 95, 99, 122, 125], "disp": [6, 87, 95, 99], "tmp": [6, 8, 113], "ipykernel_8754": 6, "3409156327": 6, "deprecationwarn": [6, 8], "deprec": [6, 8, 30, 32, 37, 40, 43, 49, 66, 68, 69, 99, 102, 104, 116, 121, 123], "remov": [6, 9, 13, 15, 45, 86, 88, 116, 123, 135], "instead": [6, 8, 9, 25, 30, 32, 37, 40, 43, 45, 49, 66, 68, 69, 87, 102, 104, 110, 116, 118, 121, 123], "come": [6, 25, 123], "enough": [6, 9, 14, 123], "statu": [6, 15, 87, 111], "success": 6, "nit": 6, "messag": [6, 25, 30, 32, 37, 40, 43, 49, 51, 52, 63, 64, 66, 68, 69, 95, 102, 121], "final": [6, 7, 13, 15, 45, 51, 52, 53, 87, 95, 117, 123], "norm_of_projected_gradient_": 6, "_pgtol": 6, "9730e": 6, "2318e": 6, "7182e": 6, "2865e": 6, "4771e": 6, "8167e": 6, "6017e": 6, "0979e": 6, "0107e": 6, "2803e": 6, "7982e": 6, "7956e": 6, "9780e": 6, "out": [6, 13, 22, 24, 25, 64, 70, 87, 95, 99, 101, 115, 116, 123, 124], "400": 6, "mani": [6, 13, 17, 23, 43, 63, 87, 91, 99, 121, 123, 127], "shift": [6, 8, 50, 66, 70, 87, 98, 99, 113, 124], "check": [6, 12, 25, 30, 32, 37, 40, 43, 49, 51, 52, 63, 66, 68, 69, 70, 87, 89, 102, 107, 109, 113, 116, 117, 121, 123, 125, 135], "count_nonzero": 6, "353": 6, "euclidean": [6, 95], "96192377352509e": 6, "pick": 6, "split": [6, 7, 9, 25], "steric_sampl": 6, "101": 6, "steric_hist": 6, "entri": [6, 25, 30, 37, 40, 43, 49, 66, 68, 89, 93, 94, 95, 99, 109, 110, 116, 123, 130], "diff_hist": 6, "h": [6, 38, 45, 87, 99, 105, 109, 113, 116, 117, 119, 123, 130, 134, 135], "ax_col": 6, "diag": [6, 123], "steric_system": 6, "nacl_200_0": 6, "05v_5x5x20nm_at_interface_pb_distribut": 6, "05v_5x5x20nm_at_interface_pb_distributed_steric_correction_2ang": 6, "martinez": 6, "andrad": 6, "birgin": 6, "mart\u00ednez": 6, "build": [6, 7, 8, 9, 10, 11, 12, 13, 22, 25, 58, 59, 70, 87, 94, 96, 103, 125, 126, 127, 130, 133], "molecular": [6, 15, 112, 113, 116, 133, 135], "dynam": [6, 15, 30, 37, 40, 43, 49, 66, 68, 102, 113, 116, 133], "chem": [6, 32, 117], "2157": 6, "2164": 6, "2009": 6, "jcc": 6, "21224": 6, "crack": [7, 10, 23, 87, 97, 101, 102, 124, 126, 127], "process": [7, 13, 56, 70, 89, 99, 121, 134], "new": [7, 12, 19, 32, 36, 63, 64, 70, 87, 99, 116, 117, 119, 121, 123, 135], "area": [7, 14, 103, 119, 123], "apart": [7, 9, 13, 59], "fracture_mechan": [7, 14, 22], "tip": [7, 14, 22, 97, 99, 101, 102], "anisotropi": [7, 22, 97], "quantifi": [7, 70], "trap": 7, "pin": 7, "speed": [7, 9, 14, 15, 87, 102, 119, 120, 123], "silicon": [7, 14, 15, 18, 22, 132], "quasi": [7, 10, 22], "static": [7, 10, 22, 25, 40, 87, 112, 113], "link": [7, 25, 59, 87], "flexibl": [7, 12, 22, 99], "propos": 7, "sinclair": [7, 23, 99], "domain": [7, 21, 93, 94, 101, 127], "coupl": [7, 12, 15, 119, 135], "extens": [7, 25, 36, 66, 87, 96, 116], "approach": [7, 9, 13, 22, 31, 87, 123], "give": [7, 8, 9, 13, 14, 15, 45, 70, 87, 103, 116, 123, 125, 135], "scheme": [7, 9, 93, 94], "usag": [7, 8, 9, 10, 19, 23, 116, 119, 129], "properti": [7, 10, 11, 12, 22, 30, 32, 36, 37, 40, 43, 49, 51, 52, 64, 66, 68, 69, 87, 93, 94, 99, 102, 109, 113, 116, 119, 121, 123, 128, 129, 131, 134], "strain": [7, 10, 18, 70, 86, 89, 99, 103, 110, 114], "them": [8, 15, 32, 51, 52, 70, 109, 116, 121, 123, 135], "challeng": [8, 12], "dissoci": [8, 10, 12, 87], "connect": [8, 12, 59, 63, 107, 112, 113], "machin": [8, 32, 93, 123], "learn": [8, 32], "mlip": [8, 32], "isol": 8, "gammasurfac": [8, 9, 16, 103], "stackingfault": [8, 9, 103], "parameteris": 8, "index": [8, 9, 15, 25, 38, 43, 56, 58, 59, 62, 63, 64, 87, 103, 113, 116, 119, 123, 125, 127, 130, 135], "surface_direct": [8, 9, 103], "instanc": [8, 9, 32, 55, 87, 89, 99, 103, 113, 119, 123], "subclass": [8, 12, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 87, 102, 103, 121, 123, 134], "user": [8, 12, 23, 30, 37, 40, 43, 49, 66, 68, 70, 89, 116, 123], "screw": [8, 10, 12, 87], "diamond": [8, 10, 11, 12, 13, 14, 15, 22, 70, 87, 98, 103, 124, 125], "circ": [8, 11, 13], "111": [8, 10, 12, 14, 41, 70, 87, 98, 123, 124], "glide_direct": [8, 9, 103], "tersoff_brenn": [8, 9], "tersoffbrenn": [8, 9, 48], "brenner_prb_42_9458_c_i": 8, "c_screw": 8, "c_screw_bulk": 8, "c_screw_dislo": 8, "spin": [8, 116], "math": [8, 118, 123, 130], "pi": [8, 100, 113, 116, 123, 128, 131], "flip": [8, 86, 87, 124], "sf": [8, 87], "360528114483162": 8, "ipykernel_8780": 8, "605338894": 8, "alia": [8, 38, 87, 121, 123], "librari": [8, 87, 123], "replac": [8, 11, 18, 25, 34, 36, 63, 87, 123], "try": [8, 15, 25, 87, 95, 116, 135], "made": [8, 70, 123], "colour": [8, 13, 87, 103], "avail": [8, 10, 12, 21, 25, 32, 38, 89, 116, 123, 135], "cna_color": [8, 11, 87, 103], "show_html": [8, 9, 13, 16], "generate_imag": [8, 9, 103], "cell_mov": [8, 9, 103], "z_rep": [8, 9, 13, 87, 103], "anim": [8, 9, 13, 16, 99, 103], "onc": [8, 9, 12, 13, 14, 45, 59, 63, 116, 119, 123, 134], "loop": [8, 9, 13, 87, 121, 123], "reflect": [8, 9, 13, 123], "sweep": 8, "nine": 8, "imag": [8, 9, 13, 20, 25, 87, 103, 113, 116, 123], "middl": [8, 14, 15], "five": 8, "perfect": [8, 9, 10, 12, 13, 87], "exactli": [8, 116, 123], "help": [8, 21, 25, 50, 103, 116], "confirm": 8, "distinct": [8, 13, 123], "shuffl": [8, 103], "select": [8, 17, 23, 51, 52, 63, 70, 103, 116, 123], "ordin": 8, "basi": [8, 9, 40, 70, 87, 103, 125], "choos": [8, 9, 11, 12, 15, 117, 123, 135], "cut": [8, 9, 53, 63, 66, 87, 103, 119, 122], "becaus": [8, 11, 13, 45, 87, 113, 123], "would": [8, 11, 13, 14, 21, 70, 116, 123, 124], "suggest": [8, 123, 125], "z_offset": [8, 103], "add": [8, 9, 11, 12, 13, 16, 25, 51, 52, 62, 63, 64, 70, 87, 99, 103, 105, 113, 116], "carbon": [8, 24, 127, 128, 131, 133], "get": [8, 9, 11, 13, 15, 18, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 70, 87, 93, 94, 95, 102, 103, 116, 121, 123, 125, 128, 131], "suppli": [8, 30, 37, 40, 43, 49, 66, 68, 70, 89, 103, 116, 124], "crystalstructur": [8, 9, 11, 87, 103, 125], "revisit": 8, "gaa": [8, 11], "multispeci": [8, 10, 12, 13], "doc": [8, 9, 13, 25, 38, 93, 94, 95, 119, 135], "guarante": [8, 113], "cannot": [8, 15, 70, 87, 123], "themselv": [8, 70, 123], "disord": [8, 10, 12, 128, 131, 132], "effect": [8, 21, 30, 37, 40, 43, 49, 66, 68, 87, 121], "org": [8, 11, 32, 70, 87, 93, 94, 95, 117, 125], "1080": [8, 11], "08927022": [8, 11], "2011": [8, 11], "602975": [8, 11], "2402": [8, 11], "zincblend": [8, 11], "generalis": [9, 103], "slide": [9, 10, 119], "slab": [9, 14, 15, 99, 105, 123, 135], "given": [9, 11, 13, 22, 25, 30, 34, 37, 40, 43, 49, 51, 52, 59, 60, 63, 64, 66, 68, 70, 86, 87, 89, 91, 99, 103, 105, 109, 113, 116, 122, 123, 124, 125], "often": 9, "metast": 9, "grain": 9, "disloc": [9, 10, 12, 103, 126, 127], "deal": [9, 63, 112], "pathwai": 9, "complet": [9, 87, 116, 119, 121, 125], "back": [9, 21, 116, 123], "singl": [9, 11, 13, 36, 51, 52, 59, 63, 64, 70, 87, 89, 92, 113, 116, 121, 123, 130], "wherea": 9, "gamma_surfac": [9, 10, 12], "associ": [9, 32, 87, 89, 103], "There": [9, 25, 38, 87, 116, 123], "main": [9, 13, 73, 75, 77, 78, 79, 81, 83, 85, 87, 92, 107, 125], "methodologi": 9, "intuit": 9, "supercel": [9, 69, 103], "bottom": [9, 25, 70, 119], "fulli": [9, 87], "leav": [9, 87], "effici": [9, 133], "less": [9, 24, 113], "understand": 9, "vice": [9, 70], "versa": [9, 70], "produc": [9, 13, 64, 87, 99, 103, 123], "setup": [9, 10, 14, 18, 22, 40, 87, 121, 127, 133], "becom": [9, 14, 70, 113, 116, 123], "api": [9, 43, 123, 127], "lot": [9, 13], "addit": [9, 10, 12, 13, 25, 30, 32, 36, 37, 40, 43, 49, 53, 66, 68, 70, 87, 89, 99, 103, 121], "featur": [9, 10, 12, 13, 116], "spread": 9, "though": 9, "pure": [9, 36, 38, 99], "copi": [9, 11, 14, 15, 25, 63, 99, 103, 116, 118, 121, 123], "recommend": [9, 11], "quick": [9, 123], "glanc": 9, "parametis": 9, "suit": 9, "aluminium": 9, "kioseogl": 9, "perform": [9, 14, 15, 30, 32, 37, 43, 51, 52, 56, 68, 69, 70, 87, 95, 99, 102, 115, 119, 121, 134], "what": [9, 13, 30, 37, 68, 69, 102, 116, 121, 123], "kioseoglou_pssb_245_1118_aln": 9, "initialis": [9, 12, 13, 87, 102, 103], "001": [9, 10, 12, 13, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 95, 99, 102, 103, 109, 116, 121, 123, 124], "equival": [9, 87, 116, 123], "attach": [9, 15, 30, 32, 37, 43, 60, 64, 68, 69, 87, 102, 116, 119, 121], "don": [9, 22, 30, 32, 37, 43, 68, 69, 102, 116, 121], "feed": [9, 70, 103], "nice": [9, 33], "funcanim": [9, 13, 16], "disabl": [9, 14, 87], "done": [9, 11, 30, 37, 40, 43, 49, 55, 66, 68, 114, 121, 123, 124, 130], "toggl": [9, 87, 103, 123], "thick": [9, 87, 93, 94, 99], "nx": [9, 103], "ny": [9, 103], "relax_imag": [9, 103], "get_energy_dens": [9, 103], "profil": [9, 103], "wa": [9, 11, 13, 14, 23, 58, 59, 103, 123, 124], "constraint": [9, 14, 15, 87, 94, 95, 99, 103, 116, 119], "sens": [9, 15, 107], "cell_relax": [9, 103], "e_dens": 9, "plot_energy_dens": [9, 103], "heatmap": 9, "reus": [9, 15, 59], "plot_energi": [9, 103], "alongsid": [9, 103], "appear": [9, 19, 32, 113, 123], "low": [9, 87, 123], "diagon": [9, 14, 30, 37, 40, 43, 49, 66, 68, 89, 99, 123], "110": [9, 10, 12, 14, 41, 87, 134], "attempt": [9, 12, 123], "thought": 9, "much": [9, 11, 13, 105], "content": [9, 14, 16, 25, 123], "reason": [9, 12], "explicitli": [9, 14, 15, 21, 22, 99], "aim": 9, "approxim": [9, 36, 70, 89, 93, 117], "surround": [9, 13, 22, 87], "room": 9, "extend": [9, 12, 25, 32, 51, 52, 87, 109, 116, 121, 134], "purposefulli": 9, "kept": [9, 116, 123], "eas": [9, 12], "practic": 9, "ourselv": 9, "ev": [9, 18, 68, 87, 89, 99, 103, 109, 116], "crystallin": [10, 68], "amorph": [10, 18, 24, 66, 126, 127, 128, 131, 132, 133], "fit": [10, 14, 38, 70, 87, 89, 99, 123], "plastic": [10, 127], "cylindr": [10, 11, 12, 99], "access": [10, 12, 13, 14, 30, 51, 52, 87, 123], "kei": [10, 12, 32, 41, 48, 64, 99, 110, 116, 123], "bodi": [10, 12, 14, 17, 43, 49, 50, 127], "edg": [10, 12, 87, 125], "mix": [10, 12, 30, 37, 38, 41, 43, 48, 66, 68, 87, 109, 116], "junction": [10, 12], "face": [10, 12, 22], "60": [10, 12, 87], "degre": [10, 11, 12, 18, 30, 37, 40, 43, 49, 66, 68, 70, 87, 89, 99, 112, 116, 117, 119, 124], "kink": [10, 12, 87, 98, 99], "move": [10, 12, 13, 22, 59, 64, 86, 87, 99, 103, 116, 123], "advanc": [10, 12, 13, 22, 130], "specif": [10, 12, 25, 51, 52, 59, 103, 113, 115, 123, 124, 126, 127, 128, 130, 131, 133, 134], "complex": [10, 11, 12, 13, 45, 113, 123, 134], "fractur": [10, 23, 99, 124, 126, 127], "acknowledg": 10, "tribologi": [10, 119, 126, 127], "pressur": [10, 119], "equilibr": [10, 24, 119], "restart": [10, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 119, 121], "restrict": [11, 40, 43, 66, 68, 99, 123, 128], "express": [11, 45, 50, 70, 124], "306": 11, "98": 11, "57": [11, 22, 28], "89": [11, 87, 109], "latticeconst": [11, 14, 15], "gaas_po": 11, "get_scaled_posit": [11, 116], "dia_po": 11, "sort": [11, 25, 113, 121, 123], "gaas_idx": 11, "lexsort": [11, 113, 123], "dia_idx": 11, "75": [11, 15, 87, 95], "sai": [11, 13], "agnost": 11, "chemistri": 11, "were": [11, 63, 116, 123], "gaas_bulk": 11, "gaas_disloc": 11, "35": 11, "additiion": 11, "those": [11, 41, 99, 113, 116], "break": [11, 59, 123, 124], "caus": [11, 87, 123], "alpha": [11, 25, 32, 38, 40, 87, 99, 116], "termin": [11, 53, 63, 87, 109, 117, 135], "beta": [11, 25, 38, 102], "ga": [11, 92, 93, 94, 116], "get_chemical_symbol": [11, 116, 130], "swap": [11, 123], "new_symbol": 11, "set_chemical_symbol": [11, 116], "disloc_nam": [11, 87], "built": [11, 25, 93, 123, 126, 127], "caveat": 11, "routin": [11, 15, 41, 58, 89, 117, 123, 126, 127, 133, 135], "reliabl": [11, 123], "replic": [11, 87], "unit_cel": [11, 87, 123], "won": 11, "distort": 11, "captur": [11, 130, 134, 135], "workflow": [11, 126, 127], "match": [11, 25, 70, 99, 123, 124, 125], "composit": [11, 13, 19, 36], "site": [11, 87, 96, 99], "occupi": [11, 87], "6x6": [11, 14, 87, 89, 99], "voigt": [11, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 89, 102, 114, 116, 121], "matrix": [11, 14, 28, 30, 37, 40, 43, 49, 66, 68, 70, 87, 89, 95, 99, 104, 113, 114, 116, 118, 123], "rather": [11, 12, 13, 15, 70, 117, 121, 125, 135], "previous": [11, 38, 121, 123], "whilst": [11, 13], "heavili": 11, "incorrect": [11, 118], "dislocaion": 11, "reproduc": [11, 36], "tabl": [11, 18, 19, 36, 135], "in0": 11, "ga0": 11, "c22": 11, "c33": [11, 41], "c13": [11, 41], "c23": 11, "c55": 11, "c66": [11, 41], "120": [11, 70, 116], "121": 11, "55": [11, 135], "87": 11, "24": 11, "29": [11, 14], "33": 11, "mont": 11, "carlo": 11, "introduc": [11, 94], "indium": 11, "seed": [11, 116, 123], "ga_idx": 11, "argwher": 11, "idx": [11, 87], "in_idx": 11, "choic": [11, 13, 66, 123], "ingaas_bulk": 11, "ingaas_disloc": 11, "ingaa": 11, "almost": [11, 123], "better": 11, "in_at": 11, "add_compon": [11, 16, 135], "asestructur": [11, 16, 135], "default_represent": [11, 16, 135], "add_spacefil": [11, 16, 87], "larg": [12, 25, 87, 120], "irrevers": 12, "carri": [12, 22, 24, 70, 99, 101], "movement": [12, 87], "deep": [12, 123, 124], "knowledg": 12, "experi": 12, "peopl": 12, "friendli": 12, "enabl": [12, 13, 14, 51, 52, 87, 116], "ident": [12, 87, 105, 116], "assist": 12, "known": [12, 123, 134], "easili": [12, 30, 37, 40, 43, 49, 66, 68, 89, 124], "pip": [12, 96], "pytest": 12, "directori": [12, 22, 23, 24, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121, 135], "repositori": 12, "ssssssssssssss": 12, "ssssssss": 12, "stand": 12, "behind": [12, 19, 102, 123], "abl": [12, 13], "dure": [12, 15, 64, 86, 99, 116, 121, 124, 135], "idea": [12, 32], "dxa": [12, 87], "intend": [12, 13, 96, 123], "safe": [12, 123], "ignor": [12, 13, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121, 122, 123], "design": [13, 70], "goal": 13, "must": [13, 25, 30, 32, 37, 40, 43, 49, 51, 52, 59, 66, 68, 69, 70, 87, 93, 95, 102, 103, 105, 107, 109, 113, 115, 116, 121, 123], "net": 13, "equal": [13, 14, 113, 123], "opposit": [13, 87, 123], "sign": [13, 87, 123], "textbf": 13, "earlier": 13, "si_disloc": 13, "kwarg": [13, 14, 30, 32, 37, 40, 41, 43, 49, 51, 52, 60, 66, 68, 69, 70, 87, 89, 93, 94, 95, 98, 102, 103, 110, 116, 121, 123], "either": [13, 14, 21, 22, 25, 30, 37, 40, 43, 86, 87, 89, 93, 103, 113, 116, 121, 123, 125], "build_quadrupol": [13, 87], "quad": [13, 36], "quad_bulk": 13, "quad_disloc": 13, "glide_separ": [13, 87], "view_quad": [13, 87], "dr": [13, 27, 113], "0393": 13, "1551": 13, "0062": 13, "0015": 13, "0006": 13, "r_tol": 13, "term": [13, 15, 30, 37, 38, 40, 43, 49, 66, 68, 70, 87, 92, 133], "four": [13, 116, 123, 130], "tri": 13, "central": [13, 30, 37, 40, 43, 49, 66, 68, 104, 114], "sublattic": [13, 70, 124], "wave": [13, 40, 102, 114], "dft": 13, "guess": [13, 30, 37, 40, 43, 49, 66, 68, 87, 89, 99], "scenario": 13, "unison": 13, "build_glide_quadrupol": [13, 87], "mathbf": 13, "num_imag": 13, "glide_quad": 13, "nim": [13, 87], "glide_left": [13, 87], "glide_right": [13, 87], "combin": [13, 30, 32, 37, 51, 52, 68, 69, 95, 102, 109, 116, 118, 121, 124, 134], "animate_glid": 13, "get_structure_typ": [13, 125], "extra": [13, 25, 30, 59, 64, 70, 87, 103], "rep": [13, 36, 37, 38, 116], "clariti": 13, "anim_imag": 13, "plot_fram": 13, "framedata": 13, "clear": [13, 15, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121, 123], "individu": [13, 25, 32, 64, 113, 116, 121, 123], "framenum": 13, "enhanc": 13, "atom_label": [13, 125], "struct_nam": 13, "diamond_structur": [13, 125], "atom_color": 13, "enumer": [13, 95, 99, 100, 135], "save_count": 13, "len": [13, 14, 15, 18, 30, 37, 68, 69, 87, 99, 101, 102, 113, 116, 118, 121, 125, 130, 131, 135], "init_func": 13, "visibl": 13, "commonli": [13, 116], "energet": 13, "nucleat": 13, "chain": 13, "everi": [13, 25, 70, 87, 99, 113, 116, 121], "repetit": 13, "migrat": 13, "behaviour": [13, 116, 123], "expens": [13, 15, 24, 59, 70, 123], "build_kink_quadrupol": [13, 87], "invert_direct": [13, 87], "direction": 13, "typic": [13, 15, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121, 133, 134], "multipl": [13, 51, 52, 87, 99, 119, 123], "layer_tol": [13, 87], "disrupt": 13, "kink_quad": 13, "curat": 13, "easi": [13, 87, 124], "hard": [13, 66, 87], "w_bulk": [13, 87], "w_quad": 13, "left_offset": [13, 87], "phenomenon": 13, "me": 13, "especi": [13, 134], "insight": [13, 15], "ni_quad": 13, "disp_tol": [13, 87], "toler": [13, 22, 30, 37, 40, 43, 49, 64, 66, 68, 70, 87, 89, 93, 94, 103, 117, 124, 125], "2211": 13, "1928": 13, "0053": 13, "analys": [14, 87], "command": [14, 19, 22, 24, 78, 109, 116, 121], "quasistat": [14, 23], "expcellfilt": 14, "precon": [14, 99], "preconlbfg": 14, "show_as": [14, 16, 135], "cubiccrystalcrack": [14, 99], "cluster": [14, 22, 51, 52, 53, 55, 56, 60, 62, 63, 64, 87, 99], "set_group": [14, 22, 98], "inadvertendli": 14, "stilling": [14, 15, 18, 47, 50], "weber": [14, 15, 18, 47, 50], "imsw": 14, "accident": 14, "brittl": [14, 99, 102], "variabl": [14, 41, 43, 51, 52, 93, 94, 123, 130], "filter": 14, "precondit": [14, 99, 118], "still": [14, 70, 93, 94, 121, 123], "robust": [14, 117], "calcual": 14, "forward": [14, 95], "el": [14, 22, 41, 70, 85, 98, 124], "ecf": 14, "opt": 14, "smax": [14, 87], "34": 14, "692786": 14, "0000": 14, "0003": 14, "692800": 14, "lbfg": 14, "133": 14, "too": [14, 70], "benefit": 14, "precondition": [14, 30, 37, 40, 43, 49, 66, 68, 89, 99, 118], "a0": [14, 22, 41, 45, 70, 87, 98, 116, 123, 124], "c_err": [14, 89], "c_11": 14, "stress": [14, 15, 22, 30, 32, 37, 40, 41, 43, 49, 51, 52, 66, 68, 69, 89, 99, 102, 114, 116, 119, 121], "18433656e": 14, "05309496e": 14, "32979590e": 14, "97563406e": 14, "87437477e": 14, "cij": [14, 89], "gradient": [14, 28, 30, 37, 40, 43, 45, 49, 50, 66, 68, 70, 87, 89, 93, 95, 99, 101], "4615167357166": 14, "error": [14, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 89, 99, 102, 117, 118, 121, 123, 135], "647086489317546": 14, "correl": [14, 122, 131], "9997411342093212": 14, "257424": 14, "016522": 14, "c_21": 14, "13682864e": 14, "40632635e": 14, "89079644e": 14, "30322868e": 14, "640152889484874": 14, "764431020075705": 14, "9982534274183545": 14, "c21": 14, "322312": 14, "011013": 14, "c_31": 14, "64015288948469": 14, "7644310200754734": 14, "998253427418355": 14, "updat": [14, 22, 25, 30, 32, 37, 43, 51, 52, 58, 59, 63, 64, 68, 69, 70, 99, 102, 109, 116, 117, 121, 123], "c31": 14, "c_44": 14, "43911515": 14, "19994966": 14, "16236289": 14, "2885839": 14, "17710649364383": 14, "285752508674578": 14, "9998224896560226": 14, "737603": 14, "008025": 14, "65": [14, 135], "c_12": 14, "extract": [14, 87], "64015288948479": 14, "remain": [14, 45, 123], "ingredi": 14, "fly": 14, "adapticecont": 14, "branch": 14, "merg": [14, 15, 38], "find_surface_energi": [14, 123], "0001": [14, 70, 87, 123, 124], "1j": [14, 123], "builder": [14, 25, 70, 103], "startswith": 14, "bodycenteredcub": 14, "lattice_build": 14, "elif": [14, 135], "untest": 14, "append": [14, 15, 25, 95, 116, 119, 135], "unsupport": 14, "orthogon": [14, 87, 89, 103, 119, 125], "endswith": 14, "get_cel": [14, 15, 116, 119], "set_cel": [14, 116], "lbfgslinesearch": 14, "opt_bulk": 14, "opt_slab": 14, "ebulk": 14, "eslab": 14, "cross": [14, 25, 68, 87, 113, 123], "gamma_as": 14, "ase_unit": 14, "gamma_si": 14, "surface_energi": [14, 22, 99], "diamond111": 14, "consist": [14, 15, 30, 37, 43, 66, 68, 87, 92, 94, 99, 116, 130, 133, 135], "416": 14, "313600": 14, "403": 14, "303800": 14, "proce": [14, 121], "param": [14, 22, 23, 24, 26, 87, 92, 99, 121, 124], "script": [14, 15, 20, 21, 22, 24, 25, 89, 109, 134, 135], "quasistatic_crack": 14, "crack_surfac": [14, 22, 98, 99], "crack_front": [14, 22, 98, 99], "crack_tip": 14, "41": 14, "56": [14, 109], "skin_x": [14, 22, 98], "skin_i": [14, 22, 98], "cryst": [14, 22, 98, 99], "cfg": [14, 18, 22, 128, 131, 132], "r0": [14, 41, 45, 50, 66, 99], "get_posit": [14, 15, 116, 135], "tip_x0": 14, "tip_y0": 14, "tip_z0": 14, "651528178589903": 14, "406681360668651": 14, "stiff": [14, 45, 89], "specimen": 14, "crk": [14, 99], "griffith": [14, 99], "critic": [14, 15, 99, 119], "intens": [14, 22, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 99, 102, 121], "factor": [14, 15, 22, 30, 32, 37, 40, 43, 49, 66, 68, 87, 89, 99, 116, 119], "thermodynam": 14, "favour": 14, "k1g": [14, 99], "137": 14, "7212872906663": 14, "everyth": 14, "centr": [14, 70, 99], "tip_x": [14, 101], "tip_i": [14, 101], "set_pbc": [14, 15, 116], "k1": [14, 22, 99], "ux": [14, 99], "notch": [14, 22], "oldr": 14, "scatter": [14, 99], "group": [14, 25, 63, 116, 119, 135], "quiver": 14, "set_aspect": 14, "set_xlim": 14, "set_ylim": 14, "45": 14, "friction": 15, "adhes": 15, "gain": 15, "wear": 15, "pressurecoupl": 15, "under": [15, 70, 89, 116, 119, 123], "veloc": [15, 109, 116], "fast": [15, 119], "prior": [15, 89], "afterward": [15, 51, 52], "pastewka": [15, 25, 66, 68, 119], "inertia": [15, 116], "exemplari": 15, "slab1": 15, "slab2": 15, "lowest": 15, "mask": [15, 70, 87, 99, 101, 105, 113, 116, 119, 124, 125], "bottom_mask": [15, 119], "topmost": 15, "treat": [15, 51, 52, 87], "rigidli": [15, 99], "top_mask": [15, 119], "rigid": [15, 116, 119], "adapt": [15, 89, 117], "subsequ": [15, 99, 121, 123], "savetxt": 15, "txt": [15, 21, 25, 70, 87], "md": [15, 99, 116, 119, 127, 133], "langevin": [15, 24, 119], "thermostat": [15, 24, 119], "neither": 15, "nor": 15, "motion": [15, 88], "simplic": 15, "thermal": [15, 119], "dedic": 15, "dt": [15, 95, 99, 102], "166": 15, "m_factor": [15, 119], "lid": [15, 119], "pdir": [15, 119], "p": [15, 41, 45, 48, 87, 95, 99, 100, 118, 119, 123, 125], "yet": 15, "vdir": [15, 119], "happen": 15, "temperatur": [15, 24, 30, 37, 40, 43, 49, 66, 68, 92, 93, 94, 116, 119], "t_langevin": 15, "gamma_langevin": 15, "t_integr": 15, "steps_integr": [15, 119], "damp": [15, 119], "twice": [15, 93, 130], "stillinger_weber_prb_31_5262_si": [15, 18], "pc": 15, "velocitydistribut": 15, "maxwellboltzmanndistribut": 15, "fixedmasscriticaldamp": [15, 119], "slider": [15, 119], "slidewithnormalpressurecuboidcel": [15, 119], "set_constraint": [15, 102, 116], "temperature_k": 15, "momenta": [15, 116, 119], "otherwis": [15, 21, 79, 87, 89, 93, 116, 123, 135], "awai": [15, 92, 96], "set_calcul": [15, 41, 116], "integr": [15, 101, 119], "trajectori": [15, 20, 86, 87, 99], "track": 15, "height": [15, 16, 99], "shear": [15, 86, 89, 99, 102, 119], "etc": [15, 25, 87, 114, 123], "slidelog": [15, 119], "temp": 15, "middle_mask": [15, 119], "tdir": [15, 119], "fixcm": 15, "equilibrate_pressure_01": 15, "traj": [15, 20, 86, 88], "logger": [15, 26, 33, 82, 95, 119, 121], "log_handl": [15, 119], "log_equilibrate_01": 15, "encod": [15, 25, 41, 111], "utf": [15, 25, 41, 111], "buffer": [15, 51, 52, 53, 63, 87, 119, 123], "slidelogg": [15, 119], "write_head": [15, 119], "header": [15, 38, 110, 111, 119], "loadtxt": [15, 110], "bool": [15, 26, 30, 32, 37, 40, 43, 51, 52, 56, 58, 59, 63, 64, 66, 68, 69, 70, 87, 89, 93, 94, 95, 99, 102, 103, 105, 109, 110, 114, 116, 121, 123, 124, 125], "written": [15, 19, 70, 109, 119, 121, 123, 134], "equilibrate_pressure_02": 15, "step_offset": [15, 119], "log_equilibrate_02": 15, "p_c": [15, 119], "high": [15, 70, 92, 98], "frequenc": 15, "oscil": 15, "reset": [15, 30, 32, 37, 40, 43, 49, 51, 52, 60, 66, 68, 69, 102, 121], "get_veloc": [15, 116], "set_veloc": [15, 116], "analogi": 15, "autodamp": [15, 119], "slide_01": 15, "log_slide_01": 15, "docstr": [15, 92], "slide_02": 15, "log_slide_02": 15, "tmp_file": [15, 135], "except": [15, 25, 87, 95, 115, 116, 121, 123, 135], "filenotfounderror": [15, 135], "viewabl": 16, "sphinx": [16, 25], "insid": [16, 87, 94, 116, 123, 125], "to_jshtml": 16, "page": [16, 25, 127], "output_html": 16, "div": 16, "flex": 16, "justifi": 16, "gcf": 16, "tooltip_j": 16, "stage": [16, 135], "mousecontrol": 16, "hoverpick": 16, "pickingproxi": 16, "tooltip": 16, "innertext": 16, "atomnam": 16, "atom1": 16, "atom2": 16, "unitcel": [16, 70], "_remove_represent": 16, "radiustyp": [16, 135], "coval": [16, 135], "radiusscal": [16, 87, 135], "add_unitcel": 16, "update_spacefil": 16, "camera": 16, "orthograph": 16, "clipdist": 16, "_j": [16, 45], "kumagai": [17, 22, 50], "sum_": [18, 36, 37, 49, 95, 128, 131], "substack": [18, 37], "neq": [18, 37, 49], "u_2": [18, 87], "2_": 18, "u_": [18, 36, 37, 89], "xi_": 18, "xi": [18, 43, 45, 50, 95], "ik": [18, 45, 50, 113, 128], "jk": [18, 50, 113], "m\u00fcser": 18, "grie\u00dfer": 18, "On": [18, 99], "respect": [18, 37, 43, 70, 91, 99, 114, 116, 121, 123, 130], "freedom": [18, 89, 99, 116, 117, 119], "explicit": [18, 133], "represent": [18, 30, 37, 89, 116, 118, 123], "asi": [18, 132], "parametr": 18, "kumagai_comp_mat_sci_39_si": 18, "markdown": 18, "cohes": [18, 101], "born": [18, 30, 37, 40, 43, 49, 50, 66, 68, 70, 124], "elastic_moduli": [18, 89], "nonaffin": [18, 114], "born_const": [18, 30, 40, 43, 49, 66, 68], "isotrop": [18, 99], "nu": [18, 36, 37, 89, 99], "young": [18, 89, 99], "modulu": [18, 89, 99], "ey": [18, 113, 123], "170": 18, "212": 18, "tersoff": [18, 24, 48, 50], "brenner": [18, 48, 50], "lookup": 18, "erhart": 18, "alb": 18, "varvenn": [19, 36], "luqu": [19, 36], "n\u00f6hring": [19, 36], "curtin": [19, 36], "phy": [19, 28, 38, 66, 68, 87, 89, 117, 120], "rev": [19, 28, 38, 66, 120], "104201": [19, 36], "2016": [19, 36], "input_t": 19, "output_t": 19, "origin": [19, 62, 63, 64, 87, 89, 99, 116, 117, 118, 124], "whitespac": [19, 87], "list": [19, 25, 27, 28, 30, 32, 37, 40, 41, 43, 49, 51, 52, 53, 55, 56, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 87, 89, 91, 95, 99, 102, 103, 105, 108, 109, 110, 113, 116, 121, 123, 124, 125, 127, 129, 131, 133, 134, 135], "netcdf": 20, "gracefulli": [20, 121], "handl": [20, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 95, 102, 116, 119, 121, 130], "jump": [20, 87, 123], "nc": [20, 135], "posson_nernst_planck_solv": 21, "posson_nernst_planck_solver_fen": 21, "stericifi": 21, "execut": [21, 23, 25, 115], "drop": [21, 30, 37, 40, 43, 49, 66, 68, 89, 93, 94], "bc": [21, 93, 94, 99], "plain": 21, "npz": 21, "pipelin": 21, "stream": [21, 107], "regim": [21, 93], "implicitli": 21, "exclud": [21, 25, 105], "impos": 21, "stericnacl": 21, "sih": [22, 99], "pari": [22, 99], "irwin": [22, 99], "fract": [22, 101, 102], "mech": [22, 99, 101], "189": [22, 99], "1965": [22, 99], "stepwis": 22, "k_": 22, "textrm": [22, 128], "atomistica": [22, 24], "tersoffscr": [22, 24], "tersoff_prb_39_5566_si_c__scr": 22, "compute_elastic_const": 22, "1220": 22, "535": 22, "7326": 22, "front": 22, "bondlength": [22, 99], "bulk_nn": [22, 99], "nearest": [22, 87, 99, 102, 122, 123, 128], "nstep": 22, "tip_dx": 22, "zeros_lik": 22, "tip_dz": 22, "extxyz": [22, 134, 135], "dump": [22, 99, 109, 123], "1975": [22, 99], "screen": [22, 92, 111], "set_region": [22, 98], "kumagaiscr": 22, "429": 22, "elastic_symmetri": 22, "10000": [22, 24], "k0": [22, 50], "dk": 22, "max_step": [22, 99], "r_i": [22, 95, 98], "r_iii": [22, 98], "40": [22, 25, 87, 123], "ii": [22, 99], "iii": [22, 99], "iv": 22, "carv": [22, 51, 52, 63, 64], "circular": 22, "unstabl": 22, "equilibria": 22, "buze": 22, "kermod": [22, 25, 117], "2021": 22, "suitabl": [22, 99, 103, 123], "cli": 23, "prefix": [23, 25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 109, 121], "resid": 23, "queri": 23, "programmat": [23, 126, 127], "has_paramet": [23, 26], "echo": 23, "whether": [23, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 99, 102, 103, 116, 121, 123, 124, 125], "rm": 23, "overview": 23, "quench": [23, 126, 127], "liquid": [24, 92], "t1": [24, 95], "exponenti": [24, 64], "t2": 24, "present": [24, 25, 26, 38, 99, 105, 109, 116, 134], "kb": 24, "stoichiometri": 24, "4096c": 24, "densit": 24, "dt1": 24, "dt2": 24, "tau1": 24, "5e3": 24, "tau2": 24, "down": [24, 70, 99], "teq": 24, "50e3": 24, "equlibr": 24, "durat": 24, "tqu": 24, "20e3": 24, "quick_calc": 24, "computation": 24, "quickstart": 25, "sun": 25, "2015": 25, "execfil": 25, "dir": 25, "autogener": 25, "comment": [25, 38, 109], "serv": 25, "sy": [25, 38, 85, 123, 135], "readthedoc": 25, "mock": 25, "mock_modul": 25, "mod_nam": 25, "autodoc": 25, "root": [25, 40, 126, 127], "abspath": 25, "absolut": [25, 43, 46, 47, 70, 89, 93, 94, 113, 118], "insert": [25, 30, 37, 68, 69, 102, 116, 121, 123], "needs_sphinx": 25, "string": [25, 30, 37, 38, 40, 43, 49, 66, 68, 70, 87, 89, 93, 110, 111, 113, 116, 123, 124, 125, 130], "ext": 25, "custom": [25, 30, 37, 40, 43, 49, 66, 68, 89, 116], "napoleon": 25, "autosummari": 25, "mathjax": 25, "myst_nb": 25, "numpydoc": 25, "sphinx_copybutton": 25, "sphinxcontrib": 25, "spell": 25, "templat": 25, "templates_path": 25, "_templat": 25, "suffix": 25, "sourc": [25, 36, 38], "source_suffix": 25, "rst": [25, 123], "source_encod": 25, "sig": 25, "master": 25, "toctre": 25, "master_doc": 25, "project": [25, 30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "copyright": [25, 77, 78, 79, 92, 93, 94, 95], "2023": 25, "jame": 25, "lar": 25, "info": [25, 87, 95, 99], "act": [25, 37, 116, 123], "releas": [25, 99, 101], "variou": [25, 123], "throughout": [25, 51, 52], "devel": 25, "rc": [25, 40, 66, 102], "tag": [25, 116], "languag": 25, "todai": 25, "today_fmt": 25, "strftime": 25, "pattern": [25, 89], "exclude_pattern": 25, "_build": 25, "condition": 25, "modulenotfounderror": 25, "electrochemistry_2": 25, "rest": [25, 63, 123], "markup": 25, "default_rol": 25, "func": [25, 41, 70, 91, 93, 94, 95, 107], "add_function_parenthes": 25, "prepend": 25, "descript": [25, 87, 93, 94, 109, 111, 123, 134], "titl": 25, "add_module_nam": 25, "sectionauthor": 25, "moduleauthor": 25, "show_author": 25, "pygment": 25, "syntax": [25, 123], "highlight": 25, "pygments_styl": 25, "modindex_common_prefix": 25, "paragraph": 25, "keep_warn": 25, "theme": 25, "builtin": [25, 87, 123], "html_theme": 25, "sphinx_rtd_them": 25, "feel": 25, "html_theme_opt": 25, "html_theme_path": 25, "html_titl": 25, "shorter": [25, 27, 122], "navig": 25, "html_short_titl": 25, "sidebar": 25, "html_logo": 25, "favicon": 25, "window": 25, "icon": 25, "ico": 25, "being": [25, 55, 70, 96, 119, 123, 124], "16x16": 25, "32x32": 25, "pixel": 25, "html_favicon": 25, "sheet": 25, "css": 25, "overwrit": [25, 116], "html_static_path": 25, "_static": 25, "robot": 25, "htaccess": 25, "html_extra_path": 25, "timestamp": 25, "html_last_updated_fmt": 25, "smartyp": 25, "quot": 25, "dash": [25, 99], "typograph": 25, "entiti": 25, "html_use_smartyp": 25, "html_sidebar": 25, "html_additional_pag": 25, "html_domain_indic": 25, "html_use_index": 25, "letter": [25, 123], "html_split_index": 25, "html_show_sourcelink": 25, "footer": 25, "html_show_sphinx": 25, "html_show_copyright": 25, "opensearch": 25, "url": 25, "html_use_opensearch": 25, "xhtml": 25, "html_file_suffix": 25, "htmlhelp_basenam": 25, "matscipydoc": 25, "latex_el": 25, "letterpap": 25, "a4pap": 25, "papers": 25, "font": 25, "10pt": 25, "11pt": 25, "12pt": 25, "pointsiz": 25, "stuff": [25, 92], "preambl": 25, "tree": 25, "tupl": [25, 87, 95, 110, 113, 116, 123, 130], "author": [25, 77, 78, 79, 92, 93, 94, 95], "documentclass": 25, "howto": 25, "manual": [25, 87, 93, 134], "latex_docu": 25, "tex": 25, "latex_logo": 25, "toplevel": 25, "head": 25, "chapter": [25, 87], "latex_use_part": 25, "latex_show_pageref": 25, "address": [25, 121], "latex_show_url": 25, "appendix": 25, "latex_appendic": 25, "latex_domain_indic": 25, "man_pag": 25, "man_show_url": 25, "texinfo": 25, "menu": 25, "categori": 25, "texinfo_docu": 25, "miscellan": 25, "texinfo_appendic": 25, "texinfo_domain_indic": 25, "footnot": 25, "inlin": [25, 128, 131, 132], "texinfo_show_url": 25, "detailmenu": 25, "node": [25, 121], "texinfo_no_detailmenu": 25, "rais": [25, 30, 32, 37, 38, 40, 43, 49, 51, 52, 59, 66, 68, 69, 87, 102, 109, 116, 119, 121, 123, 125, 135], "fail": [25, 95, 123], "timeout": [25, 121], "nb_execution_raise_on_error": 25, "autodoc_default_opt": 25, "member": [25, 32, 130], "bysourc": 25, "undoc": 25, "myst_enable_extens": 25, "dollarmath": 25, "colon_f": 25, "mystnb": 25, "jupytext": 25, "properli": [25, 32, 123], "percent": 25, "en": [25, 70, 125], "latest": 25, "ipynb": [25, 119], "myst": 25, "nb": [25, 38], "nb_custom_format": 25, "fmt": [25, 121], "spelling_lang": 25, "en_u": 25, "spelling_show_suggest": 25, "str": [26, 30, 32, 36, 37, 40, 43, 49, 51, 52, 63, 64, 66, 68, 69, 87, 89, 94, 95, 99, 102, 103, 107, 108, 109, 110, 113, 116, 121, 123, 125], "Will": 26, "nbin": [27, 128], "array_lik": [27, 30, 36, 37, 38, 40, 43, 49, 66, 68, 70, 89, 99, 101, 105, 108, 113, 115, 124], "2_min": 28, "falk": 28, "langer": 28, "7192": 28, "1998": 28, "get_xij": 28, "nat": [28, 113], "i_now": 28, "dr_now": 28, "dr_old": 28, "x_": 28, "get_yij": 28, "y_": 28, "array_invers": 28, "invers": [28, 30, 37, 40, 43, 49, 66, 68, 89, 123], "matric": [28, 118, 130], "faster": [28, 110, 123], "inv": [28, 89], "get_delta_plus_epsilon_dgesv": 28, "delta_ij": 28, "epsilon_ij": 28, "get_delta_plus_epsilon": 28, "get_d_square_min": 28, "atoms_now": 28, "atoms_old": 28, "j_now": 28, "delta_plus_epsilon": 28, "matscipycalcul": [30, 37, 43, 49, 66, 68], "ignore_bad_restart_fil": [30, 32, 37, 43, 68, 69, 102, 121], "daughter": 30, "hessian": [30, 37, 40, 43, 45, 49, 50, 66, 68, 70, 89, 104, 114, 118], "dynamical_matrix": [30, 40, 43, 49, 66, 68], "nonaffine_forc": [30, 40, 43, 49, 66, 68], "stress_elastic_contribut": [30, 40, 66, 68], "birch_coeffici": [30, 40, 43, 49, 66, 68], "nonaffine_elastic_contribut": [30, 37, 40, 43, 49, 66, 68, 89], "perspect": 30, "sumcalcul": 30, "calculation_requir": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "export_properti": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "get_atom": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "get_charg": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121, 135], "get_default_paramet": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "get_dipole_mo": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121], "get_magnetic_mo": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121], "get_stress": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 99, 102, 116, 121], "read_atom": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "todict": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121], "system_chang": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "dipol": [30, 37, 68, 69, 87, 102, 116, 121], "magmom": [30, 37, 68, 69, 102, 116, 121], "six": [30, 37, 68, 69, 102, 116, 121], "initial_charg": [30, 32, 37, 68, 69, 102, 116, 121], "initial_magmom": [30, 32, 37, 68, 69, 102, 116, 121], "dictionari": [30, 32, 37, 40, 41, 43, 49, 51, 52, 59, 64, 66, 68, 69, 87, 89, 99, 102, 109, 110, 113, 116, 121, 123], "dummi": [30, 37, 68, 69, 102, 121], "self": [30, 32, 37, 40, 43, 49, 51, 52, 60, 62, 63, 64, 66, 68, 69, 70, 87, 94, 99, 102, 103, 116, 118, 121, 123], "miss": [30, 32, 37, 43, 68, 69, 87, 99, 102, 121, 123, 135], "get_dynamical_matrix": [30, 37, 40, 43, 49, 66, 68], "weight": [30, 36, 37, 38, 40, 43, 49, 66, 68, 113, 115], "get_hessian": [30, 37, 40, 43, 49, 66, 68], "spars": [30, 37, 40, 43, 49, 66, 68, 89, 113, 118, 130], "divide_by_mass": [30, 37, 40, 43, 49, 66, 68], "symmetr": [30, 37, 43, 66, 68, 116], "hermitian": [30, 37, 43, 66, 68], "block": [30, 37, 43, 66, 68, 109, 113, 121, 123], "global": [30, 33, 37, 40, 43, 49, 59, 66, 68, 87, 89, 104, 109, 113, 114, 116], "minima": [30, 37, 40, 43, 49, 66, 68, 89, 104, 114], "divid": [30, 37, 68, 99, 116, 123], "m_i": [30, 37], "m_j": [30, 37], "bsr_matrix": [30, 37, 43, 113], "hessian_ncc": [30, 37], "ndarrai": [30, 37, 87, 91, 92, 93, 94, 95, 112, 113, 115, 116, 119, 123], "distances_nc": [30, 37], "get_born_elastic_const": [30, 37, 40, 43, 49, 66, 68], "get_stress_contribution_to_elastic_const": [30, 37, 40, 43, 49, 66, 68], "cauchi": [30, 37, 40, 43, 49, 66, 68, 70, 124], "get_birch_coeffici": [30, 37, 40, 43, 49, 66, 68], "birch": [30, 37, 40, 43, 49, 66, 68], "get_nonaffine_forc": [30, 37, 40, 43, 49, 66, 68], "cg_paramet": [30, 37, 40, 43, 49, 66, 68, 89], "x0": [30, 37, 40, 43, 49, 66, 68, 87, 89, 93, 94, 95, 99, 117], "contribut": [30, 36, 37, 40, 43, 49, 66, 68, 89, 99, 116, 130], "dict": [30, 32, 37, 40, 41, 43, 49, 51, 52, 59, 66, 68, 69, 87, 89, 95, 99, 102, 103, 109, 110, 113, 116, 121], "dictonari": [30, 37, 40, 43, 49, 66, 68, 89], "conjug": [30, 37, 40, 43, 49, 66, 68, 89, 123], "even": [30, 37, 40, 43, 49, 66, 68, 87, 89, 116, 123], "linearoper": [30, 37, 40, 43, 49, 66, 68, 89], "get_non_affine_contribution_to_elastic_const": [30, 37, 40, 43, 49, 66, 68], "eigenvalu": [30, 37, 40, 43, 49, 66, 68, 89, 116], "eigenvector": [30, 37, 40, 43, 49, 66, 68, 89], "pc_paramet": [30, 37, 40, 43, 49, 66, 68, 89], "occur": [30, 37, 40, 43, 49, 66, 68, 88, 89, 123, 125, 130], "bypass": [30, 37, 40, 43, 49, 66, 68, 89, 123], "cg": [30, 37, 40, 43, 49, 66, 68, 89, 95, 135], "ascend": [30, 37, 40, 43, 49, 66, 68, 89, 113], "incomplet": [30, 37, 40, 43, 49, 66, 68, 89], "lu": [30, 37, 40, 43, 49, 66, 68, 89], "decomposit": [30, 37, 40, 43, 49, 66, 68, 70, 89], "drop_tol": [30, 37, 40, 43, 49, 66, 68, 89], "fill_factor": [30, 37, 40, 43, 49, 66, 68, 89], "ratio": [30, 37, 40, 43, 49, 66, 68, 89, 99], "bound": [30, 37, 40, 43, 49, 66, 68, 89, 95], "drop_rul": [30, 37, 40, 43, 49, 66, 68, 89], "comma": [30, 37, 40, 43, 49, 66, 68, 89], "rule": [30, 37, 40, 43, 48, 49, 66, 68, 89], "permc_spec": [30, 37, 40, 43, 49, 66, 68, 89], "permut": [30, 37, 40, 43, 49, 66, 68, 70, 89, 116, 123, 124], "column": [30, 37, 40, 43, 49, 64, 66, 68, 70, 87, 89, 93, 107, 109, 110, 123, 134], "sparsiti": [30, 37, 40, 43, 49, 66, 68, 89], "diag_pivot_thresh": [30, 37, 40, 43, 49, 66, 68, 89], "threshold": [30, 37, 40, 43, 49, 51, 52, 63, 64, 66, 68, 89], "pivot": [30, 37, 40, 43, 49, 66, 68, 89], "expert": [30, 37, 40, 43, 49, 66, 68, 89], "supernod": [30, 37, 40, 43, 49, 66, 68, 89], "panel_s": [30, 37, 40, 43, 49, 66, 68, 89], "panel": [30, 37, 40, 43, 49, 66, 68, 89], "superlu": [30, 37, 40, 43, 49, 66, 68, 89], "get_numerical_non_affine_forc": [30, 37, 40, 43, 49, 66, 68], "numerical_nonaffine_forc": [30, 37, 40, 43, 49, 66, 68, 114], "rescal": [30, 37, 40, 43, 49, 66, 68, 99, 114], "broken": [30, 32, 37, 43, 68, 69, 99, 102, 121], "purepath": [30, 32, 37, 43, 68, 69, 102, 121], "Not": [30, 32, 37, 43, 68, 69, 102, 121], "band_structur": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "band": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "calculate_numerical_forc": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "calculate_numerical_stress": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "calculate_properti": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "check_stat": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "default_paramet": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "discard_results_on_any_chang": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "purg": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "magnet": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121], "moment": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121], "force_consist": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121], "allow_calcul": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "ignored_chang": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "cach": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 87, 102, 121], "implemented_properti": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "readerror": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "corrupt": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "succ": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "fileiocalcul": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "read_result": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "classmethod": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 116, 121, 123], "old": [30, 32, 37, 40, 43, 49, 51, 52, 64, 66, 68, 69, 102, 121], "key1": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "value1": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "key2": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "value2": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "chaneg": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "decid": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121, 124], "harmless": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "keyword": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 70, 87, 102, 103, 110, 116, 121, 123], "set_label": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "abc": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 113, 121], "dir1": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "skip_default": [30, 32, 37, 40, 43, 49, 51, 52, 66, 68, 69, 102, 121], "committeeuncertainti": 32, "train": 32, "uncertainti": 32, "deviat": [32, 116, 123], "public": [32, 123], "musil": 32, "906": 32, "915": 32, "2019": [32, 77, 78, 92, 93, 94, 117], "pub": 32, "ac": [32, 128, 131], "1021": 32, "jctc": 32, "8b00959": 32, "varianc": [32, 122, 123], "committeememb": 32, "calibr": 32, "calibrated_for": 32, "id_count": 32, "counter": 32, "id_to_atom": 32, "id": [32, 104, 107, 109, 112, 113, 114, 134, 135], "validation_set": 32, "add_memb": 32, "set_internal_validation_set": 32, "appearance_threshold": 32, "prop": [32, 40], "locat": [32, 33, 102, 123], "is_calibrated_for": 32, "scale_uncertainti": 32, "training_data": 32, "lightweight": 32, "set_training_data": 32, "is_sample_in_atom": 32, "create_logg": 33, "level": [33, 51, 52, 63, 70, 87, 117, 123], "log_fil": 33, "formatt": 33, "handler": 33, "set_log": 33, "subsampl": 34, "output_fil": 34, "num_subset": 34, "num_subset_sampl": 34, "keep_isolated_atom": 34, "draw": [34, 91, 103], "average_potenti": 36, "avg_atom": 36, "999": 36, "crystal_structur": [36, 38], "unknown": [36, 135], "lattice_const": [36, 38], "fictiou": 36, "tabul": [36, 38, 110], "phi_": [36, 37], "aa": [36, 109, 116], "r_": [36, 37, 45, 50, 128, 131], "n_t": 36, "xy": [36, 87, 99, 116], "rho_": [36, 37], "g_a": 36, "c_x": 36, "g_x": 36, "m_a": 36, "m_x": 36, "straightforward": 36, "eamparamet": [36, 38], "new_f": 36, "new_rep": 36, "read_eam": [36, 38], "new_paramet": 36, "join": [36, 64], "rstrip": 36, "write_eam": [36, 38], "equicomposit": 36, "review": 36, "rho_nu": [36, 37], "g_": [36, 37], "equiv": [36, 37, 123], "m_": [36, 37], "fn": [37, 108, 110], "free_energi": [37, 40, 43, 49, 66, 68, 102], "energy_virial_and_forc": 37, "atomic_numbers_i": 37, "i_n": [37, 113], "j_n": [37, 113], "dr_nc": [37, 113], "abs_dr_n": [37, 113], "virial": [37, 101], "abd_dr_n": 37, "epot": [37, 101], "virial_v": 37, "forces_": 37, "calculate_hessian_matrix": 37, "mathcal": 37, "emb": 37, "delta_": [37, 45], "eight": 37, "t_1": 37, "t_2": 37, "t_3": 37, "t_4": 37, "t_5": 37, "t_6": 37, "t_7": 37, "t_8": 37, "row": [37, 70, 87, 93, 113, 119, 123, 124], "nonzero": [37, 123], "atomic_mass": 38, "number_of_density_grid_point": 38, "number_of_distance_grid_point": 38, "density_grid_spac": 38, "distance_grid_spac": 38, "cover": [38, 123], "empti": [38, 55, 87, 93, 109, 113, 116, 123], "metal": [38, 92, 109, 116], "occurr": 38, "maxsiz": [38, 68], "valueerror": [38, 59, 87, 123], "eam_fil": 38, "differnt": 38, "flavor": 38, "storag": [38, 123], "subset": [38, 101], "sandia": 38, "gov": 38, "pair_eam": 38, "dynamo": 38, "funcfl": 38, "setfl": 38, "mix_eam": 38, "rep_ab": 38, "interspeci": 38, "kinf": 38, "arithmet": [38, 123], "ponder": 38, "fb": 38, "fa": [38, 123], "rep_a": 38, "rep_b": 38, "pars": [38, 123], "karg": 38, "fine": [38, 123], "tune": 38, "alpha_a": 38, "alpha_b": 38, "f_ab": 38, "beta_00": 38, "beta_01": 38, "f_ba": 38, "beta_10": 38, "beta_11": 38, "parameters_mix": 38, "f_": [38, 128], "rep_": 38, "zhou": 38, "johnson": 38, "wadlei": 38, "69": 38, "144113": 38, "2004": [38, 102], "out_fil": 38, "summat": 40, "ewaldshortrang": 40, "cutoffinteract": [40, 66], "first_deriv": [40, 66, 68], "qi": [40, 66], "qj": [40, 66], "second_deriv": [40, 66, 68], "get_cutoff": [40, 43, 66, 68], "ewal": 40, "short_rang": 40, "accuraci": [40, 89], "kspace": 40, "determine_alpha": 40, "acc": 40, "determin": [40, 70, 87, 89, 99, 113, 123, 125, 128], "adopt": 40, "determine_nk": 40, "natom": [40, 53, 56, 64, 70, 124], "maxim": [40, 68], "reciproc": [40, 116], "determine_kc": 40, "nk": 40, "integ": [40, 70, 87, 99, 116, 123, 125], "triplet": [40, 43, 45, 49, 113], "rms_kspace": 40, "km": 40, "q2": 40, "rms_rspace": 40, "allowed_wave_vector": 40, "prefactor": [40, 130], "self_energi": 40, "kspace_energi": 40, "po": [40, 87, 100, 109, 134], "first_derivative_kspac": 40, "stress_kspac": 40, "coulomb": [40, 109, 116], "reset_kspac": 40, "kspace_properti": 40, "recirproc": 40, "contributiom": 40, "naforc": 40, "hidden": 41, "distinguish": 41, "range_map": 41, "get_const": 41, "get_deriv": 41, "get_dict": 41, "get_lower_bound": 41, "get_upper_bound": 41, "get_vari": 41, "in_rang": 41, "set_arrai": [41, 116, 135], "set_const": 41, "set_deriv": 41, "set_dict": 41, "set_range_deriv": 41, "set_vari": 41, "par": 41, "cost_histori": 41, "minimal_cost": 41, "par_at_minimal_cost": 41, "residuals_histori": 41, "get_cohesive_energi": 41, "get_cost_funct": 41, "get_cost_histori": 41, "get_parameters_at_minimal_cost": 41, "get_residuals_histori": 41, "get_square_residu": 41, "optimize_ann": 41, "optimize_brut": 41, "optimize_leastsq": 41, "optimize_openopt": 41, "set_calculator_class": 41, "set_paramet": 41, "set_parameters_from_arrai": 41, "store_histori": 41, "_io": [41, 111], "textiowrapp": [41, 111], "stdout": [41, 111, 116], "interalg": 41, "combinedfit": 41, "get_residu": 41, "rotatingfit": 41, "penalti": [41, 95], "fitsinglepoint": 41, "w_energi": 41, "w_forc": 41, "w_stress": 41, "fitdim": 41, "d0": 41, "w_d0": 41, "w_r0": 41, "get_dist": [41, 112, 116], "new_dim": 41, "ground": 41, "fitcubiccryst": 41, "ec": 41, "cp": 41, "sfe": 41, "w_ec": 41, "w_a0": 41, "w_b": 41, "w_c11": 41, "w_c12": 41, "w_c44": 41, "w_cp": 41, "w_sfe": 41, "ep": [41, 92, 93, 94, 95, 100, 116], "ecoh_ref": 41, "get_c11": 41, "get_c44": 41, "get_cp": 41, "get_sf": 41, "get_lattice_const": [41, 87], "new_bulk": 41, "fittetragonalcryst": 41, "c0": [41, 94, 116], "c_a": 41, "w_c0": 41, "w_c_a": 41, "w_c13": 41, "w_c33": 41, "w_c66": 41, "get_c33": 41, "get_c66": 41, "get_d1": 41, "get_d2": 41, "get_d4": 41, "fithexagonalcryst": 41, "fitsurfac": 41, "esurf": 41, "w_esurf": 41, "get_surface_energi": [41, 103], "fitsc": 41, "crystalstr": 41, "fitbcc": 41, "fitfcc": 41, "fitb2": 41, "b2": 41, "fitl1_0": 41, "l1_0": 41, "fitl1_2": 41, "l1_2": 41, "fitdiamond": 41, "dia": 41, "fitgraphit": 41, "gra": 41, "fitgraphen": 41, "grp": 41, "fitdiamond100": 41, "new_surfac": 41, "surfstr": 41, "fitdiamond110": 41, "fitdiamond111": 41, "atom_typ": [43, 113], "pair_typ": [43, 113], "d1f": 43, "d2f": 43, "d11f": 43, "d22f": 43, "d12f": 43, "d1g": 43, "d11g": 43, "d2g": 43, "d22g": 43, "d12g": 43, "neighbourhood": [43, 49, 113], "get_second_deriv": 43, "drda_pc": 43, "drdb_pc": 43, "i_p": [43, 113], "j_p": [43, 113], "r_p": [43, 50, 113], "r_pc": 43, "get_hessian_from_second_deriv": 43, "get_non_affine_forces_from_second_deriv": 43, "nicemanybodi": 43, "nicer": 43, "r_ij": [43, 100], "r_ik": 43, "ij_typ": 43, "ik_typ": 43, "init": [43, 87, 93, 94], "zeropair": [45, 50], "zerotriplet": 45, "harmonicbond": 45, "atyp": 45, "ptype": 45, "spring": [45, 66, 109, 116], "harmonicangl": [45, 50], "mic": [45, 113, 116], "redefin": 45, "r_ij_c": 45, "r_ik_c": 45, "v_i": 45, "_i": 45, "w_i": 45, "scalar": [45, 123], "reader": [45, 119], "u_j": 45, "v_j": 45, "care": [45, 86, 113], "treatment": [45, 51, 52], "pair_index": 48, "maxval": 48, "triplet_index": 48, "mix_arithmet": 48, "mix_geometr": 48, "abel": 48, "definit": [49, 50, 109, 116, 134], "theta": [49, 50, 99, 116, 128], "sum_xx_sum_ijk_tau_xx_mn": 49, "sum_xy_sum_ijk_tau_xy_mn": 49, "sum_x_sum_ijk_tau_ijx_mn": 49, "sum_x_sum_ijk_tau_ij_xor_x_mn": 49, "sum_ijk_tau_xy_mn": 49, "\u0278": 49, "r\u1d62\u2c7c\u00b2": [49, 50], "\u03be\u1d62\u2c7c": [49, 50], "rsq_p": [49, 50], "xi_p": [49, 50], "\u2081\u0278": [49, 50], "\u2082\u0278": [49, 50], "\u2081\u2081\u0278": [49, 50], "\u2082\u2082\u0278": [49, 50], "\u2081\u2082\u0278": [49, 50], "\u03b8": 49, "r\u1d62\u2096\u00b2": [49, 50], "r\u2c7c\u2096\u00b2": [49, 50], "r1_p": 49, "r2_p": 49, "r3_p": 49, "\u2081\u03b8": [49, 50], "\u2082\u03b8": [49, 50], "\u2083\u03b8": [49, 50], "\u2081\u2081\u03b8": [49, 50], "\u2082\u2082\u03b8": [49, 50], "\u2083\u2083\u03b8": [49, 50], "\u2082\u2083\u03b8": [49, 50], "\u2081\u2083\u03b8": [49, 50], "\u2081\u2082\u03b8": [49, 50], "sum_ij_pi_ij_n": 49, "values_p": 49, "pi_": 49, "chi_": 49, "sum_ij_sum_x_pi_x_n": 49, "values_tq": 49, "chi_x": 49, "tr_p": 49, "values_t": 49, "values_txi": 49, "values_tx": 49, "distance_defin": 50, "decor": 50, "transform": [50, 116, 122, 125], "angle_distance_defin": 50, "zeroangl": 50, "r1": [50, 101], "r2": [50, 101], "r3": 50, "harmonicpair": 50, "harmon": [50, 109, 116], "theta0": 50, "5707963267948966": 50, "rij": 50, "rik": [50, 95], "rjk": 50, "lennardjon": 50, "inf": [50, 99, 117, 118], "bornmayercut": 50, "mayer": 50, "stillingerweberpair": 50, "stillingerweberangl": 50, "kumagaipair": 50, "kumagaiangl": 50, "tersoffbrennerpair": 50, "tersoffbrennerangl": 50, "symphi": 50, "energy_express": 50, "expr": 50, "sympi": 50, "symtheta": 50, "r1_t": 50, "r2_t": 50, "r3_t": 50, "multiclusterforcemixingpotenti": [51, 52], "classical_calcul": [51, 52], "qm_calcul": [51, 52], "qm_cluster": [51, 52], "forced_qm_list": [51, 52], "change_bond": [51, 52], "calculate_error": [51, 52], "calculation_always_requir": [51, 52], "buffer_hop": [51, 52, 60, 63], "enable_check_st": [51, 52], "qm": [51, 52, 53, 60, 62, 63, 64, 87, 121], "instac": [51, 52], "forcemixingpotenti": [51, 52], "potential_energi": [51, 52, 60, 64], "all_chang": [51, 52], "power": [51, 52, 68, 99], "mm_pot": [51, 52], "ae": [51, 52], "flag": [51, 52, 64, 87, 94, 95, 107, 116, 123], "topologi": [51, 52, 113, 127], "hop": [51, 52, 63, 64], "noth": [51, 52], "meth": [51, 52], "emploi": [51, 52], "analyz": [51, 52], "independ": [51, 52, 116, 123], "send": [51, 52], "qmmm": [51, 52, 55, 87], "accur": [51, 52], "produce_classical_result": [51, 52], "ot": [51, 52, 53, 56, 63, 64], "produce_qm_clust": [51, 52], "evaluate_qm_cluster_seri": [51, 52], "clusternumb": [51, 52], "qm_atom": [51, 52], "mark": [51, 52, 53, 94, 95, 99, 121], "cluster_data": [51, 52], "combine_qm_mm_forc": [51, 52], "cluster_data_list": [51, 52], "clusterdata": [51, 52, 53, 55], "attach_hybrid_data": [51, 52], "full_qm_atoms_mask": [51, 52], "quantm": [51, 52], "mmechan": [51, 52], "comprehens": [51, 52], "ooutput": [51, 52], "evaluate_error": [51, 52], "heavy_onli": [51, 52], "r_forc": [51, 52], "hybrid": [51, 52], "hydrogen": [51, 52, 53, 62, 63, 64, 87, 130, 134], "set_qm_atom": [51, 52], "qm_list": [51, 52, 53], "certian": [51, 52], "compute_stress": [51, 52], "viral": [51, 52], "theorem": [51, 52], "print_messag": [51, 52, 63], "inner": [53, 63, 125], "get_cluster_data": 55, "mcfm_pot": 55, "multiclusterforcemix": 55, "worker_populate_cluster_data": 56, "rank": 56, "nprocloc": 56, "atomic_clust": [56, 63], "clusterindex": 56, "qmcalcul": 56, "sharedlist": 56, "debug_qm_calcul": 56, "calcuat": 56, "tb": 56, "cpu": 56, "stuctur": 56, "mp": 56, "debug": [56, 116, 117], "neighbourlistbas": [58, 59], "sure": [58, 59, 93, 94, 109, 123], "date": [58, 59], "clled": [58, 59], "sucesful": [58, 59], "get_neighbour": [58, 59], "neighbourlistmcfm": 59, "skin": 59, "hysteretic_break_factor": 59, "wrapper": [59, 70, 87, 118], "aroud": 59, "neighbour_list": [59, 60, 62, 63, 64, 87, 99, 113, 128, 130, 131, 135], "search": [59, 99, 109, 113, 120, 125, 127, 132, 134], "rebuild": [59, 116], "do_upd": 59, "pairwis": [59, 68, 95, 116], "runtimeerror": [59, 87, 109, 116, 121, 123, 125], "qmcluster": [60, 62, 63, 64], "special_atoms_list": [60, 64], "manag": [60, 62, 63, 64], "attach_neighbour_list": 60, "attach_flagging_modul": 60, "qmflaggingtool": [60, 64], "attach_clustering_modul": 60, "qmclusteringtool": [60, 63], "reset_energized_list": 60, "old_energized_atom": 60, "flaggingmodul": 60, "warmup": 60, "update_qm_region": [60, 64], "flagging_modul": 60, "carve_clust": [60, 63], "clustering_modul": 60, "core_qm_list": [60, 63], "baseqmclustertool": [62, 63, 64], "mediat": [62, 63, 64], "find_neighbour": [62, 63, 64], "heavy_neighbour": [62, 63, 64], "hydrogen_neighbour": [62, 63, 64], "hydrogenate_clust": [62, 63, 64], "neigobur": [62, 63, 64], "compos": [62, 63, 64, 70, 124], "heavi": [62, 63, 64], "oper": [62, 63, 64, 70, 103, 123], "struct": [62, 63, 64, 135], "dangl": [62, 63, 64], "double_bonded_atoms_list": 63, "doubli": 63, "create_buffer_region": 63, "qm_atoms_list": 63, "whole": [63, 64], "expand": 63, "buffer_list": 63, "terminal_atom": 63, "verg": 63, "cutoff_atoms_list": 63, "hydrogenate_dangling_bond": 63, "terminal_atoms_list": 63, "replace_single_bond": 63, "terminal_atom_index": 63, "cutoff_atom_index": 63, "atomic_posit": 63, "replace_double_bond": 63, "include_special_atom": 63, "specialatomindex": 63, "molecul": [63, 107, 109, 113, 116, 130, 134, 135], "regio": [63, 64], "complete_aromatic_r": 63, "total_supplementary_terminal_atom": 63, "aromat": 63, "ring": [63, 127, 129], "aromnat": 63, "create_cluster_from_mark": 63, "select_list": 63, "mesag": 63, "qm_flag_potential_energi": 64, "small_cluster_hop": 64, "only_heavi": 64, "ema_paramet": 64, "energy_cap": 64, "energy_increas": 64, "threshhold": 64, "indivu": 64, "diension": 64, "enter": 64, "stai": 64, "expans": [64, 70], "cap": [64, 87], "convininec": 64, "get_energized_list": 64, "data_arrai": 64, "property_str": 64, "hysteretic_toler": 64, "create_cluster_around_atom": 64, "atom_id": 64, "join_clust": 64, "expand_clust": 64, "exponential_moving_averag": 64, "oldset": 64, "newset": 64, "update_avg_property_per_atom": 64, "avarag": 64, "lennardjonesquadrat": 66, "soft": [66, 87], "lennardjoneslinear": 66, "feneljcut": 66, "fene": 66, "bead": 66, "polym": 66, "lj": [66, 109, 116, 135], "contin": 66, "lennardjones84": 66, "c1": [66, 109, 116, 117, 134, 135], "c2": [66, 116, 117, 135], "c3": [66, 116, 135], "c4": [66, 135], "cuzr": 66, "kobayashi": 66, "shinji": 66, "cu57zr43": 66, "societi": 66, "japan": 66, "48": [66, 79, 123], "1980": 66, "1147": 66, "1152": 66, "beestkramersanten": 66, "beest": 66, "kramer": 66, "van": 66, "santen": 66, "bk": 66, "buckingham": 66, "lett": [66, 119], "1990": 66, "seamless": [66, 68], "86": [66, 68], "075459": [66, 68], "2012": [66, 68], "inversepowerlawpotenti": 68, "q": [68, 101], "minsiz": 68, "smooth": 68, "law": [68, 99], "ipl": 68, "repuls": 68, "expon": 68, "distribtuion": 68, "paramt": 68, "lerner": 68, "522": 68, "119570": 68, "mix_siz": 68, "isiz": 68, "jsize": 68, "nonaddit": 68, "get_coeff": 68, "get_maxs": 68, "get_mins": 68, "ijsiz": 68, "m_l": 68, "m_m": 68, "supercellcalcul": 69, "regressionmodel": 70, "regress": [70, 89], "lstsq": 70, "predict": [70, 87], "2d": [70, 87, 99, 119, 123, 124, 125], "predict_gradi": 70, "grad_phi": 70, "cb_model": 70, "cubiccauchyborn": [70, 124], "diamondfactori": 70, "corrector": [70, 99], "subject": 70, "exploit": 70, "triad": 70, "possess": [70, 123], "get_model": 70, "set_model": 70, "constitut": [70, 93, 94, 130], "set_sublattic": [70, 124], "read_from_atom": [70, 124], "belong": 70, "unstrain": [70, 99], "trust": 70, "lattice1mask": [70, 124], "lattice2mask": [70, 124], "seper": [70, 99], "3x3": [70, 87, 89, 101, 113, 116, 123], "normalis": [70, 123, 125], "lab": [70, 124], "switch_sublattic": [70, 98], "switch": [70, 87, 124], "fit_taylor": 70, "de": [70, 77, 78, 79, 87, 92, 93, 94, 95, 99, 113], "taylor": 70, "grad_f": 70, "hess_f": 70, "wors": 70, "initial_regression_fit": 70, "save_taylor": 70, "readabl": [70, 134, 135], "load_taylor": 70, "tensor_field_3d_from_atom": 70, "cart3d": 70, "sit": [70, 102], "anyth": 70, "ndim": [70, 87, 123], "cartesian": [70, 87, 99, 105, 116], "cylind2d": 70, "cylind3d": 70, "spheric": 70, "cart2d": 70, "field3d": 70, "evaluate_f_or_": 70, "f_func": 70, "e_func": 70, "lagrang": [70, 93, 94], "polar": 70, "ru": 70, "wikipedia": [70, 125], "wiki": [70, 125], "finite_strain_theori": 70, "polar_decomposition_of_the_deformation_gradient_tensor": 70, "evaluate_f": 70, "evaluate_": 70, "predict_shift": 70, "strain_vec": 70, "perm_shift": 70, "permeut": 70, "fed": [70, 87, 103], "240": 70, "strain_vec_perm": 70, "evaluate_shift_model": 70, "apply_shift": 70, "get_cb_error": 70, "poor": 70, "quantif": 70, "minimis": [70, 87], "cb_err": 70, "initial_sampl": 70, "latin": 70, "hypercub": 70, "check_for_refit": 70, "refit_point": 70, "err_vec": 70, "refit": 70, "metric": [70, 95], "dataset": [70, 107], "highest": 70, "criteria": 70, "took": 70, "did": 70, "cb_err_per_atom": 70, "refit_regress": 70, "e_voigt": 70, "get_data_point": 70, "e_vec": 70, "seri": 70, "shift_val": 70, "eval_shift": 70, "shift_diff": 70, "basis_function_evalu": 70, "polynomi": 70, "grad_basis_function_evalu": 70, "de_vec": 70, "evaluate_shift_gradient_regress": 70, "get_shift_gradi": 70, "save_regression_model": 70, "load_regression_model": 70, "imtek": [77, 78, 79, 92, 93, 94, 95], "univers": [77, 78, 79, 92, 93, 94, 95], "freiburg": [77, 78, 79, 92, 93, 94, 95], "johann": [77, 78, 79, 92, 93, 94, 95], "hoermann": [77, 78, 79, 92, 93, 94, 95], "uni": [77, 78, 79, 92, 93, 94, 95], "elfleinl": [77, 92], "attent": [77, 79, 93, 95], "6th": 77, "nov": 77, "recent": [77, 123], "resolv": [77, 99], "quantiti": [78, 87, 93, 94, 113], "2020": [79, 92, 95], "supposedli": 79, "overrid": [79, 87, 95, 99, 121], "infer": [79, 123], "196": 79, "coordiant": 79, "certain": [79, 116, 123, 124], "pairwies": 79, "handle_sigusr2": 85, "signum": 85, "random_solid": 85, "sx": 85, "homogen": [86, 87], "get_shear_dist": 86, "lee": 86, "edward": 86, "removesimplesheardeform": 86, "proper": [86, 107], "instantan": 86, "make_screw_cyl": 87, "cylinder_r": 87, "hard_cor": 87, "l_extend": 87, "fixatom": 87, "creation": [87, 123], "simplecubicfactori": 87, "disk": 87, "make_edge_cyl": 87, "plot_vitek": 87, "dislo": 87, "plot_ax": 87, "xyscal": 87, "vitek": 87, "graph": [87, 108], "show_neb_configur": 87, "core_posit": 87, "neb": 87, "show_configur": 87, "fixed_mask": 87, "pot_path": 87, "make_barrier_configur": 87, "elastic_param": 87, "fixedatom": 87, "constrain": [87, 99, 116], "chosen": [87, 89], "disloc_ini": 87, "disloc_fin": 87, "make_screw_cyl_kink": 87, "kink_length": 87, "reference_straight_disloc": 87, "large_bulk": 87, "slice_long_dislo": 87, "kink_bulk": 87, "slice": [87, 123], "sliced_kink": 87, "sliced_bulk": 87, "disloc_z_posit": 87, "compare_configur": 87, "dislo_ref": 87, "bulk_ref": 87, "print_info": 87, "remap": 87, "bulk_neighbour": 87, "neghbour": 87, "comparison": [87, 89, 99], "coreself": 87, "statement": 87, "swtich": 87, "bulk_i": 87, "bulk_j": 87, "y0": [87, 99], "du": 87, "cost_funct": 87, "cost": 87, "config": [87, 89], "optimis": [87, 89, 103, 117, 135], "fit_core_posit": 87, "dislo_imag": 87, "core_radiu": 87, "current_po": 87, "powel": [87, 95, 99], "core_x": 87, "core_i": 87, "neigbbour": 87, "calcualt": 87, "core_po": 87, "fit_core_position_imag": 87, "screw_cyl_tetrahedr": 87, "scan_r": 87, "imp_symbol": 87, "tetrahedr": 87, "lattuc": 87, "elemnt": 87, "dislocatino": 87, "screw_cyl_octahedr": 87, "octahedr": 87, "bodycenteredcubictetrahedralfactori": 87, "factori": 87, "element_basi": 87, "calc_num_atom": 87, "xtal_nam": 87, "bcc_tetrahedr": 87, "bravais_basi": 87, "sequenc": [87, 89, 99, 116, 123], "atoms_in_unit_cel": 87, "basis_factor": 87, "check_basis_volum": 87, "chop_toler": 87, "convert_to_natural_basi": 87, "natur": 87, "find_direct": 87, "find_ortho": 87, "ortho": 87, "int_basi": 87, "inverse_basi": 87, "inverse_basis_factor": 87, "make_crystal_basi": 87, "make_list_of_atom": 87, "repeat": [87, 116, 123], "make_unit_cel": 87, "print_directions_and_mil": 87, "process_el": 87, "put_atom": 87, "bodycenteredcubicoctahedralfactori": 87, "bcc_octahedr": 87, "dipole_displacement_angl": 87, "dislo_coord_left": 87, "dislo_coord_right": 87, "ud": 87, "voltera": 87, "get_u_img": 87, "n_img": 87, "n1_shift": 87, "n2_shift": 87, "displacemnt": 87, "make_screw_quadrupol": 87, "left_shift": 87, "right_shift": 87, "n1u": 87, "arrang": 87, "dsitanc": 87, "disoc": 87, "odd": 87, "disloc_quadrupol": 87, "coodrin": 87, "c_1": 87, "u_1": 87, "v_1": 87, "z_1": 87, "c_2": 87, "v_2": 87, "z_2": 87, "c_3": 87, "135": 87, "approx": 87, "tilt": 87, "compomemt": 87, "cz1": 87, "cz2": 87, "3n": 87, "typo": 87, "ventelon": 87, "willaim": 87, "peierl": 87, "fe": 87, "principl": 87, "versu": 87, "aid": 87, "mater": 87, "2007": 87, "suppl": 87, "1007": 87, "s10820": 87, "007": 87, "9064": 87, "cai": 87, "2005": [87, 89, 101], "yip": 87, "ed": 87, "handbook": 87, "springer": [87, 93, 94], "dordrecht": 87, "978": 87, "4020": 87, "3286": 87, "8_42": 87, "make_screw_quadrupole_kink": 87, "1016": 87, "jnucmat": 87, "2008": 87, "053": 87, "make_edge_cyl_001_100": 87, "determenit": 87, "read_dislo_qmmm": 87, "qm_mask": 87, "dislo_qmmm": 87, "plot_bulk": 87, "n_plane": 87, "ovito_dxa_straight_dislo_info": 87, "replicate_z": 87, "1b": 87, "3b": 87, "get_centering_mask": 87, "check_dupl": 87, "closer": 87, "anisotropicdisloc": 87, "slip_plan": 87, "disloc_lin": 87, "media": 87, "467": 87, "hirth": 87, "loth": 87, "eg": [87, 103], "slip": 87, "bulk_posit": 87, "3x1": 87, "deformation_gradi": [87, 99, 101], "return_2d": 87, "du_dx": [87, 99], "du_di": [87, 99], "dz": 87, "dv_dx": [87, 99], "dv_dy": [87, 99], "dv": [87, 99], "dw": 87, "dx": [87, 93, 99, 100, 104, 117], "dy": [87, 99], "adstroh": 87, "glide_distance_dimensionless": 87, "unit_cell_core_posit": 87, "build_glide_configur": 87, "build_impurity_cylind": 87, "plot_unit_cel": 87, "set_burg": 87, "self_consist": 87, "avail_method": 87, "adsl": 87, "atm": 87, "pariti": 87, "OR": 87, "init_solv": 87, "get_solv": 87, "use_atomman": 87, "init_atomman": 87, "init_adsl": 87, "invert_burg": 87, "250": 87, "self_consistent_displac": 87, "max_it": 87, "ncore": 87, "cycl": 87, "throw": 87, "reach": 87, "detemin": 87, "fix_width": 87, "fictiti": 87, "extra_glide_width": 87, "average_posit": 87, "extra_bulk_at_cor": 87, "hide_arrow": 87, "add_ball_and_stick": [87, 135], "turn": [87, 105], "identif": [87, 103, 124], "ith": [87, 116], "dislocation_typ": 87, "hide": 87, "left_disloc": 87, "new_left_burg": 87, "new_right_burg": 87, "right_disloc": 87, "b_left": 87, "b_right": 87, "righ": 87, "__int__": 87, "truncat": 87, "toward": 87, "byte": [87, 123], "bytearrai": 87, "liter": 87, "preced": [87, 109], "36": 87, "interpret": [87, 116, 123], "0b100": 87, "overload": [87, 94, 103], "disloc_class": 87, "multidimension": [87, 99, 130], "memori": [87, 123], "someth": [87, 123], "instanti": [87, 121], "examin": [87, 118], "__new__": 87, "stride": [87, 123], "fortran": [87, 123], "transpos": [87, 123], "c_contigu": [87, 123], "owndata": [87, 123], "writeabl": [87, 94, 123], "flat": [87, 123], "flatten": [87, 111, 115, 123], "todo": 87, "flatit": [87, 123], "imaginari": [87, 123], "items": [87, 123], "nbyte": [87, 123], "contigu": [87, 123], "int16": [87, 123], "impli": 87, "ctype": [87, 123], "unless": [87, 116, 123], "alloc": [87, 123], "unchang": [87, 123], "garbag": 87, "000": [87, 123], "nan": [87, 91, 93], "323": [87, 123], "int_": [87, 123], "periodic_displac": 87, "v1": [87, 125], "v2": [87, 125], "max_neigh": 87, "nth": 87, "right_offset": 87, "barrier": 87, "invert": [87, 99, 124], "ang": [87, 119], "atom_z": 87, "specialis": 87, "erron": 87, "33333333": 87, "6123724356957945": 87, "20412415": 87, "50518149": 87, "83333333": 87, "11111111": 87, "3535533905932738": 87, "fixedlineatom": 87, "adjust_forc": [87, 99, 119], "adjust_posit": [87, 99, 119], "newposit": [87, 116], "gamma_lin": 87, "shift_dir": 87, "n_dot": 87, "return_imag": 87, "gsf": 87, "landscap": 87, "preserv": [87, 123], "conden": 87, "matter": 87, "395502": 87, "15pp": 87, "iopscienc": 87, "iop": 87, "0953": 87, "8984": 87, "39": [87, 119], "toten": 87, "removedrift": 88, "full_3x3_to_voigt_6_index": 89, "voigt_6_to_full_3x3_strain": 89, "strain_vector": 89, "voigt_6_to_full_3x3_stress": 89, "stress_vector": 89, "full_3x3_to_voigt_6_strain": 89, "strain_matrix": 89, "full_3x3_to_voigt_6_stress": 89, "stress_matrix": 89, "voigt_6x6_to_full_3x3x3x3": 89, "3x3x3x3": 89, "check_symmetri": 89, "voigt_6x6_to_cub": 89, "cubic_to_voigt_6x6": 89, "coalesce_elastic_const": 89, "cijkl": 89, "invari": 89, "syi": 89, "szz": 89, "syz": 89, "sxz": 89, "sxy": 89, "full_3x3_to_voigt_6": 89, "rotate_cubic_elastic_const": 89, "rotate_elastic_const": 89, "cubicelasticmoduli": 89, "complianc": 89, "logfil": [89, 103, 111], "brute": [89, 95], "triclin": 89, "generate_strained_config": 89, "at0": 89, "n_step": 89, "triclininc": 89, "conifugur": 89, "c_ij": 89, "graphic": 89, "stress_err": 89, "grad_scal": 89, "6241509125883258": 89, "intercept_scal": 89, "03120754562941629": 89, "infom": 89, "qualiti": 89, "summaris": 89, "curv": 89, "suppress": 89, "100gpa": 89, "intercept": 89, "5gpa": 89, "stat": [89, 95], "github": [89, 123], "djw": 89, "youngs_modulu": 89, "e_l": 89, "exact": 89, "answer": 89, "anisotropui": 89, "cr": 89, "e_x": 89, "pull": [89, 99], "e_i": 89, "e_z": 89, "formula": [89, 116, 125], "brantlei": 89, "semiconductor": [89, 93, 94], "devic": [89, 93, 94], "appl": 89, "534": 89, "1973": 89, "poisson_ratio": 89, "lm": 89, "muduli": 89, "mudulu": 89, "gm": 89, "rand": [89, 95, 113], "rovenski": 89, "birkh": 89, "auser": 89, "71": 89, "n_gridpoint": 91, "drawn": [91, 116], "uniformli": 91, "evenli": 91, "298": [92, 93, 94], "relative_permitt": [92, 93, 94], "79": [92, 93, 94], "vacuum_permitt": [92, 93, 94], "8541878128e": [92, 93, 94], "314462618": [92, 93, 94], "96485": [92, 93, 94], "33212": [92, 93, 94], "854187817620389e": [92, 93, 94], "3144598": [92, 93, 94], "33289": [92, 93, 94], "epsr": [92, 93, 94], "goui": 92, "chapmann": 92, "volt": 92, "kelvin": [92, 116], "decim": [92, 123], "unphys": [92, 135], "substrat": 92, "neutral": [92, 135], "unittest": 92, "bernoulli": 93, "naiv": 93, "jacobin": 93, "fij": 93, "nxn": 93, "f_ij": [93, 100], "dfidxj": 93, "x1_scale": [93, 94], "left_potential_dirichlet_bc": [93, 94], "left_potential_robin_bc": [93, 94], "right_dirichlet_bc": [93, 94], "right_potential_dirichlet_bc": [93, 94], "right_potential_robin_bc": [93, 94], "solver_callback": [93, 94], "initial_valu": [93, 94], "decoupl": [93, 94], "evok": [93, 94], "side": [93, 94, 116, 123], "implicit": 93, "prescrib": 93, "helmholtz": 93, "ohp": 93, "crop": 93, "use_standard_dirichlet_bc": [93, 94], "left_finite_difference_scheme_flux_bc": [93, 94], "j0": [93, 94], "right_finite_difference_scheme_flux_bc": [93, 94], "left_controlled_volume_scheme_flux_bc": [93, 94], "right_controlled_volume_scheme_flux_bc": [93, 94], "u0": [93, 94], "left_dirichlet_bc": [93, 94], "lam": [93, 94, 102], "left_robin_bc": [93, 94], "dudx": [93, 94], "beyond": [93, 94], "right_robin_bc": [93, 94], "number_conservation_constraint": [93, 94], "n0": [93, 94], "amount": [93, 94, 99, 116, 124], "poisson_pd": [93, 94], "fd": [93, 94, 107], "nernst_planck_pd": [93, 94], "selbherr": [93, 94], "1984": [93, 94], "potential0": [93, 94], "concentration0": [93, 94], "kwarsg": [93, 94], "segment": [93, 94, 123], "subdomain": 94, "dolfin": 94, "cpp": 94, "mesh": 94, "map_tol": 94, "on_boundari": 94, "arg0": 94, "float64": [94, 100, 123], "arg1": 94, "meshfunct": 94, "meshfunctionsizet": 94, "check_midpoint": 94, "meshfunctiondoubl": 94, "meshfunctionbool": 94, "mark_cel": 94, "sub_domain": 94, "mark_facet": 94, "set_properti": 94, "snap": 94, "apply_right_potential_robin_bc": 94, "boundary_l": 94, "boundary_r": 94, "boundary_c": 94, "apply_left_potential_dirichlet_bc": 94, "apply_right_potential_dirichlet_bc": 94, "apply_left_concentration_dirichlet_bc": 94, "apply_right_concentration_dirichlet_bc": 94, "apply_central_reference_concentration_constraint": 94, "apply_left_potential_robin_bc": 94, "lam0": 94, "apply_number_conservation_constraint": 94, "conserv": 94, "fenicsproject": 94, "demo": 94, "neumann": 94, "apply_potential_dirichlet_bc": 94, "u1": 94, "apply_potential_robin_bc": 94, "lam1": 94, "use_central_reference_concentration_based_cell_bc": 94, "distribtut": 95, "benchmark": 95, "10e": 95, "dim": [95, 122, 123], "t0": 95, "perf_count": 95, "runtim": 95, "stats_df": 95, "pd": 95, "datafram": 95, "to_str": 95, "float_format": 95, "6g": 95, "p10": 95, "p11": 95, "p12": 95, "p20": 95, "p21": 95, "p22": 95, "pmin0": 95, "pmin1": 95, "pmin2": 95, "pmax0": 95, "pmax1": 95, "pmax2": 95, "15674e": 95, "02188e": 95, "87564e": 95, "21835e": 95, "03505e": 95, "72691e": 95, "22171e": 95, "17135e": 95, "49124e": 95, "34126e": 95, "98407e": 95, "99037e": 95, "86069e": 95, "2704": 95, "02318e": 95, "23954e": 95, "36242e": 95, "80092e": 95, "31183e": 95, "56345e": 95, "81278e": 95, "01789e": 95, "0081e": 95, "2045e": 95, "59284e": 95, "54413e": 95, "5924e": 95, "27": 95, "0756": 95, "39218e": 95, "00079e": 95, "27255e": 95, "86337e": 95, "27807e": 95, "68863e": 95, "00018e": 95, "00146e": 95, "00565e": 95, "59941e": 95, "59989e": 95, "59931e": 95, "0255": 95, "99527e": 95, "82802e": 95, "54397e": 95, "69736e": 95, "41411e": 95, "936e": 95, "34664e": 95, "00514e": 95, "01874e": 95, "0002e": 95, "59695e": 95, "59998e": 95, "58155e": 95, "7869": 95, "99675e": 95, "34395e": 95, "94096e": 95, "28996e": 95, "44064e": 95, "15999e": 95, "14778e": 95, "12146e": 95, "01506e": 95, "03583e": 95, "6e": 95, "59898e": 95, "5982e": 95, "deferredmessag": 95, "msg": 95, "lazi": 95, "brute_force_closest_pair": 95, "xj": 95, "coodin": 95, "steric_distribut": 95, "scipy_distance_based_target_funct": 95, "numpy_only_target_funct": 95, "brute_force_target_funct": 95, "itertool": 95, "panda": 95, "timeit": 95, "planar_closest_pair": 95, "func_nam": 95, "planar": 95, "1000": [95, 117], "ret": 95, "val": [95, 111, 123], "diff": 95, "pdist": 95, "atleast_2d": 95, "func_name_tupl": 95, "diff_nam": 95, "d_": 95, "f1": 95, "f2": 95, "perf_nam": 95, "t_": 95, "coord_nam": 95, "float_field": 95, "f4": 95, "labeled_stat": 95, "24089e": 95, "61002e": 95, "51047e": 95, "48424e": 95, "37235e": 95, "d_brute_scipi": 95, "d_brute_planar": 95, "d_scipy_planar": 95, "t_brute": 95, "02697": 95, "85543": 95, "1414": 95, "90338": 95, "86993": 95, "t_scipi": 95, "00708364": 95, "00698962": 95, "00762594": 95, "00703242": 95, "00703579": 95, "t_planar": 95, "38302": 95, "39462": 95, "434342": 95, "407233": 95, "420773": 95, "p1x_brute": 95, "132014": 95, "331441": 95, "553405": 95, "534633": 95, "977582": 95, "p1y_brut": 95, "599688": 95, "186959": 95, "90897": 95, "575864": 95, "636278": 95, "p1z_brute": 95, "49631": 95, "993856": 95, "246418": 95, "853567": 95, "411793": 95, "p2x_brute": 95, "134631": 95, "333526": 95, "55322": 95, "534493": 95, "977561": 95, "p2y_brut": 95, "603598": 95, "179771": 95, "915063": 95, "576894": 95, "629313": 95, "p2z_brute": 95, "496833": 95, "994145": 95, "239493": 95, "859377": 95, "409509": 95, "p1x_scipi": 95, "p1y_scipi": 95, "p1z_scipi": 95, "p2x_scipi": 95, "p2y_scipi": 95, "p2z_scipi": 95, "p1x_planar": 95, "p1y_planar": 95, "p1z_planar": 95, "p2x_planar": 95, "p2y_planar": 95, "p2z_planar": 95, "recursive_closest_pair": 95, "tackl": 95, "condens": 95, "squareform": 95, "tril_indic": 95, "triu_indic": 95, "penal": 95, "ri": [95, 99], "rj": 95, "exp": 95, "d_brute_numpi": 95, "d_numpy_scipi": 95, "t_numpi": 95, "1984e": 95, "58794e": 95, "70552e": 95, "11759e": 95, "212432": 95, "168858": 95, "0734278": 95, "19829e": 95, "31323e": 95, "82311e": 95, "49012e": 95, "212263": 95, "16846": 95, "0791856": 95, "18763e": 95, "45058e": 95, "86265e": 95, "201706": 95, "164867": 95, "0711544": 95, "27418e": 95, "72529e": 95, "84288e": 95, "20762": 95, "166005": 95, "0724238": 95, "199751": 95, "16415e": 95, "91038e": 95, "73115e": 95, "202635": 95, "161932": 95, "0772684": 95, "252": 95, "548": 95, "28555e": 95, "202512": 95, "161217": 95, "0726705": 95, "neigh_list_based_target_funct": 95, "dij": 95, "sum_i": 95, "r_j": 95, "df": [95, 100], "sj": 95, "xik": 95, "xjk": 95, "kdi": 95, "subscrib": 95, "kd": 95, "kroneck": 95, "box_constraint": 95, "confin": 95, "box_constraint_with_gradi": 95, "lik": 95, "sum_k": 95, "dg": 95, "accordingli": 95, "dgdxik": 95, "gtol": 95, "target_funct": 95, "returns_gradi": 95, "closest_pair_funct": 95, "minimz": 95, "submodul": 95, "signatur": 95, "meet": 95, "optimizeresult": 95, "raw": [95, 116, 123], "foreign": 96, "_matscipi": 96, "cpython": 96, "destin": 96, "first_neighbour": [96, 113], "get_alpha_period": 98, "generate_3d_structur": 98, "cryst_2d": 98, "nzlayer": 98, "cb": [98, 124, 135], "generate_3d_cubic_111": 98, "central_x": 98, "central_i": 98, "invert_centr": 98, "extended_far_field": [98, 99], "extended_region_i": 98, "exclude_surfac": 98, "sort_typ": 98, "r_theta_z": 98, "rectilinearanisotropiccrack": 99, "Near": 99, "rectilinear": 99, "medium": 99, "k1gsqg": 99, "set_plane_strain": 99, "set_plane_stress": 99, "a11": 99, "a22": 99, "a12": 99, "a16": 99, "a26": 99, "a66": 99, "b11": 99, "b22": 99, "b33": 99, "b12": 99, "b13": 99, "b23": 99, "b16": 99, "b26": 99, "b36": 99, "b66": 99, "ki": 99, "kii": 99, "cyclind": 99, "sig_x": 99, "sig_i": 99, "sig_xi": 99, "rtheta": 99, "displacement_residu": 99, "ref_x": 99, "ref_i": 99, "minu": [99, 123], "deformation_gradient_residu": 99, "cur": 99, "stress_stat": 99, "crot": 99, "cauchy_born": 99, "displacements_from_cylinder_coordin": 99, "displacements_from_cartesian_coordin": 99, "deformation_gradient_from_cylinder_coordin": 99, "deformation_gradient_from_cartesian_coordin": 99, "crack_tip_posit": 99, "residual_func": 99, "return_residu": 99, "addition": [99, 103, 123, 130], "leastsq": 99, "invok": [99, 123], "crack_tip_position_i": 99, "scale_displac": 99, "old_k": 99, "new_k": 99, "extrapol": [99, 116, 117], "stresses_from_cylinder_coordin": 99, "stresses_from_cartesian_coordin": 99, "xx": [99, 116], "yy": [99, 116], "sinclaircrack": 99, "variable_alpha": 99, "variable_k": 99, "alpha_scal": 99, "k_scale": 99, "riii": 99, "incl_ri_f_alpha": 99, "is_3d": 99, "theta_3d": 99, "cont_k": 99, "precon_recompute_interv": 99, "influenc": 99, "propag": 99, "philo": 99, "mag": 99, "647": 99, "671": 99, "arc_length_continu": 99, "convergence_line_plot": 99, "dfk_dk_approx": 99, "fit_cl": 99, "get_crack_tip_forc": 99, "get_deformation_gradi": 99, "get_dof": 99, "get_k_forc": 99, "get_precon": 99, "get_xdot": 99, "load_cb_model": 99, "rescale_k": 99, "save_cb_model": 99, "set_atom": 99, "set_dof": 99, "set_shiftmask": 99, "unpack": [99, 123], "update_precon": 99, "write_atoms_to_fil": 99, "undeform": 99, "compat": [99, 116, 117, 121, 123], "vari": [99, 123], "arc": 99, "contrib": 99, "f_alpha": 99, "reshap": [99, 113, 123], "u_cl": 99, "cle": 99, "pre": [99, 116], "r_fit": 99, "radial_dist": 99, "update_atom": 99, "use_alpha_3d": 99, "full_array_output": 99, "x2": [99, 122, 125], "xdot1": 99, "ftol": [99, 103], "krylov": 99, "check_grad": 99, "dump_interv": 99, "new_ki": 99, "traj_fil": 99, "x_traj": 99, "h5": [99, 135], "traj_interv": 99, "otf_traj": 99, "ds_max": 99, "ds_min": 99, "ds_aggress": 99, "opt_method": 99, "cos_alpha_min": 99, "pipe_output": 99, "data_queu": 99, "kill_confirm_queu": 99, "allow_alpha_backtrack": 99, "follow_g_contour": 99, "1234": 99, "rzoom": 99, "regions_styl": 99, "atoms_arg": 99, "bonds_arg": 99, "tip_arg": 99, "plot_tip": 99, "strain_err": 99, "seperate_surfac": 99, "num": 99, "isotropic_modei_crack_tip_stress_field": 99, "xy_onli": 99, "singular": 99, "horzont": 99, "ahead": 99, "anticlockwis": 99, "yx": 99, "zz": [99, 116], "xyz_onli": 99, "isotropic_modei_crack_tip_displacement_field": 99, "horizont": 99, "isotropic_modeii_crack_tip_displacement_field": 99, "isotropicstressfield": 99, "sxx0": 99, "syy0": 99, "sxy0": 99, "strain_to_g": 99, "orig_height": 99, "rate": [99, 101], "strip": 99, "current_height": 99, "relev": [99, 123, 125, 133], "sigma_yi": 99, "eps_yi": 99, "poission": 99, "eps_xx": 99, "g_to_strain": 99, "get_strain": 99, "origheight": 99, "get_energy_release_r": 99, "get_stress_intensity_factor": 99, "k_i": 99, "youngsmodulu": 99, "poissionratio_yz": 99, "fit_crack_stress_field": 99, "r_rang": 99, "initial_param": 99, "fix_param": 99, "avg_sigma": 99, "avg_decai": 99, "005": 99, "possionratio_yx": 99, "crackpo": 99, "sigma0": 99, "poissonratio_yx": 99, "exit": 99, "annular": 99, "accumul": [99, 113], "attenu": 99, "tau": 99, "characterist": 99, "get_calcul": [99, 116], "atomresolvedstressfield": 99, "find_tip_coordin": 99, "find_tip_broken_bond": 99, "boundary_thick": 99, "boundary_buff": 99, "tip_posit": 99, "midpoint": 99, "depth": [99, 123, 135], "find_tip_stress_field": 99, "plot_stress_field": 99, "firstli": 99, "sigma_": 99, "thin_strip_displacement_i": 99, "vertic": 99, "ramp": 99, "meshgrid": 99, "axhlin": 99, "print_crack_system": 99, "pretti": 99, "crack_direct": 99, "cleavage_plan": 99, "constantstrainr": 99, "delta_strain": 99, "epsilon_yi": 99, "newpo": 99, "apply_strain": 99, "rigid_constraint": 99, "boolean": [99, 105, 119, 123, 125], "transition_width": 100, "elseif": 100, "co": 100, "sin": 100, "dcoordin": 100, "neighb_j": 100, "neighb_rij": 100, "printf": 100, "sum_b_ij": 100, "b_ij": 100, "eb_i": 100, "local_e_p": 100, "n_p": 100, "2dx": 100, "em": 100, "local_e_m": 100, "n_m": 100, "j_integr": 101, "e0": 101, "contour": 101, "li": [101, 116, 124, 125], "shih": 101, "needleman": 101, "eng": 101, "405": 101, "1985": 101, "jin": 101, "yuan": 101, "nanosci": 101, "nanotech": 101, "2099": 101, "triangular_lattice_slab": 102, "find_triangles_2d": 102, "minangl": 102, "5235987755982988": 102, "maxangl": 102, "0943951023931953": 102, "xdim": 102, "ydim": 102, "triangl": [102, 128], "triangular": 102, "130": 102, "517": 102, "555": 102, "get_poisson_ratio": 102, "get_youngs_modulu": 102, "set_reference_cryst": 102, "get_wave_spe": 102, "longitudin": 102, "rayleigh": 102, "get_elastic_moduli": 102, "find_crack_tip": 102, "rightmost": 102, "whose": [102, 123], "set_initial_veloc": 102, "kick": 102, "extend_strip": 102, "cut_at": 103, "surf_direct": 103, "popul": 103, "cell_strain": 103, "path_xlim": 103, "path_ylim": 103, "aren": 103, "unrelax": 103, "vacuum_offset": 103, "vac_po": 103, "bfgslinesearch": 103, "constrain_atom": 103, "relax_kwarg": 103, "bicub": 103, "gather": 103, "get_energy_densit": 103, "fd_hessian": 104, "numerical_hessian": [104, 114], "bond_length": 105, "nonperiod": [105, 113], "read_molecules_from_lammps_data": 107, "pathlik": 107, "textiobas": 107, "descriptor": [107, 123], "sort_by_id": 107, "check_legal_nam": 107, "column_s": 107, "image_flag": 107, "save_meti": 108, "glaro": 108, "dtc": 108, "umn": 108, "edu": 108, "gkhome": 108, "read_extended_xyz": [109, 134, 135], "fileobj": 109, "charact": [109, 113, 116, 134], "h2": [109, 134, 135], "molid": [109, 134, 135], "h1": [109, 134, 135], "oplsstructur": [109, 116, 134], "read_block": 109, "reactiv": [109, 116, 127, 133], "parameterfil": 109, "read_cutoff": [109, 134], "23": [109, 123], "cutofflist": [109, 116], "read_parameter_fil": [109, 134, 135], "bond_styl": [109, 116], "angle_styl": [109, 116], "dihedral_styl": [109, 116], "overridden": [109, 121], "002": 109, "dihedr": [109, 112, 116, 133, 134, 135], "ljq": 109, "ljqdata": [109, 116], "bonddata": [109, 116], "anglesdata": [109, 116], "dihedralsdata": [109, 116], "write_lammp": [109, 134, 135], "write_lammps_in": 109, "write_lammps_atom": 109, "write_lammps_definit": 109, "read_lammps_definit": 109, "bond_coeff": 109, "bb": [109, 116], "bond_type_index": 109, "ljq_data": 109, "bond_data": [109, 134, 135], "ang_data": 109, "dih_data": [109, 134], "particle_type_index": 109, "indice": [109, 116], "ang_type_index": 109, "dih_type_index": 109, "read_lammps_data": 109, "filename_lammps_param": 109, "restor": 109, "update_from_lammps_dump": 109, "savetbl": 110, "dat": 110, "loadtbl": 110, "usecol": 110, "fromfil": [110, 123], "283": 110, "398": 110, "circumst": [110, 123], "colum": 110, "hdr_str": 111, "hdrfmt_str": 111, "datatyp": [111, 123], "numfmt_str": 111, "outeveri": 111, "sepeveri": 111, "flush": 111, "get_logfil": 111, "has_logfil": 111, "iteration_finish": 111, "pr": 111, "set_logfil": 111, "set_outeveri": 111, "st": 111, "caller": 111, "hdr": 111, "force_print": 111, "bonds_connect": 112, "bonds_typ": 112, "angles_connect": 112, "angles_typ": 112, "dihedrals_connect": 112, "dihedrals_typ": 112, "arraylik": [112, 113], "nbond": 112, "nangl": 112, "ndihedr": 112, "get_angl": [112, 116, 134, 135], "get_dihedr": [112, 116, 134, 135], "from_atom": 112, "connected_triplet": 113, "triplet_to_numb": 113, "get_pair": 113, "request": [113, 121], "get_triplet": 113, "full_connect": 113, "pair_dist": 113, "make_result": 113, "accepted_quant": 113, "compute_dist": 113, "pair_list": 113, "triplet_list": 113, "nb_pair": 113, "find_triplet_typ": 113, "double_neighbourhood": 113, "reverse_pair_indic": 113, "cutoffneighbourhood": 113, "triplet_typ": 113, "proxim": 113, "sphere": 113, "neighborhood": 113, "molecularneighbourhood": 113, "double_cutoff": 113, "initialz": 113, "double_connect": 113, "complete_connect": 113, "typeoffset": 113, "wrap": [113, 116], "cell_origin": 113, "dot": [113, 118, 123], "shrink": [113, 123], "bincount": [113, 115, 130], "bin_edg": 113, "pdf": 113, "get_volum": [113, 116, 131], "ijdd": [113, 130], "pair_forc": [113, 130], "forces_x": 113, "minlength": [113, 115], "forces_i": 113, "forces_z": 113, "abs_dr": 113, "dynmat": 113, "dde": 113, "dynmat_bsr": 113, "first_i": 113, "dynmat_diag": 113, "e_nc": 113, "d_ncc": 113, "dde_n": 113, "de_n": 113, "ddiag_icc": 113, "abs_dr_p": 113, "tripl": [113, 116, 128], "adress": 113, "occour": 113, "neighour": 113, "ij_t": 113, "ik_t": 113, "jk_t": 113, "ijd": [113, 128, 130], "int32": [113, 123, 130], "first_ij": 113, "find_ij": 113, "slower": 113, "get_jump_indici": 113, "find_indices_of_reversed_pair": 113, "taken": [113, 116, 121], "fact": 113, "overhead": 113, "find_common_neighbour": 113, "i1": [113, 123], "j1": 113, "i2": [113, 123], "itself": [113, 123], "cnl_i1_i2": 113, "cnl_j1": 113, "nl_index_i1_j1": 113, "nl_index_i2_j1": 113, "256": [113, 123], "22016": 113, "1893376": 113, "unique_pairs_i1_i2": 113, "bincount_bin": 113, "uniqu": [113, 116], "return_invers": 113, "65536": 113, "my_sum": 113, "numerical_forc": 114, "minumum": 114, "numerical_stress": 114, "coo_matrix": 114, "numerical_nonaffine_forces_refer": 114, "get_derivative_volum": 114, "get_derivative_wave_vector": 114, "mabincount": [115, 130], "onlin": 115, "twochar": 116, "simplest": 116, "lj_pair": 116, "lj_cutoff": 116, "c_cutoff": 116, "shallow": 116, "fromkei": 116, "pop": 116, "unrepresent": 116, "keyerror": 116, "popitem": 116, "lifo": 116, "setdefault": 116, "lack": 116, "name_value_hash": 116, "cc": 116, "set_nam": 116, "get_nam": 116, "anam": 116, "bname": 116, "name_valu": 116, "get_valu": 116, "add_nam": 116, "cname": 116, "dd": 116, "dname": 116, "fourth": 116, "manipul": [116, 134], "number_of_lattice_vector": 116, "iterimag": 116, "default_map": 116, "br": 116, "Be": 116, "ca": [116, 123, 135], "mg": 116, "set_typ": [116, 134], "get_typ": 116, "set_cutoff": [116, 134, 135], "get_neighbor": 116, "set_atom_data": [116, 134, 135], "atom_data": [116, 134, 135], "pair_modifi": 116, "get_bond": [116, 134, 135], "elsewher": 116, "bond_typ": [116, 134], "a1": [116, 134], "a2": [116, 134], "bond_list": 116, "ang_typ": 116, "conceiv": 116, "ang_list": 116, "ase_objtyp": 116, "edit": 116, "gui": 116, "conflict": 116, "undesir": 116, "incompat": [116, 123], "backend": 116, "circumv": 116, "gtk": 116, "euler_rot": 116, "psi": 116, "euler": 116, "mathworld": 116, "wolfram": 116, "eulerangl": 116, "explan": [116, 123], "cop": 116, "cou": 116, "fromdict": 116, "dct": 116, "get_all_dist": 116, "a3": 116, "get_angular_momentum": 116, "angular": 116, "momentum": 116, "get_atomic_numb": 116, "resembl": 116, "jth": 116, "get_cell_lengths_and_angl": 116, "get_celldisp": 116, "get_center_of_mass": 116, "get_chemical_formula": 116, "hill": 116, "contract": [116, 117], "chhhoh": 116, "chhhochhh": 116, "ch3och3": 116, "alphabet": 116, "c2h6o": 116, "soohoho": 116, "h2o4": 116, "greatest": [116, 123], "divisor": [116, 123], "full_output": 116, "sometim": [116, 123], "dih_typ": [116, 134], "benzen": 116, "dih_list": 116, "apply_constraint": 116, "ask": 116, "holonom": 116, "triatom": 116, "redistribut": 116, "get_global_number_of_atom": 116, "NOT": 116, "know": 116, "asap": 116, "maintain": [116, 123], "situat": [116, 135], "get_initial_charg": 116, "get_initial_magnetic_mo": 116, "get_kinetic_energi": 116, "kinet": 116, "get_mass": 116, "get_momenta": 116, "get_moments_of_inertia": 116, "princip": 116, "inerti": 116, "amu": 116, "get_number_of_atom": 116, "probabl": [116, 128, 131], "Or": 116, "get_pbc": 116, "wrap_kw": 116, "pretty_transl": 116, "wrap_posit": 116, "get_reciprocal_cel": 116, "fourier": [116, 122, 129], "span": 116, "include_ideal_ga": 116, "tradit": 116, "yz": 116, "xz": 116, "get_tag": 116, "get_temperatur": 116, "get_total_energi": 116, "plu": 116, "new_arrai": 116, "rattl": 116, "stdev": 116, "rng": 116, "randomli": 116, "processor": 116, "rotate_cel": 116, "rotate_dihedr": 116, "a4": 116, "set_dihedr": 116, "set_angl": 116, "delet": 116, "set_atomic_numb": 116, "scale_atom": 116, "orthorhomb": 116, "lie": 116, "subspac": 116, "he": 116, "rhombohedr": 116, "77": 116, "set_celldisp": 116, "celldisp": 116, "set_center_of_mass": 116, "entir": [116, 123], "subgroup": 116, "altern": [116, 117, 123, 134], "crude": 116, "ethan": [116, 134], "twist": 116, "hhcchh": 116, "210": 116, "set_dist": 116, "set_initial_charg": 116, "set_initial_magnetic_mo": 116, "collinear": [116, 125], "set_mass": 116, "set_momenta": 116, "honor": 116, "set_scaled_posit": 116, "set_tag": 116, "json": 116, "databas": 116, "nx3": 116, "ode12r": 117, "maxtol": 117, "rtol": 117, "hmin": 117, "apply_precon": 117, "od": 117, "ncflex": 117, "makri": 117, "ortner": 117, "150": 117, "094109": 117, "1063": 117, "5064465": 117, "drive": 117, "ode12": 117, "reisdual": 117, "exce": 117, "suffici": 117, "growth": 117, "seem": 117, "apply_precondition": 117, "hessianprecon": 118, "c_stab": 118, "move_tol": 118, "old_posit": 118, "vdot": 118, "make_precon": 118, "reiniti": 118, "recalcul": 118, "ie": 118, "csr_matrix": 118, "BE": 118, "awar": 118, "pdot": 118, "asarrai": 118, "precon_forc": 118, "128": 118, "_p": 118, "px": 118, "moser": 119, "mosel": 119, "tribol": 119, "2010": 119, "get_m_gamma": 119, "dissip": 119, "fixeddamp": 119, "get_a": 119, "notimplementederror": [119, 135], "adjust_momenta": 119, "adjust_potential_energi": 119, "job": [119, 121], "filehandl": 119, "logfn": 119, "t_thermostat": 119, "instantantan": 119, "p_top": 119, "p_bottom": 119, "acceler": 119, "tau_top": 119, "tau_bottom": 119, "ring_statist": [120, 132], "maxlength": [120, 132], "shortest": [120, 125, 132], "franzblau": [120, 132], "4925": 120, "ringstat": 120, "pack_atoms_to_reftraj_str": 121, "pack_atoms_to_xyz_str": 121, "unpack_reftraj_str_to_atom": 121, "pack_results_to_reftraj_output_str": 121, "unpack_reftraj_output_str_to_result": 121, "unpack_xyz_str_to_result": 121, "atomsrequesthandl": 121, "client_address": 121, "server": 121, "streamrequesthandl": 121, "disable_nagle_algorithm": 121, "rbufsiz": 121, "wbufsiz": 121, "atomsserversync": 121, "server_address": 121, "requesthandlerclass": 121, "client": 121, "bind_and_activ": 121, "max_attempt": 121, "bgq": 121, "tcpserver": 121, "get_result": 121, "join_al": 121, "put": [121, 123], "shutdown_cli": 121, "allow_reuse_address": 121, "request_queue_s": 121, "server_activ": 121, "shutdown": 121, "serve_forev": 121, "thread": 121, "deadlock": 121, "client_id": 121, "force_restart": 121, "address_famili": 121, "close_request": 121, "clean": 121, "fileno": [121, 123], "socket": 121, "selector": 121, "finish_request": 121, "get_request": 121, "handle_error": 121, "traceback": [121, 123], "handle_request": 121, "possibli": [121, 123], "handle_timeout": 121, "arriv": 121, "forkingmixin": 121, "process_request": 121, "threadingmixin": 121, "poll_interv": 121, "poll": 121, "task": [121, 134], "server_bind": 121, "bind": 121, "server_clos": 121, "service_act": 121, "mixin": 121, "shutdown_request": 121, "socket_typ": 121, "verify_request": 121, "verifi": 121, "atomsserverasync": 121, "asynchron": 121, "atomsserv": 121, "block_on_clos": 121, "daemon_thread": 121, "process_request_thread": 121, "baseserv": 121, "ex": 121, "env": 121, "npj": 121, "ppn": 121, "jobnam": 121, "rundir": 121, "reftraj": 121, "parmod": 121, "mpirun": 121, "mpirun_arg": 121, "max_pos_diff": 121, "max_cell_diff": 121, "write_input_fil": 121, "extra_arg": 121, "wait": 121, "waits_thread": 121, "isal": 121, "wait_for_shutdown": 121, "start_or_restart": 121, "queu": 121, "client_timeout": 121, "grace": 121, "aliv": 121, "sigterm": 121, "signal": 121, "sent": 121, "sigkil": 121, "input_q": 121, "preprocess": 121, "schedul": 121, "submit": 121, "queue": 121, "is_compat": 121, "inplac": [121, 123], "first_tim": 121, "postprocess": 121, "post": 121, "overrriden": 121, "old_at": 121, "new_at": 121, "quipclient": 121, "param_fil": 121, "quip": [121, 123], "commun": 121, "qmclient": 121, "vaspclient": 121, "vasp_arg": 121, "vasp": 121, "poscar": 121, "incar": 121, "potcar": 121, "kpoint": 121, "communicatin": 121, "castepcli": 121, "castep_arg": 121, "castep": 121, "socketcalcul": 121, "ip": 121, "port": 121, "remot": 121, "engin": 121, "synchron": 121, "n_atom": 122, "cell_vector": 122, "y1": 122, "z1": 122, "y2": 122, "z2": 122, "x3": 122, "y3": 122, "z3": 122, "fft": [122, 131], "proport": 122, "nomalis": 122, "betrag": 122, "max_rad": 122, "length_cutoff": 122, "output_grids": 122, "fft_cutoff": 122, "approx_fft_grids": [122, 131], "spatial_correlation_function_near": 122, "gridsiz": 122, "gcd": 123, "millerindex": 123, "211": 123, "bracket": 123, "denot": 123, "angle_between": 123, "simplifi": [123, 134], "consum": [123, 134], "travers": 123, "as3": 123, "as4": 123, "cosin": 123, "hat": 123, "plane_spac": 123, "direction_famili": 123, "plane_famili": 123, "all_bracket": 123, "trail": 123, "112b": 123, "denomin": 123, "keepdim": 123, "argmax": 123, "argmin": 123, "argpartit": 123, "kth": 123, "introselect": 123, "partit": 123, "argsort": 123, "cast": [123, 125], "unsaf": 123, "subok": 123, "typecod": 123, "same_kind": 123, "backward": 123, "float32": 123, "convers": [123, 125], "newli": 123, "satisfi": 123, "arr_t": 123, "complexwarn": 123, "byteswap": 123, "endian": 123, "big": 123, "8755": 123, "hex": [123, 125], "0x1": 123, "0x100": 123, "0x2233": 123, "13090": 123, "0x3322": 123, "ceg": 123, "fac": 123, "s3": 123, "newbyteord": 123, "uint8": 123, "clip": 123, "compress": 123, "conj": 123, "copyto": 123, "prefer": 123, "among": 123, "ctypeslib": 123, "guid": 123, "omit": 123, "undocu": 123, "privat": 123, "_ctype": 123, "pointer": 123, "troubl": 123, "crash": 123, "bewar": 123, "_array_interface_": 123, "unlik": 123, "data_a": 123, "c_void_p": 123, "dealloc": 123, "spelt": 123, "basetyp": 123, "platform": 123, "c_intp": 123, "c_int": 123, "c_long": 123, "c_longlong": 123, "obj": 123, "_as_parameter_": 123, "perhap": 123, "c_doubl": 123, "shape_a": 123, "c_short": 123, "strides_a": 123, "as_paramet": 123, "31962608": 123, "c_uint32": 123, "__main__": 123, "lp_c_uint": 123, "0x7ff2fc1fc200": 123, "c_uint": 123, "c_uint64": 123, "c_ulong": 123, "4294967296": 123, "_intern": 123, "c_long_array_2": 123, "0x7ff2fc1fce60": 123, "0x7ff2fc1ff320": 123, "cumprod": 123, "cumul": 123, "cumsum": 123, "axis1": 123, "axis2": 123, "arr": 123, "discourag": 123, "pickl": 123, "behav": 123, "rare": 123, "f_contigu": 123, "borrow": 123, "lock": 123, "alter": 123, "appropri": [123, 134], "hardwar": 123, "writebackifcopi": 123, "pyarray_resolvewritebackifcopi": 123, "fnc": 123, "carrai": 123, "farrai": 123, "lowercas": 123, "setflag": 123, "truli": 123, "ultim": 123, "owner": 123, "simultan": 123, "collaps": 123, "ravel": 123, "getfield": 123, "complex128": 123, "0j": 123, "70710678": 123, "int_typ": 123, "nd": 123, "longdoubl": 123, "clongdoubl": 123, "lose": 123, "void": 123, "123": 123, "randint": 123, "itemset": 123, "complic": 123, "amax": 123, "amin": 123, "getsizeof": 123, "parent": 123, "480": 123, "new_ord": 123, "newbytord": 123, "nativ": 123, "byteord": 123, "new_arr": 123, "rearrang": 123, "smaller": [123, 128], "greater": 123, "undefin": 123, "unspecifi": 123, "ti": 123, "indirect": 123, "ptp": 123, "peak": 123, "new_shap": 123, "refcheck": 123, "pypi": 123, "systemerror": 123, "bug": 123, "realloc": 123, "consecut": 123, "enlarg": 123, "doesn": 123, "referenc": 123, "prevent": 123, "searchsort": 123, "sorter": 123, "setfield": 123, "uic": 123, "never": 123, "unpickl": 123, "stdin": 123, "attributeerror": 123, "getter": 123, "overflow": 123, "quicksort": 123, "mergesort": 123, "heapsort": 123, "timsort": 123, "retain": 123, "s1": 123, "i8": 123, "squeez": 123, "std": 123, "ddof": 123, "stride_trick": 123, "as_strid": 123, "safer": 123, "imagin": 123, "tell": 123, "224": 123, "1344": 123, "813": 123, "swapax": 123, "interchang": 123, "tobyt": 123, "exhibit": 123, "frombuff": 123, "u2": 123, "x00": 123, "x01": 123, "x02": 123, "x03": 123, "tofil": 123, "fid": 123, "sep": 123, "recov": 123, "lost": 123, "archiv": 123, "overcom": 123, "gzipfil": 123, "bytesio": 123, "tolist": 123, "nest": 123, "recreat": 123, "uint32": 123, "a_list": 123, "a_tolist": 123, "recurs": 123, "0d": 123, "typeerror": 123, "tostr": 123, "despit": 123, "trace": 123, "var": 123, "float_": 123, "omiss": 123, "some_dtyp": 123, "reinterpret": 123, "ndarray_subclass": 123, "regular": 123, "int8": 123, "513": 123, "xv": 123, "recarrai": 123, "770": 123, "3340": 123, "3854": 123, "1284": 123, "1798": 123, "4368": 123, "4882": 123, "2312": 123, "2826": 123, "5396": 123, "5910": 123, "millerplan": 123, "millerdirect": 123, "ijk": 123, "lmn": 123, "radian": [123, 128], "make_unit_slab": 123, "quippi": 123, "unit_slab": 123, "libatom": 123, "blob": 123, "src": 123, "f95": 123, "primit": 123, "surfacereconstruct": 124, "surf_dir": 124, "multilattic": 124, "reconstruct": 124, "map_surfac": 124, "invert_dir": 124, "beneath": 124, "meaning": 124, "cleavag": 124, "essenti": [124, 125], "mirror": 124, "diad": 124, "identify_lay": 124, "surface_coord": 124, "xlim": [124, 128, 131], "ylim": [124, 131], "zlim": 124, "search_dir": 124, "atoms_for_cb": 124, "layer_mask_set": 124, "nlayer": 124, "apply_surface_shift": 124, "map_pandey_111": 124, "pandei": 124, "identify_pandey_lay": 124, "frame_dir": 124, "apply_pandey_111": 124, "map_si_110_3x1": 124, "180": [124, 135], "identify_si_110_lay": 124, "apply_si_110": 124, "validate_cubic_cel": 125, "complete_basi": 125, "nmax": 125, "v3": 125, "primari": 125, "secondari": 125, "unsuccess": 125, "orthonorm": 125, "structure_nam": 125, "line_intersect_2d": 125, "intersect": 125, "rai": 125, "stackoverflow": 125, "question": 125, "217578": 125, "polygon": 125, "points_in_polygon2d": 125, "poly_point": 125, "poylgon": 125, "get_distance_from_polygon2d": 125, "test_point": 125, "polygon_point": 125, "distance_from_a_point_to_a_lin": 125, "line_defined_by_two_point": 125, "radial_mask_from_polygon2d": 125, "regardless": 125, "scienc": [126, 127], "toolbox": [126, 127], "environ": [126, 127, 135], "explor": [126, 127], "n_i": 128, "arcco": 128, "cdot": [128, 131], "heavisid": 128, "sum_j": 128, "angle_distribut": 128, "max_bond_dist": 128, "capit": 128, "bin_spac": 128, "nb_angl": 128, "xlabel": [128, 131, 132], "ylabel": [128, 131, 132], "141592653589793": 128, "coo": 130, "h2o": [130, 135], "oxygen": 130, "96856502": 130, "526478": 130, "ship": 130, "attract": 130, "propto": 130, "dispers": 130, "numpy_trick": 130, "33444449": 130, "54138009": 130, "66722225": 130, "g_2": 131, "langl": 131, "rangl": 131, "overal": 131, "ensembl": 131, "straightforwardli": 131, "instruct": 131, "broaden": 131, "mean_dist": 131, "mean_dens": 131, "shell_volum": 131, "tail": 131, "spatial_correlation_funct": 131, "topolog": 132, "statist": 132, "backtrack": 132, "opl": [134, 135], "c2h6": 134, "tediou": 134, "greatli": 134, "angle_typ": 134, "0028": 134, "0013": 134, "115": 134, "016": 134, "angle_data": [134, 135], "human": 134, "lubric": 135, "reichenbach": 135, "ac_h2o": 135, "oh": 135, "serpar": 135, "cylinderonli": 135, "aspectratio": 135, "facili": 135, "parameters_reichenbach2023": 135, "strict": 135, "soon": 135, "hybridis": 135, "passiv": 135, "regard": 135, "cd": 135, "sp2": 135, "contact": 135, "h_surface_region": 135, "zmid_c": 135, "mask_c": 135, "mask_c_lower_slab": 135, "logical_and": 135, "mask_c_upper_slab": 135, "zmax_c_lower_slab": 135, "zmin_c_upper_slab": 135, "ca_region_lower_slab": 135, "ca_region_upper_slab": 135, "atom_in_ca_region": 135, "zpo": 135, "neigh": 135, "nO": 135, "nh": 135, "sp3": 135, "c6": 135, "c5": 135, "n_sp3neigh": 135, "neighs2": 135, "cy": 135, "cz": 135, "cx": 135, "o2": 135, "o1": 135, "ow": 135, "h4": 135, "hw": 135, "molid1": 135, "63": 135, "molid2": 135, "67": 135, "molid_h2o": 135, "pair_styl": 135, "parameter_fil": 135, "parameter_data": 135, "dihed_data": 135}, "objects": {"": [[26, 0, 0, "-", "matscipy"]], "matscipy": [[27, 0, 0, "-", "angle_distribution"], [28, 0, 0, "-", "atomic_strain"], [29, 0, 0, "-", "calculators"], [70, 0, 0, "-", "cauchy_born"], [71, 0, 0, "-", "cli"], [86, 0, 0, "-", "deformation"], [87, 0, 0, "-", "dislocation"], [88, 0, 0, "-", "drift"], [89, 0, 0, "-", "elasticity"], [90, 0, 0, "-", "electrochemistry"], [96, 0, 0, "-", "ffi"], [97, 0, 0, "-", "fracture_mechanics"], [103, 0, 0, "-", "gamma_surface"], [26, 1, 1, "", "has_parameter"], [104, 0, 0, "-", "hessian_finite_differences"], [105, 0, 0, "-", "hydrogenate"], [106, 0, 0, "-", "io"], [111, 0, 0, "-", "logger"], [112, 0, 0, "-", "molecules"], [113, 0, 0, "-", "neighbours"], [114, 0, 0, "-", "numerical"], [115, 0, 0, "-", "numpy_tricks"], [116, 0, 0, "-", "opls"], [117, 0, 0, "-", "optimize"], [26, 1, 1, "", "parameter"], [118, 0, 0, "-", "precon"], [119, 0, 0, "-", "pressurecoupling"], [120, 0, 0, "-", "rings"], [121, 0, 0, "-", "socketcalc"], [122, 0, 0, "-", "spatial_correlation_function"], [123, 0, 0, "-", "surface"], [124, 0, 0, "-", "surface_reconstruction"], [125, 0, 0, "-", "utils"]], "matscipy.angle_distribution": [[27, 1, 1, "", "angle_distribution"]], "matscipy.atomic_strain": [[28, 1, 1, "", "array_inverse"], [28, 1, 1, "", "atomic_strain"], [28, 1, 1, "", "get_D_square_min"], [28, 1, 1, "", "get_XIJ"], [28, 1, 1, "", "get_YIJ"], [28, 1, 1, "", "get_delta_plus_epsilon"], [28, 1, 1, "", "get_delta_plus_epsilon_dgesv"]], "matscipy.calculators": [[30, 0, 0, "-", "calculator"], [31, 0, 0, "-", "committee"], [35, 0, 0, "-", "eam"], [39, 0, 0, "-", "ewald"], [41, 0, 0, "-", "fitting"], [42, 0, 0, "-", "manybody"], [51, 0, 0, "-", "mcfm"], [65, 0, 0, "-", "pair_potential"], [67, 0, 0, "-", "polydisperse"], [69, 0, 0, "-", "supercell_calculator"]], "matscipy.calculators.calculator": [[30, 2, 1, "", "MatscipyCalculator"]], "matscipy.calculators.calculator.MatscipyCalculator": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "band_structure"], [30, 3, 1, "", "calculate"], [30, 3, 1, "", "calculate_numerical_forces"], [30, 3, 1, "", "calculate_numerical_stress"], [30, 3, 1, "", "calculate_properties"], [30, 3, 1, "", "calculation_required"], [30, 3, 1, "", "check_state"], [30, 4, 1, "", "default_parameters"], [30, 5, 1, "", "directory"], [30, 4, 1, "", "discard_results_on_any_change"], [30, 3, 1, "", "export_properties"], [30, 3, 1, "", "get_atoms"], [30, 3, 1, "", "get_birch_coefficients"], [30, 3, 1, "", "get_born_elastic_constants"], [30, 3, 1, "", "get_charges"], [30, 3, 1, "", "get_default_parameters"], [30, 3, 1, "", "get_dipole_moment"], [30, 3, 1, "", "get_dynamical_matrix"], [30, 3, 1, "", "get_elastic_constants"], [30, 3, 1, "", "get_forces"], [30, 3, 1, "", "get_hessian"], [30, 3, 1, "", "get_magnetic_moment"], [30, 3, 1, "", "get_magnetic_moments"], [30, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [30, 3, 1, "", "get_nonaffine_forces"], [30, 3, 1, "", "get_numerical_non_affine_forces"], [30, 3, 1, "", "get_potential_energies"], [30, 3, 1, "", "get_potential_energy"], [30, 3, 1, "", "get_property"], [30, 3, 1, "", "get_stress"], [30, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [30, 3, 1, "", "get_stresses"], [30, 4, 1, "", "ignored_changes"], [30, 4, 1, "", "implemented_properties"], [30, 5, 1, "", "label"], [30, 3, 1, "", "read"], [30, 3, 1, "", "read_atoms"], [30, 3, 1, "", "reset"], [30, 3, 1, "", "set"], [30, 3, 1, "", "set_label"], [30, 3, 1, "", "todict"]], "matscipy.calculators.committee": [[32, 0, 0, "-", "committee"], [33, 0, 0, "-", "log"], [34, 0, 0, "-", "utils"]], "matscipy.calculators.committee.committee": [[32, 2, 1, "", "Committee"], [32, 2, 1, "", "CommitteeMember"], [32, 2, 1, "", "CommitteeUncertainty"]], "matscipy.calculators.committee.committee.Committee": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "add_member"], [32, 5, 1, "", "alphas"], [32, 5, 1, "", "atoms"], [32, 3, 1, "", "calibrate"], [32, 5, 1, "", "calibrated_for"], [32, 5, 1, "", "id_counter"], [32, 5, 1, "", "id_to_atoms"], [32, 5, 1, "", "ids"], [32, 3, 1, "", "is_calibrated_for"], [32, 5, 1, "", "members"], [32, 5, 1, "", "number"], [32, 3, 1, "", "scale_uncertainty"], [32, 3, 1, "", "set_internal_validation_set"], [32, 5, 1, "", "validation_set"]], "matscipy.calculators.committee.committee.CommitteeMember": [[32, 3, 1, "", "__init__"], [32, 5, 1, "", "atoms"], [32, 5, 1, "", "calculator"], [32, 5, 1, "", "filename"], [32, 5, 1, "", "ids"], [32, 3, 1, "", "is_sample_in_atoms"], [32, 3, 1, "", "set_training_data"]], "matscipy.calculators.committee.committee.CommitteeUncertainty": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "band_structure"], [32, 3, 1, "", "calculate"], [32, 3, 1, "", "calculate_numerical_forces"], [32, 3, 1, "", "calculate_numerical_stress"], [32, 3, 1, "", "calculate_properties"], [32, 3, 1, "", "calculation_required"], [32, 3, 1, "", "check_state"], [32, 4, 1, "", "default_parameters"], [32, 5, 1, "", "directory"], [32, 4, 1, "", "discard_results_on_any_change"], [32, 3, 1, "", "export_properties"], [32, 3, 1, "", "get_atoms"], [32, 3, 1, "", "get_charges"], [32, 3, 1, "", "get_default_parameters"], [32, 3, 1, "", "get_dipole_moment"], [32, 3, 1, "", "get_forces"], [32, 3, 1, "", "get_magnetic_moment"], [32, 3, 1, "", "get_magnetic_moments"], [32, 3, 1, "", "get_potential_energies"], [32, 3, 1, "", "get_potential_energy"], [32, 3, 1, "", "get_property"], [32, 3, 1, "", "get_stress"], [32, 3, 1, "", "get_stresses"], [32, 4, 1, "", "ignored_changes"], [32, 4, 1, "", "implemented_properties"], [32, 5, 1, "", "label"], [32, 3, 1, "", "read"], [32, 3, 1, "", "read_atoms"], [32, 3, 1, "", "reset"], [32, 3, 1, "", "set"], [32, 3, 1, "", "set_label"], [32, 3, 1, "", "todict"]], "matscipy.calculators.committee.log": [[33, 1, 1, "", "create_logger"], [33, 1, 1, "", "set_logging"]], "matscipy.calculators.committee.utils": [[34, 1, 1, "", "subsample"]], "matscipy.calculators.eam": [[36, 0, 0, "-", "average_atom"], [37, 0, 0, "-", "calculator"], [38, 0, 0, "-", "io"]], "matscipy.calculators.eam.average_atom": [[36, 1, 1, "", "average_potential"]], "matscipy.calculators.eam.calculator": [[37, 2, 1, "", "EAM"]], "matscipy.calculators.eam.calculator.EAM": [[37, 3, 1, "", "__init__"], [37, 3, 1, "", "band_structure"], [37, 3, 1, "", "calculate"], [37, 3, 1, "", "calculate_hessian_matrix"], [37, 3, 1, "", "calculate_numerical_forces"], [37, 3, 1, "", "calculate_numerical_stress"], [37, 3, 1, "", "calculate_properties"], [37, 3, 1, "", "calculation_required"], [37, 3, 1, "", "check_state"], [37, 5, 1, "", "cutoff"], [37, 4, 1, "", "default_parameters"], [37, 5, 1, "", "directory"], [37, 4, 1, "", "discard_results_on_any_change"], [37, 3, 1, "", "energy_virial_and_forces"], [37, 3, 1, "", "export_properties"], [37, 3, 1, "", "get_atoms"], [37, 3, 1, "", "get_birch_coefficients"], [37, 3, 1, "", "get_born_elastic_constants"], [37, 3, 1, "", "get_charges"], [37, 3, 1, "", "get_default_parameters"], [37, 3, 1, "", "get_dipole_moment"], [37, 3, 1, "", "get_dynamical_matrix"], [37, 3, 1, "", "get_elastic_constants"], [37, 3, 1, "", "get_forces"], [37, 3, 1, "", "get_hessian"], [37, 3, 1, "", "get_magnetic_moment"], [37, 3, 1, "", "get_magnetic_moments"], [37, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [37, 3, 1, "", "get_nonaffine_forces"], [37, 3, 1, "", "get_numerical_non_affine_forces"], [37, 3, 1, "", "get_potential_energies"], [37, 3, 1, "", "get_potential_energy"], [37, 3, 1, "", "get_property"], [37, 3, 1, "", "get_stress"], [37, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [37, 3, 1, "", "get_stresses"], [37, 4, 1, "", "ignored_changes"], [37, 4, 1, "", "implemented_properties"], [37, 5, 1, "", "label"], [37, 4, 1, "", "name"], [37, 3, 1, "", "read"], [37, 3, 1, "", "read_atoms"], [37, 3, 1, "", "reset"], [37, 3, 1, "", "set"], [37, 3, 1, "", "set_label"], [37, 3, 1, "", "todict"]], "matscipy.calculators.eam.io": [[38, 2, 1, "", "EAMParameters"], [38, 1, 1, "", "mix_eam"], [38, 1, 1, "", "read_eam"], [38, 1, 1, "", "write_eam"]], "matscipy.calculators.eam.io.EAMParameters": [[38, 4, 1, "", "atomic_masses"], [38, 4, 1, "", "atomic_numbers"], [38, 3, 1, "", "count"], [38, 4, 1, "", "crystal_structures"], [38, 4, 1, "", "cutoff"], [38, 4, 1, "", "density_grid_spacing"], [38, 4, 1, "", "distance_grid_spacing"], [38, 3, 1, "", "index"], [38, 4, 1, "", "lattice_constants"], [38, 4, 1, "", "number_of_density_grid_points"], [38, 4, 1, "", "number_of_distance_grid_points"], [38, 4, 1, "", "symbols"]], "matscipy.calculators.ewald": [[40, 0, 0, "-", "calculator"]], "matscipy.calculators.ewald.calculator": [[40, 2, 1, "", "Ewald"], [40, 2, 1, "", "EwaldShortRange"]], "matscipy.calculators.ewald.calculator.Ewald": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "allowed_wave_vectors"], [40, 5, 1, "", "alpha"], [40, 3, 1, "", "band_structure"], [40, 3, 1, "", "calculate"], [40, 3, 1, "", "calculate_numerical_forces"], [40, 3, 1, "", "calculate_numerical_stress"], [40, 3, 1, "", "calculate_properties"], [40, 3, 1, "", "calculation_required"], [40, 3, 1, "", "check_state"], [40, 4, 1, "", "default_parameters"], [40, 3, 1, "", "determine_alpha"], [40, 3, 1, "", "determine_kc"], [40, 3, 1, "", "determine_nk"], [40, 5, 1, "", "directory"], [40, 4, 1, "", "discard_results_on_any_change"], [40, 3, 1, "", "export_properties"], [40, 3, 1, "", "first_derivative_kspace"], [40, 3, 1, "", "get_atoms"], [40, 3, 1, "", "get_birch_coefficients"], [40, 3, 1, "", "get_born_elastic_constants"], [40, 3, 1, "", "get_charges"], [40, 3, 1, "", "get_default_parameters"], [40, 3, 1, "", "get_dipole_moment"], [40, 3, 1, "", "get_dynamical_matrix"], [40, 3, 1, "", "get_elastic_constants"], [40, 3, 1, "", "get_forces"], [40, 3, 1, "", "get_hessian"], [40, 3, 1, "", "get_magnetic_moment"], [40, 3, 1, "", "get_magnetic_moments"], [40, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [40, 3, 1, "", "get_nonaffine_forces"], [40, 3, 1, "", "get_numerical_non_affine_forces"], [40, 3, 1, "", "get_potential_energies"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_property"], [40, 3, 1, "", "get_stress"], [40, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [40, 3, 1, "", "get_stresses"], [40, 4, 1, "", "ignored_changes"], [40, 4, 1, "", "implemented_properties"], [40, 3, 1, "", "kspace_energy"], [40, 3, 1, "", "kspace_properties"], [40, 5, 1, "", "label"], [40, 4, 1, "", "name"], [40, 3, 1, "", "read"], [40, 3, 1, "", "read_atoms"], [40, 3, 1, "", "reset"], [40, 3, 1, "", "reset_kspace"], [40, 3, 1, "", "rms_kspace"], [40, 3, 1, "", "rms_rspace"], [40, 3, 1, "", "self_energy"], [40, 3, 1, "", "set"], [40, 3, 1, "", "set_label"], [40, 5, 1, "", "short_range"], [40, 3, 1, "", "stress_kspace"], [40, 3, 1, "", "todict"]], "matscipy.calculators.ewald.calculator.EwaldShortRange": [[40, 3, 1, "", "__init__"], [40, 5, 1, "", "cutoff"], [40, 3, 1, "", "derivative"], [40, 3, 1, "", "first_derivative"], [40, 3, 1, "", "get_cutoff"], [40, 3, 1, "", "second_derivative"]], "matscipy.calculators.fitting": [[41, 2, 1, "", "CombinedFit"], [41, 2, 1, "", "Fit"], [41, 2, 1, "", "FitB2"], [41, 2, 1, "", "FitBCC"], [41, 2, 1, "", "FitCubicCrystal"], [41, 2, 1, "", "FitDiamond"], [41, 2, 1, "", "FitDiamond100"], [41, 2, 1, "", "FitDiamond110"], [41, 2, 1, "", "FitDiamond111"], [41, 2, 1, "", "FitDimer"], [41, 2, 1, "", "FitFCC"], [41, 2, 1, "", "FitGraphene"], [41, 2, 1, "", "FitGraphite"], [41, 2, 1, "", "FitHexagonalCrystal"], [41, 2, 1, "", "FitL1_0"], [41, 2, 1, "", "FitL1_2"], [41, 2, 1, "", "FitSC"], [41, 2, 1, "", "FitSinglePoint"], [41, 2, 1, "", "FitSurface"], [41, 2, 1, "", "FitTetragonalCrystal"], [41, 2, 1, "", "Parameters"], [41, 2, 1, "", "Penalty"], [41, 2, 1, "", "RotatingFit"]], "matscipy.calculators.fitting.CombinedFit": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "targets"]], "matscipy.calculators.fitting.Fit": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.FitB2": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C11"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_Cp"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitBCC": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C11"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_Cp"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitCubicCrystal": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C11"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_Cp"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C11"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_Cp"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond100": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 3, 1, "", "get_surface_energy"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_surface"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "surfstr"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond110": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 3, 1, "", "get_surface_energy"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_surface"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "surfstr"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond111": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 3, 1, "", "get_surface_energy"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_surface"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "surfstr"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDimer": [[41, 4, 1, "", "D0"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_distance"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_dimer"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "r0"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_D0"], [41, 4, 1, "", "w_r0"]], "matscipy.calculators.fitting.FitFCC": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C11"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_Cp"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphene": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "c0"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphite": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "c0"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitHexagonalCrystal": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "c0"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitL1_0": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "c0"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C33"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_C66"], [41, 3, 1, "", "get_D1"], [41, 3, 1, "", "get_D2"], [41, 3, 1, "", "get_D4"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"], [41, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.FitL1_2": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C11"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_Cp"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSC": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "crystalstr"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C11"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_Cp"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSinglePoint": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "energy"], [41, 4, 1, "", "forces"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "stress"], [41, 4, 1, "", "w_energy"], [41, 4, 1, "", "w_forces"], [41, 4, 1, "", "w_stress"]], "matscipy.calculators.fitting.FitSurface": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 3, 1, "", "get_surface_energy"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitTetragonalCrystal": [[41, 4, 1, "", "Ec"], [41, 3, 1, "", "__init__"], [41, 4, 1, "", "a0"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "c0"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "crystal"], [41, 4, 1, "", "fmax"], [41, 3, 1, "", "get_C33"], [41, 3, 1, "", "get_C44"], [41, 3, 1, "", "get_C66"], [41, 3, 1, "", "get_D1"], [41, 3, 1, "", "get_D2"], [41, 3, 1, "", "get_D4"], [41, 3, 1, "", "get_SFE"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_lattice_constant"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "new_bulk"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"], [41, 4, 1, "", "w_Ec"], [41, 4, 1, "", "w_a0"], [41, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.Parameters": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "constant"], [41, 4, 1, "", "default"], [41, 4, 1, "", "derived"], [41, 3, 1, "", "get"], [41, 3, 1, "", "get_array"], [41, 3, 1, "", "get_constant"], [41, 3, 1, "", "get_derived"], [41, 3, 1, "", "get_dict"], [41, 3, 1, "", "get_lower_bounds"], [41, 3, 1, "", "get_upper_bounds"], [41, 3, 1, "", "get_variable"], [41, 4, 1, "", "hidden"], [41, 3, 1, "", "in_range"], [41, 4, 1, "", "parameters"], [41, 4, 1, "", "range_mapping"], [41, 4, 1, "", "ranges"], [41, 3, 1, "", "set"], [41, 3, 1, "", "set_array"], [41, 3, 1, "", "set_constant"], [41, 3, 1, "", "set_derived"], [41, 3, 1, "", "set_dict"], [41, 3, 1, "", "set_range_derived"], [41, 3, 1, "", "set_variable"], [41, 4, 1, "", "variable"]], "matscipy.calculators.fitting.Penalty": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "atoms"], [41, 4, 1, "", "calc"], [41, 4, 1, "", "cost_history"], [41, 4, 1, "", "func"], [41, 3, 1, "", "get_cohesive_energy"], [41, 3, 1, "", "get_cost_function"], [41, 3, 1, "", "get_cost_history"], [41, 3, 1, "", "get_parameters_at_minimal_cost"], [41, 3, 1, "", "get_potential_energy"], [41, 3, 1, "", "get_residuals"], [41, 3, 1, "", "get_residuals_history"], [41, 3, 1, "", "get_square_residuals"], [41, 4, 1, "", "minimal_cost"], [41, 3, 1, "", "optimize"], [41, 3, 1, "", "optimize_anneal"], [41, 3, 1, "", "optimize_brute"], [41, 3, 1, "", "optimize_leastsq"], [41, 3, 1, "", "optimize_openopt"], [41, 4, 1, "", "par"], [41, 4, 1, "", "par_at_minimal_cost"], [41, 4, 1, "", "residuals_history"], [41, 3, 1, "", "set_calculator"], [41, 3, 1, "", "set_calculator_class"], [41, 3, 1, "", "set_parameters"], [41, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.RotatingFit": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "optimize"], [41, 4, 1, "", "par"], [41, 4, 1, "", "targets"]], "matscipy.calculators.manybody": [[43, 0, 0, "-", "calculator"], [44, 0, 0, "-", "explicit_forms"], [49, 0, 0, "-", "newmb"], [50, 0, 0, "-", "potentials"]], "matscipy.calculators.manybody.calculator": [[43, 2, 1, "", "Manybody"], [43, 2, 1, "", "NiceManybody"]], "matscipy.calculators.manybody.calculator.Manybody": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "band_structure"], [43, 3, 1, "", "calculate"], [43, 3, 1, "", "calculate_numerical_forces"], [43, 3, 1, "", "calculate_numerical_stress"], [43, 3, 1, "", "calculate_properties"], [43, 3, 1, "", "calculation_required"], [43, 3, 1, "", "check_state"], [43, 4, 1, "", "default_parameters"], [43, 5, 1, "", "directory"], [43, 4, 1, "", "discard_results_on_any_change"], [43, 3, 1, "", "export_properties"], [43, 3, 1, "", "get_atoms"], [43, 3, 1, "", "get_birch_coefficients"], [43, 3, 1, "", "get_born_elastic_constants"], [43, 3, 1, "", "get_charges"], [43, 3, 1, "", "get_cutoff"], [43, 3, 1, "", "get_default_parameters"], [43, 3, 1, "", "get_dipole_moment"], [43, 3, 1, "", "get_dynamical_matrix"], [43, 3, 1, "", "get_elastic_constants"], [43, 3, 1, "", "get_forces"], [43, 3, 1, "", "get_hessian"], [43, 3, 1, "", "get_hessian_from_second_derivative"], [43, 3, 1, "", "get_magnetic_moment"], [43, 3, 1, "", "get_magnetic_moments"], [43, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [43, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [43, 3, 1, "", "get_nonaffine_forces"], [43, 3, 1, "", "get_numerical_non_affine_forces"], [43, 3, 1, "", "get_potential_energies"], [43, 3, 1, "", "get_potential_energy"], [43, 3, 1, "", "get_property"], [43, 3, 1, "", "get_second_derivative"], [43, 3, 1, "", "get_stress"], [43, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [43, 3, 1, "", "get_stresses"], [43, 4, 1, "", "ignored_changes"], [43, 4, 1, "", "implemented_properties"], [43, 5, 1, "", "label"], [43, 4, 1, "", "name"], [43, 3, 1, "", "read"], [43, 3, 1, "", "read_atoms"], [43, 3, 1, "", "reset"], [43, 3, 1, "", "set"], [43, 3, 1, "", "set_label"], [43, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody": [[43, 2, 1, "", "F"], [43, 2, 1, "", "G"], [43, 3, 1, "", "__init__"], [43, 3, 1, "", "band_structure"], [43, 3, 1, "", "calculate"], [43, 3, 1, "", "calculate_numerical_forces"], [43, 3, 1, "", "calculate_numerical_stress"], [43, 3, 1, "", "calculate_properties"], [43, 3, 1, "", "calculation_required"], [43, 3, 1, "", "check_state"], [43, 4, 1, "", "default_parameters"], [43, 5, 1, "", "directory"], [43, 4, 1, "", "discard_results_on_any_change"], [43, 3, 1, "", "export_properties"], [43, 3, 1, "", "get_atoms"], [43, 3, 1, "", "get_birch_coefficients"], [43, 3, 1, "", "get_born_elastic_constants"], [43, 3, 1, "", "get_charges"], [43, 3, 1, "", "get_cutoff"], [43, 3, 1, "", "get_default_parameters"], [43, 3, 1, "", "get_dipole_moment"], [43, 3, 1, "", "get_dynamical_matrix"], [43, 3, 1, "", "get_elastic_constants"], [43, 3, 1, "", "get_forces"], [43, 3, 1, "", "get_hessian"], [43, 3, 1, "", "get_hessian_from_second_derivative"], [43, 3, 1, "", "get_magnetic_moment"], [43, 3, 1, "", "get_magnetic_moments"], [43, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [43, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [43, 3, 1, "", "get_nonaffine_forces"], [43, 3, 1, "", "get_numerical_non_affine_forces"], [43, 3, 1, "", "get_potential_energies"], [43, 3, 1, "", "get_potential_energy"], [43, 3, 1, "", "get_property"], [43, 3, 1, "", "get_second_derivative"], [43, 3, 1, "", "get_stress"], [43, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [43, 3, 1, "", "get_stresses"], [43, 4, 1, "", "ignored_changes"], [43, 4, 1, "", "implemented_properties"], [43, 5, 1, "", "label"], [43, 4, 1, "", "name"], [43, 3, 1, "", "read"], [43, 3, 1, "", "read_atoms"], [43, 3, 1, "", "reset"], [43, 3, 1, "", "set"], [43, 3, 1, "", "set_label"], [43, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody.F": [[43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.calculator.NiceManybody.G": [[43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms": [[45, 0, 0, "-", "harmonic"], [46, 0, 0, "-", "kumagai"], [47, 0, 0, "-", "stillinger_weber"], [48, 0, 0, "-", "tersoff_brenner"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[45, 2, 1, "", "HarmonicAngle"], [45, 2, 1, "", "HarmonicBond"], [45, 2, 1, "", "ZeroPair"], [45, 2, 1, "", "ZeroTriplet"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "gradient"], [45, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "gradient"], [45, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair": [[45, 3, 1, "", "gradient"], [45, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet": [[45, 3, 1, "", "gradient"], [45, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[46, 1, 1, "", "Kumagai"], [46, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[47, 1, 1, "", "StillingerWeber"], [47, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[48, 1, 1, "", "TersoffBrenner"], [48, 1, 1, "", "mix"], [48, 1, 1, "", "mix_arithmetic"], [48, 1, 1, "", "mix_geometric"], [48, 1, 1, "", "pair_index"], [48, 1, 1, "", "triplet_index"]], "matscipy.calculators.manybody.newmb": [[49, 2, 1, "", "Manybody"]], "matscipy.calculators.manybody.newmb.Manybody": [[49, 2, 1, "", "Phi"], [49, 2, 1, "", "Theta"], [49, 3, 1, "", "__init__"], [49, 3, 1, "", "band_structure"], [49, 3, 1, "", "calculate"], [49, 3, 1, "", "calculate_numerical_forces"], [49, 3, 1, "", "calculate_numerical_stress"], [49, 3, 1, "", "calculate_properties"], [49, 3, 1, "", "calculation_required"], [49, 3, 1, "", "check_state"], [49, 4, 1, "", "default_parameters"], [49, 5, 1, "", "directory"], [49, 4, 1, "", "discard_results_on_any_change"], [49, 3, 1, "", "export_properties"], [49, 3, 1, "", "get_atoms"], [49, 3, 1, "", "get_birch_coefficients"], [49, 3, 1, "", "get_born_elastic_constants"], [49, 3, 1, "", "get_charges"], [49, 3, 1, "", "get_default_parameters"], [49, 3, 1, "", "get_dipole_moment"], [49, 3, 1, "", "get_dynamical_matrix"], [49, 3, 1, "", "get_elastic_constants"], [49, 3, 1, "", "get_forces"], [49, 3, 1, "", "get_hessian"], [49, 3, 1, "", "get_magnetic_moment"], [49, 3, 1, "", "get_magnetic_moments"], [49, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [49, 3, 1, "", "get_nonaffine_forces"], [49, 3, 1, "", "get_numerical_non_affine_forces"], [49, 3, 1, "", "get_potential_energies"], [49, 3, 1, "", "get_potential_energy"], [49, 3, 1, "", "get_property"], [49, 3, 1, "", "get_stress"], [49, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [49, 3, 1, "", "get_stresses"], [49, 4, 1, "", "ignored_changes"], [49, 4, 1, "", "implemented_properties"], [49, 5, 1, "", "label"], [49, 3, 1, "", "read"], [49, 3, 1, "", "read_atoms"], [49, 3, 1, "", "reset"], [49, 3, 1, "", "set"], [49, 3, 1, "", "set_label"], [49, 3, 1, "", "sum_XX_sum_ijk_tau_XX_mn"], [49, 3, 1, "", "sum_XY_sum_ijk_tau_XY_mn"], [49, 3, 1, "", "sum_X_sum_ijk_tau_ijX_mn"], [49, 3, 1, "", "sum_X_sum_ijk_tau_ij_XOR_X_mn"], [49, 3, 1, "", "sum_ij_pi_ij_n"], [49, 3, 1, "", "sum_ij_sum_X_pi_X_n"], [49, 3, 1, "", "sum_ijk_tau_XY_mn"], [49, 3, 1, "", "todict"]], "matscipy.calculators.manybody.newmb.Manybody.Phi": [[49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.newmb.Manybody.Theta": [[49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials": [[50, 2, 1, "", "BornMayerCut"], [50, 2, 1, "", "HarmonicAngle"], [50, 2, 1, "", "HarmonicPair"], [50, 2, 1, "", "KumagaiAngle"], [50, 2, 1, "", "KumagaiPair"], [50, 2, 1, "", "LennardJones"], [50, 2, 1, "", "StillingerWeberAngle"], [50, 2, 1, "", "StillingerWeberPair"], [50, 2, 1, "", "SymPhi"], [50, 2, 1, "", "SymTheta"], [50, 2, 1, "", "TersoffBrennerAngle"], [50, 2, 1, "", "TersoffBrennerPair"], [50, 2, 1, "", "ZeroAngle"], [50, 2, 1, "", "ZeroPair"], [50, 1, 1, "", "angle_distance_defined"], [50, 1, 1, "", "distance_defined"]], "matscipy.calculators.manybody.potentials.BornMayerCut": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicAngle": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicPair": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiAngle": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiPair": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.LennardJones": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberAngle": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberPair": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.SymPhi": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.SymTheta": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerAngle": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerPair": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroAngle": [[50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroPair": [[50, 3, 1, "", "gradient"], [50, 3, 1, "", "hessian"]], "matscipy.calculators.mcfm": [[51, 2, 1, "", "MultiClusterForceMixingPotential"], [52, 0, 0, "-", "calculator"], [53, 0, 0, "-", "cluster_data"], [54, 0, 0, "-", "mcfm_parallel"], [57, 0, 0, "-", "neighbour_list_mcfm"], [60, 0, 0, "-", "qm_cluster"], [61, 0, 0, "-", "qm_cluster_tools"]], "matscipy.calculators.mcfm.MultiClusterForceMixingPotential": [[51, 3, 1, "", "__init__"], [51, 4, 1, "", "all_changes"], [51, 3, 1, "", "attach_hybrid_data"], [51, 3, 1, "", "band_structure"], [51, 3, 1, "", "calculate"], [51, 3, 1, "", "calculate_numerical_forces"], [51, 3, 1, "", "calculate_numerical_stress"], [51, 3, 1, "", "calculate_properties"], [51, 3, 1, "", "calculation_required"], [51, 3, 1, "", "check_state"], [51, 3, 1, "", "combine_qm_mm_forces"], [51, 3, 1, "", "compute_stress"], [51, 4, 1, "", "default_parameters"], [51, 5, 1, "", "directory"], [51, 4, 1, "", "discard_results_on_any_change"], [51, 3, 1, "", "evaluate_errors"], [51, 3, 1, "", "evaluate_qm_cluster_serial"], [51, 3, 1, "", "export_properties"], [51, 3, 1, "", "get_atoms"], [51, 3, 1, "", "get_charges"], [51, 3, 1, "", "get_default_parameters"], [51, 3, 1, "", "get_dipole_moment"], [51, 3, 1, "", "get_forces"], [51, 3, 1, "", "get_magnetic_moment"], [51, 3, 1, "", "get_magnetic_moments"], [51, 3, 1, "", "get_potential_energies"], [51, 3, 1, "", "get_potential_energy"], [51, 3, 1, "", "get_property"], [51, 3, 1, "", "get_stress"], [51, 3, 1, "", "get_stresses"], [51, 4, 1, "", "ignored_changes"], [51, 4, 1, "", "implemented_properties"], [51, 5, 1, "", "label"], [51, 3, 1, "", "print_message"], [51, 3, 1, "", "produce_classical_results"], [51, 3, 1, "", "produce_qm_clusters"], [51, 3, 1, "", "read"], [51, 3, 1, "", "read_atoms"], [51, 3, 1, "", "reset"], [51, 3, 1, "", "set"], [51, 3, 1, "", "set_label"], [51, 3, 1, "", "set_qm_atoms"], [51, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.calculator": [[52, 2, 1, "", "MultiClusterForceMixingPotential"]], "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential": [[52, 3, 1, "", "__init__"], [52, 4, 1, "", "all_changes"], [52, 3, 1, "", "attach_hybrid_data"], [52, 3, 1, "", "band_structure"], [52, 3, 1, "", "calculate"], [52, 3, 1, "", "calculate_numerical_forces"], [52, 3, 1, "", "calculate_numerical_stress"], [52, 3, 1, "", "calculate_properties"], [52, 3, 1, "", "calculation_required"], [52, 3, 1, "", "check_state"], [52, 3, 1, "", "combine_qm_mm_forces"], [52, 3, 1, "", "compute_stress"], [52, 4, 1, "", "default_parameters"], [52, 5, 1, "", "directory"], [52, 4, 1, "", "discard_results_on_any_change"], [52, 3, 1, "", "evaluate_errors"], [52, 3, 1, "", "evaluate_qm_cluster_serial"], [52, 3, 1, "", "export_properties"], [52, 3, 1, "", "get_atoms"], [52, 3, 1, "", "get_charges"], [52, 3, 1, "", "get_default_parameters"], [52, 3, 1, "", "get_dipole_moment"], [52, 3, 1, "", "get_forces"], [52, 3, 1, "", "get_magnetic_moment"], [52, 3, 1, "", "get_magnetic_moments"], [52, 3, 1, "", "get_potential_energies"], [52, 3, 1, "", "get_potential_energy"], [52, 3, 1, "", "get_property"], [52, 3, 1, "", "get_stress"], [52, 3, 1, "", "get_stresses"], [52, 4, 1, "", "ignored_changes"], [52, 4, 1, "", "implemented_properties"], [52, 5, 1, "", "label"], [52, 3, 1, "", "print_message"], [52, 3, 1, "", "produce_classical_results"], [52, 3, 1, "", "produce_qm_clusters"], [52, 3, 1, "", "read"], [52, 3, 1, "", "read_atoms"], [52, 3, 1, "", "reset"], [52, 3, 1, "", "set"], [52, 3, 1, "", "set_label"], [52, 3, 1, "", "set_qm_atoms"], [52, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.cluster_data": [[53, 2, 1, "", "ClusterData"]], "matscipy.calculators.mcfm.cluster_data.ClusterData": [[53, 3, 1, "", "__init__"], [53, 4, 1, "", "forces"], [53, 4, 1, "", "mark"], [53, 4, 1, "", "qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[55, 0, 0, "-", "mcfm_parallel_control"], [56, 0, 0, "-", "mcfm_parallel_worker"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[55, 1, 1, "", "get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[56, 1, 1, "", "worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[58, 0, 0, "-", "neighbour_list_base"], [59, 0, 0, "-", "neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[58, 2, 1, "", "NeighbourListBase"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase": [[58, 3, 1, "", "get_neighbours"], [58, 3, 1, "", "update"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[59, 2, 1, "", "NeighbourListMCFM"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "do_update"], [59, 3, 1, "", "get_neighbours"], [59, 3, 1, "", "update"]], "matscipy.calculators.mcfm.qm_cluster": [[60, 2, 1, "", "QMCluster"]], "matscipy.calculators.mcfm.qm_cluster.QMCluster": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "attach_clustering_module"], [60, 3, 1, "", "attach_flagging_module"], [60, 3, 1, "", "attach_neighbour_list"], [60, 3, 1, "", "carve_cluster"], [60, 3, 1, "", "reset_energized_list"], [60, 3, 1, "", "update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[62, 0, 0, "-", "base_qm_cluster_tool"], [63, 0, 0, "-", "qm_clustering_tool"], [64, 0, 0, "-", "qm_flagging_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[62, 2, 1, "", "BaseQMClusterTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "find_neighbours"], [62, 3, 1, "", "hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[63, 2, 1, "", "QMClusteringTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "carve_cluster"], [63, 3, 1, "", "complete_aromatic_rings"], [63, 3, 1, "", "create_buffer_region"], [63, 3, 1, "", "create_cluster_from_marks"], [63, 3, 1, "", "find_neighbours"], [63, 3, 1, "", "hydrogenate_cluster"], [63, 3, 1, "", "hydrogenate_dangling_bonds"], [63, 3, 1, "", "include_special_atom"], [63, 3, 1, "", "print_message"], [63, 3, 1, "", "replace_double_bond"], [63, 3, 1, "", "replace_single_bond"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[64, 2, 1, "", "QMFlaggingTool"], [64, 1, 1, "", "exponential_moving_average"], [64, 1, 1, "", "update_avg_property_per_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "create_cluster_around_atom"], [64, 3, 1, "", "expand_cluster"], [64, 3, 1, "", "find_neighbours"], [64, 3, 1, "", "get_energized_list"], [64, 3, 1, "", "hydrogenate_cluster"], [64, 3, 1, "", "join_clusters"], [64, 3, 1, "", "update_qm_region"]], "matscipy.calculators.pair_potential": [[66, 0, 0, "-", "calculator"]], "matscipy.calculators.pair_potential.calculator": [[66, 2, 1, "", "BeestKramerSanten"], [66, 2, 1, "", "CutoffInteraction"], [66, 2, 1, "", "FeneLJCut"], [66, 2, 1, "", "LennardJones84"], [66, 2, 1, "", "LennardJonesCut"], [66, 2, 1, "", "LennardJonesLinear"], [66, 2, 1, "", "LennardJonesQuadratic"], [66, 2, 1, "", "PairPotential"]], "matscipy.calculators.pair_potential.calculator.BeestKramerSanten": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "cutoff"], [66, 3, 1, "", "derivative"], [66, 3, 1, "", "first_derivative"], [66, 3, 1, "", "get_cutoff"], [66, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.CutoffInteraction": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "cutoff"], [66, 3, 1, "", "derivative"], [66, 3, 1, "", "first_derivative"], [66, 3, 1, "", "get_cutoff"], [66, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.FeneLJCut": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "cutoff"], [66, 3, 1, "", "derivative"], [66, 3, 1, "", "first_derivative"], [66, 3, 1, "", "get_cutoff"], [66, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJones84": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "cutoff"], [66, 3, 1, "", "derivative"], [66, 3, 1, "", "first_derivative"], [66, 3, 1, "", "get_cutoff"], [66, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesCut": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "cutoff"], [66, 3, 1, "", "derivative"], [66, 3, 1, "", "first_derivative"], [66, 3, 1, "", "get_cutoff"], [66, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesLinear": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "cutoff"], [66, 3, 1, "", "derivative"], [66, 3, 1, "", "first_derivative"], [66, 3, 1, "", "get_cutoff"], [66, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "cutoff"], [66, 3, 1, "", "derivative"], [66, 3, 1, "", "first_derivative"], [66, 3, 1, "", "get_cutoff"], [66, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.PairPotential": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "band_structure"], [66, 3, 1, "", "calculate"], [66, 3, 1, "", "calculate_numerical_forces"], [66, 3, 1, "", "calculate_numerical_stress"], [66, 3, 1, "", "calculate_properties"], [66, 3, 1, "", "calculation_required"], [66, 3, 1, "", "check_state"], [66, 4, 1, "", "default_parameters"], [66, 5, 1, "", "directory"], [66, 4, 1, "", "discard_results_on_any_change"], [66, 3, 1, "", "export_properties"], [66, 3, 1, "", "get_atoms"], [66, 3, 1, "", "get_birch_coefficients"], [66, 3, 1, "", "get_born_elastic_constants"], [66, 3, 1, "", "get_charges"], [66, 3, 1, "", "get_default_parameters"], [66, 3, 1, "", "get_dipole_moment"], [66, 3, 1, "", "get_dynamical_matrix"], [66, 3, 1, "", "get_elastic_constants"], [66, 3, 1, "", "get_forces"], [66, 3, 1, "", "get_hessian"], [66, 3, 1, "", "get_magnetic_moment"], [66, 3, 1, "", "get_magnetic_moments"], [66, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [66, 3, 1, "", "get_nonaffine_forces"], [66, 3, 1, "", "get_numerical_non_affine_forces"], [66, 3, 1, "", "get_potential_energies"], [66, 3, 1, "", "get_potential_energy"], [66, 3, 1, "", "get_property"], [66, 3, 1, "", "get_stress"], [66, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [66, 3, 1, "", "get_stresses"], [66, 4, 1, "", "ignored_changes"], [66, 4, 1, "", "implemented_properties"], [66, 5, 1, "", "label"], [66, 4, 1, "", "name"], [66, 3, 1, "", "read"], [66, 3, 1, "", "read_atoms"], [66, 3, 1, "", "reset"], [66, 3, 1, "", "set"], [66, 3, 1, "", "set_label"], [66, 3, 1, "", "todict"]], "matscipy.calculators.polydisperse": [[68, 0, 0, "-", "calculator"]], "matscipy.calculators.polydisperse.calculator": [[68, 2, 1, "", "InversePowerLawPotential"], [68, 2, 1, "", "Polydisperse"]], "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "derivative"], [68, 3, 1, "", "first_derivative"], [68, 3, 1, "", "get_coeffs"], [68, 3, 1, "", "get_cutoff"], [68, 3, 1, "", "get_maxSize"], [68, 3, 1, "", "get_minSize"], [68, 3, 1, "", "mix_sizes"], [68, 3, 1, "", "second_derivative"]], "matscipy.calculators.polydisperse.calculator.Polydisperse": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "band_structure"], [68, 3, 1, "", "calculate"], [68, 3, 1, "", "calculate_numerical_forces"], [68, 3, 1, "", "calculate_numerical_stress"], [68, 3, 1, "", "calculate_properties"], [68, 3, 1, "", "calculation_required"], [68, 3, 1, "", "check_state"], [68, 4, 1, "", "default_parameters"], [68, 5, 1, "", "directory"], [68, 4, 1, "", "discard_results_on_any_change"], [68, 3, 1, "", "export_properties"], [68, 3, 1, "", "get_atoms"], [68, 3, 1, "", "get_birch_coefficients"], [68, 3, 1, "", "get_born_elastic_constants"], [68, 3, 1, "", "get_charges"], [68, 3, 1, "", "get_default_parameters"], [68, 3, 1, "", "get_dipole_moment"], [68, 3, 1, "", "get_dynamical_matrix"], [68, 3, 1, "", "get_elastic_constants"], [68, 3, 1, "", "get_forces"], [68, 3, 1, "", "get_hessian"], [68, 3, 1, "", "get_magnetic_moment"], [68, 3, 1, "", "get_magnetic_moments"], [68, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [68, 3, 1, "", "get_nonaffine_forces"], [68, 3, 1, "", "get_numerical_non_affine_forces"], [68, 3, 1, "", "get_potential_energies"], [68, 3, 1, "", "get_potential_energy"], [68, 3, 1, "", "get_property"], [68, 3, 1, "", "get_stress"], [68, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [68, 3, 1, "", "get_stresses"], [68, 4, 1, "", "ignored_changes"], [68, 4, 1, "", "implemented_properties"], [68, 5, 1, "", "label"], [68, 4, 1, "", "name"], [68, 3, 1, "", "read"], [68, 3, 1, "", "read_atoms"], [68, 3, 1, "", "reset"], [68, 3, 1, "", "set"], [68, 3, 1, "", "set_label"], [68, 3, 1, "", "todict"]], "matscipy.calculators.supercell_calculator": [[69, 2, 1, "", "SupercellCalculator"]], "matscipy.calculators.supercell_calculator.SupercellCalculator": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "band_structure"], [69, 3, 1, "", "calculate"], [69, 3, 1, "", "calculate_numerical_forces"], [69, 3, 1, "", "calculate_numerical_stress"], [69, 3, 1, "", "calculate_properties"], [69, 3, 1, "", "calculation_required"], [69, 3, 1, "", "check_state"], [69, 4, 1, "", "default_parameters"], [69, 5, 1, "", "directory"], [69, 4, 1, "", "discard_results_on_any_change"], [69, 3, 1, "", "export_properties"], [69, 3, 1, "", "get_atoms"], [69, 3, 1, "", "get_charges"], [69, 3, 1, "", "get_default_parameters"], [69, 3, 1, "", "get_dipole_moment"], [69, 3, 1, "", "get_forces"], [69, 3, 1, "", "get_magnetic_moment"], [69, 3, 1, "", "get_magnetic_moments"], [69, 3, 1, "", "get_potential_energies"], [69, 3, 1, "", "get_potential_energy"], [69, 3, 1, "", "get_property"], [69, 3, 1, "", "get_stress"], [69, 3, 1, "", "get_stresses"], [69, 4, 1, "", "ignored_changes"], [69, 4, 1, "", "implemented_properties"], [69, 5, 1, "", "label"], [69, 4, 1, "", "name"], [69, 3, 1, "", "read"], [69, 3, 1, "", "read_atoms"], [69, 3, 1, "", "reset"], [69, 3, 1, "", "set"], [69, 3, 1, "", "set_label"], [69, 3, 1, "", "todict"]], "matscipy.cauchy_born": [[70, 2, 1, "", "CubicCauchyBorn"], [70, 2, 1, "", "RegressionModel"]], "matscipy.cauchy_born.CubicCauchyBorn": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "apply_shifts"], [70, 3, 1, "", "basis_function_evaluation"], [70, 3, 1, "", "check_for_refit"], [70, 3, 1, "", "eval_shift"], [70, 3, 1, "", "evaluate_E"], [70, 3, 1, "", "evaluate_F"], [70, 3, 1, "", "evaluate_F_or_E"], [70, 3, 1, "", "evaluate_shift_gradient_regression"], [70, 3, 1, "", "evaluate_shift_model"], [70, 3, 1, "", "fit_taylor"], [70, 3, 1, "", "get_cb_error"], [70, 3, 1, "", "get_data_points"], [70, 3, 1, "", "get_model"], [70, 3, 1, "", "get_shift_gradients"], [70, 3, 1, "", "grad_basis_function_evaluation"], [70, 3, 1, "", "initial_regression_fit"], [70, 3, 1, "", "load_regression_model"], [70, 3, 1, "", "load_taylor"], [70, 3, 1, "", "permutation"], [70, 3, 1, "", "predict_shifts"], [70, 3, 1, "", "refit_regression"], [70, 3, 1, "", "save_regression_model"], [70, 3, 1, "", "save_taylor"], [70, 3, 1, "", "set_model"], [70, 3, 1, "", "set_sublattices"], [70, 3, 1, "", "switch_sublattices"], [70, 3, 1, "", "tensor_field_3D_from_atoms"]], "matscipy.cauchy_born.RegressionModel": [[70, 3, 1, "", "fit"], [70, 3, 1, "", "load"], [70, 3, 1, "", "predict"], [70, 3, 1, "", "predict_gradient"], [70, 3, 1, "", "save"]], "matscipy.cli": [[72, 0, 0, "-", "calculators"], [74, 0, 0, "-", "diffusion"], [76, 0, 0, "-", "electrochemistry"], [80, 0, 0, "-", "fracture_mechanics"], [84, 0, 0, "-", "glasses"]], "matscipy.cli.calculators": [[73, 0, 0, "-", "average_eam_potential"]], "matscipy.cli.calculators.average_eam_potential": [[73, 1, 1, "", "main"]], "matscipy.cli.diffusion": [[75, 0, 0, "-", "rms"]], "matscipy.cli.diffusion.rms": [[75, 1, 1, "", "main"]], "matscipy.cli.electrochemistry": [[77, 0, 0, "-", "continuous2discrete"], [78, 0, 0, "-", "poisson_nernst_planck_solver"], [79, 0, 0, "-", "stericify"]], "matscipy.cli.electrochemistry.continuous2discrete": [[77, 1, 1, "", "main"]], "matscipy.cli.electrochemistry.poisson_nernst_planck_solver": [[78, 1, 1, "", "main"]], "matscipy.cli.electrochemistry.stericify": [[79, 1, 1, "", "main"]], "matscipy.cli.fracture_mechanics": [[81, 0, 0, "-", "quasistatic_crack"], [82, 0, 0, "-", "setup_crack"], [83, 0, 0, "-", "sinclair_crack"]], "matscipy.cli.fracture_mechanics.quasistatic_crack": [[81, 1, 1, "", "main"]], "matscipy.cli.fracture_mechanics.setup_crack": [[82, 1, 1, "", "setup_crack"]], "matscipy.cli.fracture_mechanics.sinclair_crack": [[83, 1, 1, "", "main"]], "matscipy.cli.glasses": [[85, 0, 0, "-", "quench"]], "matscipy.cli.glasses.quench": [[85, 1, 1, "", "handle_sigusr2"], [85, 1, 1, "", "main"], [85, 1, 1, "", "random_solid"]], "matscipy.deformation": [[86, 2, 1, "", "RemoveSimpleShearDeformation"], [86, 1, 1, "", "get_shear_distance"]], "matscipy.deformation.RemoveSimpleShearDeformation": [[86, 3, 1, "", "__init__"]], "matscipy.dislocation": [[87, 2, 1, "", "AnisotropicDislocation"], [87, 2, 1, "", "BCCEdge100110Dislocation"], [87, 2, 1, "", "BCCEdge100Dislocation"], [87, 2, 1, "", "BCCEdge111Dislocation"], [87, 2, 1, "", "BCCEdge111barDislocation"], [87, 2, 1, "", "BCCMixed111Dislocation"], [87, 2, 1, "", "BCCScrew111Dislocation"], [87, 2, 1, "", "BodyCenteredCubicOctahedralFactory"], [87, 2, 1, "", "BodyCenteredCubicTetrahedralFactory"], [87, 2, 1, "", "CubicCrystalDislocation"], [87, 2, 1, "", "CubicCrystalDislocationQuadrupole"], [87, 2, 1, "", "CubicCrystalDissociatedDislocation"], [87, 2, 1, "", "DiamondGlide30degreePartial"], [87, 2, 1, "", "DiamondGlide60Degree"], [87, 2, 1, "", "DiamondGlide90degreePartial"], [87, 2, 1, "", "DiamondGlideScrew"], [87, 2, 1, "", "FCCEdge110Dislocation"], [87, 2, 1, "", "FCCEdgeShockleyPartial"], [87, 2, 1, "", "FCCScrew110Dislocation"], [87, 2, 1, "", "FCCScrewShockleyPartial"], [87, 2, 1, "", "FixedLineAtoms"], [87, 4, 1, "", "Quadrupole"], [87, 1, 1, "", "check_duplicates"], [87, 1, 1, "", "compare_configurations"], [87, 1, 1, "", "cost_function"], [87, 1, 1, "", "dipole_displacement_angle"], [87, 1, 1, "", "fit_core_position"], [87, 1, 1, "", "fit_core_position_images"], [87, 1, 1, "", "gamma_line"], [87, 1, 1, "", "get_centering_mask"], [87, 1, 1, "", "get_elastic_constants"], [87, 1, 1, "", "get_u_img"], [87, 1, 1, "", "make_barrier_configurations"], [87, 1, 1, "", "make_edge_cyl"], [87, 1, 1, "", "make_edge_cyl_001_100"], [87, 1, 1, "", "make_screw_cyl"], [87, 1, 1, "", "make_screw_cyl_kink"], [87, 1, 1, "", "make_screw_quadrupole"], [87, 1, 1, "", "make_screw_quadrupole_kink"], [87, 1, 1, "", "ovito_dxa_straight_dislo_info"], [87, 1, 1, "", "plot_bulk"], [87, 1, 1, "", "plot_vitek"], [87, 1, 1, "", "read_dislo_QMMM"], [87, 1, 1, "", "screw_cyl_octahedral"], [87, 1, 1, "", "screw_cyl_tetrahedral"], [87, 1, 1, "", "show_NEB_configurations"], [87, 1, 1, "", "show_configuration"], [87, 1, 1, "", "slice_long_dislo"]], "matscipy.dislocation.AnisotropicDislocation": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "deformation_gradient"], [87, 3, 1, "", "displacement"]], "matscipy.dislocation.BCCEdge100110Dislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id70", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id72", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id76", "burgers"], [87, 4, 1, "id73", "burgers_dimensionless"], [87, 4, 1, "id75", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id77", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id74", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id78", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id79", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id71", "unit_cell"], [87, 5, 1, "id80", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.BCCEdge100Dislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id59", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id61", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id65", "burgers"], [87, 4, 1, "id62", "burgers_dimensionless"], [87, 4, 1, "id64", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id66", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id63", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id67", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id68", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id60", "unit_cell"], [87, 5, 1, "id69", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.BCCEdge111Dislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id26", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id28", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id32", "burgers"], [87, 4, 1, "id29", "burgers_dimensionless"], [87, 4, 1, "id31", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id33", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id30", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id34", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id35", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id27", "unit_cell"], [87, 5, 1, "id36", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.BCCEdge111barDislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id37", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id39", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id43", "burgers"], [87, 4, 1, "id40", "burgers_dimensionless"], [87, 4, 1, "id42", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id44", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id41", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id45", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id46", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id38", "unit_cell"], [87, 5, 1, "id47", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.BCCMixed111Dislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id48", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id50", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id53", "burgers"], [87, 4, 1, "id51", "burgers_dimensionless"], [87, 4, 1, "id52", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id54", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id55", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id56", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id57", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id49", "unit_cell"], [87, 5, 1, "id58", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.BCCScrew111Dislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id15", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id17", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id20", "burgers"], [87, 4, 1, "id18", "burgers_dimensionless"], [87, 4, 1, "id19", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id21", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id22", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id23", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id24", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id16", "unit_cell"], [87, 5, 1, "id25", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.BodyCenteredCubicOctahedralFactory": [[87, 3, 1, "", "align"], [87, 4, 1, "", "atoms_in_unit_cell"], [87, 4, 1, "", "basis_factor"], [87, 4, 1, "", "bravais_basis"], [87, 3, 1, "", "calc_num_atoms"], [87, 3, 1, "", "check_basis_volume"], [87, 4, 1, "", "chop_tolerance"], [87, 3, 1, "", "convert_to_natural_basis"], [87, 4, 1, "", "element_basis"], [87, 3, 1, "", "find_directions"], [87, 3, 1, "", "find_ortho"], [87, 3, 1, "", "get_lattice_constant"], [87, 3, 1, "", "inside"], [87, 4, 1, "", "int_basis"], [87, 4, 1, "", "inverse_basis"], [87, 4, 1, "", "inverse_basis_factor"], [87, 3, 1, "", "make_crystal_basis"], [87, 3, 1, "", "make_list_of_atoms"], [87, 3, 1, "", "make_unit_cell"], [87, 4, 1, "", "other"], [87, 3, 1, "", "print_directions_and_miller"], [87, 3, 1, "", "process_element"], [87, 3, 1, "", "put_atom"], [87, 4, 1, "", "xtal_name"]], "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory": [[87, 3, 1, "", "align"], [87, 4, 1, "", "atoms_in_unit_cell"], [87, 4, 1, "", "basis_factor"], [87, 4, 1, "", "bravais_basis"], [87, 3, 1, "", "calc_num_atoms"], [87, 3, 1, "", "check_basis_volume"], [87, 4, 1, "", "chop_tolerance"], [87, 3, 1, "", "convert_to_natural_basis"], [87, 4, 1, "", "element_basis"], [87, 3, 1, "", "find_directions"], [87, 3, 1, "", "find_ortho"], [87, 3, 1, "", "get_lattice_constant"], [87, 3, 1, "", "inside"], [87, 4, 1, "", "int_basis"], [87, 4, 1, "", "inverse_basis"], [87, 4, 1, "", "inverse_basis_factor"], [87, 3, 1, "", "make_crystal_basis"], [87, 3, 1, "", "make_list_of_atoms"], [87, 3, 1, "", "make_unit_cell"], [87, 4, 1, "", "other"], [87, 3, 1, "", "print_directions_and_miller"], [87, 3, 1, "", "process_element"], [87, 3, 1, "", "put_atom"], [87, 4, 1, "", "xtal_name"]], "matscipy.dislocation.CubicCrystalDislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id7", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id5", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id9", "burgers"], [87, 4, 1, "id4", "burgers_dimensionless"], [87, 4, 1, "id12", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id11", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id0", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id6", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id3", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id8", "unit_cell"], [87, 5, 1, "id10", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.CubicCrystalDislocationQuadrupole": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 4, 1, "", "T"], [87, 3, 1, "", "__init__"], [87, 5, 1, "", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 5, 1, "", "axes"], [87, 4, 1, "", "base"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_glide_quadrupoles"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 3, 1, "", "build_kink_quadrupole"], [87, 3, 1, "", "build_quadrupole"], [87, 5, 1, "", "burgers"], [87, 4, 1, "", "burgers_dimensionless"], [87, 5, 1, "", "crystalstructure"], [87, 4, 1, "", "ctypes"], [87, 4, 1, "", "data"], [87, 3, 1, "", "displacements"], [87, 4, 1, "", "dtype"], [87, 4, 1, "", "flags"], [87, 4, 1, "", "flat"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "", "glide_distance"], [87, 5, 1, "", "glide_distance_dimensionless"], [87, 4, 1, "", "imag"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "", "itemsize"], [87, 4, 1, "", "left_dislocation"], [87, 5, 1, "", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "", "nbytes"], [87, 4, 1, "", "ndim"], [87, 4, 1, "", "new_left_burgers"], [87, 4, 1, "", "new_right_burgers"], [87, 5, 1, "", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "periodic_displacements"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "", "real"], [87, 4, 1, "", "right_dislocation"], [87, 5, 1, "", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "shape"], [87, 4, 1, "", "size"], [87, 4, 1, "", "strides"], [87, 4, 1, "", "stroh"], [87, 5, 1, "", "unit_cell"], [87, 5, 1, "", "unit_cell_core_position"], [87, 5, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"], [87, 3, 1, "", "view_quad"]], "matscipy.dislocation.CubicCrystalDissociatedDislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 5, 1, "", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 5, 1, "", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "", "burgers"], [87, 4, 1, "", "burgers_dimensionless"], [87, 5, 1, "", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "", "glide_distance"], [87, 5, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "", "left_dislocation"], [87, 5, 1, "", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "", "new_left_burgers"], [87, 4, 1, "", "new_right_burgers"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "", "right_dislocation"], [87, 5, 1, "", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 5, 1, "", "unit_cell"], [87, 5, 1, "", "unit_cell_core_position"], [87, 5, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.DiamondGlide30degreePartial": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id81", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id83", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id88", "burgers"], [87, 4, 1, "id84", "burgers_dimensionless"], [87, 4, 1, "id87", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id89", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id85", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id90", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id86", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id82", "unit_cell"], [87, 5, 1, "id91", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.DiamondGlide60Degree": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 5, 1, "", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "", "burgers"], [87, 4, 1, "", "burgers_dimensionless"], [87, 4, 1, "", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "", "left_dislocation"], [87, 4, 1, "", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "", "new_left_burgers"], [87, 4, 1, "", "new_right_burgers"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "", "right_dislocation"], [87, 4, 1, "", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 5, 1, "", "unit_cell"], [87, 5, 1, "", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.DiamondGlide90degreePartial": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id92", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id94", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id99", "burgers"], [87, 4, 1, "id95", "burgers_dimensionless"], [87, 4, 1, "id98", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id100", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id96", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id101", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id97", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id93", "unit_cell"], [87, 5, 1, "id102", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.DiamondGlideScrew": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 5, 1, "", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "", "burgers"], [87, 4, 1, "", "burgers_dimensionless"], [87, 4, 1, "", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "", "left_dislocation"], [87, 4, 1, "", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "", "new_left_burgers"], [87, 4, 1, "", "new_right_burgers"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "", "right_dislocation"], [87, 4, 1, "", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 5, 1, "", "unit_cell"], [87, 5, 1, "", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.FCCEdge110Dislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 5, 1, "", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "", "burgers"], [87, 4, 1, "", "burgers_dimensionless"], [87, 4, 1, "", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "", "left_dislocation"], [87, 4, 1, "", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "", "new_left_burgers"], [87, 4, 1, "", "new_right_burgers"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "", "right_dislocation"], [87, 4, 1, "", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 5, 1, "", "unit_cell"], [87, 5, 1, "", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.FCCEdgeShockleyPartial": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id114", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id116", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id120", "burgers"], [87, 4, 1, "id117", "burgers_dimensionless"], [87, 4, 1, "id119", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id121", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id118", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id122", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id123", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id115", "unit_cell"], [87, 5, 1, "id124", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.FCCScrew110Dislocation": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 5, 1, "", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "", "burgers"], [87, 4, 1, "", "burgers_dimensionless"], [87, 4, 1, "", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "", "left_dislocation"], [87, 4, 1, "", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "", "new_left_burgers"], [87, 4, 1, "", "new_right_burgers"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "", "right_dislocation"], [87, 4, 1, "", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 5, 1, "", "unit_cell"], [87, 5, 1, "", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.FCCScrewShockleyPartial": [[87, 4, 1, "", "ADstroh"], [87, 4, 1, "", "C"], [87, 3, 1, "", "__init__"], [87, 4, 1, "id103", "alat"], [87, 4, 1, "", "atm"], [87, 4, 1, "", "atomman"], [87, 4, 1, "", "avail_methods"], [87, 4, 1, "id105", "axes"], [87, 3, 1, "", "build_cylinder"], [87, 3, 1, "", "build_glide_configurations"], [87, 3, 1, "", "build_impurity_cylinder"], [87, 5, 1, "id109", "burgers"], [87, 4, 1, "id106", "burgers_dimensionless"], [87, 4, 1, "id108", "crystalstructure"], [87, 3, 1, "", "displacements"], [87, 3, 1, "", "get_solvers"], [87, 5, 1, "id110", "glide_distance"], [87, 4, 1, "", "glide_distance_dimensionless"], [87, 3, 1, "", "init_adsl"], [87, 3, 1, "", "init_atomman"], [87, 3, 1, "", "init_solver"], [87, 3, 1, "", "invert_burgers"], [87, 4, 1, "id107", "n_planes"], [87, 4, 1, "", "name"], [87, 4, 1, "id111", "parity"], [87, 4, 1, "", "pbc"], [87, 3, 1, "", "plot_unit_cell"], [87, 4, 1, "id112", "self_consistent"], [87, 3, 1, "", "self_consistent_displacements"], [87, 3, 1, "", "set_burgers"], [87, 4, 1, "", "stroh"], [87, 4, 1, "id104", "unit_cell"], [87, 5, 1, "id113", "unit_cell_core_position"], [87, 4, 1, "", "unit_cell_core_position_dimensionless"], [87, 3, 1, "", "view_cyl"]], "matscipy.dislocation.FixedLineAtoms": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "adjust_forces"], [87, 3, 1, "", "adjust_positions"]], "matscipy.drift": [[88, 2, 1, "", "RemoveDrift"]], "matscipy.drift.RemoveDrift": [[88, 3, 1, "", "__init__"]], "matscipy.elasticity": [[89, 2, 1, "", "CubicElasticModuli"], [89, 1, 1, "", "Voigt_6_to_full_3x3_strain"], [89, 1, 1, "", "Voigt_6_to_full_3x3_stress"], [89, 1, 1, "", "Voigt_6x6_to_cubic"], [89, 1, 1, "", "Voigt_6x6_to_full_3x3x3x3"], [89, 1, 1, "", "coalesce_elastic_constants"], [89, 1, 1, "", "cubic_to_Voigt_6x6"], [89, 1, 1, "", "elastic_moduli"], [89, 1, 1, "", "fit_elastic_constants"], [89, 1, 1, "", "full_3x3_to_Voigt_6_index"], [89, 1, 1, "", "full_3x3_to_Voigt_6_strain"], [89, 1, 1, "", "full_3x3_to_Voigt_6_stress"], [89, 1, 1, "", "full_3x3x3x3_to_Voigt_6x6"], [89, 1, 1, "", "generate_strained_configs"], [89, 1, 1, "", "invariants"], [89, 1, 1, "", "measure_triclinic_elastic_constants"], [89, 1, 1, "", "nonaffine_elastic_contribution"], [89, 1, 1, "", "poisson_ratio"], [89, 1, 1, "", "rotate_cubic_elastic_constants"], [89, 1, 1, "", "rotate_elastic_constants"], [89, 1, 1, "", "youngs_modulus"]], "matscipy.elasticity.CubicElasticModuli": [[89, 3, 1, "", "__init__"], [89, 3, 1, "", "compliance"], [89, 3, 1, "", "rotate"], [89, 3, 1, "", "stiffness"], [89, 4, 1, "", "tol"]], "matscipy.electrochemistry": [[91, 1, 1, "", "continuous2discrete"], [92, 0, 0, "-", "poisson_boltzmann_distribution"], [93, 0, 0, "-", "poisson_nernst_planck_solver"], [94, 0, 0, "-", "poisson_nernst_planck_solver_fenics"], [95, 0, 0, "-", "steric_correction"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[92, 1, 1, "", "charge_density"], [92, 1, 1, "", "concentration"], [92, 1, 1, "", "debye"], [92, 1, 1, "", "gamma"], [92, 1, 1, "", "ionic_strength"], [92, 1, 1, "", "main"], [92, 1, 1, "", "potential"], [92, 1, 1, "", "test"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[93, 1, 1, "", "B"], [93, 2, 1, "", "PoissonNernstPlanckSystem"], [93, 1, 1, "", "jacobian"]], "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem": [[93, 3, 1, "", "G"], [93, 3, 1, "", "__init__"], [93, 5, 1, "", "charge_density"], [93, 5, 1, "", "concentration"], [93, 3, 1, "", "discretize"], [93, 5, 1, "", "grid"], [93, 3, 1, "", "init"], [93, 3, 1, "", "initial_values"], [93, 5, 1, "", "ionic_strength"], [93, 5, 1, "", "lambda_D"], [93, 3, 1, "", "left_controlled_volume_scheme_flux_bc"], [93, 3, 1, "", "left_dirichlet_bc"], [93, 3, 1, "", "left_finite_difference_scheme_flux_bc"], [93, 3, 1, "", "left_potential_dirichlet_bc"], [93, 3, 1, "", "left_potential_robin_bc"], [93, 3, 1, "", "left_robin_bc"], [93, 3, 1, "", "nernst_planck_pde"], [93, 3, 1, "", "newton"], [93, 3, 1, "", "number_conservation_constraint"], [93, 3, 1, "", "poisson_pde"], [93, 5, 1, "", "potential"], [93, 3, 1, "", "right_controlled_volume_scheme_flux_bc"], [93, 3, 1, "", "right_dirichlet_bc"], [93, 3, 1, "", "right_finite_difference_scheme_flux_bc"], [93, 3, 1, "", "right_potential_dirichlet_bc"], [93, 3, 1, "", "right_potential_robin_bc"], [93, 3, 1, "", "right_robin_bc"], [93, 3, 1, "", "solve"], [93, 3, 1, "", "solver_callback"], [93, 3, 1, "", "use_standard_cell_bc"], [93, 3, 1, "", "use_standard_dirichlet_bc"], [93, 3, 1, "", "use_standard_interface_bc"], [93, 3, 1, "", "use_stern_layer_cell_bc"], [93, 5, 1, "", "x1_scaled"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[94, 2, 1, "", "Boundary"], [94, 2, 1, "", "PoissonNernstPlanckSystemFEniCS"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary": [[94, 3, 1, "", "__init__"], [94, 3, 1, "", "get_property"], [94, 3, 1, "", "inside"], [94, 3, 1, "", "map"], [94, 3, 1, "", "mark"], [94, 3, 1, "", "mark_cells"], [94, 3, 1, "", "mark_facets"], [94, 3, 1, "", "set_property"], [94, 3, 1, "", "snap"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS": [[94, 3, 1, "", "G"], [94, 5, 1, "", "X"], [94, 3, 1, "", "__init__"], [94, 3, 1, "", "apply_central_reference_concentration_constraint"], [94, 3, 1, "", "apply_left_concentration_dirichlet_bc"], [94, 3, 1, "", "apply_left_potential_dirichlet_bc"], [94, 3, 1, "", "apply_left_potential_robin_bc"], [94, 3, 1, "", "apply_number_conservation_constraint"], [94, 3, 1, "", "apply_potential_dirichlet_bc"], [94, 3, 1, "", "apply_potential_robin_bc"], [94, 3, 1, "", "apply_right_concentration_dirichlet_bc"], [94, 3, 1, "", "apply_right_potential_dirichlet_bc"], [94, 3, 1, "", "apply_right_potential_robin_bc"], [94, 3, 1, "", "boundary_C"], [94, 3, 1, "", "boundary_L"], [94, 3, 1, "", "boundary_R"], [94, 5, 1, "", "charge_density"], [94, 5, 1, "", "concentration"], [94, 3, 1, "", "discretize"], [94, 5, 1, "", "grid"], [94, 3, 1, "", "init"], [94, 3, 1, "", "initial_values"], [94, 5, 1, "", "ionic_strength"], [94, 5, 1, "", "lambda_D"], [94, 3, 1, "", "left_controlled_volume_scheme_flux_bc"], [94, 3, 1, "", "left_dirichlet_bc"], [94, 3, 1, "", "left_finite_difference_scheme_flux_bc"], [94, 3, 1, "", "left_potential_dirichlet_bc"], [94, 3, 1, "", "left_potential_robin_bc"], [94, 3, 1, "", "left_robin_bc"], [94, 3, 1, "", "nernst_planck_pde"], [94, 3, 1, "", "newton"], [94, 3, 1, "", "number_conservation_constraint"], [94, 3, 1, "", "poisson_pde"], [94, 5, 1, "", "potential"], [94, 3, 1, "", "right_controlled_volume_scheme_flux_bc"], [94, 3, 1, "", "right_dirichlet_bc"], [94, 3, 1, "", "right_finite_difference_scheme_flux_bc"], [94, 3, 1, "", "right_potential_dirichlet_bc"], [94, 3, 1, "", "right_potential_robin_bc"], [94, 3, 1, "", "right_robin_bc"], [94, 3, 1, "", "solve"], [94, 3, 1, "", "solver_callback"], [94, 3, 1, "", "use_central_reference_concentration_based_cell_bc"], [94, 3, 1, "", "use_standard_cell_bc"], [94, 3, 1, "", "use_standard_dirichlet_bc"], [94, 3, 1, "", "use_standard_interface_bc"], [94, 3, 1, "", "use_stern_layer_cell_bc"], [94, 5, 1, "", "x1_scaled"]], "matscipy.electrochemistry.steric_correction": [[95, 2, 1, "", "DeferredMessage"], [95, 1, 1, "", "apply_steric_correction"], [95, 1, 1, "", "box_constraint"], [95, 1, 1, "", "box_constraint_with_gradient"], [95, 1, 1, "", "brute_force_closest_pair"], [95, 1, 1, "", "brute_force_target_function"], [95, 1, 1, "", "neigh_list_based_target_function"], [95, 1, 1, "", "numpy_only_target_function"], [95, 1, 1, "", "planar_closest_pair"], [95, 1, 1, "", "recursive_closest_pair"], [95, 1, 1, "", "scipy_distance_based_closest_pair"], [95, 1, 1, "", "scipy_distance_based_target_function"]], "matscipy.electrochemistry.steric_correction.DeferredMessage": [[95, 3, 1, "", "__init__"]], "matscipy.fracture_mechanics": [[98, 0, 0, "-", "clusters"], [99, 0, 0, "-", "crack"], [100, 0, 0, "-", "crackpathsel"], [101, 0, 0, "-", "energy_release"], [102, 0, 0, "-", "idealbrittlesolid"]], "matscipy.fracture_mechanics.clusters": [[98, 1, 1, "", "bcc"], [98, 1, 1, "", "cluster"], [98, 1, 1, "", "diamond"], [98, 1, 1, "", "fcc"], [98, 1, 1, "", "generate_3D_cubic_111"], [98, 1, 1, "", "generate_3D_structure"], [98, 1, 1, "", "get_alpha_period"], [98, 1, 1, "", "sc"], [98, 1, 1, "", "set_groups"], [98, 1, 1, "", "set_regions"]], "matscipy.fracture_mechanics.crack": [[99, 2, 1, "", "ConstantStrainRate"], [99, 2, 1, "", "CubicCrystalCrack"], [99, 1, 1, "", "G_to_strain"], [99, 2, 1, "", "IsotropicStressField"], [99, 2, 1, "", "RectilinearAnisotropicCrack"], [99, 2, 1, "", "SinclairCrack"], [99, 1, 1, "", "counted"], [99, 1, 1, "", "deformation_gradient_residual"], [99, 1, 1, "", "deformation_gradient_residuals"], [99, 1, 1, "", "displacement_residual"], [99, 1, 1, "", "displacement_residuals"], [99, 1, 1, "", "find_tip_broken_bonds"], [99, 1, 1, "", "find_tip_coordination"], [99, 1, 1, "", "find_tip_stress_field"], [99, 1, 1, "", "fit_crack_stress_field"], [99, 1, 1, "", "get_energy_release_rate"], [99, 1, 1, "", "get_strain"], [99, 1, 1, "", "get_stress_intensity_factor"], [99, 1, 1, "", "isotropic_modeII_crack_tip_displacement_field"], [99, 1, 1, "", "isotropic_modeI_crack_tip_displacement_field"], [99, 1, 1, "", "isotropic_modeI_crack_tip_stress_field"], [99, 1, 1, "", "plot_stress_fields"], [99, 1, 1, "", "print_crack_system"], [99, 1, 1, "", "strain_to_G"], [99, 1, 1, "", "thin_strip_displacement_y"]], "matscipy.fracture_mechanics.crack.ConstantStrainRate": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "adjust_forces"], [99, 3, 1, "", "adjust_positions"], [99, 3, 1, "", "apply_strain"], [99, 3, 1, "", "copy"]], "matscipy.fracture_mechanics.crack.CubicCrystalCrack": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "crack_tip_position"], [99, 3, 1, "", "crack_tip_position_y"], [99, 3, 1, "", "deformation_gradient"], [99, 3, 1, "", "deformation_gradient_from_cartesian_coordinates"], [99, 3, 1, "", "deformation_gradient_from_cylinder_coordinates"], [99, 3, 1, "", "displacements"], [99, 3, 1, "", "displacements_from_cartesian_coordinates"], [99, 3, 1, "", "displacements_from_cylinder_coordinates"], [99, 3, 1, "", "k1g"], [99, 3, 1, "", "k1gsqG"], [99, 3, 1, "", "scale_displacements"], [99, 3, 1, "", "stresses"], [99, 3, 1, "", "stresses_from_cartesian_coordinates"], [99, 3, 1, "", "stresses_from_cylinder_coordinates"]], "matscipy.fracture_mechanics.crack.IsotropicStressField": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "get_stresses"]], "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "deformation_gradient"], [99, 3, 1, "", "displacements"], [99, 3, 1, "", "k1g"], [99, 3, 1, "", "k1gsqG"], [99, 3, 1, "", "rtheta"], [99, 3, 1, "", "set_plane_strain"], [99, 3, 1, "", "set_plane_stress"], [99, 3, 1, "", "stresses"]], "matscipy.fracture_mechanics.crack.SinclairCrack": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "animate"], [99, 3, 1, "", "arc_length_continuation"], [99, 3, 1, "", "convergence_line_plot"], [99, 3, 1, "", "dfk_dk_approx"], [99, 3, 1, "", "fit_cle"], [99, 3, 1, "", "get_crack_tip_force"], [99, 3, 1, "", "get_deformation_gradient"], [99, 3, 1, "", "get_dofs"], [99, 3, 1, "", "get_forces"], [99, 3, 1, "", "get_k_force"], [99, 3, 1, "", "get_potential_energy"], [99, 3, 1, "", "get_precon"], [99, 3, 1, "", "get_xdot"], [99, 5, 1, "", "k"], [99, 3, 1, "", "load_cb_model"], [99, 3, 1, "", "optimize"], [99, 3, 1, "", "pack"], [99, 3, 1, "", "plot"], [99, 3, 1, "", "rescale_k"], [99, 3, 1, "", "save_cb_model"], [99, 3, 1, "", "set_atoms"], [99, 3, 1, "", "set_dofs"], [99, 3, 1, "", "set_shiftmask"], [99, 3, 1, "", "strain_err"], [99, 3, 1, "", "u_cle"], [99, 3, 1, "", "unpack"], [99, 3, 1, "", "update_atoms"], [99, 3, 1, "", "update_precon"], [99, 3, 1, "", "write_atoms_to_file"]], "matscipy.fracture_mechanics.energy_release": [[101, 1, 1, "", "J_integral"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[102, 2, 1, "", "IdealBrittleSolid"], [102, 1, 1, "", "extend_strip"], [102, 1, 1, "", "find_crack_tip"], [102, 1, 1, "", "find_triangles_2d"], [102, 1, 1, "", "set_constraints"], [102, 1, 1, "", "set_initial_velocities"], [102, 1, 1, "", "triangular_lattice_slab"]], "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "band_structure"], [102, 3, 1, "", "calculate"], [102, 3, 1, "", "calculate_numerical_forces"], [102, 3, 1, "", "calculate_numerical_stress"], [102, 3, 1, "", "calculate_properties"], [102, 3, 1, "", "calculation_required"], [102, 3, 1, "", "check_state"], [102, 4, 1, "", "default_parameters"], [102, 5, 1, "", "directory"], [102, 4, 1, "", "discard_results_on_any_change"], [102, 3, 1, "", "export_properties"], [102, 3, 1, "", "get_atoms"], [102, 3, 1, "", "get_charges"], [102, 3, 1, "", "get_default_parameters"], [102, 3, 1, "", "get_dipole_moment"], [102, 3, 1, "", "get_elastic_moduli"], [102, 3, 1, "", "get_forces"], [102, 3, 1, "", "get_magnetic_moment"], [102, 3, 1, "", "get_magnetic_moments"], [102, 3, 1, "", "get_poisson_ratio"], [102, 3, 1, "", "get_potential_energies"], [102, 3, 1, "", "get_potential_energy"], [102, 3, 1, "", "get_property"], [102, 3, 1, "", "get_stress"], [102, 3, 1, "", "get_stresses"], [102, 3, 1, "", "get_wave_speeds"], [102, 3, 1, "", "get_youngs_modulus"], [102, 4, 1, "", "ignored_changes"], [102, 4, 1, "", "implemented_properties"], [102, 5, 1, "", "label"], [102, 3, 1, "", "read"], [102, 3, 1, "", "read_atoms"], [102, 3, 1, "", "reset"], [102, 3, 1, "", "set"], [102, 3, 1, "", "set_label"], [102, 3, 1, "", "set_reference_crystal"], [102, 3, 1, "", "todict"]], "matscipy.gamma_surface": [[103, 2, 1, "", "GammaSurface"], [103, 2, 1, "", "StackingFault"]], "matscipy.gamma_surface.GammaSurface": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "generate_images"], [103, 3, 1, "", "get_energy_densities"], [103, 3, 1, "", "plot_energy_densities"], [103, 3, 1, "", "relax_images"], [103, 3, 1, "", "show"]], "matscipy.gamma_surface.GammaSurface.self": [[103, 4, 1, "", "cut_at"], [103, 4, 1, "", "images"], [103, 4, 1, "", "surf_directions"]], "matscipy.gamma_surface.StackingFault": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "generate_images"], [103, 3, 1, "", "get_energy_densities"], [103, 3, 1, "", "plot_energy_densities"], [103, 3, 1, "", "relax_images"], [103, 3, 1, "", "show"]], "matscipy.gamma_surface.StackingFault.self": [[103, 4, 1, "", "cut_at"], [103, 4, 1, "", "images"], [103, 4, 1, "", "surf_directions"]], "matscipy.hessian_finite_differences": [[104, 1, 1, "", "fd_hessian"]], "matscipy.hydrogenate": [[105, 1, 1, "", "hydrogenate"]], "matscipy.io": [[107, 0, 0, "-", "lammpsdata"], [108, 0, 0, "-", "metis"], [109, 0, 0, "-", "opls"], [110, 0, 0, "-", "tbl"]], "matscipy.io.lammpsdata": [[107, 2, 1, "", "LAMMPSData"], [107, 1, 1, "", "check_legal_name"], [107, 1, 1, "", "column_size"], [107, 1, 1, "", "read_molecules_from_lammps_data"]], "matscipy.io.lammpsdata.LAMMPSData": [[107, 3, 1, "", "__init__"], [107, 3, 1, "", "read"], [107, 3, 1, "", "write"]], "matscipy.io.metis": [[108, 1, 1, "", "save_metis"]], "matscipy.io.opls": [[109, 1, 1, "", "read_block"], [109, 1, 1, "", "read_cutoffs"], [109, 1, 1, "", "read_extended_xyz"], [109, 1, 1, "", "read_lammps_data"], [109, 1, 1, "", "read_lammps_definitions"], [109, 1, 1, "", "read_parameter_file"], [109, 1, 1, "", "update_from_lammps_dump"], [109, 1, 1, "", "write_lammps"], [109, 1, 1, "", "write_lammps_atoms"], [109, 1, 1, "", "write_lammps_definitions"], [109, 1, 1, "", "write_lammps_in"]], "matscipy.io.tbl": [[110, 1, 1, "", "loadtbl"], [110, 1, 1, "", "savetbl"]], "matscipy.logger": [[111, 2, 1, "", "Logger"], [111, 1, 1, "", "flatten"], [111, 1, 1, "", "hdr_str"], [111, 1, 1, "", "hdrfmt_str"], [111, 1, 1, "", "numfmt_str"]], "matscipy.logger.Logger": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "flush"], [111, 3, 1, "", "get_logfile"], [111, 3, 1, "", "has_logfile"], [111, 3, 1, "", "iteration_finished"], [111, 3, 1, "", "pr"], [111, 3, 1, "", "set_logfile"], [111, 3, 1, "", "set_outevery"], [111, 3, 1, "", "st"], [111, 3, 1, "", "warn"]], "matscipy.molecules": [[112, 2, 1, "", "Molecules"]], "matscipy.molecules.Molecules": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "from_atoms"], [112, 3, 1, "", "get_angles"], [112, 3, 1, "", "get_dihedrals"], [112, 3, 1, "", "get_distances"]], "matscipy.neighbours": [[113, 2, 1, "", "CutoffNeighbourhood"], [113, 2, 1, "", "MolecularNeighbourhood"], [113, 2, 1, "", "Neighbourhood"], [113, 1, 1, "", "find_common_neighbours"], [113, 1, 1, "", "find_indices_of_reversed_pairs"], [113, 1, 1, "", "mic"], [113, 1, 1, "", "neighbour_list"], [113, 1, 1, "", "triplet_list"]], "matscipy.neighbours.CutoffNeighbourhood": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "compute_distances"], [113, 3, 1, "", "connected_triplets"], [113, 3, 1, "", "double_neighbourhood"], [113, 3, 1, "", "find_triplet_types"], [113, 3, 1, "", "get_pairs"], [113, 3, 1, "", "get_triplets"], [113, 3, 1, "", "lexsort"], [113, 3, 1, "", "make_result"], [113, 3, 1, "", "mask"], [113, 3, 1, "", "reverse_pair_indices"], [113, 3, 1, "", "triplet_to_numbers"]], "matscipy.neighbours.MolecularNeighbourhood": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "complete_connectivity"], [113, 3, 1, "", "compute_distances"], [113, 3, 1, "", "connected_triplets"], [113, 3, 1, "", "double_connectivity"], [113, 3, 1, "", "double_neighbourhood"], [113, 3, 1, "", "find_triplet_types"], [113, 3, 1, "", "get_pairs"], [113, 3, 1, "", "get_triplets"], [113, 3, 1, "", "lexsort"], [113, 3, 1, "", "make_result"], [113, 3, 1, "", "mask"], [113, 5, 1, "", "molecules"], [113, 5, 1, "", "pair_type"], [113, 3, 1, "", "reverse_pair_indices"], [113, 3, 1, "", "triplet_to_numbers"], [113, 5, 1, "", "triplet_type"]], "matscipy.neighbours.Neighbourhood": [[113, 3, 1, "", "__init__"], [113, 3, 1, "", "compute_distances"], [113, 3, 1, "", "connected_triplets"], [113, 3, 1, "", "double_neighbourhood"], [113, 3, 1, "", "find_triplet_types"], [113, 3, 1, "", "get_pairs"], [113, 3, 1, "", "get_triplets"], [113, 3, 1, "", "lexsort"], [113, 3, 1, "", "make_result"], [113, 3, 1, "", "mask"], [113, 3, 1, "", "reverse_pair_indices"], [113, 3, 1, "", "triplet_to_numbers"]], "matscipy.numerical": [[114, 1, 1, "", "get_derivative_volume"], [114, 1, 1, "", "get_derivative_wave_vector"], [114, 1, 1, "", "numerical_forces"], [114, 1, 1, "", "numerical_hessian"], [114, 1, 1, "", "numerical_nonaffine_forces"], [114, 1, 1, "", "numerical_nonaffine_forces_reference"], [114, 1, 1, "", "numerical_stress"]], "matscipy.numpy_tricks": [[115, 1, 1, "", "mabincount"]], "matscipy.opls": [[116, 2, 1, "", "AnglesData"], [116, 2, 1, "", "BondData"], [116, 2, 1, "", "CutoffList"], [116, 2, 1, "", "DihedralsData"], [116, 2, 1, "", "LJQData"], [116, 2, 1, "", "OPLSStructure"], [116, 1, 1, "", "twochar"]], "matscipy.opls.AnglesData": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "add_name"], [116, 3, 1, "", "get_name"], [116, 3, 1, "", "name_value"], [116, 3, 1, "", "set_names"]], "matscipy.opls.BondData": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "get_name"], [116, 3, 1, "", "get_value"], [116, 3, 1, "", "name_value"], [116, 3, 1, "", "set_names"]], "matscipy.opls.CutoffList": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "get_name"], [116, 3, 1, "", "get_value"], [116, 3, 1, "", "max"], [116, 3, 1, "", "name_value"], [116, 3, 1, "", "set_names"]], "matscipy.opls.DihedralsData": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "add_name"], [116, 3, 1, "", "get_name"], [116, 3, 1, "", "name_value"], [116, 3, 1, "", "set_names"]], "matscipy.opls.LJQData": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "clear"], [116, 3, 1, "", "copy"], [116, 3, 1, "", "fromkeys"], [116, 3, 1, "", "get"], [116, 3, 1, "", "items"], [116, 3, 1, "", "keys"], [116, 3, 1, "", "pop"], [116, 3, 1, "", "popitem"], [116, 3, 1, "", "setdefault"], [116, 3, 1, "", "update"], [116, 3, 1, "", "values"]], "matscipy.opls.OPLSStructure": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "append"], [116, 4, 1, "", "ase_objtype"], [116, 5, 1, "", "calc"], [116, 5, 1, "", "cell"], [116, 3, 1, "", "center"], [116, 5, 1, "", "constraints"], [116, 3, 1, "", "copy"], [116, 4, 1, "", "default_map"], [116, 3, 1, "", "edit"], [116, 3, 1, "", "euler_rotate"], [116, 3, 1, "", "extend"], [116, 3, 1, "", "fromdict"], [116, 3, 1, "", "get_all_distances"], [116, 3, 1, "", "get_angle"], [116, 3, 1, "", "get_angles"], [116, 3, 1, "", "get_angular_momentum"], [116, 3, 1, "", "get_array"], [116, 3, 1, "", "get_atomic_numbers"], [116, 3, 1, "", "get_bonds"], [116, 3, 1, "", "get_calculator"], [116, 3, 1, "", "get_cell"], [116, 3, 1, "", "get_cell_lengths_and_angles"], [116, 3, 1, "", "get_celldisp"], [116, 3, 1, "", "get_center_of_mass"], [116, 3, 1, "", "get_charges"], [116, 3, 1, "", "get_chemical_formula"], [116, 3, 1, "", "get_chemical_symbols"], [116, 3, 1, "", "get_dihedral"], [116, 3, 1, "", "get_dihedrals"], [116, 3, 1, "", "get_dipole_moment"], [116, 3, 1, "", "get_distance"], [116, 3, 1, "", "get_distances"], [116, 3, 1, "", "get_forces"], [116, 3, 1, "", "get_global_number_of_atoms"], [116, 3, 1, "", "get_initial_charges"], [116, 3, 1, "", "get_initial_magnetic_moments"], [116, 3, 1, "", "get_kinetic_energy"], [116, 3, 1, "", "get_magnetic_moment"], [116, 3, 1, "", "get_magnetic_moments"], [116, 3, 1, "", "get_masses"], [116, 3, 1, "", "get_momenta"], [116, 3, 1, "", "get_moments_of_inertia"], [116, 3, 1, "", "get_neighbors"], [116, 3, 1, "", "get_number_of_atoms"], [116, 3, 1, "", "get_pbc"], [116, 3, 1, "", "get_positions"], [116, 3, 1, "", "get_potential_energies"], [116, 3, 1, "", "get_potential_energy"], [116, 3, 1, "", "get_properties"], [116, 3, 1, "", "get_reciprocal_cell"], [116, 3, 1, "", "get_scaled_positions"], [116, 3, 1, "", "get_stress"], [116, 3, 1, "", "get_stresses"], [116, 3, 1, "", "get_tags"], [116, 3, 1, "", "get_temperature"], [116, 3, 1, "", "get_total_energy"], [116, 3, 1, "", "get_types"], [116, 3, 1, "", "get_velocities"], [116, 3, 1, "", "get_volume"], [116, 3, 1, "", "has"], [116, 3, 1, "", "iterimages"], [116, 3, 1, "", "new_array"], [116, 5, 1, "", "number_of_lattice_vectors"], [116, 5, 1, "", "numbers"], [116, 5, 1, "", "pbc"], [116, 3, 1, "", "pop"], [116, 5, 1, "", "positions"], [116, 3, 1, "", "rattle"], [116, 3, 1, "", "repeat"], [116, 3, 1, "", "rotate"], [116, 3, 1, "", "rotate_dihedral"], [116, 3, 1, "", "set_angle"], [116, 3, 1, "", "set_array"], [116, 3, 1, "", "set_atom_data"], [116, 3, 1, "", "set_atomic_numbers"], [116, 3, 1, "", "set_calculator"], [116, 3, 1, "", "set_cell"], [116, 3, 1, "", "set_celldisp"], [116, 3, 1, "", "set_center_of_mass"], [116, 3, 1, "", "set_chemical_symbols"], [116, 3, 1, "", "set_constraint"], [116, 3, 1, "", "set_cutoffs"], [116, 3, 1, "", "set_dihedral"], [116, 3, 1, "", "set_distance"], [116, 3, 1, "", "set_initial_charges"], [116, 3, 1, "", "set_initial_magnetic_moments"], [116, 3, 1, "", "set_masses"], [116, 3, 1, "", "set_momenta"], [116, 3, 1, "", "set_pbc"], [116, 3, 1, "", "set_positions"], [116, 3, 1, "", "set_scaled_positions"], [116, 3, 1, "", "set_tags"], [116, 3, 1, "", "set_types"], [116, 3, 1, "", "set_velocities"], [116, 5, 1, "", "symbols"], [116, 3, 1, "", "todict"], [116, 3, 1, "", "translate"], [116, 3, 1, "", "wrap"], [116, 3, 1, "", "write"]], "matscipy.optimize": [[117, 1, 1, "", "ode12r"]], "matscipy.precon": [[118, 2, 1, "", "HessianPrecon"]], "matscipy.precon.HessianPrecon": [[118, 3, 1, "", "Pdot"], [118, 3, 1, "", "__init__"], [118, 3, 1, "", "apply"], [118, 3, 1, "", "asarray"], [118, 3, 1, "", "copy"], [118, 3, 1, "", "dot"], [118, 3, 1, "", "make_precon"], [118, 3, 1, "", "norm"], [118, 3, 1, "", "solve"], [118, 3, 1, "", "vdot"]], "matscipy.pressurecoupling": [[119, 2, 1, "", "AutoDamping"], [119, 2, 1, "", "FixedDamping"], [119, 2, 1, "", "FixedMassCriticalDamping"], [119, 2, 1, "", "SlideLog"], [119, 2, 1, "", "SlideLogger"], [119, 2, 1, "", "SlideWithNormalPressureCuboidCell"]], "matscipy.pressurecoupling.AutoDamping": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedDamping": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedMassCriticalDamping": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.SlideLog": [[119, 4, 1, "", "P_bottom"], [119, 4, 1, "", "P_top"], [119, 4, 1, "", "T_thermostat"], [119, 3, 1, "", "__init__"], [119, 4, 1, "", "a"], [119, 4, 1, "", "h"], [119, 4, 1, "", "rows"], [119, 4, 1, "", "step"], [119, 4, 1, "", "tau_bottom"], [119, 4, 1, "", "tau_top"], [119, 4, 1, "", "time"], [119, 4, 1, "", "v"]], "matscipy.pressurecoupling.SlideLogger": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "write_header"]], "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell": [[119, 5, 1, "", "Tdir"], [119, 3, 1, "", "__init__"], [119, 3, 1, "", "adjust_forces"], [119, 3, 1, "", "adjust_momenta"], [119, 3, 1, "", "adjust_positions"], [119, 3, 1, "", "adjust_potential_energy"], [119, 3, 1, "", "get_A"], [119, 5, 1, "", "middle_mask"]], "matscipy.rings": [[120, 1, 1, "", "ring_statistics"]], "matscipy.socketcalc": [[121, 2, 1, "", "AtomsRequestHandler"], [121, 4, 1, "", "AtomsServer"], [121, 2, 1, "", "AtomsServerAsync"], [121, 2, 1, "", "AtomsServerSync"], [121, 2, 1, "", "CastepClient"], [121, 2, 1, "", "Client"], [121, 2, 1, "", "QMClient"], [121, 2, 1, "", "QUIPClient"], [121, 2, 1, "", "SocketCalculator"], [121, 2, 1, "", "VaspClient"], [121, 1, 1, "", "pack_atoms_to_reftraj_str"], [121, 1, 1, "", "pack_atoms_to_xyz_str"], [121, 1, 1, "", "pack_results_to_reftraj_output_str"], [121, 1, 1, "", "unpack_reftraj_output_str_to_results"], [121, 1, 1, "", "unpack_reftraj_str_to_atoms"], [121, 1, 1, "", "unpack_xyz_str_to_results"]], "matscipy.socketcalc.AtomsRequestHandler": [[121, 3, 1, "", "__init__"], [121, 4, 1, "", "disable_nagle_algorithm"], [121, 3, 1, "", "finish"], [121, 3, 1, "", "handle"], [121, 4, 1, "", "rbufsize"], [121, 3, 1, "", "setup"], [121, 4, 1, "", "timeout"], [121, 4, 1, "", "wbufsize"]], "matscipy.socketcalc.AtomsServerAsync": [[121, 3, 1, "", "__init__"], [121, 4, 1, "", "address_family"], [121, 4, 1, "", "allow_reuse_address"], [121, 4, 1, "", "block_on_close"], [121, 3, 1, "", "close_request"], [121, 4, 1, "", "daemon_threads"], [121, 3, 1, "", "fileno"], [121, 3, 1, "", "finish_request"], [121, 3, 1, "", "get_request"], [121, 3, 1, "", "get_results"], [121, 3, 1, "", "handle_error"], [121, 3, 1, "", "handle_request"], [121, 3, 1, "", "handle_timeout"], [121, 3, 1, "", "join_all"], [121, 3, 1, "", "process_request"], [121, 3, 1, "", "process_request_thread"], [121, 3, 1, "", "put"], [121, 4, 1, "", "request_queue_size"], [121, 3, 1, "", "serve_forever"], [121, 3, 1, "", "server_activate"], [121, 3, 1, "", "server_bind"], [121, 3, 1, "", "server_close"], [121, 3, 1, "", "service_actions"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "shutdown_clients"], [121, 3, 1, "", "shutdown_request"], [121, 4, 1, "", "socket_type"], [121, 4, 1, "", "timeout"], [121, 3, 1, "", "verify_request"]], "matscipy.socketcalc.AtomsServerSync": [[121, 3, 1, "", "__init__"], [121, 4, 1, "", "address_family"], [121, 4, 1, "", "allow_reuse_address"], [121, 3, 1, "", "close_request"], [121, 3, 1, "", "fileno"], [121, 3, 1, "", "finish_request"], [121, 3, 1, "", "get_request"], [121, 3, 1, "", "get_results"], [121, 3, 1, "", "handle_error"], [121, 3, 1, "", "handle_request"], [121, 3, 1, "", "handle_timeout"], [121, 3, 1, "", "join_all"], [121, 3, 1, "", "process_request"], [121, 3, 1, "", "put"], [121, 4, 1, "", "request_queue_size"], [121, 3, 1, "", "serve_forever"], [121, 3, 1, "", "server_activate"], [121, 3, 1, "", "server_bind"], [121, 3, 1, "", "server_close"], [121, 3, 1, "", "service_actions"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "shutdown_clients"], [121, 3, 1, "", "shutdown_request"], [121, 4, 1, "", "socket_type"], [121, 4, 1, "", "timeout"], [121, 3, 1, "", "verify_request"]], "matscipy.socketcalc.CastepClient": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "extra_args"], [121, 3, 1, "", "is_compatible"], [121, 3, 1, "", "postprocess"], [121, 3, 1, "", "preprocess"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "start"], [121, 3, 1, "", "start_or_restart"], [121, 3, 1, "", "wait_for_shutdown"], [121, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.Client": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "extra_args"], [121, 3, 1, "", "is_compatible"], [121, 3, 1, "", "postprocess"], [121, 3, 1, "", "preprocess"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "start"], [121, 3, 1, "", "start_or_restart"], [121, 3, 1, "", "wait_for_shutdown"], [121, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.QMClient": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "extra_args"], [121, 3, 1, "", "is_compatible"], [121, 3, 1, "", "postprocess"], [121, 3, 1, "", "preprocess"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "start"], [121, 3, 1, "", "start_or_restart"], [121, 3, 1, "", "wait_for_shutdown"], [121, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.QUIPClient": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "extra_args"], [121, 3, 1, "", "is_compatible"], [121, 3, 1, "", "postprocess"], [121, 3, 1, "", "preprocess"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "start"], [121, 3, 1, "", "start_or_restart"], [121, 3, 1, "", "wait_for_shutdown"], [121, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.SocketCalculator": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "band_structure"], [121, 3, 1, "", "calculate"], [121, 3, 1, "", "calculate_numerical_forces"], [121, 3, 1, "", "calculate_numerical_stress"], [121, 3, 1, "", "calculate_properties"], [121, 3, 1, "", "calculation_required"], [121, 3, 1, "", "check_state"], [121, 4, 1, "", "default_parameters"], [121, 5, 1, "", "directory"], [121, 4, 1, "", "discard_results_on_any_change"], [121, 3, 1, "", "export_properties"], [121, 3, 1, "", "get_atoms"], [121, 3, 1, "", "get_charges"], [121, 3, 1, "", "get_default_parameters"], [121, 3, 1, "", "get_dipole_moment"], [121, 3, 1, "", "get_forces"], [121, 3, 1, "", "get_magnetic_moment"], [121, 3, 1, "", "get_magnetic_moments"], [121, 3, 1, "", "get_potential_energies"], [121, 3, 1, "", "get_potential_energy"], [121, 3, 1, "", "get_property"], [121, 3, 1, "", "get_stress"], [121, 3, 1, "", "get_stresses"], [121, 4, 1, "", "ignored_changes"], [121, 4, 1, "", "implemented_properties"], [121, 5, 1, "", "label"], [121, 4, 1, "", "name"], [121, 3, 1, "", "read"], [121, 3, 1, "", "read_atoms"], [121, 3, 1, "", "reset"], [121, 3, 1, "", "set"], [121, 3, 1, "", "set_label"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "todict"]], "matscipy.socketcalc.VaspClient": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "extra_args"], [121, 3, 1, "", "is_compatible"], [121, 3, 1, "", "postprocess"], [121, 3, 1, "", "preprocess"], [121, 3, 1, "", "shutdown"], [121, 3, 1, "", "start"], [121, 3, 1, "", "start_or_restart"], [121, 3, 1, "", "wait_for_shutdown"], [121, 3, 1, "", "write_input_files"]], "matscipy.spatial_correlation_function": [[122, 1, 1, "", "betrag"], [122, 1, 1, "", "max_rad"], [122, 1, 1, "", "spatial_correlation_function"], [122, 1, 1, "", "spatial_correlation_function_near"]], "matscipy.surface": [[123, 1, 1, "", "MillerDirection"], [123, 2, 1, "", "MillerIndex"], [123, 1, 1, "", "MillerPlane"], [123, 1, 1, "", "angle_between"], [123, 1, 1, "", "find_surface_energy"], [123, 1, 1, "", "gcd"], [123, 1, 1, "", "make_unit_slab"]], "matscipy.surface.MillerIndex": [[123, 4, 1, "", "ALIGNED"], [123, 4, 1, "", "BEHAVED"], [123, 4, 1, "", "CARRAY"], [123, 4, 1, "", "C_CONTIGUOUS"], [123, 4, 1, "", "FARRAY"], [123, 4, 1, "", "FNC"], [123, 4, 1, "", "FORC"], [123, 4, 1, "", "F_CONTIGUOUS"], [123, 4, 1, "", "OWNDATA"], [123, 4, 1, "", "T"], [123, 4, 1, "", "WRITEABLE"], [123, 4, 1, "", "WRITEBACKIFCOPY"], [123, 3, 1, "", "all"], [123, 4, 1, "", "all_brackets"], [123, 3, 1, "", "angle"], [123, 3, 1, "", "any"], [123, 3, 1, "", "argmax"], [123, 3, 1, "", "argmin"], [123, 3, 1, "", "argpartition"], [123, 3, 1, "", "argsort"], [123, 3, 1, "", "as3"], [123, 3, 1, "", "as4"], [123, 3, 1, "", "astype"], [123, 4, 1, "", "base"], [123, 4, 1, "", "brackets"], [123, 3, 1, "", "byteswap"], [123, 3, 1, "", "choose"], [123, 3, 1, "", "clip"], [123, 3, 1, "", "compress"], [123, 3, 1, "", "conj"], [123, 3, 1, "", "conjugate"], [123, 3, 1, "", "copy"], [123, 3, 1, "", "cosine"], [123, 3, 1, "", "cross"], [123, 4, 1, "", "ctypes"], [123, 3, 1, "", "cumprod"], [123, 3, 1, "", "cumsum"], [123, 4, 1, "", "data"], [123, 3, 1, "", "diagonal"], [123, 3, 1, "", "dot"], [123, 4, 1, "", "dtype"], [123, 3, 1, "", "dump"], [123, 3, 1, "", "dumps"], [123, 3, 1, "", "fill"], [123, 4, 1, "", "flags"], [123, 4, 1, "", "flat"], [123, 3, 1, "", "flatten"], [123, 3, 1, "", "getfield"], [123, 3, 1, "", "hat"], [123, 4, 1, "", "imag"], [123, 3, 1, "", "item"], [123, 3, 1, "", "itemset"], [123, 4, 1, "", "itemsize"], [123, 3, 1, "", "latex"], [123, 3, 1, "", "max"], [123, 3, 1, "", "mean"], [123, 3, 1, "", "min"], [123, 4, 1, "", "nbytes"], [123, 4, 1, "", "ndim"], [123, 3, 1, "", "newbyteorder"], [123, 3, 1, "", "nonzero"], [123, 3, 1, "", "norm"], [123, 3, 1, "", "normalised"], [123, 3, 1, "", "parse"], [123, 3, 1, "", "partition"], [123, 3, 1, "", "plane_spacing"], [123, 3, 1, "", "prod"], [123, 3, 1, "", "ptp"], [123, 3, 1, "", "put"], [123, 3, 1, "", "ravel"], [123, 4, 1, "", "real"], [123, 3, 1, "", "repeat"], [123, 3, 1, "", "reshape"], [123, 3, 1, "", "resize"], [123, 3, 1, "", "round"], [123, 3, 1, "", "searchsorted"], [123, 3, 1, "", "setfield"], [123, 3, 1, "", "setflags"], [123, 4, 1, "", "shape"], [123, 3, 1, "", "simplified"], [123, 3, 1, "", "simplify"], [123, 4, 1, "", "size"], [123, 3, 1, "", "sort"], [123, 3, 1, "", "squeeze"], [123, 3, 1, "", "std"], [123, 4, 1, "", "strides"], [123, 3, 1, "", "sum"], [123, 3, 1, "", "swapaxes"], [123, 3, 1, "", "take"], [123, 3, 1, "", "tobytes"], [123, 3, 1, "", "tofile"], [123, 3, 1, "", "tolist"], [123, 3, 1, "", "tostring"], [123, 3, 1, "", "trace"], [123, 3, 1, "", "transpose"], [123, 3, 1, "", "var"], [123, 3, 1, "", "view"]], "matscipy.surface_reconstruction": [[124, 2, 1, "", "SurfaceReconstruction"]], "matscipy.surface_reconstruction.SurfaceReconstruction": [[124, 3, 1, "", "__init__"], [124, 3, 1, "", "apply_pandey_111"], [124, 3, 1, "", "apply_si_110"], [124, 3, 1, "", "apply_surface_shift"], [124, 3, 1, "", "identify_layers"], [124, 3, 1, "", "identify_pandey_layers"], [124, 3, 1, "", "identify_si_110_layers"], [124, 3, 1, "", "map_pandey_111"], [124, 3, 1, "", "map_si_110_3x1"], [124, 3, 1, "", "map_surface"]], "matscipy.utils": [[125, 1, 1, "", "complete_basis"], [125, 1, 1, "", "get_distance_from_polygon2D"], [125, 1, 1, "", "get_structure_types"], [125, 1, 1, "", "line_intersect_2D"], [125, 1, 1, "", "points_in_polygon2D"], [125, 1, 1, "", "radial_mask_from_polygon2D"], [125, 1, 1, "", "validate_cubic_cell"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": [0, 4, 6, 87], "applic": [0, 10], "domain": [0, 10], "structur": [0, 24, 133], "topologi": [0, 133, 135], "gener": [0, 6, 9, 24, 133, 135], "analysi": [0, 129, 132], "tool": [0, 129], "interatom": [0, 17, 19, 130], "potenti": [0, 17, 18, 19, 50, 130], "util": [0, 34, 125], "function": [0, 128, 131], "build": [1, 14, 135], "cylindr": 1, "configur": [1, 6], "disloc": [1, 8, 11, 13, 87], "access": [1, 8], "kei": 1, "properti": [1, 14, 130], "avail": 1, "system": [1, 4, 5, 8, 11, 13, 14, 15], "bodi": [1, 18], "center": 1, "cubic": 1, "1": [1, 6, 9], "2": [1, 6, 9], "111": 1, "110": [1, 124], "screw": [1, 13], "edg": 1, "mix": 1, "100": 1, "junction": 1, "001": 1, "face": 1, "perfect": 1, "dissoci": [1, 13], "diamond": 1, "60": 1, "degre": 1, "elast": [2, 14, 89], "constant": 2, "problem": 2, "setup": [2, 15, 134], "crystallin": 2, "With": 2, "second": 2, "order": 2, "deriv": 2, "amorph": [2, 135], "fit": [2, 41], "electrochemistri": [3, 21, 76, 77, 78, 79, 90, 91, 92, 93, 94, 95], "acknowledg": 3, "One": 4, "dimension": 4, "poisson": [4, 5], "nernst": [4, 5], "planck": [4, 5], "The": 4, "inert": 4, "electrod": 4, "prepar": 4, "solv": 4, "dirichlet": 4, "zero": 4, "flux": 4, "boundari": [4, 5], "condit": [4, 5], "valid": 4, "analyt": 4, "half": 4, "space": [4, 131], "solut": 4, "v": 4, "numer": [4, 114], "finit": [4, 5], "interv": 4, "pnp": 4, "electrochem": 4, "cell": [4, 9, 87], "visual": [4, 6], "from": [4, 6], "continu": [4, 6, 22], "doubl": 4, "layer": 4, "theori": 4, "discret": 4, "coordin": [4, 6], "set": 4, "stern": 4, "robin": 4, "sampl": [4, 6], "distribut": [4, 6, 128, 131], "export": [4, 6], "element": 5, "method": [5, 9], "agreement": 5, "solver": 5, "moder": 5, "converg": 5, "issu": 5, "extrem": 5, "nonlinear": 5, "steric": 6, "correct": 6, "step": 6, "concentr": 6, "3": 6, "enforc": 6, "radii": 6, "inspect": 6, "initi": [6, 14, 15], "appli": [6, 14], "fractur": [7, 14, 22], "mechan": [7, 22], "advanc": 8, "featur": 8, "gamma_surfac": [8, 103], "py": 8, "stack": [8, 9], "fault": [8, 9], "specif": 8, "differ": [8, 135], "plane": 8, "more": 8, "complex": 8, "gamma": 9, "surfac": [9, 123], "atom": [9, 130, 135], "move": 9, "exampl": [9, 96], "us": [9, 126, 127], "multi": 11, "speci": 11, "addit": 11, "multispeci": 11, "disord": 11, "plastic": 12, "instal": 12, "test": 12, "tutori": 12, "quadrupol": 13, "glide": 13, "kink": 13, "other": [13, 18], "bcc": 13, "w": 13, "fcc": 13, "ni": 13, "quasi": 14, "static": 14, "simul": [14, 15, 134, 135], "basic": [14, 130], "usag": [14, 21, 96, 130], "bulk": 14, "crack": [14, 22, 99], "strain": 14, "field": 14, "tribologi": 15, "pressur": 15, "equilibr": 15, "restart": 15, "slide": 15, "mani": 18, "kumagai": [18, 46], "matscipi": [19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "averag": 19, "eam": [19, 35, 36, 37, 38], "diffus": [20, 74, 75], "rm": [20, 75], "overview": 21, "command": [21, 23, 126, 127], "quasistat": 22, "sinclair": 22, "line": [23, 126, 127], "interfac": [23, 126, 127], "quench": [24, 85], "angle_distribut": 27, "atomic_strain": 28, "calcul": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 87], "committe": [31, 32, 33, 34], "log": 33, "average_atom": 36, "io": [38, 106, 107, 108, 109, 110], "ewald": [39, 40], "manybodi": [42, 43, 44, 45, 46, 47, 48, 49, 50], "explicit_form": [44, 45, 46, 47, 48], "harmon": 45, "stillinger_web": 47, "tersoff_brenn": 48, "newmb": 49, "mcfm": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "cluster_data": 53, "mcfm_parallel": [54, 55, 56], "mcfm_parallel_control": 55, "mcfm_parallel_work": 56, "neighbour_list_mcfm": [57, 58, 59], "neighbour_list_bas": 58, "qm_cluster": 60, "qm_cluster_tool": [61, 62, 63, 64], "base_qm_cluster_tool": 62, "qm_clustering_tool": 63, "qm_flagging_tool": 64, "pair_potenti": [65, 66], "polydispers": [67, 68], "supercell_calcul": 69, "cauchy_born": 70, "cli": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "average_eam_potenti": 73, "continuous2discret": [77, 91], "poisson_nernst_planck_solv": [78, 93], "stericifi": 79, "fracture_mechan": [80, 81, 82, 83, 97, 98, 99, 100, 101, 102], "quasistatic_crack": 81, "setup_crack": 82, "sinclair_crack": 83, "glass": [84, 85], "deform": 86, "vector": 87, "drift": 88, "poisson_boltzmann_distribut": 92, "poisson_nernst_planck_solver_fen": 94, "steric_correct": 95, "ffi": 96, "cluster": 98, "crackpathsel": 100, "energy_releas": 101, "idealbrittlesolid": 102, "hessian_finite_differ": 104, "hydrogen": 105, "lammpsdata": 107, "meti": 108, "opl": [109, 116], "tbl": 110, "logger": 111, "molecul": 112, "neighbour": [113, 130], "numpy_trick": 115, "optim": 117, "precon": 118, "pressurecoupl": 119, "ring": [120, 132], "socketcalc": 121, "spatial_correlation_funct": 122, "surface_reconstruct": 124, "map": 124, "silicon": 124, "3x1": 124, "relax": 124, "crystal": 124, "get": [126, 127], "start": [126, 127], "librari": [126, 127], "via": [126, 127], "tabl": 127, "content": 127, "indic": 127, "angl": 128, "list": 130, "per": 130, "pair": 131, "real": 131, "fourier": 131, "non": [134, 135], "reactiv": [134, 135], "lammp": [134, 135], "md": 135, "carbon": 135, "assign": 135, "type": 135, "bond": 135, "input": 135, "file": 135}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[55, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.pair_potential.calculator": [[66, "module-matscipy.calculators.pair_potential.calculator"]], "matscipy.cli": [[71, "module-matscipy.cli"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[56, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "matscipy.calculators.supercell_calculator": [[69, "module-matscipy.calculators.supercell_calculator"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[59, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[61, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[62, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[63, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "matscipy.cauchy_born": [[70, "module-matscipy.cauchy_born"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[58, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "matscipy.calculators.polydisperse.calculator": [[68, "module-matscipy.calculators.polydisperse.calculator"]], "matscipy.calculators.pair_potential": [[65, "module-matscipy.calculators.pair_potential"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[64, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "matscipy.calculators.mcfm.mcfm_parallel": [[54, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "matscipy.calculators.mcfm.qm_cluster": [[60, "module-matscipy.calculators.mcfm.qm_cluster"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[57, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "matscipy.calculators.polydisperse": [[67, "module-matscipy.calculators.polydisperse"]], "Pair-distribution function": [[131, "pair-distribution-function"]], "Real-space": [[131, "real-space"]], "Fourier space": [[131, "fourier-space"]], "Ring analysis": [[132, "ring-analysis"]], "Setups for non-reactive simulations with LAMMPS": [[134, "setups-for-non-reactive-simulations-with-lammps"]], "Analysis tools": [[129, "analysis-tools"], [0, "analysis-tools"]], "matscipy": [[126, "matscipy"], [127, "matscipy"], [26, "module-matscipy"]], "Getting started": [[126, "getting-started"], [127, "getting-started"]], "Using the library": [[126, "using-the-library"], [127, "using-the-library"]], "Via the command-line interface": [[126, "via-the-command-line-interface"], [127, "via-the-command-line-interface"]], "Structure and topology generation": [[133, "structure-and-topology-generation"], [0, "structure-and-topology-generation"]], "Angle-distribution function": [[128, "angle-distribution-function"]], "Table of Contents": [[127, null]], "Indices and tables": [[127, "indices-and-tables"]], "Topology building for LAMMPS non-reactive MD simulations of amorphous carbon": [[135, "topology-building-for-lammps-non-reactive-md-simulations-of-amorphous-carbon"]], "Assignment of the different atom types": [[135, "assignment-of-the-different-atom-types"]], "Generation of the bonding topology and LAMMPS input files": [[135, "generation-of-the-bonding-topology-and-lammps-input-files"]], "Neighbour list": [[130, "neighbour-list"]], "Basic usage": [[130, "basic-usage"], [14, "basic-usage"]], "Per-atom properties": [[130, "per-atom-properties"]], "Interatomic potential": [[130, "interatomic-potential"]], "matscipy.calculators.committee.log": [[33, "module-matscipy.calculators.committee.log"]], "Electrochemistry": [[21, "electrochemistry"], [3, "electrochemistry"]], "Overview of commands": [[21, "overview-of-commands"]], "Usage": [[21, "usage"]], "matscipy.atomic_strain": [[28, "module-matscipy.atomic_strain"]], "matscipy.calculators.committee": [[31, "module-matscipy.calculators.committee"]], "matscipy.angle_distribution": [[27, "module-matscipy.angle_distribution"]], "matscipy.calculators.calculator": [[30, "module-matscipy.calculators.calculator"]], "Fracture mechanics": [[22, "fracture-mechanics"]], "matscipy-quasistatic-crack": [[22, "matscipy-quasistatic-crack"]], "matscipy-sinclair-crack": [[22, "matscipy-sinclair-crack"]], "matscipy-sinclair-continuation": [[22, "matscipy-sinclair-continuation"]], "Command line interface": [[23, "command-line-interface"]], "matscipy.calculators.committee.utils": [[34, "module-matscipy.calculators.committee.utils"]], "Many-body potentials": [[18, "many-body-potentials"]], "Kumagai potential": [[18, "kumagai-potential"]], "Other many-body potentials": [[18, "other-many-body-potentials"]], "Structure generation": [[24, "structure-generation"]], "matscipy-quench": [[24, "matscipy-quench"]], "matscipy.calculators.eam": [[35, "module-matscipy.calculators.eam"]], "matscipy.calculators": [[29, "module-matscipy.calculators"]], "Diffusion": [[20, "diffusion"]], "matscipy-rms": [[20, "matscipy-rms"]], "Interatomic potentials": [[19, "interatomic-potentials"], [17, "interatomic-potentials"], [0, "interatomic-potentials"]], "matscipy-average-eam-potential": [[19, "matscipy-average-eam-potential"]], "matscipy.calculators.committee.committee": [[32, "module-matscipy.calculators.committee.committee"]], "matscipy.io.lammpsdata": [[107, "module-matscipy.io.lammpsdata"]], "matscipy.fracture_mechanics.clusters": [[98, "module-matscipy.fracture_mechanics.clusters"]], "matscipy.fracture_mechanics": [[97, "module-matscipy.fracture_mechanics"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[92, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "matscipy.fracture_mechanics.energy_release": [[101, "module-matscipy.fracture_mechanics.energy_release"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[94, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"]], "matscipy.hydrogenate": [[105, "module-matscipy.hydrogenate"]], "matscipy.electrochemistry.continuous2discrete": [[91, "matscipy-electrochemistry-continuous2discrete"]], "matscipy.hessian_finite_differences": [[104, "module-matscipy.hessian_finite_differences"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[102, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "matscipy.fracture_mechanics.crackpathsel": [[100, "module-matscipy.fracture_mechanics.crackpathsel"]], "matscipy.electrochemistry": [[90, "module-matscipy.electrochemistry"]], "matscipy.io": [[106, "module-matscipy.io"]], "matscipy.gamma_surface": [[103, "module-matscipy.gamma_surface"]], "matscipy.fracture_mechanics.crack": [[99, "module-matscipy.fracture_mechanics.crack"]], "matscipy.ffi": [[96, "module-matscipy.ffi"]], "Example usage:": [[96, "example-usage"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[93, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "matscipy.electrochemistry.steric_correction": [[95, "module-matscipy.electrochemistry.steric_correction"]], "matscipy.calculators.ewald": [[39, "module-matscipy.calculators.ewald"]], "matscipy.calculators.manybody.potentials": [[50, "module-matscipy.calculators.manybody.potentials"]], "matscipy.calculators.eam.calculator": [[37, "module-matscipy.calculators.eam.calculator"]], "matscipy.calculators.mcfm.calculator": [[52, "module-matscipy.calculators.mcfm.calculator"]], "matscipy.calculators.eam.io": [[38, "module-matscipy.calculators.eam.io"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[45, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "matscipy.calculators.ewald.calculator": [[40, "module-matscipy.calculators.ewald.calculator"]], "matscipy.calculators.mcfm.cluster_data": [[53, "module-matscipy.calculators.mcfm.cluster_data"]], "matscipy.calculators.manybody.explicit_forms": [[44, "module-matscipy.calculators.manybody.explicit_forms"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[47, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[48, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "matscipy.calculators.eam.average_atom": [[36, "module-matscipy.calculators.eam.average_atom"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[46, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "matscipy.calculators.mcfm": [[51, "module-matscipy.calculators.mcfm"]], "matscipy.calculators.manybody": [[42, "module-matscipy.calculators.manybody"]], "matscipy.calculators.manybody.newmb": [[49, "module-matscipy.calculators.manybody.newmb"]], "matscipy.calculators.manybody.calculator": [[43, "module-matscipy.calculators.manybody.calculator"]], "matscipy.calculators.fitting": [[41, "module-matscipy.calculators.fitting"]], "matscipy.optimize": [[117, "module-matscipy.optimize"]], "matscipy.numpy_tricks": [[115, "module-matscipy.numpy_tricks"]], "matscipy.io.opls": [[109, "module-matscipy.io.opls"]], "matscipy.rings": [[120, "module-matscipy.rings"]], "matscipy.molecules": [[112, "module-matscipy.molecules"]], "matscipy.io.metis": [[108, "module-matscipy.io.metis"]], "matscipy.socketcalc": [[121, "module-matscipy.socketcalc"]], "matscipy.logger": [[111, "module-matscipy.logger"]], "matscipy.io.tbl": [[110, "module-matscipy.io.tbl"]], "matscipy.neighbours": [[113, "module-matscipy.neighbours"]], "matscipy.opls": [[116, "module-matscipy.opls"]], "matscipy.numerical": [[114, "module-matscipy.numerical"]], "matscipy.pressurecoupling": [[119, "module-matscipy.pressurecoupling"]], "matscipy.surface": [[123, "module-matscipy.surface"]], "matscipy.utils": [[125, "module-matscipy.utils"]], "matscipy.spatial_correlation_function": [[122, "module-matscipy.spatial_correlation_function"]], "matscipy.precon": [[118, "module-matscipy.precon"]], "matscipy.surface_reconstruction": [[124, "module-matscipy.surface_reconstruction"]], "Map the silicon 110 3x1 relaxation of the crystal.": [[124, "map-the-silicon-110-3x1-relaxation-of-the-crystal"]], "matscipy.cli.electrochemistry.poisson_nernst_planck_solver": [[78, "module-matscipy.cli.electrochemistry.poisson_nernst_planck_solver"]], "matscipy.cli.glasses.quench": [[85, "module-matscipy.cli.glasses.quench"]], "matscipy.dislocation": [[87, "module-matscipy.dislocation"]], "Calculation of cell vectors": [[87, "calculation-of-cell-vectors"]], "References:": [[87, "references"]], "matscipy.cli.fracture_mechanics.sinclair_crack": [[83, "module-matscipy.cli.fracture_mechanics.sinclair_crack"]], "matscipy.elasticity": [[89, "module-matscipy.elasticity"]], "matscipy.deformation": [[86, "module-matscipy.deformation"]], "matscipy.cli.electrochemistry.continuous2discrete": [[77, "module-matscipy.cli.electrochemistry.continuous2discrete"]], "matscipy.cli.fracture_mechanics.setup_crack": [[82, "module-matscipy.cli.fracture_mechanics.setup_crack"]], "matscipy.cli.electrochemistry.stericify": [[79, "module-matscipy.cli.electrochemistry.stericify"]], "matscipy.cli.diffusion": [[74, "module-matscipy.cli.diffusion"]], "matscipy.cli.fracture_mechanics": [[80, "module-matscipy.cli.fracture_mechanics"]], "matscipy.cli.fracture_mechanics.quasistatic_crack": [[81, "module-matscipy.cli.fracture_mechanics.quasistatic_crack"]], "matscipy.cli.calculators.average_eam_potential": [[73, "module-matscipy.cli.calculators.average_eam_potential"]], "matscipy.cli.diffusion.rms": [[75, "module-matscipy.cli.diffusion.rms"]], "matscipy.cli.glasses": [[84, "module-matscipy.cli.glasses"]], "matscipy.cli.electrochemistry": [[76, "module-matscipy.cli.electrochemistry"]], "matscipy.drift": [[88, "module-matscipy.drift"]], "matscipy.cli.calculators": [[72, "module-matscipy.cli.calculators"]], "Acknowledgements": [[3, "acknowledgements"]], "Dislocation Quadrupoles": [[13, "dislocation-quadrupoles"]], "Dislocation Glide in quadrupoles": [[13, "dislocation-glide-in-quadrupoles"]], "Quadrupole Kink": [[13, "quadrupole-kink"]], "Quadrupoles in other systems": [[13, "quadrupoles-in-other-systems"]], "BCC Screw in W": [[13, "bcc-screw-in-w"]], "Dissociation of Screw dislocations in FCC Ni Quadrupoles": [[13, "dissociation-of-screw-dislocations-in-fcc-ni-quadrupoles"]], "Advanced Features of gamma_surface.py": [[8, "advanced-features-of-gamma-surface-py"]], "Stacking Faults of Specific Dislocations": [[8, "stacking-faults-of-specific-dislocations"]], "Accessing Different Stacking Fault Planes": [[8, "accessing-different-stacking-fault-planes"]], "Stacking Faults in more complex systems": [[8, "stacking-faults-in-more-complex-systems"]], "One-dimensional Poisson-Nernst-Planck systems": [[4, "one-dimensional-poisson-nernst-planck-systems"]], "The inert electrode": [[4, "the-inert-electrode"]], "Preparations": [[4, "preparations"]], "Solving with Dirichlet and zero flux boundary conditions": [[4, "solving-with-dirichlet-and-zero-flux-boundary-conditions"], [4, "id1"]], "Validation: Analytical half-space solution vs. numerical finite-interval PNP system": [[4, "validation-analytical-half-space-solution-vs-numerical-finite-interval-pnp-system"]], "The electrochemical cell": [[4, "the-electrochemical-cell"]], "Visualization": [[4, "visualization"], [4, "id2"]], "From continuous double layer theory to discrete coordinate sets": [[4, "from-continuous-double-layer-theory-to-discrete-coordinate-sets"]], "Poisson-Nernst-Planck-System with Stern layer boundary conditions": [[4, "poisson-nernst-planck-system-with-stern-layer-boundary-conditions"]], "Solving with Robin and zero flux boundary conditions": [[4, "solving-with-robin-and-zero-flux-boundary-conditions"]], "Sampling from continuous distributions": [[4, "sampling-from-continuous-distributions"]], "Coordinates export": [[4, "coordinates-export"]], "References": [[4, "references"], [6, "references"]], "Poisson-Nernst-Planck systems by finite element method": [[5, "poisson-nernst-planck-systems-by-finite-element-method"]], "Agreement of solvers for moderate boundary conditions": [[5, "agreement-of-solvers-for-moderate-boundary-conditions"]], "Convergence issues for extreme nonlinearities": [[5, "convergence-issues-for-extreme-nonlinearities"]], "Plasticity": [[12, "plasticity"]], "Installation and tests": [[12, "installation-and-tests"]], "Tutorials:": [[12, "tutorials"]], "Multi-species Dislocation Systems": [[11, "multi-species-dislocation-systems"]], "Additional Dislocations in Multispecies Systems": [[11, "additional-dislocations-in-multispecies-systems"]], "Dislocations in Disordered Systems": [[11, "dislocations-in-disordered-systems"]], "Elastic Constants": [[2, "elastic-constants"]], "Problem setup": [[2, "problem-setup"], [2, "id1"]], "Crystalline elastic constants": [[2, "crystalline-elastic-constants"]], "With second-order derivatives": [[2, "with-second-order-derivatives"]], "Amorphous elastic constants": [[2, "amorphous-elastic-constants"]], "Fitting elastic constants": [[2, "fitting-elastic-constants"]], "Generating Gamma Surfaces & Stacking Faults": [[9, "generating-gamma-surfaces-stacking-faults"]], "Method 1 - \u201cAtom Move\u201d Method": [[9, "method-1-atom-move-method"]], "Method 2 - \u201cCell Move\u201d Method": [[9, "method-2-cell-move-method"]], "Gamma Surface Example using Method 1": [[9, "gamma-surface-example-using-method-1"]], "Stacking Fault Example using Method 2": [[9, "stacking-fault-example-using-method-2"]], "Fracture Mechanics": [[7, "fracture-mechanics"]], "API Reference": [[0, "api-reference"]], "Application domains": [[0, "application-domains"], [10, "application-domains"]], "Utility functions": [[0, "utility-functions"]], "Building cylindrical configurations with dislocations": [[1, "building-cylindrical-configurations-with-dislocations"]], "Accessing Key Dislocation Properties": [[1, "accessing-key-dislocation-properties"]], "Available Dislocation Systems": [[1, "available-dislocation-systems"]], "Body Centered Cubic": [[1, "body-centered-cubic"]], "1/2<111>{110} screw dislocation": [[1, "screw-dislocation"]], "1/2<111>{110} edge dislocation": [[1, "edge-dislocation"]], "1/2<111>{110} mixed dislocation": [[1, "mixed-dislocation"]], "<100>{110} edge \u2018junction\u2019 dislocation": [[1, "edge-junction-dislocation"]], "<100>{001} edge dislocation": [[1, "id1"]], "Face Centered Cubic": [[1, "face-centered-cubic"]], "1/2<110>{111} screw dislocation (perfect and dissociated)": [[1, "screw-dislocation-perfect-and-dissociated"], [1, "id2"]], "1/2<110>{111} edge dislocation (perfect and dissociated)": [[1, "edge-dislocation-perfect-and-dissociated"]], "Diamond Cubic": [[1, "diamond-cubic"]], "1/2<110>{111} 60 degree screw dislocation (perfect and dissociated)": [[1, "degree-screw-dislocation-perfect-and-dissociated"]], "Quasi static fracture simulations": [[14, "quasi-static-fracture-simulations"]], "Bulk and Elastic properties": [[14, "bulk-and-elastic-properties"]], "Build crack system": [[14, "build-crack-system"]], "Apply initial strain field": [[14, "apply-initial-strain-field"]], "Tribology": [[15, "tribology"]], "System setup": [[15, "system-setup"]], "Initial pressure equilibration": [[15, "initial-pressure-equilibration"]], "Restarting a pressure equilibration": [[15, "restarting-a-pressure-equilibration"]], "Sliding simulation": [[15, "sliding-simulation"]], "Restarting a sliding simulation": [[15, "restarting-a-sliding-simulation"]], "Steric correction": [[6, "steric-correction"]], "Step 1: generating continuous concentration distributions": [[6, "step-1-generating-continuous-concentration-distributions"]], "Step 2: sampling from distributions": [[6, "step-2-sampling-from-distributions"]], "Step 3: enforcing steric radii": [[6, "step-3-enforcing-steric-radii"]], "Inspect the initial coordinate sample": [[6, "inspect-the-initial-coordinate-sample"]], "Apply the steric correction": [[6, "apply-the-steric-correction"]], "Visualize the applied corrections": [[6, "visualize-the-applied-corrections"]], "Export initial and steric configurations": [[6, "export-initial-and-steric-configurations"]]}, "indexentries": {"has_parameter() (in module matscipy)": [[26, "matscipy.has_parameter"]], "matscipy": [[26, "module-matscipy"]], "module": [[26, "module-matscipy"], [27, "module-matscipy.angle_distribution"], [28, "module-matscipy.atomic_strain"], [29, "module-matscipy.calculators"], [30, "module-matscipy.calculators.calculator"], [31, "module-matscipy.calculators.committee"], [32, "module-matscipy.calculators.committee.committee"], [33, "module-matscipy.calculators.committee.log"], [34, "module-matscipy.calculators.committee.utils"], [35, "module-matscipy.calculators.eam"], [36, "module-matscipy.calculators.eam.average_atom"], [37, "module-matscipy.calculators.eam.calculator"], [38, "module-matscipy.calculators.eam.io"], [39, "module-matscipy.calculators.ewald"], [40, "module-matscipy.calculators.ewald.calculator"], [41, "module-matscipy.calculators.fitting"], [42, "module-matscipy.calculators.manybody"], [43, "module-matscipy.calculators.manybody.calculator"], [44, "module-matscipy.calculators.manybody.explicit_forms"], [45, "module-matscipy.calculators.manybody.explicit_forms.harmonic"], [46, "module-matscipy.calculators.manybody.explicit_forms.kumagai"], [47, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"], [48, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"], [49, "module-matscipy.calculators.manybody.newmb"], [50, "module-matscipy.calculators.manybody.potentials"], [51, "module-matscipy.calculators.mcfm"], [52, "module-matscipy.calculators.mcfm.calculator"], [53, "module-matscipy.calculators.mcfm.cluster_data"], [54, "module-matscipy.calculators.mcfm.mcfm_parallel"], [55, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"], [56, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"], [57, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"], [58, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"], [59, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"], [60, "module-matscipy.calculators.mcfm.qm_cluster"], [61, "module-matscipy.calculators.mcfm.qm_cluster_tools"], [62, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"], [63, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"], [64, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"], [65, "module-matscipy.calculators.pair_potential"], [66, "module-matscipy.calculators.pair_potential.calculator"], [67, "module-matscipy.calculators.polydisperse"], [68, "module-matscipy.calculators.polydisperse.calculator"], [69, "module-matscipy.calculators.supercell_calculator"], [70, "module-matscipy.cauchy_born"], [71, "module-matscipy.cli"], [72, "module-matscipy.cli.calculators"], [73, "module-matscipy.cli.calculators.average_eam_potential"], [74, "module-matscipy.cli.diffusion"], [75, "module-matscipy.cli.diffusion.rms"], [76, "module-matscipy.cli.electrochemistry"], [77, "module-matscipy.cli.electrochemistry.continuous2discrete"], [78, "module-matscipy.cli.electrochemistry.poisson_nernst_planck_solver"], [79, "module-matscipy.cli.electrochemistry.stericify"], [80, "module-matscipy.cli.fracture_mechanics"], [81, "module-matscipy.cli.fracture_mechanics.quasistatic_crack"], [82, "module-matscipy.cli.fracture_mechanics.setup_crack"], [83, "module-matscipy.cli.fracture_mechanics.sinclair_crack"], [84, "module-matscipy.cli.glasses"], [85, "module-matscipy.cli.glasses.quench"], [86, "module-matscipy.deformation"], [87, "module-matscipy.dislocation"], [88, "module-matscipy.drift"], [89, "module-matscipy.elasticity"], [90, "module-matscipy.electrochemistry"], [92, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"], [93, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"], [94, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"], [95, "module-matscipy.electrochemistry.steric_correction"], [96, "module-matscipy.ffi"], [97, "module-matscipy.fracture_mechanics"], [98, "module-matscipy.fracture_mechanics.clusters"], [99, "module-matscipy.fracture_mechanics.crack"], [100, "module-matscipy.fracture_mechanics.crackpathsel"], [101, "module-matscipy.fracture_mechanics.energy_release"], [102, "module-matscipy.fracture_mechanics.idealbrittlesolid"], [103, "module-matscipy.gamma_surface"], [104, "module-matscipy.hessian_finite_differences"], [105, "module-matscipy.hydrogenate"], [106, "module-matscipy.io"], [107, "module-matscipy.io.lammpsdata"], [108, "module-matscipy.io.metis"], [109, "module-matscipy.io.opls"], [110, "module-matscipy.io.tbl"], [111, "module-matscipy.logger"], [112, "module-matscipy.molecules"], [113, "module-matscipy.neighbours"], [114, "module-matscipy.numerical"], [115, "module-matscipy.numpy_tricks"], [116, "module-matscipy.opls"], [117, "module-matscipy.optimize"], [118, "module-matscipy.precon"], [119, "module-matscipy.pressurecoupling"], [120, "module-matscipy.rings"], [121, "module-matscipy.socketcalc"], [122, "module-matscipy.spatial_correlation_function"], [123, "module-matscipy.surface"], [124, "module-matscipy.surface_reconstruction"], [125, "module-matscipy.utils"]], "parameter() (in module matscipy)": [[26, "matscipy.parameter"]], "angle_distribution() (in module matscipy.angle_distribution)": [[27, "matscipy.angle_distribution.angle_distribution"]], "matscipy.angle_distribution": [[27, "module-matscipy.angle_distribution"]], "array_inverse() (in module matscipy.atomic_strain)": [[28, "matscipy.atomic_strain.array_inverse"]], "atomic_strain() (in module matscipy.atomic_strain)": [[28, "matscipy.atomic_strain.atomic_strain"]], "get_d_square_min() (in module matscipy.atomic_strain)": [[28, "matscipy.atomic_strain.get_D_square_min"]], "get_xij() (in module matscipy.atomic_strain)": [[28, "matscipy.atomic_strain.get_XIJ"]], "get_yij() (in module matscipy.atomic_strain)": [[28, "matscipy.atomic_strain.get_YIJ"]], "get_delta_plus_epsilon() (in module matscipy.atomic_strain)": [[28, "matscipy.atomic_strain.get_delta_plus_epsilon"]], "get_delta_plus_epsilon_dgesv() (in module matscipy.atomic_strain)": [[28, "matscipy.atomic_strain.get_delta_plus_epsilon_dgesv"]], "matscipy.atomic_strain": [[28, "module-matscipy.atomic_strain"]], "matscipy.calculators": [[29, "module-matscipy.calculators"]], "matscipycalculator (class in matscipy.calculators.calculator)": [[30, "matscipy.calculators.calculator.MatscipyCalculator"]], "__init__() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.__init__"]], "band_structure() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.band_structure"]], "calculate() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.calculation_required"]], "check_state() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.check_state"]], "default_parameters (matscipy.calculators.calculator.matscipycalculator attribute)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.default_parameters"]], "directory (matscipy.calculators.calculator.matscipycalculator property)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.calculator.matscipycalculator attribute)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.export_properties"]], "get_atoms() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_elastic_constants"]], "get_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_forces"]], "get_hessian() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_property"]], "get_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.calculator.matscipycalculator attribute)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.calculator.matscipycalculator attribute)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.implemented_properties"]], "label (matscipy.calculators.calculator.matscipycalculator property)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.label"]], "matscipy.calculators.calculator": [[30, "module-matscipy.calculators.calculator"]], "read() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.read"]], "read_atoms() (matscipy.calculators.calculator.matscipycalculator class method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.read_atoms"]], "reset() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.reset"]], "set() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.set"]], "set_label() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.set_label"]], "todict() (matscipy.calculators.calculator.matscipycalculator method)": [[30, "matscipy.calculators.calculator.MatscipyCalculator.todict"]], "matscipy.calculators.committee": [[31, "module-matscipy.calculators.committee"]], "committee (class in matscipy.calculators.committee.committee)": [[32, "matscipy.calculators.committee.committee.Committee"]], "committeemember (class in matscipy.calculators.committee.committee)": [[32, "matscipy.calculators.committee.committee.CommitteeMember"]], "committeeuncertainty (class in matscipy.calculators.committee.committee)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty"]], "__init__() (matscipy.calculators.committee.committee.committee method)": [[32, "matscipy.calculators.committee.committee.Committee.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeemember method)": [[32, "matscipy.calculators.committee.committee.CommitteeMember.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.__init__"]], "add_member() (matscipy.calculators.committee.committee.committee method)": [[32, "matscipy.calculators.committee.committee.Committee.add_member"]], "alphas (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.alphas"]], "atoms (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.atoms"]], "atoms (matscipy.calculators.committee.committee.committeemember property)": [[32, "matscipy.calculators.committee.committee.CommitteeMember.atoms"]], "band_structure() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.band_structure"]], "calculate() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate"]], "calculate_numerical_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_properties"]], "calculation_required() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculation_required"]], "calculator (matscipy.calculators.committee.committee.committeemember property)": [[32, "matscipy.calculators.committee.committee.CommitteeMember.calculator"]], "calibrate() (matscipy.calculators.committee.committee.committee method)": [[32, "matscipy.calculators.committee.committee.Committee.calibrate"]], "calibrated_for (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.calibrated_for"]], "check_state() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.check_state"]], "default_parameters (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.default_parameters"]], "directory (matscipy.calculators.committee.committee.committeeuncertainty property)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.directory"]], "discard_results_on_any_change (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.export_properties"]], "filename (matscipy.calculators.committee.committee.committeemember property)": [[32, "matscipy.calculators.committee.committee.CommitteeMember.filename"]], "get_atoms() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_atoms"]], "get_charges() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_charges"]], "get_default_parameters() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_dipole_moment"]], "get_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_forces"]], "get_magnetic_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energy"]], "get_property() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_property"]], "get_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stress"]], "get_stresses() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stresses"]], "id_counter (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.id_counter"]], "id_to_atoms (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.id_to_atoms"]], "ids (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.ids"]], "ids (matscipy.calculators.committee.committee.committeemember property)": [[32, "matscipy.calculators.committee.committee.CommitteeMember.ids"]], "ignored_changes (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.ignored_changes"]], "implemented_properties (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.implemented_properties"]], "is_calibrated_for() (matscipy.calculators.committee.committee.committee method)": [[32, "matscipy.calculators.committee.committee.Committee.is_calibrated_for"]], "is_sample_in_atoms() (matscipy.calculators.committee.committee.committeemember method)": [[32, "matscipy.calculators.committee.committee.CommitteeMember.is_sample_in_atoms"]], "label (matscipy.calculators.committee.committee.committeeuncertainty property)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.label"]], "matscipy.calculators.committee.committee": [[32, "module-matscipy.calculators.committee.committee"]], "members (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.members"]], "number (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.number"]], "read() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.read"]], "read_atoms() (matscipy.calculators.committee.committee.committeeuncertainty class method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.read_atoms"]], "reset() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.reset"]], "scale_uncertainty() (matscipy.calculators.committee.committee.committee method)": [[32, "matscipy.calculators.committee.committee.Committee.scale_uncertainty"]], "set() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.set"]], "set_internal_validation_set() (matscipy.calculators.committee.committee.committee method)": [[32, "matscipy.calculators.committee.committee.Committee.set_internal_validation_set"]], "set_label() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.set_label"]], "set_training_data() (matscipy.calculators.committee.committee.committeemember method)": [[32, "matscipy.calculators.committee.committee.CommitteeMember.set_training_data"]], "todict() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[32, "matscipy.calculators.committee.committee.CommitteeUncertainty.todict"]], "validation_set (matscipy.calculators.committee.committee.committee property)": [[32, "matscipy.calculators.committee.committee.Committee.validation_set"]], "create_logger() (in module matscipy.calculators.committee.log)": [[33, "matscipy.calculators.committee.log.create_logger"]], "matscipy.calculators.committee.log": [[33, "module-matscipy.calculators.committee.log"]], "set_logging() (in module matscipy.calculators.committee.log)": [[33, "matscipy.calculators.committee.log.set_logging"]], "matscipy.calculators.committee.utils": [[34, "module-matscipy.calculators.committee.utils"]], "subsample() (in module matscipy.calculators.committee.utils)": [[34, "matscipy.calculators.committee.utils.subsample"]], "matscipy.calculators.eam": [[35, "module-matscipy.calculators.eam"]], "average_potential() (in module matscipy.calculators.eam.average_atom)": [[36, "matscipy.calculators.eam.average_atom.average_potential"]], "matscipy.calculators.eam.average_atom": [[36, "module-matscipy.calculators.eam.average_atom"]], "eam (class in matscipy.calculators.eam.calculator)": [[37, "matscipy.calculators.eam.calculator.EAM"]], "__init__() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.__init__"]], "band_structure() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.band_structure"]], "calculate() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.calculate"]], "calculate_hessian_matrix() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.calculate_hessian_matrix"]], "calculate_numerical_forces() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.calculate_properties"]], "calculation_required() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.calculation_required"]], "check_state() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.check_state"]], "cutoff (matscipy.calculators.eam.calculator.eam property)": [[37, "matscipy.calculators.eam.calculator.EAM.cutoff"]], "default_parameters (matscipy.calculators.eam.calculator.eam attribute)": [[37, "matscipy.calculators.eam.calculator.EAM.default_parameters"]], "directory (matscipy.calculators.eam.calculator.eam property)": [[37, "matscipy.calculators.eam.calculator.EAM.directory"]], "discard_results_on_any_change (matscipy.calculators.eam.calculator.eam attribute)": [[37, "matscipy.calculators.eam.calculator.EAM.discard_results_on_any_change"]], "energy_virial_and_forces() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.energy_virial_and_forces"]], "export_properties() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.export_properties"]], "get_atoms() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_charges"]], "get_default_parameters() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_elastic_constants"]], "get_forces() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_forces"]], "get_hessian() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_potential_energy"]], "get_property() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_property"]], "get_stress() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.get_stresses"]], "ignored_changes (matscipy.calculators.eam.calculator.eam attribute)": [[37, "matscipy.calculators.eam.calculator.EAM.ignored_changes"]], "implemented_properties (matscipy.calculators.eam.calculator.eam attribute)": [[37, "matscipy.calculators.eam.calculator.EAM.implemented_properties"]], "label (matscipy.calculators.eam.calculator.eam property)": [[37, "matscipy.calculators.eam.calculator.EAM.label"]], "matscipy.calculators.eam.calculator": [[37, "module-matscipy.calculators.eam.calculator"]], "name (matscipy.calculators.eam.calculator.eam attribute)": [[37, "matscipy.calculators.eam.calculator.EAM.name"]], "read() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.read"]], "read_atoms() (matscipy.calculators.eam.calculator.eam class method)": [[37, "matscipy.calculators.eam.calculator.EAM.read_atoms"]], "reset() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.reset"]], "set() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.set"]], "set_label() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.set_label"]], "todict() (matscipy.calculators.eam.calculator.eam method)": [[37, "matscipy.calculators.eam.calculator.EAM.todict"]], "eamparameters (class in matscipy.calculators.eam.io)": [[38, "matscipy.calculators.eam.io.EAMParameters"]], "atomic_masses (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.atomic_masses"]], "atomic_numbers (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.atomic_numbers"]], "count() (matscipy.calculators.eam.io.eamparameters method)": [[38, "matscipy.calculators.eam.io.EAMParameters.count"]], "crystal_structures (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.crystal_structures"]], "cutoff (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.cutoff"]], "density_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.density_grid_spacing"]], "distance_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.distance_grid_spacing"]], "index() (matscipy.calculators.eam.io.eamparameters method)": [[38, "matscipy.calculators.eam.io.EAMParameters.index"]], "lattice_constants (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.lattice_constants"]], "matscipy.calculators.eam.io": [[38, "module-matscipy.calculators.eam.io"]], "mix_eam() (in module matscipy.calculators.eam.io)": [[38, "matscipy.calculators.eam.io.mix_eam"]], "number_of_density_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.number_of_density_grid_points"]], "number_of_distance_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.number_of_distance_grid_points"]], "read_eam() (in module matscipy.calculators.eam.io)": [[38, "matscipy.calculators.eam.io.read_eam"]], "symbols (matscipy.calculators.eam.io.eamparameters attribute)": [[38, "matscipy.calculators.eam.io.EAMParameters.symbols"]], "write_eam() (in module matscipy.calculators.eam.io)": [[38, "matscipy.calculators.eam.io.write_eam"]], "matscipy.calculators.ewald": [[39, "module-matscipy.calculators.ewald"]], "ewald (class in matscipy.calculators.ewald.calculator)": [[40, "matscipy.calculators.ewald.calculator.Ewald"]], "ewaldshortrange (class in matscipy.calculators.ewald.calculator)": [[40, "matscipy.calculators.ewald.calculator.EwaldShortRange"]], "__init__() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.__init__"]], "__init__() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[40, "matscipy.calculators.ewald.calculator.EwaldShortRange.__init__"]], "allowed_wave_vectors() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.allowed_wave_vectors"]], "alpha (matscipy.calculators.ewald.calculator.ewald property)": [[40, "matscipy.calculators.ewald.calculator.Ewald.alpha"]], "band_structure() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.band_structure"]], "calculate() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.calculate"]], "calculate_numerical_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.calculate_properties"]], "calculation_required() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.calculation_required"]], "check_state() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.check_state"]], "cutoff (matscipy.calculators.ewald.calculator.ewaldshortrange property)": [[40, "matscipy.calculators.ewald.calculator.EwaldShortRange.cutoff"]], "default_parameters (matscipy.calculators.ewald.calculator.ewald attribute)": [[40, "matscipy.calculators.ewald.calculator.Ewald.default_parameters"]], "derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[40, "matscipy.calculators.ewald.calculator.EwaldShortRange.derivative"]], "determine_alpha() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.determine_alpha"]], "determine_kc() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.determine_kc"]], "determine_nk() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.determine_nk"]], "directory (matscipy.calculators.ewald.calculator.ewald property)": [[40, "matscipy.calculators.ewald.calculator.Ewald.directory"]], "discard_results_on_any_change (matscipy.calculators.ewald.calculator.ewald attribute)": [[40, "matscipy.calculators.ewald.calculator.Ewald.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.export_properties"]], "first_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[40, "matscipy.calculators.ewald.calculator.EwaldShortRange.first_derivative"]], "first_derivative_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.first_derivative_kspace"]], "get_atoms() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_charges"]], "get_cutoff() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[40, "matscipy.calculators.ewald.calculator.EwaldShortRange.get_cutoff"]], "get_default_parameters() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_elastic_constants"]], "get_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_forces"]], "get_hessian() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energy"]], "get_property() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_property"]], "get_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.get_stresses"]], "ignored_changes (matscipy.calculators.ewald.calculator.ewald attribute)": [[40, "matscipy.calculators.ewald.calculator.Ewald.ignored_changes"]], "implemented_properties (matscipy.calculators.ewald.calculator.ewald attribute)": [[40, "matscipy.calculators.ewald.calculator.Ewald.implemented_properties"]], "kspace_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.kspace_energy"]], "kspace_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.kspace_properties"]], "label (matscipy.calculators.ewald.calculator.ewald property)": [[40, "matscipy.calculators.ewald.calculator.Ewald.label"]], "matscipy.calculators.ewald.calculator": [[40, "module-matscipy.calculators.ewald.calculator"]], "name (matscipy.calculators.ewald.calculator.ewald attribute)": [[40, "matscipy.calculators.ewald.calculator.Ewald.name"]], "read() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.read"]], "read_atoms() (matscipy.calculators.ewald.calculator.ewald class method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.read_atoms"]], "reset() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.reset"]], "reset_kspace() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.reset_kspace"]], "rms_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.rms_kspace"]], "rms_rspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.rms_rspace"]], "second_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[40, "matscipy.calculators.ewald.calculator.EwaldShortRange.second_derivative"]], "self_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.self_energy"]], "set() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.set"]], "set_label() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.set_label"]], "short_range (matscipy.calculators.ewald.calculator.ewald property)": [[40, "matscipy.calculators.ewald.calculator.Ewald.short_range"]], "stress_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.stress_kspace"]], "todict() (matscipy.calculators.ewald.calculator.ewald method)": [[40, "matscipy.calculators.ewald.calculator.Ewald.todict"]], "combinedfit (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.CombinedFit"]], "d0 (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.D0"]], "ec (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.Ec"]], "ec (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.Ec"]], "ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.Ec"]], "ec (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.Ec"]], "ec (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.Ec"]], "ec (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.Ec"]], "ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.Ec"]], "ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.Ec"]], "ec (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.Ec"]], "ec (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.Ec"]], "ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.Ec"]], "fit (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.Fit"]], "fitb2 (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitB2"]], "fitbcc (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitBCC"]], "fitcubiccrystal (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitCubicCrystal"]], "fitdiamond (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitDiamond"]], "fitdiamond100 (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitDiamond100"]], "fitdiamond110 (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitDiamond110"]], "fitdiamond111 (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitDiamond111"]], "fitdimer (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitDimer"]], "fitfcc (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitFCC"]], "fitgraphene (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitGraphene"]], "fitgraphite (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitGraphite"]], "fithexagonalcrystal (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal"]], "fitl1_0 (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitL1_0"]], "fitl1_2 (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitL1_2"]], "fitsc (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitSC"]], "fitsinglepoint (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitSinglePoint"]], "fitsurface (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitSurface"]], "fittetragonalcrystal (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal"]], "parameters (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.Parameters"]], "penalty (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.Penalty"]], "rotatingfit (class in matscipy.calculators.fitting)": [[41, "matscipy.calculators.fitting.RotatingFit"]], "__init__() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.__init__"]], "__init__() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.__init__"]], "__init__() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.__init__"]], "__init__() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.__init__"]], "__init__() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.__init__"]], "__init__() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.__init__"]], "__init__() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.__init__"]], "__init__() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.__init__"]], "__init__() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.__init__"]], "__init__() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.__init__"]], "__init__() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.__init__"]], "__init__() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.__init__"]], "__init__() (matscipy.calculators.fitting.rotatingfit method)": [[41, "matscipy.calculators.fitting.RotatingFit.__init__"]], "a0 (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.a0"]], "a0 (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.a0"]], "a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.a0"]], "a0 (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.a0"]], "a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.a0"]], "a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.a0"]], "a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.a0"]], "a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.a0"]], "a0 (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.a0"]], "a0 (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.a0"]], "a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.a0"]], "atoms (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.atoms"]], "atoms (matscipy.calculators.fitting.fit attribute)": [[41, "matscipy.calculators.fitting.Fit.atoms"]], "atoms (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.atoms"]], "atoms (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.atoms"]], "atoms (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.atoms"]], "atoms (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.atoms"]], "atoms (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.atoms"]], "atoms (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.atoms"]], "atoms (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.atoms"]], "atoms (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.atoms"]], "atoms (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.atoms"]], "atoms (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.atoms"]], "c0 (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.c0"]], "c0 (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.c0"]], "c0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.c0"]], "c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.c0"]], "c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.c0"]], "calc (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.calc"]], "calc (matscipy.calculators.fitting.fit attribute)": [[41, "matscipy.calculators.fitting.Fit.calc"]], "calc (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.calc"]], "calc (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.calc"]], "calc (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.calc"]], "calc (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.calc"]], "calc (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.calc"]], "calc (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.calc"]], "calc (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.calc"]], "calc (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.calc"]], "calc (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.calc"]], "calc (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.calc"]], "calc (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.calc"]], "calc (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.calc"]], "calc (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.calc"]], "calc (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.calc"]], "calc (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.calc"]], "calc (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.calc"]], "calc (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.calc"]], "calc (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.calc"]], "calc (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.calc"]], "constant (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.constant"]], "cost_history (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.cost_history"]], "cost_history (matscipy.calculators.fitting.fit attribute)": [[41, "matscipy.calculators.fitting.Fit.cost_history"]], "cost_history (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.cost_history"]], "cost_history (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.cost_history"]], "cost_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.cost_history"]], "cost_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.cost_history"]], "crystal (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.crystal"]], "crystal (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.crystal"]], "crystal (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.crystal"]], "crystal (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.crystal"]], "crystal (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.crystal"]], "crystal (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.crystal"]], "crystal (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.crystal"]], "crystal (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.crystal"]], "crystalstr (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.crystalstr"]], "default (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.default"]], "derived (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.derived"]], "energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.energy"]], "fmax (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.fmax"]], "fmax (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.fmax"]], "fmax (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.fmax"]], "fmax (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.fmax"]], "fmax (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.fmax"]], "fmax (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.fmax"]], "fmax (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.fmax"]], "fmax (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.fmax"]], "fmax (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.fmax"]], "forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.forces"]], "func (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.func"]], "get() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get"]], "get_c11() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_C11"]], "get_c33() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_C33"]], "get_c33() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C33"]], "get_c44() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C44"]], "get_c66() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_C66"]], "get_c66() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C66"]], "get_cp() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_Cp"]], "get_d1() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_D1"]], "get_d1() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D1"]], "get_d2() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_D2"]], "get_d2() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D2"]], "get_d4() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_D4"]], "get_d4() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D4"]], "get_sfe() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_SFE"]], "get_array() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get_array"]], "get_cohesive_energy() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_cohesive_energy"]], "get_constant() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get_constant"]], "get_cost_function() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_cost_function"]], "get_cost_history() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_cost_history"]], "get_derived() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get_derived"]], "get_dict() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get_dict"]], "get_distance() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_distance"]], "get_lattice_constant() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_lattice_constant"]], "get_lower_bounds() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get_lower_bounds"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_parameters_at_minimal_cost"]], "get_potential_energy() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_potential_energy"]], "get_residuals() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_residuals"]], "get_residuals_history() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_residuals_history"]], "get_square_residuals() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.get_square_residuals"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.get_surface_energy"]], "get_upper_bounds() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get_upper_bounds"]], "get_variable() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.get_variable"]], "hidden (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.hidden"]], "in_range() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.in_range"]], "matscipy.calculators.fitting": [[41, "module-matscipy.calculators.fitting"]], "minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fit attribute)": [[41, "matscipy.calculators.fitting.Fit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.minimal_cost"]], "new_bulk() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.new_bulk"]], "new_dimer() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.new_dimer"]], "new_surface() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.new_surface"]], "optimize() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.optimize"]], "optimize() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.optimize"]], "optimize() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.optimize"]], "optimize() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.optimize"]], "optimize() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.optimize"]], "optimize() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.optimize"]], "optimize() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.optimize"]], "optimize() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.optimize"]], "optimize() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.optimize"]], "optimize() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.optimize"]], "optimize() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.optimize"]], "optimize() (matscipy.calculators.fitting.rotatingfit method)": [[41, "matscipy.calculators.fitting.RotatingFit.optimize"]], "optimize_anneal() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.optimize_anneal"]], "optimize_brute() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.optimize_brute"]], "optimize_leastsq() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.optimize_leastsq"]], "optimize_openopt() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.optimize_openopt"]], "par (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.par"]], "par (matscipy.calculators.fitting.fit attribute)": [[41, "matscipy.calculators.fitting.Fit.par"]], "par (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.par"]], "par (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.par"]], "par (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.par"]], "par (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.par"]], "par (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.par"]], "par (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.par"]], "par (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.par"]], "par (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.par"]], "par (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.par"]], "par (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.par"]], "par (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.par"]], "par (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.par"]], "par (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.par"]], "par (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.par"]], "par (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.par"]], "par (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.par"]], "par (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.par"]], "par (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.par"]], "par (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.par"]], "par (matscipy.calculators.fitting.rotatingfit attribute)": [[41, "matscipy.calculators.fitting.RotatingFit.par"]], "par_at_minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fit attribute)": [[41, "matscipy.calculators.fitting.Fit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.par_at_minimal_cost"]], "parameters (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.parameters"]], "r0 (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.r0"]], "range_mapping (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.range_mapping"]], "ranges (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.ranges"]], "residuals_history (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fit attribute)": [[41, "matscipy.calculators.fitting.Fit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.penalty attribute)": [[41, "matscipy.calculators.fitting.Penalty.residuals_history"]], "set() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.set"]], "set_array() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.set_array"]], "set_calculator() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.set_calculator"]], "set_calculator_class() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.set_calculator_class"]], "set_constant() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.set_constant"]], "set_derived() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.set_derived"]], "set_dict() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.set_dict"]], "set_parameters() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.set_parameters"]], "set_parameters_from_array() (matscipy.calculators.fitting.combinedfit method)": [[41, "matscipy.calculators.fitting.CombinedFit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fit method)": [[41, "matscipy.calculators.fitting.Fit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitb2 method)": [[41, "matscipy.calculators.fitting.FitB2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitbcc method)": [[41, "matscipy.calculators.fitting.FitBCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitcubiccrystal method)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond method)": [[41, "matscipy.calculators.fitting.FitDiamond.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond100 method)": [[41, "matscipy.calculators.fitting.FitDiamond100.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond110 method)": [[41, "matscipy.calculators.fitting.FitDiamond110.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond111 method)": [[41, "matscipy.calculators.fitting.FitDiamond111.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdimer method)": [[41, "matscipy.calculators.fitting.FitDimer.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitfcc method)": [[41, "matscipy.calculators.fitting.FitFCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphene method)": [[41, "matscipy.calculators.fitting.FitGraphene.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphite method)": [[41, "matscipy.calculators.fitting.FitGraphite.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_0 method)": [[41, "matscipy.calculators.fitting.FitL1_0.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_2 method)": [[41, "matscipy.calculators.fitting.FitL1_2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsc method)": [[41, "matscipy.calculators.fitting.FitSC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsinglepoint method)": [[41, "matscipy.calculators.fitting.FitSinglePoint.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsurface method)": [[41, "matscipy.calculators.fitting.FitSurface.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.penalty method)": [[41, "matscipy.calculators.fitting.Penalty.set_parameters_from_array"]], "set_range_derived() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.set_range_derived"]], "set_variable() (matscipy.calculators.fitting.parameters method)": [[41, "matscipy.calculators.fitting.Parameters.set_variable"]], "stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.stress"]], "surfstr (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.surfstr"]], "targets (matscipy.calculators.fitting.combinedfit attribute)": [[41, "matscipy.calculators.fitting.CombinedFit.targets"]], "targets (matscipy.calculators.fitting.rotatingfit attribute)": [[41, "matscipy.calculators.fitting.RotatingFit.targets"]], "variable (matscipy.calculators.fitting.parameters attribute)": [[41, "matscipy.calculators.fitting.Parameters.variable"]], "w_d0 (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.w_D0"]], "w_ec (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.w_Ec"]], "w_ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.w_Ec"]], "w_ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.w_Ec"]], "w_a0 (matscipy.calculators.fitting.fitb2 attribute)": [[41, "matscipy.calculators.fitting.FitB2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitbcc attribute)": [[41, "matscipy.calculators.fitting.FitBCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[41, "matscipy.calculators.fitting.FitCubicCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[41, "matscipy.calculators.fitting.FitDiamond.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond100.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond110.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[41, "matscipy.calculators.fitting.FitDiamond111.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitfcc attribute)": [[41, "matscipy.calculators.fitting.FitFCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[41, "matscipy.calculators.fitting.FitGraphene.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[41, "matscipy.calculators.fitting.FitGraphite.w_a0"]], "w_a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitHexagonalCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[41, "matscipy.calculators.fitting.FitL1_2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsc attribute)": [[41, "matscipy.calculators.fitting.FitSC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsurface attribute)": [[41, "matscipy.calculators.fitting.FitSurface.w_a0"]], "w_a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.w_a0"]], "w_c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[41, "matscipy.calculators.fitting.FitL1_0.w_c0"]], "w_c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[41, "matscipy.calculators.fitting.FitTetragonalCrystal.w_c0"]], "w_energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.w_energy"]], "w_forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.w_forces"]], "w_r0 (matscipy.calculators.fitting.fitdimer attribute)": [[41, "matscipy.calculators.fitting.FitDimer.w_r0"]], "w_stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[41, "matscipy.calculators.fitting.FitSinglePoint.w_stress"]], "matscipy.calculators.manybody": [[42, "module-matscipy.calculators.manybody"]], "manybody (class in matscipy.calculators.manybody.calculator)": [[43, "matscipy.calculators.manybody.calculator.Manybody"]], "nicemanybody (class in matscipy.calculators.manybody.calculator)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody"]], "nicemanybody.f (class in matscipy.calculators.manybody.calculator)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.F"]], "nicemanybody.g (class in matscipy.calculators.manybody.calculator)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.G"]], "__init__() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.__init__"]], "__init__() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.__init__"]], "band_structure() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.band_structure"]], "band_structure() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.band_structure"]], "calculate() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.calculate"]], "calculate() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_forces"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_stress"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.calculate_properties"]], "calculate_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.calculation_required"]], "calculation_required() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.check_state"]], "check_state() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.check_state"]], "default_parameters (matscipy.calculators.manybody.calculator.manybody attribute)": [[43, "matscipy.calculators.manybody.calculator.Manybody.default_parameters"]], "default_parameters (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.default_parameters"]], "directory (matscipy.calculators.manybody.calculator.manybody property)": [[43, "matscipy.calculators.manybody.calculator.Manybody.directory"]], "directory (matscipy.calculators.manybody.calculator.nicemanybody property)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.manybody attribute)": [[43, "matscipy.calculators.manybody.calculator.Manybody.discard_results_on_any_change"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.export_properties"]], "export_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_atoms"]], "get_atoms() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_birch_coefficients"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_born_elastic_constants"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_charges"]], "get_charges() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_charges"]], "get_cutoff() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_cutoff"]], "get_cutoff() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_cutoff"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_default_parameters"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_dipole_moment"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_dynamical_matrix"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_elastic_constants"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_forces"]], "get_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_hessian"]], "get_hessian() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_hessian_from_second_derivative"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian_from_second_derivative"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moment"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moments"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_forces_from_second_derivative"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_forces_from_second_derivative"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_nonaffine_forces"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_numerical_non_affine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energies"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_property"]], "get_property() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_property"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_second_derivative"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_second_derivative"]], "get_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_stress"]], "get_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.get_stresses"]], "get_stresses() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.F.gradient"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.G.gradient"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.F.hessian"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.G.hessian"]], "ignored_changes (matscipy.calculators.manybody.calculator.manybody attribute)": [[43, "matscipy.calculators.manybody.calculator.Manybody.ignored_changes"]], "ignored_changes (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.calculator.manybody attribute)": [[43, "matscipy.calculators.manybody.calculator.Manybody.implemented_properties"]], "implemented_properties (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.implemented_properties"]], "label (matscipy.calculators.manybody.calculator.manybody property)": [[43, "matscipy.calculators.manybody.calculator.Manybody.label"]], "label (matscipy.calculators.manybody.calculator.nicemanybody property)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.label"]], "matscipy.calculators.manybody.calculator": [[43, "module-matscipy.calculators.manybody.calculator"]], "name (matscipy.calculators.manybody.calculator.manybody attribute)": [[43, "matscipy.calculators.manybody.calculator.Manybody.name"]], "name (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.name"]], "read() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.read"]], "read() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.read"]], "read_atoms() (matscipy.calculators.manybody.calculator.manybody class method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.read_atoms"]], "read_atoms() (matscipy.calculators.manybody.calculator.nicemanybody class method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.read_atoms"]], "reset() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.reset"]], "reset() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.reset"]], "set() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.set"]], "set() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.set"]], "set_label() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.set_label"]], "set_label() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.set_label"]], "todict() (matscipy.calculators.manybody.calculator.manybody method)": [[43, "matscipy.calculators.manybody.calculator.Manybody.todict"]], "todict() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[43, "matscipy.calculators.manybody.calculator.NiceManybody.todict"]], "matscipy.calculators.manybody.explicit_forms": [[44, "module-matscipy.calculators.manybody.explicit_forms"]], "harmonicangle (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle"]], "harmonicbond (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond"]], "zeropair (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair"]], "zerotriplet (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__init__"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.gradient"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[45, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[45, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "kumagai() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[46, "matscipy.calculators.manybody.explicit_forms.kumagai.Kumagai"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[46, "matscipy.calculators.manybody.explicit_forms.kumagai.ab"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[46, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "stillingerweber() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[47, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.StillingerWeber"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[47, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[47, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "tersoffbrenner() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[48, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.TersoffBrenner"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[48, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "mix() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[48, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix"]], "mix_arithmetic() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[48, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_arithmetic"]], "mix_geometric() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[48, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_geometric"]], "pair_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[48, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.pair_index"]], "triplet_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[48, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.triplet_index"]], "manybody (class in matscipy.calculators.manybody.newmb)": [[49, "matscipy.calculators.manybody.newmb.Manybody"]], "manybody.phi (class in matscipy.calculators.manybody.newmb)": [[49, "matscipy.calculators.manybody.newmb.Manybody.Phi"]], "manybody.theta (class in matscipy.calculators.manybody.newmb)": [[49, "matscipy.calculators.manybody.newmb.Manybody.Theta"]], "__init__() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.__init__"]], "band_structure() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.band_structure"]], "calculate() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.check_state"]], "default_parameters (matscipy.calculators.manybody.newmb.manybody attribute)": [[49, "matscipy.calculators.manybody.newmb.Manybody.default_parameters"]], "directory (matscipy.calculators.manybody.newmb.manybody property)": [[49, "matscipy.calculators.manybody.newmb.Manybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.newmb.manybody attribute)": [[49, "matscipy.calculators.manybody.newmb.Manybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_charges"]], "get_default_parameters() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_property"]], "get_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.Phi.gradient"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.Theta.gradient"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.Phi.hessian"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.Theta.hessian"]], "ignored_changes (matscipy.calculators.manybody.newmb.manybody attribute)": [[49, "matscipy.calculators.manybody.newmb.Manybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.newmb.manybody attribute)": [[49, "matscipy.calculators.manybody.newmb.Manybody.implemented_properties"]], "label (matscipy.calculators.manybody.newmb.manybody property)": [[49, "matscipy.calculators.manybody.newmb.Manybody.label"]], "matscipy.calculators.manybody.newmb": [[49, "module-matscipy.calculators.manybody.newmb"]], "read() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.read"]], "read_atoms() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.read_atoms"]], "reset() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.reset"]], "set() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.set"]], "set_label() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.set_label"]], "sum_xx_sum_ijk_tau_xx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.sum_XX_sum_ijk_tau_XX_mn"]], "sum_xy_sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.sum_XY_sum_ijk_tau_XY_mn"]], "sum_x_sum_ijk_tau_ijx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ijX_mn"]], "sum_x_sum_ijk_tau_ij_xor_x_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ij_XOR_X_mn"]], "sum_ij_pi_ij_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_pi_ij_n"]], "sum_ij_sum_x_pi_x_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_sum_X_pi_X_n"]], "sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.sum_ijk_tau_XY_mn"]], "todict() (matscipy.calculators.manybody.newmb.manybody method)": [[49, "matscipy.calculators.manybody.newmb.Manybody.todict"]], "bornmayercut (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.BornMayerCut"]], "harmonicangle (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.HarmonicAngle"]], "harmonicpair (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.HarmonicPair"]], "kumagaiangle (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.KumagaiAngle"]], "kumagaipair (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.KumagaiPair"]], "lennardjones (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.LennardJones"]], "stillingerweberangle (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberAngle"]], "stillingerweberpair (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberPair"]], "symphi (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.SymPhi"]], "symtheta (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.SymTheta"]], "tersoffbrennerangle (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle"]], "tersoffbrennerpair (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerPair"]], "zeroangle (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.ZeroAngle"]], "zeropair (class in matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.ZeroPair"]], "__init__() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[50, "matscipy.calculators.manybody.potentials.BornMayerCut.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[50, "matscipy.calculators.manybody.potentials.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[50, "matscipy.calculators.manybody.potentials.HarmonicPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[50, "matscipy.calculators.manybody.potentials.KumagaiAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[50, "matscipy.calculators.manybody.potentials.KumagaiPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.lennardjones method)": [[50, "matscipy.calculators.manybody.potentials.LennardJones.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.symphi method)": [[50, "matscipy.calculators.manybody.potentials.SymPhi.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.symtheta method)": [[50, "matscipy.calculators.manybody.potentials.SymTheta.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.__init__"]], "angle_distance_defined() (in module matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.angle_distance_defined"]], "distance_defined() (in module matscipy.calculators.manybody.potentials)": [[50, "matscipy.calculators.manybody.potentials.distance_defined"]], "gradient() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[50, "matscipy.calculators.manybody.potentials.BornMayerCut.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[50, "matscipy.calculators.manybody.potentials.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[50, "matscipy.calculators.manybody.potentials.HarmonicPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[50, "matscipy.calculators.manybody.potentials.KumagaiAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[50, "matscipy.calculators.manybody.potentials.KumagaiPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.lennardjones method)": [[50, "matscipy.calculators.manybody.potentials.LennardJones.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.symphi method)": [[50, "matscipy.calculators.manybody.potentials.SymPhi.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.symtheta method)": [[50, "matscipy.calculators.manybody.potentials.SymTheta.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeroangle method)": [[50, "matscipy.calculators.manybody.potentials.ZeroAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeropair method)": [[50, "matscipy.calculators.manybody.potentials.ZeroPair.gradient"]], "hessian() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[50, "matscipy.calculators.manybody.potentials.BornMayerCut.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[50, "matscipy.calculators.manybody.potentials.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[50, "matscipy.calculators.manybody.potentials.HarmonicPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[50, "matscipy.calculators.manybody.potentials.KumagaiAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[50, "matscipy.calculators.manybody.potentials.KumagaiPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.lennardjones method)": [[50, "matscipy.calculators.manybody.potentials.LennardJones.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[50, "matscipy.calculators.manybody.potentials.StillingerWeberPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.symphi method)": [[50, "matscipy.calculators.manybody.potentials.SymPhi.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.symtheta method)": [[50, "matscipy.calculators.manybody.potentials.SymTheta.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[50, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeroangle method)": [[50, "matscipy.calculators.manybody.potentials.ZeroAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeropair method)": [[50, "matscipy.calculators.manybody.potentials.ZeroPair.hessian"]], "matscipy.calculators.manybody.potentials": [[50, "module-matscipy.calculators.manybody.potentials"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm": [[51, "module-matscipy.calculators.mcfm"]], "print_message() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential class method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.todict"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm.calculator)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm.calculator": [[52, "module-matscipy.calculators.mcfm.calculator"]], "print_message() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential class method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[52, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.todict"]], "clusterdata (class in matscipy.calculators.mcfm.cluster_data)": [[53, "matscipy.calculators.mcfm.cluster_data.ClusterData"]], "__init__() (matscipy.calculators.mcfm.cluster_data.clusterdata method)": [[53, "matscipy.calculators.mcfm.cluster_data.ClusterData.__init__"]], "forces (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[53, "matscipy.calculators.mcfm.cluster_data.ClusterData.forces"]], "mark (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[53, "matscipy.calculators.mcfm.cluster_data.ClusterData.mark"]], "matscipy.calculators.mcfm.cluster_data": [[53, "module-matscipy.calculators.mcfm.cluster_data"]], "qm_list (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[53, "matscipy.calculators.mcfm.cluster_data.ClusterData.qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[54, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "get_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control)": [[55, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[55, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[56, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "worker_populate_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker)": [[56, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[57, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "neighbourlistbase (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[58, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.update"]], "neighbourlistmcfm (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm)": [[59, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM"]], "__init__() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[59, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.__init__"]], "do_update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[59, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.do_update"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[59, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[59, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[59, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.update"]], "qmcluster (class in matscipy.calculators.mcfm.qm_cluster)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster"]], "__init__() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster.__init__"]], "attach_clustering_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_clustering_module"]], "attach_flagging_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_flagging_module"]], "attach_neighbour_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_neighbour_list"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster.carve_cluster"]], "matscipy.calculators.mcfm.qm_cluster": [[60, "module-matscipy.calculators.mcfm.qm_cluster"]], "reset_energized_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster.reset_energized_list"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[60, "matscipy.calculators.mcfm.qm_cluster.QMCluster.update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[61, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "baseqmclustertool (class in matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.__init__"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[62, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "qmclusteringtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.__init__"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.carve_cluster"]], "complete_aromatic_rings() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.complete_aromatic_rings"]], "create_buffer_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_buffer_region"]], "create_cluster_from_marks() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_cluster_from_marks"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_cluster"]], "hydrogenate_dangling_bonds() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_dangling_bonds"]], "include_special_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.include_special_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[63, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "print_message() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.print_message"]], "replace_double_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_double_bond"]], "replace_single_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_single_bond"]], "qmflaggingtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.__init__"]], "create_cluster_around_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.create_cluster_around_atom"]], "expand_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.expand_cluster"]], "exponential_moving_average() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.exponential_moving_average"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.find_neighbours"]], "get_energized_list() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.get_energized_list"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.hydrogenate_cluster"]], "join_clusters() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.join_clusters"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[64, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "update_avg_property_per_atom() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.update_avg_property_per_atom"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[64, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.update_qm_region"]], "matscipy.calculators.pair_potential": [[65, "module-matscipy.calculators.pair_potential"]], "beestkramersanten (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten"]], "cutoffinteraction (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.CutoffInteraction"]], "feneljcut (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.FeneLJCut"]], "lennardjones84 (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJones84"]], "lennardjonescut (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesCut"]], "lennardjoneslinear (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear"]], "lennardjonesquadratic (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic"]], "pairpotential (class in matscipy.calculators.pair_potential.calculator)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential"]], "__init__() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[66, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[66, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[66, "matscipy.calculators.pair_potential.calculator.FeneLJCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJones84.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.__init__"]], "band_structure() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.band_structure"]], "calculate() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.calculation_required"]], "check_state() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.check_state"]], "cutoff (matscipy.calculators.pair_potential.calculator.beestkramersanten property)": [[66, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.cutoffinteraction property)": [[66, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.feneljcut property)": [[66, "matscipy.calculators.pair_potential.calculator.FeneLJCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjones84 property)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJones84.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonescut property)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjoneslinear property)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic property)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.cutoff"]], "default_parameters (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.default_parameters"]], "derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[66, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[66, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[66, "matscipy.calculators.pair_potential.calculator.FeneLJCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJones84.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.derivative"]], "directory (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.export_properties"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[66, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[66, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[66, "matscipy.calculators.pair_potential.calculator.FeneLJCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJones84.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.first_derivative"]], "get_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_charges"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[66, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[66, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[66, "matscipy.calculators.pair_potential.calculator.FeneLJCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJones84.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.get_cutoff"]], "get_default_parameters() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_elastic_constants"]], "get_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_forces"]], "get_hessian() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energy"]], "get_property() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_property"]], "get_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stresses"]], "ignored_changes (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.implemented_properties"]], "label (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.label"]], "matscipy.calculators.pair_potential.calculator": [[66, "module-matscipy.calculators.pair_potential.calculator"]], "name (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.name"]], "read() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.read"]], "read_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential class method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.read_atoms"]], "reset() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.reset"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[66, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[66, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[66, "matscipy.calculators.pair_potential.calculator.FeneLJCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJones84.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[66, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.second_derivative"]], "set() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.set"]], "set_label() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.set_label"]], "todict() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[66, "matscipy.calculators.pair_potential.calculator.PairPotential.todict"]], "matscipy.calculators.polydisperse": [[67, "module-matscipy.calculators.polydisperse"]], "inversepowerlawpotential (class in matscipy.calculators.polydisperse.calculator)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential"]], "polydisperse (class in matscipy.calculators.polydisperse.calculator)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse"]], "__init__() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.__init__"]], "__init__() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.__init__"]], "band_structure() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.band_structure"]], "calculate() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate"]], "calculate_numerical_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_properties"]], "calculation_required() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculation_required"]], "check_state() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.check_state"]], "default_parameters (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.default_parameters"]], "derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.derivative"]], "directory (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.directory"]], "discard_results_on_any_change (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.export_properties"]], "first_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.first_derivative"]], "get_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_charges"]], "get_coeffs() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_coeffs"]], "get_cutoff() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_cutoff"]], "get_default_parameters() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_elastic_constants"]], "get_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_forces"]], "get_hessian() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moments"]], "get_maxsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_maxSize"]], "get_minsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_minSize"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energy"]], "get_property() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_property"]], "get_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stresses"]], "ignored_changes (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.ignored_changes"]], "implemented_properties (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.implemented_properties"]], "label (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.label"]], "matscipy.calculators.polydisperse.calculator": [[68, "module-matscipy.calculators.polydisperse.calculator"]], "mix_sizes() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.mix_sizes"]], "name (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.name"]], "read() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.read"]], "read_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse class method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.read_atoms"]], "reset() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.reset"]], "second_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[68, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.second_derivative"]], "set() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.set"]], "set_label() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.set_label"]], "todict() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[68, "matscipy.calculators.polydisperse.calculator.Polydisperse.todict"]], "supercellcalculator (class in matscipy.calculators.supercell_calculator)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator"]], "__init__() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.__init__"]], "band_structure() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.band_structure"]], "calculate() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculation_required"]], "check_state() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.check_state"]], "default_parameters (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.default_parameters"]], "directory (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.export_properties"]], "get_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_atoms"]], "get_charges() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_dipole_moment"]], "get_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_forces"]], "get_magnetic_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_property"]], "get_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stress"]], "get_stresses() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.implemented_properties"]], "label (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.label"]], "matscipy.calculators.supercell_calculator": [[69, "module-matscipy.calculators.supercell_calculator"]], "name (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.name"]], "read() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.read"]], "read_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator class method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.read_atoms"]], "reset() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.reset"]], "set() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.set"]], "set_label() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.set_label"]], "todict() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[69, "matscipy.calculators.supercell_calculator.SupercellCalculator.todict"]], "cubiccauchyborn (class in matscipy.cauchy_born)": [[70, "matscipy.cauchy_born.CubicCauchyBorn"]], "regressionmodel (class in matscipy.cauchy_born)": [[70, "matscipy.cauchy_born.RegressionModel"]], "__init__() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.__init__"]], "apply_shifts() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.apply_shifts"]], "basis_function_evaluation() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.basis_function_evaluation"]], "check_for_refit() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.check_for_refit"]], "eval_shift() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.eval_shift"]], "evaluate_e() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_E"]], "evaluate_f() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_F"]], "evaluate_f_or_e() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_F_or_E"]], "evaluate_shift_gradient_regression() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_shift_gradient_regression"]], "evaluate_shift_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_shift_model"]], "fit() (matscipy.cauchy_born.regressionmodel method)": [[70, "matscipy.cauchy_born.RegressionModel.fit"]], "fit_taylor() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.fit_taylor"]], "get_cb_error() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.get_cb_error"]], "get_data_points() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.get_data_points"]], "get_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.get_model"]], "get_shift_gradients() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.get_shift_gradients"]], "grad_basis_function_evaluation() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.grad_basis_function_evaluation"]], "initial_regression_fit() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.initial_regression_fit"]], "load() (matscipy.cauchy_born.regressionmodel method)": [[70, "matscipy.cauchy_born.RegressionModel.load"]], "load_regression_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.load_regression_model"]], "load_taylor() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.load_taylor"]], "matscipy.cauchy_born": [[70, "module-matscipy.cauchy_born"]], "permutation() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.permutation"]], "predict() (matscipy.cauchy_born.regressionmodel method)": [[70, "matscipy.cauchy_born.RegressionModel.predict"]], "predict_gradient() (matscipy.cauchy_born.regressionmodel method)": [[70, "matscipy.cauchy_born.RegressionModel.predict_gradient"]], "predict_shifts() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.predict_shifts"]], "refit_regression() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.refit_regression"]], "save() (matscipy.cauchy_born.regressionmodel method)": [[70, "matscipy.cauchy_born.RegressionModel.save"]], "save_regression_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.save_regression_model"]], "save_taylor() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.save_taylor"]], "set_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.set_model"]], "set_sublattices() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.set_sublattices"]], "switch_sublattices() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.switch_sublattices"]], "tensor_field_3d_from_atoms() (matscipy.cauchy_born.cubiccauchyborn method)": [[70, "matscipy.cauchy_born.CubicCauchyBorn.tensor_field_3D_from_atoms"]], "matscipy.cli": [[71, "module-matscipy.cli"]], "matscipy.cli.calculators": [[72, "module-matscipy.cli.calculators"]], "main() (in module matscipy.cli.calculators.average_eam_potential)": [[73, "matscipy.cli.calculators.average_eam_potential.main"]], "matscipy.cli.calculators.average_eam_potential": [[73, "module-matscipy.cli.calculators.average_eam_potential"]], "matscipy.cli.diffusion": [[74, "module-matscipy.cli.diffusion"]], "main() (in module matscipy.cli.diffusion.rms)": [[75, "matscipy.cli.diffusion.rms.main"]], "matscipy.cli.diffusion.rms": [[75, "module-matscipy.cli.diffusion.rms"]], "matscipy.cli.electrochemistry": [[76, "module-matscipy.cli.electrochemistry"]], "main() (in module matscipy.cli.electrochemistry.continuous2discrete)": [[77, "matscipy.cli.electrochemistry.continuous2discrete.main"]], "matscipy.cli.electrochemistry.continuous2discrete": [[77, "module-matscipy.cli.electrochemistry.continuous2discrete"]], "main() (in module matscipy.cli.electrochemistry.poisson_nernst_planck_solver)": [[78, "matscipy.cli.electrochemistry.poisson_nernst_planck_solver.main"]], "matscipy.cli.electrochemistry.poisson_nernst_planck_solver": [[78, "module-matscipy.cli.electrochemistry.poisson_nernst_planck_solver"]], "main() (in module matscipy.cli.electrochemistry.stericify)": [[79, "matscipy.cli.electrochemistry.stericify.main"]], "matscipy.cli.electrochemistry.stericify": [[79, "module-matscipy.cli.electrochemistry.stericify"]], "matscipy.cli.fracture_mechanics": [[80, "module-matscipy.cli.fracture_mechanics"]], "main() (in module matscipy.cli.fracture_mechanics.quasistatic_crack)": [[81, "matscipy.cli.fracture_mechanics.quasistatic_crack.main"]], "matscipy.cli.fracture_mechanics.quasistatic_crack": [[81, "module-matscipy.cli.fracture_mechanics.quasistatic_crack"]], "matscipy.cli.fracture_mechanics.setup_crack": [[82, "module-matscipy.cli.fracture_mechanics.setup_crack"]], "setup_crack() (in module matscipy.cli.fracture_mechanics.setup_crack)": [[82, "matscipy.cli.fracture_mechanics.setup_crack.setup_crack"]], "main() (in module matscipy.cli.fracture_mechanics.sinclair_crack)": [[83, "matscipy.cli.fracture_mechanics.sinclair_crack.main"]], "matscipy.cli.fracture_mechanics.sinclair_crack": [[83, "module-matscipy.cli.fracture_mechanics.sinclair_crack"]], "matscipy.cli.glasses": [[84, "module-matscipy.cli.glasses"]], "handle_sigusr2() (in module matscipy.cli.glasses.quench)": [[85, "matscipy.cli.glasses.quench.handle_sigusr2"]], "main() (in module matscipy.cli.glasses.quench)": [[85, "matscipy.cli.glasses.quench.main"]], "matscipy.cli.glasses.quench": [[85, "module-matscipy.cli.glasses.quench"]], "random_solid() (in module matscipy.cli.glasses.quench)": [[85, "matscipy.cli.glasses.quench.random_solid"]], "removesimplesheardeformation (class in matscipy.deformation)": [[86, "matscipy.deformation.RemoveSimpleShearDeformation"]], "__init__() (matscipy.deformation.removesimplesheardeformation method)": [[86, "matscipy.deformation.RemoveSimpleShearDeformation.__init__"]], "get_shear_distance() (in module matscipy.deformation)": [[86, "matscipy.deformation.get_shear_distance"]], "matscipy.deformation": [[86, "module-matscipy.deformation"]], "adstroh (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.ADstroh"]], "adstroh (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.ADstroh"]], "adstroh (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.ADstroh"]], "adstroh (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.ADstroh"]], "adstroh (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.ADstroh"]], "adstroh (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.ADstroh"]], "anisotropicdislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.AnisotropicDislocation"]], "bccedge100110dislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation"]], "bccedge100dislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BCCEdge100Dislocation"]], "bccedge111dislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BCCEdge111Dislocation"]], "bccedge111bardislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BCCEdge111barDislocation"]], "bccmixed111dislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BCCMixed111Dislocation"]], "bccscrew111dislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BCCScrew111Dislocation"]], "bodycenteredcubicoctahedralfactory (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory"]], "bodycenteredcubictetrahedralfactory (class in matscipy.dislocation)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory"]], "c (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.C"]], "c (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.C"]], "c (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.C"]], "c (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.C"]], "c (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.C"]], "c (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.C"]], "c (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.C"]], "c (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.C"]], "c (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.C"]], "c (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.C"]], "c (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.C"]], "c (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.C"]], "c (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.C"]], "c (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.C"]], "c (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.C"]], "c (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.C"]], "c (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.C"]], "cubiccrystaldislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.CubicCrystalDislocation"]], "cubiccrystaldislocationquadrupole (class in matscipy.dislocation)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole"]], "cubiccrystaldissociateddislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation"]], "diamondglide30degreepartial (class in matscipy.dislocation)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial"]], "diamondglide60degree (class in matscipy.dislocation)": [[87, "matscipy.dislocation.DiamondGlide60Degree"]], "diamondglide90degreepartial (class in matscipy.dislocation)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial"]], "diamondglidescrew (class in matscipy.dislocation)": [[87, "matscipy.dislocation.DiamondGlideScrew"]], "fccedge110dislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.FCCEdge110Dislocation"]], "fccedgeshockleypartial (class in matscipy.dislocation)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial"]], "fccscrew110dislocation (class in matscipy.dislocation)": [[87, "matscipy.dislocation.FCCScrew110Dislocation"]], "fccscrewshockleypartial (class in matscipy.dislocation)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial"]], "fixedlineatoms (class in matscipy.dislocation)": [[87, "matscipy.dislocation.FixedLineAtoms"]], "quadrupole (in module matscipy.dislocation)": [[87, "matscipy.dislocation.Quadrupole"]], "t (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.T"]], "__init__() (matscipy.dislocation.anisotropicdislocation method)": [[87, "matscipy.dislocation.AnisotropicDislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.__init__"]], "__init__() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.__init__"]], "__init__() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.__init__"]], "__init__() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.__init__"]], "__init__() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fixedlineatoms method)": [[87, "matscipy.dislocation.FixedLineAtoms.__init__"]], "adjust_forces() (matscipy.dislocation.fixedlineatoms method)": [[87, "matscipy.dislocation.FixedLineAtoms.adjust_forces"]], "adjust_positions() (matscipy.dislocation.fixedlineatoms method)": [[87, "matscipy.dislocation.FixedLineAtoms.adjust_positions"]], "alat (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id70"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.alat"]], "alat (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id59"], [87, "matscipy.dislocation.BCCEdge100Dislocation.alat"]], "alat (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id26"], [87, "matscipy.dislocation.BCCEdge111Dislocation.alat"]], "alat (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id37"], [87, "matscipy.dislocation.BCCEdge111barDislocation.alat"]], "alat (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id48"], [87, "matscipy.dislocation.BCCMixed111Dislocation.alat"]], "alat (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id15"], [87, "matscipy.dislocation.BCCScrew111Dislocation.alat"]], "alat (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id7"], [87, "matscipy.dislocation.CubicCrystalDislocation.alat"]], "alat (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.alat"]], "alat (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.alat"]], "alat (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id81"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.alat"]], "alat (matscipy.dislocation.diamondglide60degree property)": [[87, "matscipy.dislocation.DiamondGlide60Degree.alat"]], "alat (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id92"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.alat"]], "alat (matscipy.dislocation.diamondglidescrew property)": [[87, "matscipy.dislocation.DiamondGlideScrew.alat"]], "alat (matscipy.dislocation.fccedge110dislocation property)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.alat"]], "alat (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id114"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.alat"]], "alat (matscipy.dislocation.fccscrew110dislocation property)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.alat"]], "alat (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id103"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.alat"]], "align() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.align"]], "align() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.align"]], "atm (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.atm"]], "atm (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.atm"]], "atm (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.atm"]], "atm (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.atm"]], "atm (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.atm"]], "atm (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.atm"]], "atm (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.atm"]], "atm (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.atm"]], "atm (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.atm"]], "atm (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.atm"]], "atm (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.atm"]], "atm (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.atm"]], "atm (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.atm"]], "atm (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.atm"]], "atm (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.atm"]], "atm (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.atm"]], "atm (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.atm"]], "atomman (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.atomman"]], "atomman (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.atomman"]], "atomman (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.atomman"]], "atomman (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.atomman"]], "atomman (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.atomman"]], "atomman (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.atomman"]], "atomman (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.atomman"]], "atomman (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.atomman"]], "atomman (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.atomman"]], "atomman (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.atomman"]], "atomman (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.atomman"]], "atomman (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.atomman"]], "atomman (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.atomman"]], "atomman (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.atomman"]], "atomman (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.atomman"]], "atomman (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.atomman"]], "atomman (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.atomman"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.atoms_in_unit_cell"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.atoms_in_unit_cell"]], "avail_methods (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.avail_methods"]], "avail_methods (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.avail_methods"]], "avail_methods (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.avail_methods"]], "avail_methods (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.avail_methods"]], "avail_methods (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.avail_methods"]], "avail_methods (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.avail_methods"]], "avail_methods (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.avail_methods"]], "avail_methods (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.avail_methods"]], "avail_methods (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.avail_methods"]], "avail_methods (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.avail_methods"]], "avail_methods (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.avail_methods"]], "avail_methods (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.avail_methods"]], "avail_methods (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.avail_methods"]], "avail_methods (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.avail_methods"]], "avail_methods (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.avail_methods"]], "avail_methods (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.avail_methods"]], "avail_methods (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.avail_methods"]], "axes (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id72"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.axes"]], "axes (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id61"], [87, "matscipy.dislocation.BCCEdge100Dislocation.axes"]], "axes (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id28"], [87, "matscipy.dislocation.BCCEdge111Dislocation.axes"]], "axes (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id39"], [87, "matscipy.dislocation.BCCEdge111barDislocation.axes"]], "axes (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id50"], [87, "matscipy.dislocation.BCCMixed111Dislocation.axes"]], "axes (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id17"], [87, "matscipy.dislocation.BCCScrew111Dislocation.axes"]], "axes (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id5"], [87, "matscipy.dislocation.CubicCrystalDislocation.axes"]], "axes (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.axes"]], "axes (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.axes"]], "axes (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id83"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.axes"]], "axes (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.axes"]], "axes (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id94"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.axes"]], "axes (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.axes"]], "axes (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.axes"]], "axes (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id116"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.axes"]], "axes (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.axes"]], "axes (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id105"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.axes"]], "base (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.base"]], "basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.basis_factor"]], "basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.basis_factor"]], "bravais_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.bravais_basis"]], "bravais_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.bravais_basis"]], "build_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.build_cylinder"]], "build_glide_configurations() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.build_glide_configurations"]], "build_glide_quadrupoles() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.build_glide_quadrupoles"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.build_impurity_cylinder"]], "build_kink_quadrupole() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.build_kink_quadrupole"]], "build_quadrupole() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.build_quadrupole"]], "burgers (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge100110dislocation property)": [[87, "id76"]], "burgers (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge100dislocation property)": [[87, "id65"]], "burgers (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge111dislocation property)": [[87, "id32"]], "burgers (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.burgers"]], "burgers (matscipy.dislocation.bccedge111bardislocation property)": [[87, "id43"]], "burgers (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccmixed111dislocation property)": [[87, "id53"]], "burgers (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccscrew111dislocation property)": [[87, "id20"]], "burgers (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.burgers"]], "burgers (matscipy.dislocation.cubiccrystaldislocation property)": [[87, "id9"]], "burgers (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.burgers"]], "burgers (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.burgers"]], "burgers (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.burgers"]], "burgers (matscipy.dislocation.diamondglide30degreepartial property)": [[87, "id88"]], "burgers (matscipy.dislocation.diamondglide60degree property)": [[87, "matscipy.dislocation.DiamondGlide60Degree.burgers"]], "burgers (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.burgers"]], "burgers (matscipy.dislocation.diamondglide90degreepartial property)": [[87, "id99"]], "burgers (matscipy.dislocation.diamondglidescrew property)": [[87, "matscipy.dislocation.DiamondGlideScrew.burgers"]], "burgers (matscipy.dislocation.fccedge110dislocation property)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.burgers"]], "burgers (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.burgers"]], "burgers (matscipy.dislocation.fccedgeshockleypartial property)": [[87, "id120"]], "burgers (matscipy.dislocation.fccscrew110dislocation property)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.burgers"]], "burgers (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.burgers"]], "burgers (matscipy.dislocation.fccscrewshockleypartial property)": [[87, "id109"]], "burgers_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id73"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id62"], [87, "matscipy.dislocation.BCCEdge100Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id29"], [87, "matscipy.dislocation.BCCEdge111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id40"], [87, "matscipy.dislocation.BCCEdge111barDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id51"], [87, "matscipy.dislocation.BCCMixed111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id18"], [87, "matscipy.dislocation.BCCScrew111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id4"], [87, "matscipy.dislocation.CubicCrystalDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id84"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id95"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id117"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id106"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.burgers_dimensionless"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.calc_num_atoms"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.calc_num_atoms"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.check_basis_volume"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.check_basis_volume"]], "check_duplicates() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.check_duplicates"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.chop_tolerance"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.chop_tolerance"]], "compare_configurations() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.compare_configurations"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.convert_to_natural_basis"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.convert_to_natural_basis"]], "cost_function() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.cost_function"]], "crystalstructure (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id75"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id64"], [87, "matscipy.dislocation.BCCEdge100Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id31"], [87, "matscipy.dislocation.BCCEdge111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id42"], [87, "matscipy.dislocation.BCCEdge111barDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id52"], [87, "matscipy.dislocation.BCCMixed111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id19"], [87, "matscipy.dislocation.BCCScrew111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id12"], [87, "matscipy.dislocation.CubicCrystalDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.crystalstructure"]], "crystalstructure (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id87"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id98"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id119"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id108"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.crystalstructure"]], "ctypes (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.ctypes"]], "data (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.data"]], "deformation_gradient() (matscipy.dislocation.anisotropicdislocation method)": [[87, "matscipy.dislocation.AnisotropicDislocation.deformation_gradient"]], "dipole_displacement_angle() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.dipole_displacement_angle"]], "displacement() (matscipy.dislocation.anisotropicdislocation method)": [[87, "matscipy.dislocation.AnisotropicDislocation.displacement"]], "displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.displacements"]], "displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.displacements"]], "displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.displacements"]], "displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.displacements"]], "displacements() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.displacements"]], "displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.displacements"]], "dtype (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.dtype"]], "element_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.element_basis"]], "element_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.element_basis"]], "find_directions() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_directions"]], "find_directions() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_directions"]], "find_ortho() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_ortho"]], "find_ortho() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_ortho"]], "fit_core_position() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.fit_core_position"]], "fit_core_position_images() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.fit_core_position_images"]], "flags (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.flags"]], "flat (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.flat"]], "gamma_line() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.gamma_line"]], "get_centering_mask() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.get_centering_mask"]], "get_elastic_constants() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.get_elastic_constants"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.get_lattice_constant"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.get_lattice_constant"]], "get_solvers() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.get_solvers"]], "get_solvers() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.get_solvers"]], "get_solvers() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.get_solvers"]], "get_solvers() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.get_solvers"]], "get_solvers() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.get_solvers"]], "get_solvers() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.get_solvers"]], "get_solvers() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.get_solvers"]], "get_solvers() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.get_solvers"]], "get_u_img() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.get_u_img"]], "glide_distance (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge100110dislocation property)": [[87, "id77"]], "glide_distance (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge100dislocation property)": [[87, "id66"]], "glide_distance (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge111dislocation property)": [[87, "id33"]], "glide_distance (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge111bardislocation property)": [[87, "id44"]], "glide_distance (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccmixed111dislocation property)": [[87, "id54"]], "glide_distance (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccscrew111dislocation property)": [[87, "id21"]], "glide_distance (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.cubiccrystaldislocation property)": [[87, "id11"]], "glide_distance (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.glide_distance"]], "glide_distance (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide30degreepartial property)": [[87, "id89"]], "glide_distance (matscipy.dislocation.diamondglide60degree property)": [[87, "matscipy.dislocation.DiamondGlide60Degree.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide90degreepartial property)": [[87, "id100"]], "glide_distance (matscipy.dislocation.diamondglidescrew property)": [[87, "matscipy.dislocation.DiamondGlideScrew.glide_distance"]], "glide_distance (matscipy.dislocation.fccedge110dislocation property)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.glide_distance"]], "glide_distance (matscipy.dislocation.fccedgeshockleypartial property)": [[87, "id121"]], "glide_distance (matscipy.dislocation.fccscrew110dislocation property)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.glide_distance"]], "glide_distance (matscipy.dislocation.fccscrewshockleypartial property)": [[87, "id110"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.glide_distance_dimensionless"]], "imag (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.imag"]], "init_adsl() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.init_adsl"]], "init_adsl() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.init_adsl"]], "init_adsl() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.init_adsl"]], "init_adsl() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.init_adsl"]], "init_adsl() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.init_adsl"]], "init_adsl() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.init_adsl"]], "init_adsl() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.init_adsl"]], "init_adsl() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.init_adsl"]], "init_atomman() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.init_atomman"]], "init_atomman() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.init_atomman"]], "init_atomman() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.init_atomman"]], "init_atomman() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.init_atomman"]], "init_atomman() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.init_atomman"]], "init_atomman() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.init_atomman"]], "init_atomman() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.init_atomman"]], "init_atomman() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.init_atomman"]], "init_solver() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.init_solver"]], "init_solver() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.init_solver"]], "init_solver() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.init_solver"]], "init_solver() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.init_solver"]], "init_solver() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.init_solver"]], "init_solver() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.init_solver"]], "init_solver() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.init_solver"]], "init_solver() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.init_solver"]], "init_solver() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_solver"]], "init_solver() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.init_solver"]], "init_solver() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.init_solver"]], "init_solver() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.init_solver"]], "init_solver() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.init_solver"]], "init_solver() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.init_solver"]], "init_solver() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.init_solver"]], "init_solver() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.init_solver"]], "init_solver() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.init_solver"]], "inside() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inside"]], "inside() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inside"]], "int_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.int_basis"]], "int_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.int_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis_factor"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis_factor"]], "invert_burgers() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.invert_burgers"]], "invert_burgers() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.invert_burgers"]], "invert_burgers() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.invert_burgers"]], "invert_burgers() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.invert_burgers"]], "invert_burgers() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.invert_burgers"]], "invert_burgers() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.invert_burgers"]], "invert_burgers() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.invert_burgers"]], "invert_burgers() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.invert_burgers"]], "itemsize (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.itemsize"]], "left_dislocation (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.left_dislocation"]], "left_dislocation (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.left_dislocation"]], "left_dislocation (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.left_dislocation"]], "left_dislocation (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.left_dislocation"]], "left_dislocation (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.left_dislocation"]], "left_dislocation (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.left_dislocation"]], "make_barrier_configurations() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.make_barrier_configurations"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_crystal_basis"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_crystal_basis"]], "make_edge_cyl() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.make_edge_cyl"]], "make_edge_cyl_001_100() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.make_edge_cyl_001_100"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_list_of_atoms"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_list_of_atoms"]], "make_screw_cyl() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.make_screw_cyl"]], "make_screw_cyl_kink() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.make_screw_cyl_kink"]], "make_screw_quadrupole() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.make_screw_quadrupole"]], "make_screw_quadrupole_kink() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.make_screw_quadrupole_kink"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_unit_cell"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_unit_cell"]], "matscipy.dislocation": [[87, "module-matscipy.dislocation"]], "n_planes (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id74"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id63"], [87, "matscipy.dislocation.BCCEdge100Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id30"], [87, "matscipy.dislocation.BCCEdge111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id41"], [87, "matscipy.dislocation.BCCEdge111barDislocation.n_planes"]], "n_planes (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id55"], [87, "matscipy.dislocation.BCCMixed111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id22"], [87, "matscipy.dislocation.BCCScrew111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id0"], [87, "matscipy.dislocation.CubicCrystalDislocation.n_planes"]], "n_planes (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.n_planes"]], "n_planes (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.n_planes"]], "n_planes (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id85"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.n_planes"]], "n_planes (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.n_planes"]], "n_planes (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id96"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.n_planes"]], "n_planes (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.n_planes"]], "n_planes (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id118"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.n_planes"]], "n_planes (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id107"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.n_planes"]], "name (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.name"]], "name (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.name"]], "name (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.name"]], "name (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.name"]], "name (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.name"]], "name (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.name"]], "name (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.name"]], "name (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.name"]], "name (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.name"]], "name (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.name"]], "name (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.name"]], "name (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.name"]], "name (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.name"]], "name (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.name"]], "name (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.name"]], "name (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.name"]], "name (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.name"]], "nbytes (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.nbytes"]], "ndim (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.ndim"]], "new_left_burgers (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.new_left_burgers"]], "new_right_burgers (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.new_right_burgers"]], "other (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.other"]], "other (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.other"]], "ovito_dxa_straight_dislo_info() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.ovito_dxa_straight_dislo_info"]], "parity (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id78"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.parity"]], "parity (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id67"], [87, "matscipy.dislocation.BCCEdge100Dislocation.parity"]], "parity (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id34"], [87, "matscipy.dislocation.BCCEdge111Dislocation.parity"]], "parity (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id45"], [87, "matscipy.dislocation.BCCEdge111barDislocation.parity"]], "parity (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id56"], [87, "matscipy.dislocation.BCCMixed111Dislocation.parity"]], "parity (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id23"], [87, "matscipy.dislocation.BCCScrew111Dislocation.parity"]], "parity (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id6"], [87, "matscipy.dislocation.CubicCrystalDislocation.parity"]], "parity (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.parity"]], "parity (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id90"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.parity"]], "parity (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id101"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.parity"]], "parity (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id122"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.parity"]], "parity (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id111"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.parity"]], "pbc (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.pbc"]], "pbc (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.pbc"]], "pbc (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.pbc"]], "pbc (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.pbc"]], "pbc (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.pbc"]], "pbc (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.pbc"]], "pbc (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.pbc"]], "pbc (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.pbc"]], "pbc (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.pbc"]], "pbc (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.pbc"]], "pbc (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.pbc"]], "pbc (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.pbc"]], "pbc (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.pbc"]], "pbc (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.pbc"]], "periodic_displacements() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.periodic_displacements"]], "plot_bulk() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.plot_bulk"]], "plot_unit_cell() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.plot_unit_cell"]], "plot_vitek() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.plot_vitek"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.print_directions_and_miller"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.print_directions_and_miller"]], "process_element() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.process_element"]], "process_element() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.process_element"]], "put_atom() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.put_atom"]], "put_atom() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.put_atom"]], "read_dislo_qmmm() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.read_dislo_QMMM"]], "real (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.real"]], "right_dislocation (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.right_dislocation"]], "right_dislocation (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.right_dislocation"]], "right_dislocation (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.right_dislocation"]], "right_dislocation (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.right_dislocation"]], "right_dislocation (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.right_dislocation"]], "right_dislocation (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.right_dislocation"]], "screw_cyl_octahedral() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.screw_cyl_octahedral"]], "screw_cyl_tetrahedral() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.screw_cyl_tetrahedral"]], "self_consistent (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id79"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id68"], [87, "matscipy.dislocation.BCCEdge100Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id35"], [87, "matscipy.dislocation.BCCEdge111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id46"], [87, "matscipy.dislocation.BCCEdge111barDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id57"], [87, "matscipy.dislocation.BCCMixed111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id24"], [87, "matscipy.dislocation.BCCScrew111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id3"], [87, "matscipy.dislocation.CubicCrystalDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.self_consistent"]], "self_consistent (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id86"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id97"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.self_consistent"]], "self_consistent (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id123"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.self_consistent"]], "self_consistent (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id112"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.self_consistent"]], "self_consistent_displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.self_consistent_displacements"]], "set_burgers() (matscipy.dislocation.bccedge100110dislocation method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge100dislocation method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111dislocation method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111bardislocation method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccmixed111dislocation method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccscrew111dislocation method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldislocation method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide30degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide60degree method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide90degreepartial method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglidescrew method)": [[87, "matscipy.dislocation.DiamondGlideScrew.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedge110dislocation method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedgeshockleypartial method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrew110dislocation method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrewshockleypartial method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.set_burgers"]], "shape (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.shape"]], "show_neb_configurations() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.show_NEB_configurations"]], "show_configuration() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.show_configuration"]], "size (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.size"]], "slice_long_dislo() (in module matscipy.dislocation)": [[87, "matscipy.dislocation.slice_long_dislo"]], "strides (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.strides"]], "stroh (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.stroh"]], "stroh (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.stroh"]], "stroh (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.stroh"]], "stroh (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.stroh"]], "stroh (matscipy.dislocation.cubiccrystaldislocationquadrupole attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.stroh"]], "stroh (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.stroh"]], "stroh (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.stroh"]], "stroh (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.stroh"]], "stroh (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.stroh"]], "stroh (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.stroh"]], "stroh (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.stroh"]], "stroh (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.stroh"]], "stroh (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.stroh"]], "stroh (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.stroh"]], "unit_cell (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "id71"], [87, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "id60"], [87, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "id27"], [87, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "id38"], [87, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "id49"], [87, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "id16"], [87, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "id8"], [87, "matscipy.dislocation.CubicCrystalDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.unit_cell"]], "unit_cell (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "id82"], [87, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide60degree property)": [[87, "matscipy.dislocation.DiamondGlide60Degree.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "id93"], [87, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglidescrew property)": [[87, "matscipy.dislocation.DiamondGlideScrew.unit_cell"]], "unit_cell (matscipy.dislocation.fccedge110dislocation property)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "id115"], [87, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell"]], "unit_cell (matscipy.dislocation.fccscrew110dislocation property)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "id104"], [87, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell"]], "unit_cell_core_position (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge100110dislocation property)": [[87, "id80"]], "unit_cell_core_position (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge100dislocation property)": [[87, "id69"]], "unit_cell_core_position (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge111dislocation property)": [[87, "id36"]], "unit_cell_core_position (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge111bardislocation property)": [[87, "id47"]], "unit_cell_core_position (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccmixed111dislocation property)": [[87, "id58"]], "unit_cell_core_position (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccscrew111dislocation property)": [[87, "id25"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldislocation property)": [[87, "id10"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide30degreepartial property)": [[87, "id91"]], "unit_cell_core_position (matscipy.dislocation.diamondglide60degree property)": [[87, "matscipy.dislocation.DiamondGlide60Degree.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide90degreepartial property)": [[87, "id102"]], "unit_cell_core_position (matscipy.dislocation.diamondglidescrew property)": [[87, "matscipy.dislocation.DiamondGlideScrew.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedge110dislocation property)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedgeshockleypartial property)": [[87, "id124"]], "unit_cell_core_position (matscipy.dislocation.fccscrew110dislocation property)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccscrewshockleypartial property)": [[87, "id113"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[87, "matscipy.dislocation.CubicCrystalDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.cubiccrystaldislocationquadrupole property)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[87, "matscipy.dislocation.DiamondGlide60Degree.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[87, "matscipy.dislocation.DiamondGlideScrew.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell_core_position_dimensionless"]], "view_cyl() (matscipy.dislocation.bccedge100110dislocation static method)": [[87, "matscipy.dislocation.BCCEdge100110Dislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.bccedge100dislocation static method)": [[87, "matscipy.dislocation.BCCEdge100Dislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.bccedge111dislocation static method)": [[87, "matscipy.dislocation.BCCEdge111Dislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.bccedge111bardislocation static method)": [[87, "matscipy.dislocation.BCCEdge111barDislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.bccmixed111dislocation static method)": [[87, "matscipy.dislocation.BCCMixed111Dislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.bccscrew111dislocation static method)": [[87, "matscipy.dislocation.BCCScrew111Dislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.cubiccrystaldislocation static method)": [[87, "matscipy.dislocation.CubicCrystalDislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.cubiccrystaldislocationquadrupole static method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.view_cyl"]], "view_cyl() (matscipy.dislocation.cubiccrystaldissociateddislocation static method)": [[87, "matscipy.dislocation.CubicCrystalDissociatedDislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.diamondglide30degreepartial static method)": [[87, "matscipy.dislocation.DiamondGlide30degreePartial.view_cyl"]], "view_cyl() (matscipy.dislocation.diamondglide60degree static method)": [[87, "matscipy.dislocation.DiamondGlide60Degree.view_cyl"]], "view_cyl() (matscipy.dislocation.diamondglide90degreepartial static method)": [[87, "matscipy.dislocation.DiamondGlide90degreePartial.view_cyl"]], "view_cyl() (matscipy.dislocation.diamondglidescrew static method)": [[87, "matscipy.dislocation.DiamondGlideScrew.view_cyl"]], "view_cyl() (matscipy.dislocation.fccedge110dislocation static method)": [[87, "matscipy.dislocation.FCCEdge110Dislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.fccedgeshockleypartial static method)": [[87, "matscipy.dislocation.FCCEdgeShockleyPartial.view_cyl"]], "view_cyl() (matscipy.dislocation.fccscrew110dislocation static method)": [[87, "matscipy.dislocation.FCCScrew110Dislocation.view_cyl"]], "view_cyl() (matscipy.dislocation.fccscrewshockleypartial static method)": [[87, "matscipy.dislocation.FCCScrewShockleyPartial.view_cyl"]], "view_quad() (matscipy.dislocation.cubiccrystaldislocationquadrupole method)": [[87, "matscipy.dislocation.CubicCrystalDislocationQuadrupole.view_quad"]], "xtal_name (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.xtal_name"]], "xtal_name (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[87, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.xtal_name"]], "removedrift (class in matscipy.drift)": [[88, "matscipy.drift.RemoveDrift"]], "__init__() (matscipy.drift.removedrift method)": [[88, "matscipy.drift.RemoveDrift.__init__"]], "matscipy.drift": [[88, "module-matscipy.drift"]], "cubicelasticmoduli (class in matscipy.elasticity)": [[89, "matscipy.elasticity.CubicElasticModuli"]], "voigt_6_to_full_3x3_strain() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.Voigt_6_to_full_3x3_strain"]], "voigt_6_to_full_3x3_stress() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.Voigt_6_to_full_3x3_stress"]], "voigt_6x6_to_cubic() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.Voigt_6x6_to_cubic"]], "voigt_6x6_to_full_3x3x3x3() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.Voigt_6x6_to_full_3x3x3x3"]], "__init__() (matscipy.elasticity.cubicelasticmoduli method)": [[89, "matscipy.elasticity.CubicElasticModuli.__init__"]], "coalesce_elastic_constants() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.coalesce_elastic_constants"]], "compliance() (matscipy.elasticity.cubicelasticmoduli method)": [[89, "matscipy.elasticity.CubicElasticModuli.compliance"]], "cubic_to_voigt_6x6() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.cubic_to_Voigt_6x6"]], "elastic_moduli() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.elastic_moduli"]], "fit_elastic_constants() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.fit_elastic_constants"]], "full_3x3_to_voigt_6_index() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.full_3x3_to_Voigt_6_index"]], "full_3x3_to_voigt_6_strain() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.full_3x3_to_Voigt_6_strain"]], "full_3x3_to_voigt_6_stress() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.full_3x3_to_Voigt_6_stress"]], "full_3x3x3x3_to_voigt_6x6() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.full_3x3x3x3_to_Voigt_6x6"]], "generate_strained_configs() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.generate_strained_configs"]], "invariants() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.invariants"]], "matscipy.elasticity": [[89, "module-matscipy.elasticity"]], "measure_triclinic_elastic_constants() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.measure_triclinic_elastic_constants"]], "nonaffine_elastic_contribution() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.nonaffine_elastic_contribution"]], "poisson_ratio() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.poisson_ratio"]], "rotate() (matscipy.elasticity.cubicelasticmoduli method)": [[89, "matscipy.elasticity.CubicElasticModuli.rotate"]], "rotate_cubic_elastic_constants() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.rotate_cubic_elastic_constants"]], "rotate_elastic_constants() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.rotate_elastic_constants"]], "stiffness() (matscipy.elasticity.cubicelasticmoduli method)": [[89, "matscipy.elasticity.CubicElasticModuli.stiffness"]], "tol (matscipy.elasticity.cubicelasticmoduli attribute)": [[89, "matscipy.elasticity.CubicElasticModuli.tol"]], "youngs_modulus() (in module matscipy.elasticity)": [[89, "matscipy.elasticity.youngs_modulus"]], "matscipy.electrochemistry": [[90, "module-matscipy.electrochemistry"]], "continuous2discrete() (in module matscipy.electrochemistry)": [[91, "matscipy.electrochemistry.continuous2discrete"]], "charge_density() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.charge_density"]], "concentration() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.concentration"]], "debye() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.debye"]], "gamma() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.gamma"]], "ionic_strength() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.ionic_strength"]], "main() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.main"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[92, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "potential() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.potential"]], "test() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[92, "matscipy.electrochemistry.poisson_boltzmann_distribution.test"]], "b() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.B"]], "g() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.G"]], "poissonnernstplancksystem (class in matscipy.electrochemistry.poisson_nernst_planck_solver)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.__init__"]], "charge_density (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.charge_density"]], "concentration (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.concentration"]], "discretize() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.discretize"]], "grid (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.grid"]], "init() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.init"]], "initial_values() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.initial_values"]], "ionic_strength (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.ionic_strength"]], "jacobian() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.jacobian"]], "lambda_d (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.lambda_D"]], "left_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_controlled_volume_scheme_flux_bc"]], "left_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_dirichlet_bc"]], "left_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_finite_difference_scheme_flux_bc"]], "left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_potential_dirichlet_bc"]], "left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_potential_robin_bc"]], "left_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_robin_bc"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[93, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "nernst_planck_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.nernst_planck_pde"]], "newton() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.newton"]], "number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.number_conservation_constraint"]], "poisson_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.poisson_pde"]], "potential (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.potential"]], "right_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_controlled_volume_scheme_flux_bc"]], "right_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_dirichlet_bc"]], "right_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_finite_difference_scheme_flux_bc"]], "right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_potential_dirichlet_bc"]], "right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_potential_robin_bc"]], "right_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_robin_bc"]], "solve() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solve"]], "solver_callback() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solver_callback"]], "use_standard_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_cell_bc"]], "use_standard_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_dirichlet_bc"]], "use_standard_interface_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_interface_bc"]], "use_stern_layer_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_stern_layer_cell_bc"]], "x1_scaled (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.x1_scaled"]], "boundary (class in matscipy.electrochemistry.poisson_nernst_planck_solver_fenics)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary"]], "g() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.G"]], "poissonnernstplancksystemfenics (class in matscipy.electrochemistry.poisson_nernst_planck_solver_fenics)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS"]], "x (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.X"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.__init__"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.__init__"]], "apply_central_reference_concentration_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_central_reference_concentration_constraint"]], "apply_left_concentration_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_concentration_dirichlet_bc"]], "apply_left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_potential_dirichlet_bc"]], "apply_left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_potential_robin_bc"]], "apply_number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_number_conservation_constraint"]], "apply_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_potential_dirichlet_bc"]], "apply_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_potential_robin_bc"]], "apply_right_concentration_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_concentration_dirichlet_bc"]], "apply_right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_potential_dirichlet_bc"]], "apply_right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_potential_robin_bc"]], "boundary_c() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_C"]], "boundary_l() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_L"]], "boundary_r() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_R"]], "charge_density (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.charge_density"]], "concentration (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.concentration"]], "discretize() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.discretize"]], "get_property() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.get_property"]], "grid (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.grid"]], "init() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.init"]], "initial_values() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.initial_values"]], "inside() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.inside"]], "ionic_strength (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.ionic_strength"]], "lambda_d (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.lambda_D"]], "left_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_controlled_volume_scheme_flux_bc"]], "left_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_dirichlet_bc"]], "left_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_finite_difference_scheme_flux_bc"]], "left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_potential_dirichlet_bc"]], "left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_potential_robin_bc"]], "left_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_robin_bc"]], "map() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.map"]], "mark() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark"]], "mark_cells() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark_cells"]], "mark_facets() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark_facets"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[94, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"]], "nernst_planck_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.nernst_planck_pde"]], "newton() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.newton"]], "number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.number_conservation_constraint"]], "poisson_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.poisson_pde"]], "potential (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.potential"]], "right_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_controlled_volume_scheme_flux_bc"]], "right_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_dirichlet_bc"]], "right_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_finite_difference_scheme_flux_bc"]], "right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_potential_dirichlet_bc"]], "right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_potential_robin_bc"]], "right_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_robin_bc"]], "set_property() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.set_property"]], "snap() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.snap"]], "solve() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.solve"]], "solver_callback() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.solver_callback"]], "use_central_reference_concentration_based_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_central_reference_concentration_based_cell_bc"]], "use_standard_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_cell_bc"]], "use_standard_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_dirichlet_bc"]], "use_standard_interface_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_interface_bc"]], "use_stern_layer_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_stern_layer_cell_bc"]], "x1_scaled (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[94, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.x1_scaled"]], "deferredmessage (class in matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.DeferredMessage"]], "__init__() (matscipy.electrochemistry.steric_correction.deferredmessage method)": [[95, "matscipy.electrochemistry.steric_correction.DeferredMessage.__init__"]], "apply_steric_correction() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.apply_steric_correction"]], "box_constraint() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.box_constraint"]], "box_constraint_with_gradient() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.box_constraint_with_gradient"]], "brute_force_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.brute_force_closest_pair"]], "brute_force_target_function() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.brute_force_target_function"]], "matscipy.electrochemistry.steric_correction": [[95, "module-matscipy.electrochemistry.steric_correction"]], "neigh_list_based_target_function() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.neigh_list_based_target_function"]], "numpy_only_target_function() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.numpy_only_target_function"]], "planar_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.planar_closest_pair"]], "recursive_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.recursive_closest_pair"]], "scipy_distance_based_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.scipy_distance_based_closest_pair"]], "scipy_distance_based_target_function() (in module matscipy.electrochemistry.steric_correction)": [[95, "matscipy.electrochemistry.steric_correction.scipy_distance_based_target_function"]], "matscipy.ffi": [[96, "module-matscipy.ffi"]], "matscipy.fracture_mechanics": [[97, "module-matscipy.fracture_mechanics"]], "bcc() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.bcc"]], "cluster() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.cluster"]], "diamond() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.diamond"]], "fcc() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.fcc"]], "generate_3d_cubic_111() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.generate_3D_cubic_111"]], "generate_3d_structure() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.generate_3D_structure"]], "get_alpha_period() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.get_alpha_period"]], "matscipy.fracture_mechanics.clusters": [[98, "module-matscipy.fracture_mechanics.clusters"]], "sc() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.sc"]], "set_groups() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.set_groups"]], "set_regions() (in module matscipy.fracture_mechanics.clusters)": [[98, "matscipy.fracture_mechanics.clusters.set_regions"]], "constantstrainrate (class in matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.ConstantStrainRate"]], "cubiccrystalcrack (class in matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack"]], "g_to_strain() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.G_to_strain"]], "isotropicstressfield (class in matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.IsotropicStressField"]], "rectilinearanisotropiccrack (class in matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack"]], "sinclaircrack (class in matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack"]], "__init__() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[99, "matscipy.fracture_mechanics.crack.ConstantStrainRate.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[99, "matscipy.fracture_mechanics.crack.IsotropicStressField.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.__init__"]], "adjust_forces() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[99, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_forces"]], "adjust_positions() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[99, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_positions"]], "animate() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.animate"]], "apply_strain() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[99, "matscipy.fracture_mechanics.crack.ConstantStrainRate.apply_strain"]], "arc_length_continuation() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.arc_length_continuation"]], "convergence_line_plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.convergence_line_plot"]], "copy() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[99, "matscipy.fracture_mechanics.crack.ConstantStrainRate.copy"]], "counted() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.counted"]], "crack_tip_position() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position"]], "crack_tip_position_y() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position_y"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.deformation_gradient"]], "deformation_gradient_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cartesian_coordinates"]], "deformation_gradient_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cylinder_coordinates"]], "deformation_gradient_residual() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.deformation_gradient_residual"]], "deformation_gradient_residuals() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.deformation_gradient_residuals"]], "dfk_dk_approx() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.dfk_dk_approx"]], "displacement_residual() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.displacement_residual"]], "displacement_residuals() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.displacement_residuals"]], "displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements"]], "displacements() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.displacements"]], "displacements_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cartesian_coordinates"]], "displacements_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cylinder_coordinates"]], "find_tip_broken_bonds() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.find_tip_broken_bonds"]], "find_tip_coordination() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.find_tip_coordination"]], "find_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.find_tip_stress_field"]], "fit_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.fit_cle"]], "fit_crack_stress_field() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.fit_crack_stress_field"]], "get_crack_tip_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_crack_tip_force"]], "get_deformation_gradient() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_deformation_gradient"]], "get_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_dofs"]], "get_energy_release_rate() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.get_energy_release_rate"]], "get_forces() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_forces"]], "get_k_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_k_force"]], "get_potential_energy() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_potential_energy"]], "get_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_precon"]], "get_strain() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.get_strain"]], "get_stress_intensity_factor() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.get_stress_intensity_factor"]], "get_stresses() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[99, "matscipy.fracture_mechanics.crack.IsotropicStressField.get_stresses"]], "get_xdot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.get_xdot"]], "isotropic_modeii_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.isotropic_modeII_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_stress_field"]], "k (matscipy.fracture_mechanics.crack.sinclaircrack property)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.k"]], "k1g() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1g"]], "k1g() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1g"]], "k1gsqg() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1gsqG"]], "k1gsqg() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1gsqG"]], "load_cb_model() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.load_cb_model"]], "matscipy.fracture_mechanics.crack": [[99, "module-matscipy.fracture_mechanics.crack"]], "optimize() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.optimize"]], "pack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.pack"]], "plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.plot"]], "plot_stress_fields() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.plot_stress_fields"]], "print_crack_system() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.print_crack_system"]], "rescale_k() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.rescale_k"]], "rtheta() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.rtheta"]], "save_cb_model() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.save_cb_model"]], "scale_displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.scale_displacements"]], "set_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.set_atoms"]], "set_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.set_dofs"]], "set_plane_strain() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_strain"]], "set_plane_stress() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_stress"]], "set_shiftmask() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.set_shiftmask"]], "strain_err() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.strain_err"]], "strain_to_g() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.strain_to_G"]], "stresses() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses"]], "stresses() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[99, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.stresses"]], "stresses_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cartesian_coordinates"]], "stresses_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[99, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cylinder_coordinates"]], "thin_strip_displacement_y() (in module matscipy.fracture_mechanics.crack)": [[99, "matscipy.fracture_mechanics.crack.thin_strip_displacement_y"]], "u_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.u_cle"]], "unpack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.unpack"]], "update_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.update_atoms"]], "update_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.update_precon"]], "write_atoms_to_file() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[99, "matscipy.fracture_mechanics.crack.SinclairCrack.write_atoms_to_file"]], "matscipy.fracture_mechanics.crackpathsel": [[100, "module-matscipy.fracture_mechanics.crackpathsel"]], "j_integral() (in module matscipy.fracture_mechanics.energy_release)": [[101, "matscipy.fracture_mechanics.energy_release.J_integral"]], "matscipy.fracture_mechanics.energy_release": [[101, "module-matscipy.fracture_mechanics.energy_release"]], "idealbrittlesolid (class in matscipy.fracture_mechanics.idealbrittlesolid)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid"]], "__init__() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.__init__"]], "band_structure() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.band_structure"]], "calculate() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate"]], "calculate_numerical_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_stress"]], "calculate_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_properties"]], "calculation_required() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculation_required"]], "check_state() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.check_state"]], "default_parameters (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.default_parameters"]], "directory (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.directory"]], "discard_results_on_any_change (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.discard_results_on_any_change"]], "export_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.export_properties"]], "extend_strip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.extend_strip"]], "find_crack_tip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.find_crack_tip"]], "find_triangles_2d() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.find_triangles_2d"]], "get_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_atoms"]], "get_charges() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_charges"]], "get_default_parameters() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_default_parameters"]], "get_dipole_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_dipole_moment"]], "get_elastic_moduli() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_elastic_moduli"]], "get_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_forces"]], "get_magnetic_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moments"]], "get_poisson_ratio() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_poisson_ratio"]], "get_potential_energies() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energies"]], "get_potential_energy() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energy"]], "get_property() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_property"]], "get_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stress"]], "get_stresses() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stresses"]], "get_wave_speeds() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_wave_speeds"]], "get_youngs_modulus() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_youngs_modulus"]], "ignored_changes (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.ignored_changes"]], "implemented_properties (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.implemented_properties"]], "label (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.label"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[102, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "read() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read"]], "read_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid class method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read_atoms"]], "reset() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.reset"]], "set() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set"]], "set_constraints() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.set_constraints"]], "set_initial_velocities() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.set_initial_velocities"]], "set_label() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_label"]], "set_reference_crystal() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_reference_crystal"]], "todict() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.todict"]], "triangular_lattice_slab() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[102, "matscipy.fracture_mechanics.idealbrittlesolid.triangular_lattice_slab"]], "gammasurface (class in matscipy.gamma_surface)": [[103, "matscipy.gamma_surface.GammaSurface"]], "stackingfault (class in matscipy.gamma_surface)": [[103, "matscipy.gamma_surface.StackingFault"]], "__init__() (matscipy.gamma_surface.gammasurface method)": [[103, "matscipy.gamma_surface.GammaSurface.__init__"]], "__init__() (matscipy.gamma_surface.stackingfault method)": [[103, "matscipy.gamma_surface.StackingFault.__init__"]], "cut_at (matscipy.gamma_surface.gammasurface.self attribute)": [[103, "matscipy.gamma_surface.GammaSurface.self.cut_at"]], "cut_at (matscipy.gamma_surface.stackingfault.self attribute)": [[103, "matscipy.gamma_surface.StackingFault.self.cut_at"]], "generate_images() (matscipy.gamma_surface.gammasurface method)": [[103, "matscipy.gamma_surface.GammaSurface.generate_images"]], "generate_images() (matscipy.gamma_surface.stackingfault method)": [[103, "matscipy.gamma_surface.StackingFault.generate_images"]], "get_energy_densities() (matscipy.gamma_surface.gammasurface method)": [[103, "matscipy.gamma_surface.GammaSurface.get_energy_densities"]], "get_energy_densities() (matscipy.gamma_surface.stackingfault method)": [[103, "matscipy.gamma_surface.StackingFault.get_energy_densities"]], "images (matscipy.gamma_surface.gammasurface.self attribute)": [[103, "matscipy.gamma_surface.GammaSurface.self.images"]], "images (matscipy.gamma_surface.stackingfault.self attribute)": [[103, "matscipy.gamma_surface.StackingFault.self.images"]], "matscipy.gamma_surface": [[103, "module-matscipy.gamma_surface"]], "plot_energy_densities() (matscipy.gamma_surface.gammasurface method)": [[103, "matscipy.gamma_surface.GammaSurface.plot_energy_densities"]], "plot_energy_densities() (matscipy.gamma_surface.stackingfault method)": [[103, "matscipy.gamma_surface.StackingFault.plot_energy_densities"]], "relax_images() (matscipy.gamma_surface.gammasurface method)": [[103, "matscipy.gamma_surface.GammaSurface.relax_images"]], "relax_images() (matscipy.gamma_surface.stackingfault method)": [[103, "matscipy.gamma_surface.StackingFault.relax_images"]], "show() (matscipy.gamma_surface.gammasurface method)": [[103, "matscipy.gamma_surface.GammaSurface.show"]], "show() (matscipy.gamma_surface.stackingfault method)": [[103, "matscipy.gamma_surface.StackingFault.show"]], "surf_directions (matscipy.gamma_surface.gammasurface.self attribute)": [[103, "matscipy.gamma_surface.GammaSurface.self.surf_directions"]], "surf_directions (matscipy.gamma_surface.stackingfault.self attribute)": [[103, "matscipy.gamma_surface.StackingFault.self.surf_directions"]], "fd_hessian() (in module matscipy.hessian_finite_differences)": [[104, "matscipy.hessian_finite_differences.fd_hessian"]], "matscipy.hessian_finite_differences": [[104, "module-matscipy.hessian_finite_differences"]], "hydrogenate() (in module matscipy.hydrogenate)": [[105, "matscipy.hydrogenate.hydrogenate"]], "matscipy.hydrogenate": [[105, "module-matscipy.hydrogenate"]], "matscipy.io": [[106, "module-matscipy.io"]], "lammpsdata (class in matscipy.io.lammpsdata)": [[107, "matscipy.io.lammpsdata.LAMMPSData"]], "__init__() (matscipy.io.lammpsdata.lammpsdata method)": [[107, "matscipy.io.lammpsdata.LAMMPSData.__init__"]], "check_legal_name() (in module matscipy.io.lammpsdata)": [[107, "matscipy.io.lammpsdata.check_legal_name"]], "column_size() (in module matscipy.io.lammpsdata)": [[107, "matscipy.io.lammpsdata.column_size"]], "matscipy.io.lammpsdata": [[107, "module-matscipy.io.lammpsdata"]], "read() (matscipy.io.lammpsdata.lammpsdata method)": [[107, "matscipy.io.lammpsdata.LAMMPSData.read"]], "read_molecules_from_lammps_data() (in module matscipy.io.lammpsdata)": [[107, "matscipy.io.lammpsdata.read_molecules_from_lammps_data"]], "write() (matscipy.io.lammpsdata.lammpsdata method)": [[107, "matscipy.io.lammpsdata.LAMMPSData.write"]], "matscipy.io.metis": [[108, "module-matscipy.io.metis"]], "save_metis() (in module matscipy.io.metis)": [[108, "matscipy.io.metis.save_metis"]], "matscipy.io.opls": [[109, "module-matscipy.io.opls"]], "read_block() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.read_block"]], "read_cutoffs() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.read_cutoffs"]], "read_extended_xyz() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.read_extended_xyz"]], "read_lammps_data() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.read_lammps_data"]], "read_lammps_definitions() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.read_lammps_definitions"]], "read_parameter_file() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.read_parameter_file"]], "update_from_lammps_dump() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.update_from_lammps_dump"]], "write_lammps() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.write_lammps"]], "write_lammps_atoms() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.write_lammps_atoms"]], "write_lammps_definitions() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.write_lammps_definitions"]], "write_lammps_in() (in module matscipy.io.opls)": [[109, "matscipy.io.opls.write_lammps_in"]], "loadtbl() (in module matscipy.io.tbl)": [[110, "matscipy.io.tbl.loadtbl"]], "matscipy.io.tbl": [[110, "module-matscipy.io.tbl"]], "savetbl() (in module matscipy.io.tbl)": [[110, "matscipy.io.tbl.savetbl"]], "logger (class in matscipy.logger)": [[111, "matscipy.logger.Logger"]], "__init__() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.__init__"]], "flatten() (in module matscipy.logger)": [[111, "matscipy.logger.flatten"]], "flush() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.flush"]], "get_logfile() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.get_logfile"]], "has_logfile() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.has_logfile"]], "hdr_str() (in module matscipy.logger)": [[111, "matscipy.logger.hdr_str"]], "hdrfmt_str() (in module matscipy.logger)": [[111, "matscipy.logger.hdrfmt_str"]], "iteration_finished() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.iteration_finished"]], "matscipy.logger": [[111, "module-matscipy.logger"]], "numfmt_str() (in module matscipy.logger)": [[111, "matscipy.logger.numfmt_str"]], "pr() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.pr"]], "set_logfile() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.set_logfile"]], "set_outevery() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.set_outevery"]], "st() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.st"]], "warn() (matscipy.logger.logger method)": [[111, "matscipy.logger.Logger.warn"]], "molecules (class in matscipy.molecules)": [[112, "matscipy.molecules.Molecules"]], "__init__() (matscipy.molecules.molecules method)": [[112, "matscipy.molecules.Molecules.__init__"]], "from_atoms() (matscipy.molecules.molecules static method)": [[112, "matscipy.molecules.Molecules.from_atoms"]], "get_angles() (matscipy.molecules.molecules method)": [[112, "matscipy.molecules.Molecules.get_angles"]], "get_dihedrals() (matscipy.molecules.molecules method)": [[112, "matscipy.molecules.Molecules.get_dihedrals"]], "get_distances() (matscipy.molecules.molecules method)": [[112, "matscipy.molecules.Molecules.get_distances"]], "matscipy.molecules": [[112, "module-matscipy.molecules"]], "cutoffneighbourhood (class in matscipy.neighbours)": [[113, "matscipy.neighbours.CutoffNeighbourhood"]], "molecularneighbourhood (class in matscipy.neighbours)": [[113, "matscipy.neighbours.MolecularNeighbourhood"]], "neighbourhood (class in matscipy.neighbours)": [[113, "matscipy.neighbours.Neighbourhood"]], "__init__() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.__init__"]], "complete_connectivity() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.complete_connectivity"]], "compute_distances() (matscipy.neighbours.cutoffneighbourhood static method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.molecularneighbourhood static method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.neighbourhood static method)": [[113, "matscipy.neighbours.Neighbourhood.compute_distances"]], "connected_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.connected_triplets"]], "double_connectivity() (matscipy.neighbours.molecularneighbourhood static method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.double_connectivity"]], "double_neighbourhood() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.double_neighbourhood"]], "find_common_neighbours() (in module matscipy.neighbours)": [[113, "matscipy.neighbours.find_common_neighbours"]], "find_indices_of_reversed_pairs() (in module matscipy.neighbours)": [[113, "matscipy.neighbours.find_indices_of_reversed_pairs"]], "find_triplet_types() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.find_triplet_types"]], "get_pairs() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.get_pairs"]], "get_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.get_triplets"]], "lexsort() (matscipy.neighbours.cutoffneighbourhood static method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.molecularneighbourhood static method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.neighbourhood static method)": [[113, "matscipy.neighbours.Neighbourhood.lexsort"]], "make_result() (matscipy.neighbours.cutoffneighbourhood static method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.molecularneighbourhood static method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.neighbourhood static method)": [[113, "matscipy.neighbours.Neighbourhood.make_result"]], "mask() (matscipy.neighbours.cutoffneighbourhood static method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.mask"]], "mask() (matscipy.neighbours.molecularneighbourhood static method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.mask"]], "mask() (matscipy.neighbours.neighbourhood static method)": [[113, "matscipy.neighbours.Neighbourhood.mask"]], "matscipy.neighbours": [[113, "module-matscipy.neighbours"]], "mic() (in module matscipy.neighbours)": [[113, "matscipy.neighbours.mic"]], "molecules (matscipy.neighbours.molecularneighbourhood property)": [[113, "matscipy.neighbours.MolecularNeighbourhood.molecules"]], "neighbour_list() (in module matscipy.neighbours)": [[113, "matscipy.neighbours.neighbour_list"]], "pair_type (matscipy.neighbours.molecularneighbourhood property)": [[113, "matscipy.neighbours.MolecularNeighbourhood.pair_type"]], "reverse_pair_indices() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.reverse_pair_indices"]], "triplet_list() (in module matscipy.neighbours)": [[113, "matscipy.neighbours.triplet_list"]], "triplet_to_numbers() (matscipy.neighbours.cutoffneighbourhood method)": [[113, "matscipy.neighbours.CutoffNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.molecularneighbourhood method)": [[113, "matscipy.neighbours.MolecularNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.neighbourhood method)": [[113, "matscipy.neighbours.Neighbourhood.triplet_to_numbers"]], "triplet_type (matscipy.neighbours.molecularneighbourhood property)": [[113, "matscipy.neighbours.MolecularNeighbourhood.triplet_type"]], "get_derivative_volume() (in module matscipy.numerical)": [[114, "matscipy.numerical.get_derivative_volume"]], "get_derivative_wave_vector() (in module matscipy.numerical)": [[114, "matscipy.numerical.get_derivative_wave_vector"]], "matscipy.numerical": [[114, "module-matscipy.numerical"]], "numerical_forces() (in module matscipy.numerical)": [[114, "matscipy.numerical.numerical_forces"]], "numerical_hessian() (in module matscipy.numerical)": [[114, "matscipy.numerical.numerical_hessian"]], "numerical_nonaffine_forces() (in module matscipy.numerical)": [[114, "matscipy.numerical.numerical_nonaffine_forces"]], "numerical_nonaffine_forces_reference() (in module matscipy.numerical)": [[114, "matscipy.numerical.numerical_nonaffine_forces_reference"]], "numerical_stress() (in module matscipy.numerical)": [[114, "matscipy.numerical.numerical_stress"]], "mabincount() (in module matscipy.numpy_tricks)": [[115, "matscipy.numpy_tricks.mabincount"]], "matscipy.numpy_tricks": [[115, "module-matscipy.numpy_tricks"]], "anglesdata (class in matscipy.opls)": [[116, "matscipy.opls.AnglesData"]], "bonddata (class in matscipy.opls)": [[116, "matscipy.opls.BondData"]], "cutofflist (class in matscipy.opls)": [[116, "matscipy.opls.CutoffList"]], "dihedralsdata (class in matscipy.opls)": [[116, "matscipy.opls.DihedralsData"]], "ljqdata (class in matscipy.opls)": [[116, "matscipy.opls.LJQData"]], "oplsstructure (class in matscipy.opls)": [[116, "matscipy.opls.OPLSStructure"]], "__init__() (matscipy.opls.anglesdata method)": [[116, "matscipy.opls.AnglesData.__init__"]], "__init__() (matscipy.opls.bonddata method)": [[116, "matscipy.opls.BondData.__init__"]], "__init__() (matscipy.opls.cutofflist method)": [[116, "matscipy.opls.CutoffList.__init__"]], "__init__() (matscipy.opls.dihedralsdata method)": [[116, "matscipy.opls.DihedralsData.__init__"]], "__init__() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.__init__"]], "__init__() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.__init__"]], "add_name() (matscipy.opls.anglesdata method)": [[116, "matscipy.opls.AnglesData.add_name"]], "add_name() (matscipy.opls.dihedralsdata method)": [[116, "matscipy.opls.DihedralsData.add_name"]], "append() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.append"]], "ase_objtype (matscipy.opls.oplsstructure attribute)": [[116, "matscipy.opls.OPLSStructure.ase_objtype"]], "calc (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.calc"]], "cell (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.cell"]], "center() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.center"]], "clear() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.clear"]], "constraints (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.constraints"]], "copy() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.copy"]], "copy() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.copy"]], "default_map (matscipy.opls.oplsstructure attribute)": [[116, "matscipy.opls.OPLSStructure.default_map"]], "edit() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.edit"]], "euler_rotate() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.euler_rotate"]], "extend() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.extend"]], "fromdict() (matscipy.opls.oplsstructure class method)": [[116, "matscipy.opls.OPLSStructure.fromdict"]], "fromkeys() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.fromkeys"]], "get() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.get"]], "get_all_distances() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_all_distances"]], "get_angle() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_angle"]], "get_angles() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_angles"]], "get_angular_momentum() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_angular_momentum"]], "get_array() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_array"]], "get_atomic_numbers() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_atomic_numbers"]], "get_bonds() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_bonds"]], "get_calculator() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_calculator"]], "get_cell() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_cell"]], "get_cell_lengths_and_angles() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_cell_lengths_and_angles"]], "get_celldisp() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_celldisp"]], "get_center_of_mass() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_center_of_mass"]], "get_charges() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_charges"]], "get_chemical_formula() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_chemical_formula"]], "get_chemical_symbols() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_chemical_symbols"]], "get_dihedral() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_dihedral"]], "get_dihedrals() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_dihedrals"]], "get_dipole_moment() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_dipole_moment"]], "get_distance() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_distance"]], "get_distances() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_distances"]], "get_forces() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_forces"]], "get_global_number_of_atoms() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_global_number_of_atoms"]], "get_initial_charges() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_initial_charges"]], "get_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_initial_magnetic_moments"]], "get_kinetic_energy() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_kinetic_energy"]], "get_magnetic_moment() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_magnetic_moments"]], "get_masses() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_masses"]], "get_momenta() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_momenta"]], "get_moments_of_inertia() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_moments_of_inertia"]], "get_name() (matscipy.opls.anglesdata method)": [[116, "matscipy.opls.AnglesData.get_name"]], "get_name() (matscipy.opls.bonddata method)": [[116, "matscipy.opls.BondData.get_name"]], "get_name() (matscipy.opls.cutofflist method)": [[116, "matscipy.opls.CutoffList.get_name"]], "get_name() (matscipy.opls.dihedralsdata method)": [[116, "matscipy.opls.DihedralsData.get_name"]], "get_neighbors() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_neighbors"]], "get_number_of_atoms() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_number_of_atoms"]], "get_pbc() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_pbc"]], "get_positions() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_positions"]], "get_potential_energies() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_potential_energies"]], "get_potential_energy() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_potential_energy"]], "get_properties() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_properties"]], "get_reciprocal_cell() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_reciprocal_cell"]], "get_scaled_positions() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_scaled_positions"]], "get_stress() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_stress"]], "get_stresses() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_stresses"]], "get_tags() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_tags"]], "get_temperature() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_temperature"]], "get_total_energy() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_total_energy"]], "get_types() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_types"]], "get_value() (matscipy.opls.bonddata method)": [[116, "matscipy.opls.BondData.get_value"]], "get_value() (matscipy.opls.cutofflist method)": [[116, "matscipy.opls.CutoffList.get_value"]], "get_velocities() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_velocities"]], "get_volume() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.get_volume"]], "has() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.has"]], "items() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.items"]], "iterimages() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.iterimages"]], "keys() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.keys"]], "matscipy.opls": [[116, "module-matscipy.opls"]], "max() (matscipy.opls.cutofflist method)": [[116, "matscipy.opls.CutoffList.max"]], "name_value() (matscipy.opls.anglesdata method)": [[116, "matscipy.opls.AnglesData.name_value"]], "name_value() (matscipy.opls.bonddata method)": [[116, "matscipy.opls.BondData.name_value"]], "name_value() (matscipy.opls.cutofflist method)": [[116, "matscipy.opls.CutoffList.name_value"]], "name_value() (matscipy.opls.dihedralsdata method)": [[116, "matscipy.opls.DihedralsData.name_value"]], "new_array() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.new_array"]], "number_of_lattice_vectors (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.number_of_lattice_vectors"]], "numbers (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.numbers"]], "pbc (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.pbc"]], "pop() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.pop"]], "pop() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.pop"]], "popitem() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.popitem"]], "positions (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.positions"]], "rattle() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.rattle"]], "repeat() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.repeat"]], "rotate() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.rotate"]], "rotate_dihedral() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.rotate_dihedral"]], "set_angle() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_angle"]], "set_array() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_array"]], "set_atom_data() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_atom_data"]], "set_atomic_numbers() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_atomic_numbers"]], "set_calculator() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_calculator"]], "set_cell() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_cell"]], "set_celldisp() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_celldisp"]], "set_center_of_mass() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_center_of_mass"]], "set_chemical_symbols() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_chemical_symbols"]], "set_constraint() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_constraint"]], "set_cutoffs() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_cutoffs"]], "set_dihedral() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_dihedral"]], "set_distance() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_distance"]], "set_initial_charges() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_initial_charges"]], "set_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_initial_magnetic_moments"]], "set_masses() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_masses"]], "set_momenta() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_momenta"]], "set_names() (matscipy.opls.anglesdata method)": [[116, "matscipy.opls.AnglesData.set_names"]], "set_names() (matscipy.opls.bonddata method)": [[116, "matscipy.opls.BondData.set_names"]], "set_names() (matscipy.opls.cutofflist method)": [[116, "matscipy.opls.CutoffList.set_names"]], "set_names() (matscipy.opls.dihedralsdata method)": [[116, "matscipy.opls.DihedralsData.set_names"]], "set_pbc() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_pbc"]], "set_positions() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_positions"]], "set_scaled_positions() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_scaled_positions"]], "set_tags() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_tags"]], "set_types() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_types"]], "set_velocities() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.set_velocities"]], "setdefault() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.setdefault"]], "symbols (matscipy.opls.oplsstructure property)": [[116, "matscipy.opls.OPLSStructure.symbols"]], "todict() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.todict"]], "translate() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.translate"]], "twochar() (in module matscipy.opls)": [[116, "matscipy.opls.twochar"]], "update() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.update"]], "values() (matscipy.opls.ljqdata method)": [[116, "matscipy.opls.LJQData.values"]], "wrap() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.wrap"]], "write() (matscipy.opls.oplsstructure method)": [[116, "matscipy.opls.OPLSStructure.write"]], "matscipy.optimize": [[117, "module-matscipy.optimize"]], "ode12r() (in module matscipy.optimize)": [[117, "matscipy.optimize.ode12r"]], "hessianprecon (class in matscipy.precon)": [[118, "matscipy.precon.HessianPrecon"]], "pdot() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.Pdot"]], "__init__() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.__init__"]], "apply() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.apply"]], "asarray() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.asarray"]], "copy() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.copy"]], "dot() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.dot"]], "make_precon() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.make_precon"]], "matscipy.precon": [[118, "module-matscipy.precon"]], "norm() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.norm"]], "solve() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.solve"]], "vdot() (matscipy.precon.hessianprecon method)": [[118, "matscipy.precon.HessianPrecon.vdot"]], "autodamping (class in matscipy.pressurecoupling)": [[119, "matscipy.pressurecoupling.AutoDamping"]], "fixeddamping (class in matscipy.pressurecoupling)": [[119, "matscipy.pressurecoupling.FixedDamping"]], "fixedmasscriticaldamping (class in matscipy.pressurecoupling)": [[119, "matscipy.pressurecoupling.FixedMassCriticalDamping"]], "p_bottom (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.P_bottom"]], "p_top (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.P_top"]], "slidelog (class in matscipy.pressurecoupling)": [[119, "matscipy.pressurecoupling.SlideLog"]], "slidelogger (class in matscipy.pressurecoupling)": [[119, "matscipy.pressurecoupling.SlideLogger"]], "slidewithnormalpressurecuboidcell (class in matscipy.pressurecoupling)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell"]], "t_thermostat (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.T_thermostat"]], "tdir (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.Tdir"]], "__init__() (matscipy.pressurecoupling.autodamping method)": [[119, "matscipy.pressurecoupling.AutoDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixeddamping method)": [[119, "matscipy.pressurecoupling.FixedDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[119, "matscipy.pressurecoupling.FixedMassCriticalDamping.__init__"]], "__init__() (matscipy.pressurecoupling.slidelog method)": [[119, "matscipy.pressurecoupling.SlideLog.__init__"]], "__init__() (matscipy.pressurecoupling.slidelogger method)": [[119, "matscipy.pressurecoupling.SlideLogger.__init__"]], "__init__() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.__init__"]], "a (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.a"]], "adjust_forces() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_forces"]], "adjust_momenta() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_momenta"]], "adjust_positions() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_positions"]], "adjust_potential_energy() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_potential_energy"]], "get_a() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.get_A"]], "get_m_gamma() (matscipy.pressurecoupling.autodamping method)": [[119, "matscipy.pressurecoupling.AutoDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixeddamping method)": [[119, "matscipy.pressurecoupling.FixedDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[119, "matscipy.pressurecoupling.FixedMassCriticalDamping.get_M_gamma"]], "h (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.h"]], "matscipy.pressurecoupling": [[119, "module-matscipy.pressurecoupling"]], "middle_mask (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[119, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.middle_mask"]], "rows (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.rows"]], "step (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.step"]], "tau_bottom (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.tau_bottom"]], "tau_top (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.tau_top"]], "time (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.time"]], "v (matscipy.pressurecoupling.slidelog attribute)": [[119, "matscipy.pressurecoupling.SlideLog.v"]], "write_header() (matscipy.pressurecoupling.slidelogger method)": [[119, "matscipy.pressurecoupling.SlideLogger.write_header"]], "matscipy.rings": [[120, "module-matscipy.rings"]], "ring_statistics() (in module matscipy.rings)": [[120, "matscipy.rings.ring_statistics"]], "atomsrequesthandler (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.AtomsRequestHandler"]], "atomsserver (in module matscipy.socketcalc)": [[121, "matscipy.socketcalc.AtomsServer"]], "atomsserverasync (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.AtomsServerAsync"]], "atomsserversync (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.AtomsServerSync"]], "castepclient (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.CastepClient"]], "client (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.Client"]], "qmclient (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.QMClient"]], "quipclient (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.QUIPClient"]], "socketcalculator (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.SocketCalculator"]], "vaspclient (class in matscipy.socketcalc)": [[121, "matscipy.socketcalc.VaspClient"]], "__init__() (matscipy.socketcalc.atomsrequesthandler method)": [[121, "matscipy.socketcalc.AtomsRequestHandler.__init__"]], "__init__() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.__init__"]], "__init__() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.__init__"]], "__init__() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.__init__"]], "__init__() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.__init__"]], "__init__() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.__init__"]], "__init__() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.__init__"]], "__init__() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.__init__"]], "__init__() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.__init__"]], "address_family (matscipy.socketcalc.atomsserverasync attribute)": [[121, "matscipy.socketcalc.AtomsServerAsync.address_family"]], "address_family (matscipy.socketcalc.atomsserversync attribute)": [[121, "matscipy.socketcalc.AtomsServerSync.address_family"]], "allow_reuse_address (matscipy.socketcalc.atomsserverasync attribute)": [[121, "matscipy.socketcalc.AtomsServerAsync.allow_reuse_address"]], "allow_reuse_address (matscipy.socketcalc.atomsserversync attribute)": [[121, "matscipy.socketcalc.AtomsServerSync.allow_reuse_address"]], "band_structure() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.band_structure"]], "block_on_close (matscipy.socketcalc.atomsserverasync attribute)": [[121, "matscipy.socketcalc.AtomsServerAsync.block_on_close"]], "calculate() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.calculate"]], "calculate_numerical_forces() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.calculate_properties"]], "calculation_required() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.calculation_required"]], "check_state() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.check_state"]], "close_request() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.close_request"]], "close_request() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.close_request"]], "daemon_threads (matscipy.socketcalc.atomsserverasync attribute)": [[121, "matscipy.socketcalc.AtomsServerAsync.daemon_threads"]], "default_parameters (matscipy.socketcalc.socketcalculator attribute)": [[121, "matscipy.socketcalc.SocketCalculator.default_parameters"]], "directory (matscipy.socketcalc.socketcalculator property)": [[121, "matscipy.socketcalc.SocketCalculator.directory"]], "disable_nagle_algorithm (matscipy.socketcalc.atomsrequesthandler attribute)": [[121, "matscipy.socketcalc.AtomsRequestHandler.disable_nagle_algorithm"]], "discard_results_on_any_change (matscipy.socketcalc.socketcalculator attribute)": [[121, "matscipy.socketcalc.SocketCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.export_properties"]], "extra_args() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.extra_args"]], "extra_args() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.extra_args"]], "extra_args() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.extra_args"]], "extra_args() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.extra_args"]], "extra_args() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.extra_args"]], "fileno() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.fileno"]], "fileno() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.fileno"]], "finish() (matscipy.socketcalc.atomsrequesthandler method)": [[121, "matscipy.socketcalc.AtomsRequestHandler.finish"]], "finish_request() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.finish_request"]], "finish_request() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.finish_request"]], "get_atoms() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_atoms"]], "get_charges() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_charges"]], "get_default_parameters() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_dipole_moment"]], "get_forces() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_forces"]], "get_magnetic_moment() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_potential_energy"]], "get_property() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_property"]], "get_request() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.get_request"]], "get_request() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.get_request"]], "get_results() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.get_results"]], "get_results() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.get_results"]], "get_stress() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_stress"]], "get_stresses() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.get_stresses"]], "handle() (matscipy.socketcalc.atomsrequesthandler method)": [[121, "matscipy.socketcalc.AtomsRequestHandler.handle"]], "handle_error() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.handle_error"]], "handle_error() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.handle_error"]], "handle_request() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.handle_request"]], "handle_request() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.handle_request"]], "handle_timeout() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.handle_timeout"]], "handle_timeout() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.handle_timeout"]], "ignored_changes (matscipy.socketcalc.socketcalculator attribute)": [[121, "matscipy.socketcalc.SocketCalculator.ignored_changes"]], "implemented_properties (matscipy.socketcalc.socketcalculator attribute)": [[121, "matscipy.socketcalc.SocketCalculator.implemented_properties"]], "is_compatible() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.is_compatible"]], "is_compatible() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.is_compatible"]], "join_all() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.join_all"]], "join_all() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.join_all"]], "label (matscipy.socketcalc.socketcalculator property)": [[121, "matscipy.socketcalc.SocketCalculator.label"]], "matscipy.socketcalc": [[121, "module-matscipy.socketcalc"]], "name (matscipy.socketcalc.socketcalculator attribute)": [[121, "matscipy.socketcalc.SocketCalculator.name"]], "pack_atoms_to_reftraj_str() (in module matscipy.socketcalc)": [[121, "matscipy.socketcalc.pack_atoms_to_reftraj_str"]], "pack_atoms_to_xyz_str() (in module matscipy.socketcalc)": [[121, "matscipy.socketcalc.pack_atoms_to_xyz_str"]], "pack_results_to_reftraj_output_str() (in module matscipy.socketcalc)": [[121, "matscipy.socketcalc.pack_results_to_reftraj_output_str"]], "postprocess() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.postprocess"]], "postprocess() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.postprocess"]], "postprocess() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.postprocess"]], "postprocess() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.postprocess"]], "postprocess() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.postprocess"]], "preprocess() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.preprocess"]], "preprocess() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.preprocess"]], "preprocess() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.preprocess"]], "preprocess() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.preprocess"]], "preprocess() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.preprocess"]], "process_request() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.process_request"]], "process_request() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.process_request"]], "process_request_thread() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.process_request_thread"]], "put() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.put"]], "put() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.put"]], "rbufsize (matscipy.socketcalc.atomsrequesthandler attribute)": [[121, "matscipy.socketcalc.AtomsRequestHandler.rbufsize"]], "read() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.read"]], "read_atoms() (matscipy.socketcalc.socketcalculator class method)": [[121, "matscipy.socketcalc.SocketCalculator.read_atoms"]], "request_queue_size (matscipy.socketcalc.atomsserverasync attribute)": [[121, "matscipy.socketcalc.AtomsServerAsync.request_queue_size"]], "request_queue_size (matscipy.socketcalc.atomsserversync attribute)": [[121, "matscipy.socketcalc.AtomsServerSync.request_queue_size"]], "reset() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.reset"]], "serve_forever() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.serve_forever"]], "serve_forever() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.serve_forever"]], "server_activate() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.server_activate"]], "server_activate() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.server_activate"]], "server_bind() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.server_bind"]], "server_bind() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.server_bind"]], "server_close() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.server_close"]], "server_close() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.server_close"]], "service_actions() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.service_actions"]], "service_actions() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.service_actions"]], "set() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.set"]], "set_label() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.set_label"]], "setup() (matscipy.socketcalc.atomsrequesthandler method)": [[121, "matscipy.socketcalc.AtomsRequestHandler.setup"]], "shutdown() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.shutdown"]], "shutdown() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.shutdown"]], "shutdown() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.shutdown"]], "shutdown() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.shutdown"]], "shutdown() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.shutdown"]], "shutdown() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.shutdown"]], "shutdown() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.shutdown"]], "shutdown() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.shutdown"]], "shutdown_clients() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.shutdown_clients"]], "shutdown_clients() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.shutdown_clients"]], "shutdown_request() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.shutdown_request"]], "shutdown_request() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.shutdown_request"]], "socket_type (matscipy.socketcalc.atomsserverasync attribute)": [[121, "matscipy.socketcalc.AtomsServerAsync.socket_type"]], "socket_type (matscipy.socketcalc.atomsserversync attribute)": [[121, "matscipy.socketcalc.AtomsServerSync.socket_type"]], "start() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.start"]], "start() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.start"]], "start() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.start"]], "start() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.start"]], "start() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.start"]], "start_or_restart() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.start_or_restart"]], "timeout (matscipy.socketcalc.atomsrequesthandler attribute)": [[121, "matscipy.socketcalc.AtomsRequestHandler.timeout"]], "timeout (matscipy.socketcalc.atomsserverasync attribute)": [[121, "matscipy.socketcalc.AtomsServerAsync.timeout"]], "timeout (matscipy.socketcalc.atomsserversync attribute)": [[121, "matscipy.socketcalc.AtomsServerSync.timeout"]], "todict() (matscipy.socketcalc.socketcalculator method)": [[121, "matscipy.socketcalc.SocketCalculator.todict"]], "unpack_reftraj_output_str_to_results() (in module matscipy.socketcalc)": [[121, "matscipy.socketcalc.unpack_reftraj_output_str_to_results"]], "unpack_reftraj_str_to_atoms() (in module matscipy.socketcalc)": [[121, "matscipy.socketcalc.unpack_reftraj_str_to_atoms"]], "unpack_xyz_str_to_results() (in module matscipy.socketcalc)": [[121, "matscipy.socketcalc.unpack_xyz_str_to_results"]], "verify_request() (matscipy.socketcalc.atomsserverasync method)": [[121, "matscipy.socketcalc.AtomsServerAsync.verify_request"]], "verify_request() (matscipy.socketcalc.atomsserversync method)": [[121, "matscipy.socketcalc.AtomsServerSync.verify_request"]], "wait_for_shutdown() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.wait_for_shutdown"]], "wbufsize (matscipy.socketcalc.atomsrequesthandler attribute)": [[121, "matscipy.socketcalc.AtomsRequestHandler.wbufsize"]], "write_input_files() (matscipy.socketcalc.castepclient method)": [[121, "matscipy.socketcalc.CastepClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.client method)": [[121, "matscipy.socketcalc.Client.write_input_files"]], "write_input_files() (matscipy.socketcalc.qmclient method)": [[121, "matscipy.socketcalc.QMClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.quipclient method)": [[121, "matscipy.socketcalc.QUIPClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.vaspclient method)": [[121, "matscipy.socketcalc.VaspClient.write_input_files"]], "betrag() (in module matscipy.spatial_correlation_function)": [[122, "matscipy.spatial_correlation_function.betrag"]], "matscipy.spatial_correlation_function": [[122, "module-matscipy.spatial_correlation_function"]], "max_rad() (in module matscipy.spatial_correlation_function)": [[122, "matscipy.spatial_correlation_function.max_rad"]], "spatial_correlation_function() (in module matscipy.spatial_correlation_function)": [[122, "matscipy.spatial_correlation_function.spatial_correlation_function"]], "spatial_correlation_function_near() (in module matscipy.spatial_correlation_function)": [[122, "matscipy.spatial_correlation_function.spatial_correlation_function_near"]], "aligned (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.ALIGNED"]], "behaved (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.BEHAVED"]], "carray (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.CARRAY"]], "c_contiguous (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.C_CONTIGUOUS"]], "farray (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.FARRAY"]], "fnc (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.FNC"]], "forc (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.FORC"]], "f_contiguous (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.F_CONTIGUOUS"]], "millerdirection() (in module matscipy.surface)": [[123, "matscipy.surface.MillerDirection"]], "millerindex (class in matscipy.surface)": [[123, "matscipy.surface.MillerIndex"]], "millerplane() (in module matscipy.surface)": [[123, "matscipy.surface.MillerPlane"]], "owndata (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.OWNDATA"]], "t (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.T"]], "writeable (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.WRITEABLE"]], "writebackifcopy (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.WRITEBACKIFCOPY"]], "all() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.all"]], "all_brackets (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.all_brackets"]], "angle() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.angle"]], "angle_between() (in module matscipy.surface)": [[123, "matscipy.surface.angle_between"]], "any() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.any"]], "argmax() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.argmax"]], "argmin() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.argmin"]], "argpartition() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.argpartition"]], "argsort() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.argsort"]], "as3() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.as3"]], "as4() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.as4"]], "astype() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.astype"]], "base (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.base"]], "brackets (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.brackets"]], "byteswap() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.byteswap"]], "choose() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.choose"]], "clip() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.clip"]], "compress() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.compress"]], "conj() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.conj"]], "conjugate() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.conjugate"]], "copy() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.copy"]], "cosine() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.cosine"]], "cross() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.cross"]], "ctypes (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.ctypes"]], "cumprod() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.cumprod"]], "cumsum() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.cumsum"]], "data (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.data"]], "diagonal() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.diagonal"]], "dot() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.dot"]], "dtype (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.dtype"]], "dump() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.dump"]], "dumps() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.dumps"]], "fill() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.fill"]], "find_surface_energy() (in module matscipy.surface)": [[123, "matscipy.surface.find_surface_energy"]], "flags (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.flags"]], "flat (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.flat"]], "flatten() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.flatten"]], "gcd() (in module matscipy.surface)": [[123, "matscipy.surface.gcd"]], "getfield() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.getfield"]], "hat() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.hat"]], "imag (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.imag"]], "item() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.item"]], "itemset() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.itemset"]], "itemsize (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.itemsize"]], "latex() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.latex"]], "make_unit_slab() (in module matscipy.surface)": [[123, "matscipy.surface.make_unit_slab"]], "matscipy.surface": [[123, "module-matscipy.surface"]], "max() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.max"]], "mean() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.mean"]], "min() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.min"]], "nbytes (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.nbytes"]], "ndim (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.ndim"]], "newbyteorder() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.newbyteorder"]], "nonzero() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.nonzero"]], "norm() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.norm"]], "normalised() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.normalised"]], "parse() (matscipy.surface.millerindex class method)": [[123, "matscipy.surface.MillerIndex.parse"]], "partition() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.partition"]], "plane_spacing() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.plane_spacing"]], "prod() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.prod"]], "ptp() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.ptp"]], "put() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.put"]], "ravel() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.ravel"]], "real (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.real"]], "repeat() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.repeat"]], "reshape() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.reshape"]], "resize() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.resize"]], "round() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.round"]], "searchsorted() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.searchsorted"]], "setfield() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.setfield"]], "setflags() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.setflags"]], "shape (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.shape"]], "simplified() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.simplified"]], "simplify() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.simplify"]], "size (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.size"]], "sort() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.sort"]], "squeeze() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.squeeze"]], "std() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.std"]], "strides (matscipy.surface.millerindex attribute)": [[123, "matscipy.surface.MillerIndex.strides"]], "sum() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.sum"]], "swapaxes() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.swapaxes"]], "take() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.take"]], "tobytes() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.tobytes"]], "tofile() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.tofile"]], "tolist() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.tolist"]], "tostring() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.tostring"]], "trace() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.trace"]], "transpose() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.transpose"]], "var() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.var"]], "view() (matscipy.surface.millerindex method)": [[123, "matscipy.surface.MillerIndex.view"]], "surfacereconstruction (class in matscipy.surface_reconstruction)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction"]], "__init__() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.__init__"]], "apply_pandey_111() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.apply_pandey_111"]], "apply_si_110() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.apply_si_110"]], "apply_surface_shift() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.apply_surface_shift"]], "identify_layers() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.identify_layers"]], "identify_pandey_layers() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.identify_pandey_layers"]], "identify_si_110_layers() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.identify_si_110_layers"]], "map_pandey_111() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.map_pandey_111"]], "map_si_110_3x1() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.map_si_110_3x1"]], "map_surface() (matscipy.surface_reconstruction.surfacereconstruction method)": [[124, "matscipy.surface_reconstruction.SurfaceReconstruction.map_surface"]], "matscipy.surface_reconstruction": [[124, "module-matscipy.surface_reconstruction"]], "complete_basis() (in module matscipy.utils)": [[125, "matscipy.utils.complete_basis"]], "get_distance_from_polygon2d() (in module matscipy.utils)": [[125, "matscipy.utils.get_distance_from_polygon2D"]], "get_structure_types() (in module matscipy.utils)": [[125, "matscipy.utils.get_structure_types"]], "line_intersect_2d() (in module matscipy.utils)": [[125, "matscipy.utils.line_intersect_2D"]], "matscipy.utils": [[125, "module-matscipy.utils"]], "points_in_polygon2d() (in module matscipy.utils)": [[125, "matscipy.utils.points_in_polygon2D"]], "radial_mask_from_polygon2d() (in module matscipy.utils)": [[125, "matscipy.utils.radial_mask_from_polygon2D"]], "validate_cubic_cell() (in module matscipy.utils)": [[125, "matscipy.utils.validate_cubic_cell"]]}})