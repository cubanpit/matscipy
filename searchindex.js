Search.setIndex({"docnames": ["api", "applications/cylinder_configurations", "applications/elastic_constants", "applications/fracture_mechanics", "applications/index", "applications/plasticity", "applications/quasi_static_crack", "applications/tribology", "calculators/index", "calculators/manybody", "generated/matscipy.angle_distribution", "generated/matscipy.atomic_strain", "generated/matscipy.calculators.calculator", "generated/matscipy.calculators.committee", "generated/matscipy.calculators.committee.committee", "generated/matscipy.calculators.committee.log", "generated/matscipy.calculators.committee.utils", "generated/matscipy.calculators.eam", "generated/matscipy.calculators.eam.average_atom", "generated/matscipy.calculators.eam.calculator", "generated/matscipy.calculators.eam.io", "generated/matscipy.calculators.ewald", "generated/matscipy.calculators.ewald.calculator", "generated/matscipy.calculators.fitting", "generated/matscipy.calculators.manybody", "generated/matscipy.calculators.manybody.calculator", "generated/matscipy.calculators.manybody.explicit_forms", "generated/matscipy.calculators.manybody.explicit_forms.harmonic", "generated/matscipy.calculators.manybody.explicit_forms.kumagai", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "generated/matscipy.calculators.manybody.newmb", "generated/matscipy.calculators.manybody.potentials", "generated/matscipy.calculators.mcfm", "generated/matscipy.calculators.mcfm.calculator", "generated/matscipy.calculators.mcfm.cluster_data", "generated/matscipy.calculators.mcfm.mcfm_parallel", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.qm_cluster", "generated/matscipy.calculators.mcfm.qm_cluster_tools", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "generated/matscipy.calculators.pair_potential", "generated/matscipy.calculators.pair_potential.calculator", "generated/matscipy.calculators.polydisperse", "generated/matscipy.calculators.polydisperse.calculator", "generated/matscipy.calculators.supercell_calculator", "generated/matscipy.deformation", "generated/matscipy.dislocation", "generated/matscipy.drift", "generated/matscipy.elasticity", "generated/matscipy.electrochemistry", "generated/matscipy.electrochemistry.continuous2discrete", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver", "generated/matscipy.fracture_mechanics", "generated/matscipy.fracture_mechanics.clusters", "generated/matscipy.fracture_mechanics.crack", "generated/matscipy.fracture_mechanics.crackpathsel", "generated/matscipy.fracture_mechanics.energy_release", "generated/matscipy.fracture_mechanics.idealbrittlesolid", "generated/matscipy.hessian_finite_differences", "generated/matscipy.hydrogenate", "generated/matscipy.io", "generated/matscipy.io.lammpsdata", "generated/matscipy.io.metis", "generated/matscipy.io.opls", "generated/matscipy.io.tbl", "generated/matscipy.logger", "generated/matscipy.neighbours", "generated/matscipy.numerical", "generated/matscipy.numpy_tricks", "generated/matscipy.opls", "generated/matscipy.pressurecoupling", "generated/matscipy.rings", "generated/matscipy.spatial_correlation_function", "index", "tools/index", "tools/neighbour_list", "tools/pair_distribution", "tools/ring_analysis"], "filenames": ["api.rst", "applications/cylinder_configurations.ipynb", "applications/elastic_constants.ipynb", "applications/fracture_mechanics.rst", "applications/index.rst", "applications/plasticity.rst", "applications/quasi_static_crack.ipynb", "applications/tribology.ipynb", "calculators/index.rst", "calculators/manybody.ipynb", "generated/matscipy.angle_distribution.rst", "generated/matscipy.atomic_strain.rst", "generated/matscipy.calculators.calculator.rst", "generated/matscipy.calculators.committee.rst", "generated/matscipy.calculators.committee.committee.rst", "generated/matscipy.calculators.committee.log.rst", "generated/matscipy.calculators.committee.utils.rst", "generated/matscipy.calculators.eam.rst", "generated/matscipy.calculators.eam.average_atom.rst", "generated/matscipy.calculators.eam.calculator.rst", "generated/matscipy.calculators.eam.io.rst", "generated/matscipy.calculators.ewald.rst", "generated/matscipy.calculators.ewald.calculator.rst", "generated/matscipy.calculators.fitting.rst", "generated/matscipy.calculators.manybody.rst", "generated/matscipy.calculators.manybody.calculator.rst", "generated/matscipy.calculators.manybody.explicit_forms.rst", "generated/matscipy.calculators.manybody.explicit_forms.harmonic.rst", "generated/matscipy.calculators.manybody.explicit_forms.kumagai.rst", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber.rst", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner.rst", "generated/matscipy.calculators.manybody.newmb.rst", "generated/matscipy.calculators.manybody.potentials.rst", "generated/matscipy.calculators.mcfm.rst", "generated/matscipy.calculators.mcfm.calculator.rst", "generated/matscipy.calculators.mcfm.cluster_data.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.qm_cluster.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.rst", "generated/matscipy.calculators.pair_potential.rst", "generated/matscipy.calculators.pair_potential.calculator.rst", "generated/matscipy.calculators.polydisperse.rst", "generated/matscipy.calculators.polydisperse.calculator.rst", "generated/matscipy.calculators.supercell_calculator.rst", "generated/matscipy.deformation.rst", "generated/matscipy.dislocation.rst", "generated/matscipy.drift.rst", "generated/matscipy.elasticity.rst", "generated/matscipy.electrochemistry.rst", "generated/matscipy.electrochemistry.continuous2discrete.rst", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution.rst", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver.rst", "generated/matscipy.fracture_mechanics.rst", "generated/matscipy.fracture_mechanics.clusters.rst", "generated/matscipy.fracture_mechanics.crack.rst", "generated/matscipy.fracture_mechanics.crackpathsel.rst", "generated/matscipy.fracture_mechanics.energy_release.rst", "generated/matscipy.fracture_mechanics.idealbrittlesolid.rst", "generated/matscipy.hessian_finite_differences.rst", "generated/matscipy.hydrogenate.rst", "generated/matscipy.io.rst", "generated/matscipy.io.lammpsdata.rst", "generated/matscipy.io.metis.rst", "generated/matscipy.io.opls.rst", "generated/matscipy.io.tbl.rst", "generated/matscipy.logger.rst", "generated/matscipy.neighbours.rst", "generated/matscipy.numerical.rst", "generated/matscipy.numpy_tricks.rst", "generated/matscipy.opls.rst", "generated/matscipy.pressurecoupling.rst", "generated/matscipy.rings.rst", "generated/matscipy.spatial_correlation_function.rst", "index.rst", "tools/index.rst", "tools/neighbour_list.ipynb", "tools/pair_distribution.ipynb", "tools/ring_analysis.ipynb"], "titles": ["API Reference", "Building cylindrical configurations with dislocations", "Elastic Constants", "Fracture Mechanics", "Application domains", "Plasticity", "Quasi static fracture simulations", "Tribology", "Interatomic potentials", "Many-body potentials", "matscipy.angle_distribution", "matscipy.atomic_strain", "matscipy.calculators.calculator", "matscipy.calculators.committee", "matscipy.calculators.committee.committee", "matscipy.calculators.committee.log", "matscipy.calculators.committee.utils", "matscipy.calculators.eam", "matscipy.calculators.eam.average_atom", "matscipy.calculators.eam.calculator", "matscipy.calculators.eam.io", "matscipy.calculators.ewald", "matscipy.calculators.ewald.calculator", "matscipy.calculators.fitting", "matscipy.calculators.manybody", "matscipy.calculators.manybody.calculator", "matscipy.calculators.manybody.explicit_forms", "matscipy.calculators.manybody.explicit_forms.harmonic", "matscipy.calculators.manybody.explicit_forms.kumagai", "matscipy.calculators.manybody.explicit_forms.stillinger_weber", "matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "matscipy.calculators.manybody.newmb", "matscipy.calculators.manybody.potentials", "matscipy.calculators.mcfm", "matscipy.calculators.mcfm.calculator", "matscipy.calculators.mcfm.cluster_data", "matscipy.calculators.mcfm.mcfm_parallel", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "matscipy.calculators.mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.qm_cluster", "matscipy.calculators.mcfm.qm_cluster_tools", "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "matscipy.calculators.pair_potential", "matscipy.calculators.pair_potential.calculator", "matscipy.calculators.polydisperse", "matscipy.calculators.polydisperse.calculator", "matscipy.calculators.supercell_calculator", "matscipy.deformation", "matscipy.dislocation", "matscipy.drift", "matscipy.elasticity", "matscipy.electrochemistry", "matscipy.electrochemistry.continuous2discrete", "matscipy.electrochemistry.poisson_boltzmann_distribution", "matscipy.electrochemistry.poisson_nernst_planck_solver", "matscipy.fracture_mechanics", "matscipy.fracture_mechanics.clusters", "matscipy.fracture_mechanics.crack", "matscipy.fracture_mechanics.crackpathsel", "matscipy.fracture_mechanics.energy_release", "matscipy.fracture_mechanics.idealbrittlesolid", "matscipy.hessian_finite_differences", "matscipy.hydrogenate", "matscipy.io", "matscipy.io.lammpsdata", "matscipy.io.metis", "matscipy.io.opls", "matscipy.io.tbl", "matscipy.logger", "matscipy.neighbours", "matscipy.numerical", "matscipy.numpy_tricks", "matscipy.opls", "matscipy.pressurecoupling", "matscipy.rings", "matscipy.spatial_correlation_function", "Matscipy", "Analysis tools", "Neighbour list", "Pair-distribution function", "Ring analysis"], "terms": {"The": [1, 2, 3, 5, 6, 7, 9, 12, 14, 18, 19, 20, 22, 25, 27, 31, 33, 34, 42, 44, 45, 46, 48, 50, 51, 53, 55, 58, 59, 62, 65, 71, 74, 77, 81, 83, 84, 85], "matscipi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 82, 83, 84, 85], "provid": [1, 3, 5, 6, 7, 14, 40, 46, 53, 62, 77, 81], "set": [1, 2, 6, 7, 8, 12, 14, 15, 19, 20, 22, 23, 25, 31, 33, 34, 44, 45, 46, 48, 50, 51, 53, 55, 59, 62, 65, 69, 72, 77, 81], "tool": [1, 5, 7, 52, 53, 74, 81], "creat": [1, 2, 5, 7, 12, 14, 15, 18, 19, 22, 25, 31, 33, 34, 45, 48, 50, 51, 53, 65, 74, 77, 83], "atomist": [1, 2, 3, 5, 6, 7, 48, 50, 55, 62], "contain": [1, 4, 5, 7, 12, 14, 19, 20, 22, 25, 31, 33, 34, 45, 48, 50, 51, 53, 55, 59, 62, 65, 69, 71, 74, 76, 77, 82, 83], "In": [1, 2, 7, 12, 14, 19, 22, 23, 25, 31, 33, 34, 45, 48, 50, 51, 53, 65, 74, 77, 81], "thi": [1, 2, 3, 5, 6, 7, 10, 11, 12, 14, 19, 20, 22, 25, 27, 31, 33, 34, 38, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 59, 62, 65, 67, 71, 74, 75, 77, 79, 83], "exampl": [1, 2, 3, 7, 9, 12, 14, 18, 19, 22, 25, 31, 33, 34, 41, 45, 48, 50, 51, 53, 62, 65, 71, 72, 74, 77, 78, 83], "we": [1, 2, 3, 5, 6, 7, 9, 12, 14, 19, 22, 25, 27, 31, 33, 34, 48, 50, 51, 53, 65, 74, 77, 83, 84], "focu": 1, "order": [1, 4, 6, 12, 19, 22, 25, 31, 32, 48, 50, 53, 55, 59, 74, 77, 78, 81], "start": [1, 5, 7, 12, 19, 20, 22, 25, 31, 48, 50, 53, 55, 62, 77], "cylind": [1, 53, 62], "bulk": [1, 3, 4, 7, 53, 55, 58, 59, 62, 64], "materi": [1, 2, 3, 6, 7, 18, 53, 67, 78, 81], "orient": [1, 6, 53], "along": [1, 6, 7, 19, 53, 55, 57, 76, 77, 78, 80], "vector": [1, 10, 12, 19, 22, 25, 27, 28, 29, 55, 59, 74, 75, 77, 83], "futur": [1, 12, 14, 19, 25, 50, 51, 65], "line": [1, 7, 20, 53, 62, 71, 78], "vec": [1, 27, 80], "l": [1, 22, 48, 50, 53, 55, 59, 78], "By": [1, 6, 12, 14, 19, 25, 50, 51, 65, 71, 77], "convent": [1, 59, 74, 77], "assum": [1, 6, 14, 55, 59, 62, 74, 77], "z": [1, 7, 53, 55, 57, 58, 59, 62, 71, 74, 77], "direct": [1, 2, 6, 7, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 57, 62, 65, 67, 74, 77, 78], "cell": [1, 6, 7, 12, 14, 19, 22, 25, 33, 34, 50, 51, 52, 55, 59, 62, 65, 71, 74, 77, 78], "alwai": 1, "correspond": [1, 5, 7, 12, 14, 15, 18, 19, 22, 25, 31, 48, 50, 53, 55, 59, 71, 74, 77], "Then": [1, 62, 77], "displac": [1, 3, 6, 9, 11, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 60, 62, 65, 66, 75, 77], "field": [1, 2, 3, 4, 5, 18, 20, 53, 60, 62, 65, 71], "i": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 18, 19, 20, 22, 25, 27, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 48, 50, 51, 53, 55, 57, 58, 59, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85], "appli": [1, 3, 4, 7, 46, 53, 55, 57, 59, 62, 71, 74, 77, 78], "outer": [1, 59], "radial": [1, 62], "shell": 1, "fix": [1, 7, 53, 62, 64, 77, 78], "stabilis": 1, "so": [1, 27, 46, 55, 77], "end": [1, 7, 62, 63, 71, 77], "up": [1, 2, 6, 7, 40, 41, 50, 53, 59, 62, 79, 81, 83, 84], "period": [1, 53, 54, 67, 74, 77], "boundari": [1, 3, 7, 48, 50, 52, 58, 59, 62, 67, 74, 77], "condit": [1, 3, 7, 52, 53, 59, 62, 67, 74, 77], "x": [1, 6, 18, 28, 29, 31, 53, 55, 57, 58, 59, 62, 64, 65, 67, 71, 73, 74, 76, 77, 84], "y": [1, 6, 7, 18, 31, 53, 55, 57, 62, 65, 71, 74, 77], "As": [1, 83], "shown": [1, 12, 19, 50, 51, 65], "figur": [1, 53], "abov": [1, 2, 6, 27, 33, 34, 45, 74, 78], "ar": [1, 2, 3, 5, 7, 9, 12, 14, 18, 19, 20, 22, 23, 25, 27, 31, 33, 34, 41, 45, 46, 48, 50, 51, 52, 53, 55, 57, 59, 62, 65, 67, 71, 74, 77, 78, 80, 81, 83], "characteris": 1, "burger": [1, 53], "b": [1, 6, 9, 11, 12, 18, 19, 20, 22, 23, 25, 31, 48, 50, 53, 55, 59, 62, 65, 67, 77, 79, 80], "parallel": [1, 37, 62, 77], "while": [1, 7, 46, 57, 71, 77, 80, 83], "have": [1, 2, 5, 6, 7, 12, 14, 19, 22, 23, 25, 27, 31, 33, 34, 48, 50, 51, 53, 55, 62, 65, 74, 76, 77], "perpendicular": [1, 62], "us": [1, 3, 5, 6, 7, 9, 12, 14, 19, 20, 22, 25, 31, 33, 34, 35, 38, 40, 41, 44, 45, 46, 48, 50, 51, 53, 55, 58, 59, 62, 65, 66, 71, 72, 74, 75, 77, 78, 79, 81, 84], "an": [1, 2, 3, 5, 7, 12, 14, 18, 19, 20, 22, 25, 28, 29, 31, 33, 34, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 62, 65, 69, 71, 74, 77, 78, 83], "anisotrop": [1, 5, 55, 62], "solut": [1, 3, 5, 12, 19, 22, 25, 31, 48, 50, 53, 55, 58, 59, 62], "within": [1, 5, 12, 19, 46, 62, 74, 77], "stroh": [1, 5, 53], "formal": [1, 3, 5], "gener": [1, 3, 4, 9, 12, 18, 19, 25, 31, 33, 34, 46, 48, 52, 53, 55, 57, 59, 74, 77, 81, 82], "implement": [1, 2, 3, 5, 8, 9, 12, 13, 14, 17, 19, 22, 25, 28, 29, 30, 31, 32, 33, 34, 40, 48, 50, 51, 59, 62, 65, 81, 83, 85], "atomman": [1, 5, 53], "packag": [1, 5, 6, 58, 81], "For": [1, 5, 7, 12, 18, 19, 25, 27, 33, 34, 48, 50, 53, 55, 62, 69, 71, 72, 74, 77, 78, 83], "interact": [1, 2, 7, 9, 20, 22, 27, 31, 32, 48, 50, 69, 71, 77], "visualis": [1, 6], "structur": [1, 2, 3, 5, 6, 9, 12, 14, 19, 20, 22, 23, 25, 31, 33, 34, 37, 44, 45, 46, 48, 50, 51, 53, 55, 65, 71, 74, 77, 81, 83], "nglview": [1, 6], "which": [1, 2, 3, 4, 5, 6, 7, 12, 14, 19, 22, 25, 27, 31, 33, 34, 38, 44, 45, 46, 48, 50, 51, 55, 58, 62, 65, 67, 74, 76, 77, 78, 82, 83], "allow": [1, 22, 53, 62, 77, 83], "view": [1, 2, 9, 70, 77], "ipython": [1, 2, 9], "jupyt": 1, "notebook": 1, "also": [1, 2, 3, 6, 7, 9, 12, 14, 19, 22, 25, 31, 33, 34, 45, 48, 50, 51, 62, 65, 77, 81, 83], "color": [1, 2, 53, 62], "atom": [1, 2, 3, 5, 6, 7, 9, 12, 14, 17, 18, 19, 20, 22, 23, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 51, 53, 54, 55, 57, 62, 64, 65, 66, 67, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85], "accord": [1, 3, 7, 14, 46, 53, 55, 57, 59, 74, 85], "crystallograph": [1, 5, 62], "identifi": [1, 14, 74, 83, 85], "common": [1, 44, 74, 77, 85], "neighbour": [1, 10, 11, 12, 19, 25, 33, 34, 40, 41, 42, 44, 45, 46, 48, 50, 53, 62, 65, 70, 81, 82, 84], "analysi": [1, 5, 53, 59, 81, 83], "algoritm": 1, "its": [1, 7, 9, 12, 14, 19, 23, 25, 44, 45, 46, 48, 50, 51, 53, 55, 65, 67, 77], "extent": 1, "ovito": [1, 5, 53], "part": [1, 5, 7, 14, 20, 22, 53, 78], "default": [1, 5, 12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 53, 55, 57, 58, 59, 62, 65, 71, 74, 76, 77, 80], "depend": [1, 2, 5, 23], "requir": [1, 5, 6, 14, 55, 62, 77, 81], "separ": [1, 12, 19, 22, 25, 31, 48, 50, 55, 71, 78], "instal": [1, 4, 81], "keep": 1, "mind": [1, 2], "run": [1, 5, 6, 7, 9, 33, 34, 38, 46, 51, 55, 58, 62, 78], "well": [1, 5, 18], "test": [1, 2, 4, 6, 9, 58, 84, 85], "test_disloc": [1, 5], "py": [1, 5, 6, 55], "sinc": [1, 6, 7, 12, 14, 19, 22, 25, 31, 33, 34, 41, 48, 50, 51, 65, 81, 83], "major": [1, 5], "modul": [1, 2, 3, 5, 6, 7, 13, 17, 21, 24, 26, 33, 36, 39, 40, 43, 47, 49, 55, 56, 60, 66, 68, 81], "thu": [1, 5, 59, 77], "skip": [1, 5], "found": [1, 48, 50, 59, 62, 71, 77, 78, 81], "your": [1, 5, 77], "system": [1, 2, 3, 4, 5, 9, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 54, 55, 59, 62, 65, 71, 74, 77, 79, 85], "pleas": [1, 12, 14, 19, 25, 50, 51, 65, 77], "note": [1, 7, 18, 19, 27, 53, 55, 62, 69, 71, 77], "veri": [1, 2, 6, 77], "small": [1, 2, 6, 7, 9, 46, 55, 74, 78], "radiu": [1, 53, 74], "product": 1, "calcul": [1, 2, 3, 6, 7, 8, 9, 11, 55, 58, 60, 62, 65, 75, 77, 78, 79, 80, 81, 83, 84], "one": [1, 6, 7, 12, 14, 19, 25, 32, 45, 46, 50, 51, 53, 55, 57, 59, 65, 71, 74, 77, 80], "should": [1, 2, 5, 12, 14, 18, 19, 22, 25, 31, 33, 34, 44, 45, 46, 48, 50, 51, 53, 55, 62, 65, 71, 77, 78], "do": [1, 5, 6, 12, 14, 19, 25, 33, 34, 50, 51, 58, 65, 74, 77, 78], "converg": [1, 6, 7, 12, 19, 22, 25, 31, 48, 50, 55, 58, 59], "size": [1, 2, 6, 7, 12, 19, 22, 23, 25, 31, 38, 48, 50, 53, 55, 59, 63, 74, 75, 76], "ensur": [1, 6, 7, 48, 77], "affect": [1, 77], "studi": [1, 5, 7, 53], "properti": [1, 3, 4, 12, 14, 18, 19, 22, 25, 31, 33, 34, 46, 48, 50, 51, 53, 59, 65, 71, 74, 77, 78, 81, 82], "import": [1, 2, 6, 7, 9, 18, 62, 74, 77, 83, 84, 85], "numpi": [1, 2, 6, 7, 9, 11, 19, 62, 72, 74, 76, 77, 78, 81, 83, 84, 85], "np": [1, 2, 6, 7, 9, 12, 19, 20, 33, 34, 35, 38, 40, 41, 45, 46, 50, 51, 53, 55, 57, 59, 62, 65, 74, 76, 83, 84, 85], "necessari": [1, 5, 6, 33, 34, 44, 45, 46, 55], "render": 1, "3d": [1, 55], "from": [1, 2, 5, 6, 7, 9, 10, 12, 14, 16, 18, 19, 20, 22, 25, 31, 32, 33, 34, 40, 41, 45, 48, 50, 51, 52, 53, 55, 57, 58, 59, 62, 64, 65, 66, 67, 69, 71, 72, 74, 75, 77, 78, 81, 83, 84, 85], "show_disloc": 1, "importerror": 1, "traceback": 1, "most": [1, 2, 5, 6, 77], "recent": 1, "call": [1, 6, 11, 12, 14, 19, 22, 25, 31, 33, 34, 41, 42, 48, 50, 51, 53, 55, 59, 62, 65, 71, 77, 78], "last": [1, 7, 12, 14, 19, 22, 25, 31, 33, 34, 41, 45, 48, 50, 51, 65, 77, 78], "3": [1, 2, 6, 7, 9, 12, 19, 20, 22, 35, 41, 46, 50, 51, 53, 57, 58, 59, 62, 63, 65, 71, 74, 77, 80, 84, 85], "file": [1, 6, 7, 12, 14, 15, 16, 19, 20, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 65, 69, 70, 71, 72, 77, 78], "work": [1, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 59, 65, 74, 76, 77, 78, 81, 83], "doc": [1, 20, 59, 78], "applic": [1, 62, 78, 81, 82], "io": [1, 2, 6, 7, 9, 18, 77, 84, 85], "ase": [1, 2, 6, 7, 9, 12, 19, 22, 25, 31, 37, 40, 41, 44, 45, 46, 48, 50, 53, 55, 62, 64, 66, 67, 74, 75, 77, 78, 79, 81, 83, 84, 85], "ase_to_ovito": 1, "4": [1, 2, 6, 7, 9, 20, 35, 48, 53, 62, 71, 74, 77, 84], "modifi": [1, 6, 33, 34, 77], "commonneighboranalysismodifi": 1, "identifydiamondmodifi": 1, "5": [1, 2, 6, 7, 18, 20, 35, 52, 53, 55, 61, 62, 63, 64, 65, 71, 74, 77, 83, 84, 85], "pipelin": 1, "staticsourc": 1, "usr": [1, 6], "local": [1, 6, 7, 12, 19, 22, 25, 31, 48, 50, 55, 66, 74, 75, 77, 81], "lib": [1, 6], "python3": [1, 6, 81], "10": [1, 6, 14, 23, 33, 34, 42, 45, 50, 53, 57, 59, 62, 71, 73, 74, 77, 78, 84], "dist": [1, 6], "__init__": [1, 12, 14, 19, 22, 23, 25, 27, 31, 32, 33, 34, 35, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 59, 62, 65, 69, 73, 74, 77, 78], "21": [1, 64], "18": [1, 6], "nonpubl": 1, "20": [1, 6, 7, 53, 57, 59, 62], "load": [1, 2, 5, 7, 9, 55, 72, 78, 84, 85], "all": [1, 5, 6, 7, 9, 12, 14, 19, 20, 22, 25, 31, 33, 34, 41, 44, 46, 48, 50, 51, 59, 62, 64, 65, 67, 71, 74, 77, 78, 80, 83], "extens": [1, 3, 18, 48, 53, 77], "_extens": 1, "23": [1, 71], "public": [1, 14], "symbol": [1, 2, 6, 7, 9, 18, 20, 41, 53, 74, 77], "root": [1, 22, 81], "24": 1, "__all__": 1, "version": [1, 53, 77, 81], "version_str": 1, "scene": 1, "enable_log": 1, "6": [1, 2, 6, 9, 12, 19, 20, 41, 48, 50, 51, 53, 55, 62, 65, 71, 74, 77, 83, 85], "plugin": 1, "under": [1, 7, 55, 77, 78], "modinfo": 1, "pkgutil": 1, "walk_packag": 1, "__path__": 1, "__name__": 1, "importlib": 1, "import_modul": 1, "name": [1, 6, 12, 14, 15, 19, 20, 22, 23, 25, 31, 33, 34, 46, 48, 50, 51, 62, 65, 69, 70, 71, 72, 73, 77], "126": 1, "124": 1, "break": [1, 41], "125": 1, "level": [1, 15, 33, 34, 45, 81], "return": [1, 2, 6, 9, 12, 14, 18, 19, 20, 22, 25, 27, 31, 32, 33, 34, 40, 41, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 59, 62, 63, 64, 65, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84], "_bootstrap": 1, "_gcd_import": 1, "averag": [1, 14, 18, 20, 46, 53, 62], "pyscript": 1, "stdobj": 1, "c": [1, 2, 6, 9, 18, 32, 41, 48, 53, 55, 58, 59, 62, 65, 71, 74, 77, 83, 85], "class": [1, 5, 6, 7, 9, 12, 14, 19, 20, 22, 23, 25, 27, 31, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 59, 62, 65, 69, 73, 74, 77, 78], "add": [1, 5, 33, 34, 44, 45, 46, 62, 67, 74, 77], "ons": 1, "_scene_class": 1, "36": 1, "26": [1, 53], "warn": [1, 6, 15, 33, 34, 73, 77], "incompat": [1, 77], "qt": 1, "cross": [1, 6, 50, 53, 74], "platform": 1, "framework": 1, "detect": [1, 5, 53], "nthi": 1, "python": [1, 5, 71], "base": [1, 2, 5, 6, 12, 14, 19, 20, 22, 23, 25, 27, 31, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 59, 62, 65, 69, 73, 74, 77, 78], "qt6": 1, "via": [1, 50, 66, 77], "pyside6": 1, "bind": 1, "27": 1, "old": [1, 12, 14, 19, 22, 25, 31, 33, 34, 46, 48, 50, 51, 65], "qt5": 1, "alreadi": [1, 7, 14, 55, 78], "point": [1, 20, 22, 53, 57, 59, 77, 78, 80], "through": [1, 2, 77], "pyqt5": 1, "pyside2": 1, "preced": [1, 71], "To": [1, 5, 6, 7, 9, 53, 62, 77, 81], "avoid": [1, 62, 74], "librari": [1, 53], "conflict": [1, 77], "make": [1, 6, 7, 12, 14, 40, 41, 45, 53, 59, 69, 77], "sure": [1, 40, 41, 59], "rest": [1, 45], "28": 1, "too": [1, 6], "instead": [1, 12, 14, 19, 22, 25, 27, 31, 48, 50, 51, 65, 66, 72, 77], "31": [1, 62], "addit": [1, 12, 14, 18, 19, 22, 25, 31, 35, 48, 50, 55, 62, 81], "mai": [1, 12, 14, 19, 25, 50, 51, 53, 54, 65, 74], "help": [1, 32], "environ": [1, 81], "variabl": [1, 6, 23, 25, 33, 34, 59, 83], "qt_api": 1, "forc": [1, 2, 6, 9, 12, 14, 19, 22, 23, 25, 27, 31, 33, 34, 35, 48, 50, 51, 53, 55, 62, 63, 65, 66, 71, 75, 77, 78, 83], "third": [1, 77], "parti": 1, "e": [1, 6, 7, 9, 10, 11, 12, 14, 18, 19, 22, 25, 31, 33, 34, 48, 50, 51, 52, 53, 55, 57, 58, 59, 62, 63, 65, 69, 71, 74, 77, 78, 83], "g": [1, 6, 9, 12, 18, 20, 25, 27, 48, 52, 53, 55, 58, 59, 62, 77, 78], "matplotlib": [1, 2, 6, 53, 55, 62, 77, 84, 85], "32": 1, "If": [1, 5, 12, 14, 19, 22, 25, 31, 33, 34, 40, 41, 45, 46, 48, 50, 51, 53, 55, 57, 58, 59, 62, 65, 67, 71, 74, 77, 78, 83], "you": [1, 5, 7, 77], "ani": [1, 12, 14, 18, 19, 22, 25, 31, 33, 34, 40, 45, 48, 50, 51, 65, 77], "question": [1, 81], "contact": 1, "support": [1, 3, 5, 9, 12, 14, 19, 20, 25, 33, 34, 50, 51, 60, 65, 77], "org": [1, 14, 53, 59, 81], "n": [1, 2, 6, 12, 18, 19, 20, 22, 25, 31, 48, 50, 53, 58, 59, 61, 62, 63, 65, 74, 77, 84], "34": [1, 6], "first": [1, 2, 6, 7, 9, 12, 19, 20, 25, 32, 40, 41, 45, 48, 50, 51, 53, 59, 65, 71, 74, 77, 83], "befor": [1, 55, 62, 77], "": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 28, 53, 55, 57, 59, 62, 71, 73, 74, 77, 78, 79, 81], "own": [1, 59], "get": [1, 7, 9, 12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 53, 59, 65, 77, 81, 84], "35": 1, "right": [1, 18, 19, 27, 53, 59, 62], "share": [1, 38, 74], "need": [1, 6, 7, 12, 14, 19, 22, 25, 27, 31, 33, 34, 44, 45, 46, 48, 50, 51, 53, 62, 65, 74, 84], "process": [1, 3, 38, 55, 62], "when": [1, 2, 5, 12, 14, 19, 25, 50, 51, 53, 59, 62, 65, 77], "interpret": [1, 77], "qt_compat": 1, "qtcore": 1, "37": 1, "qtgui": 1, "38": [1, 6], "qtwidget": 1, "11": [1, 6, 9, 53, 77], "8": [1, 6, 7, 20, 23, 48, 58, 59, 62, 71, 73, 77, 80, 83], "shiboken": 1, "preload": 1, "shiboken6": 1, "dll": 1, "9": [1, 2, 6, 9, 20, 59, 62, 74, 77], "qtnetwork": 1, "qtxml": 1, "13": 1, "qtopenglwidget": 1, "includ": [1, 2, 3, 6, 7, 10, 18, 35, 45, 46, 53, 60, 62, 64, 71, 74, 77], "embed": [1, 17, 18, 19, 20], "pro": 1, "7": [1, 2, 6, 20, 53, 71, 77], "14": [1, 2, 53], "pypi": 1, "15": [1, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 58, 59, 65, 71], "try": [1, 7, 77], "libegl": 1, "cannot": [1, 7], "open": [1, 7, 59, 78], "object": [1, 2, 6, 7, 12, 14, 19, 22, 23, 25, 31, 33, 34, 35, 37, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 59, 62, 65, 67, 69, 70, 71, 73, 74, 77, 78, 81], "No": [1, 77], "directori": [1, 5, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 81], "case": [1, 12, 14, 19, 22, 25, 31, 33, 34, 45, 48, 50, 51, 53, 59, 62, 65, 74, 77], "bcc": [1, 6, 23, 53, 61], "take": [1, 6, 27, 52, 53, 55, 77], "tungsten": [1, 53], "ha": [1, 3, 5, 7, 12, 14, 18, 19, 20, 22, 25, 31, 41, 48, 50, 51, 52, 53, 55, 62, 65, 76, 77, 83, 84, 85], "lattic": [1, 2, 3, 5, 6, 7, 9, 20, 53, 61, 62, 65, 71, 74, 77], "paramet": [1, 2, 5, 6, 7, 10, 12, 14, 18, 19, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 51, 53, 55, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79], "elast": [1, 3, 4, 5, 9, 12, 18, 19, 22, 25, 31, 48, 50, 53, 60, 62, 78, 81], "constant": [1, 4, 5, 6, 7, 9, 12, 18, 19, 20, 22, 23, 25, 31, 48, 50, 53, 55, 58, 59, 62, 65, 71, 77, 78, 81], "It": [1, 6, 14, 33, 34, 55, 74, 77, 81], "possibl": [1, 12, 53, 55, 74, 77], "valu": [1, 6, 7, 14, 20, 23, 28, 29, 46, 53, 55, 58, 59, 62, 64, 71, 74, 77, 78, 80], "literatur": 1, "howev": [1, 2, 5, 6, 18, 74], "plan": [1, 5], "relax": [1, 2, 6, 12, 19, 22, 23, 25, 31, 48, 50, 53, 55, 62, 64, 78], "interatom": [1, 2, 7, 14, 18, 62, 81, 82], "potenti": [1, 2, 6, 7, 12, 14, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 31, 33, 34, 37, 42, 46, 48, 50, 53, 58, 59, 64, 71, 74, 77, 81, 82], "conveni": [1, 71], "method": [1, 12, 14, 17, 19, 20, 22, 23, 25, 27, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 48, 50, 51, 53, 55, 59, 62, 65, 69, 73, 74, 77, 78], "get_elastic_const": [1, 12, 19, 22, 25, 31, 48, 50, 53], "desir": [1, 2, 22, 55, 59], "marinica": [1, 53], "et": [1, 7, 9, 14, 48, 50], "al": [1, 7, 9, 14, 48, 50, 77], "2013": [1, 53], "paper": [1, 53], "eam4": 1, "energi": [1, 2, 6, 9, 12, 14, 18, 19, 20, 22, 23, 25, 31, 32, 33, 34, 38, 46, 48, 50, 51, 53, 62, 63, 64, 65, 71, 72, 74, 77, 78, 83], "eam": [1, 2, 51], "eam_calc": 1, "w_eam4": 1, "f": [1, 2, 7, 9, 18, 19, 20, 25, 27, 48, 50, 53, 58, 59, 62, 63, 77, 78], "function": [1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 18, 19, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 44, 45, 46, 48, 50, 52, 53, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85], "accept": [1, 2, 12, 19, 22, 25, 31, 41, 48, 50, 55, 74, 85], "ASE": [1, 6, 7, 8, 12, 19, 33, 34, 38, 62, 69, 71, 74, 77, 78, 81], "type": [1, 2, 19, 20, 33, 34, 35, 40, 41, 44, 45, 46, 53, 55, 57, 58, 59, 62, 64, 67, 69, 71, 72, 74, 76, 77, 78, 79], "alat": [1, 6, 53], "c11": [1, 6, 7, 23, 53, 55, 62, 78], "c12": [1, 6, 23, 53, 55, 62], "c44": [1, 6, 23, 53, 55, 62], "w": [1, 7, 18, 22, 23, 27, 31, 32, 48, 53, 55, 62, 73, 78], "step": [1, 6, 7, 12, 19, 22, 25, 31, 33, 34, 48, 50, 55, 58, 62, 75, 77, 78], "time": [1, 6, 7, 40, 41, 53, 62, 71, 72, 74, 78, 83], "fmax": [1, 2, 6, 23, 53, 55], "consist": [1, 6, 7, 12, 19, 25, 48, 50, 53, 58, 62, 77, 83], "optim": [1, 2, 6, 23, 53, 55, 59, 62, 71], "fire": [1, 2], "0": [1, 2, 6, 7, 9, 12, 14, 18, 19, 20, 22, 23, 25, 27, 31, 32, 33, 34, 41, 42, 46, 48, 50, 51, 52, 53, 55, 58, 59, 61, 62, 63, 65, 71, 72, 74, 76, 77, 78, 80, 83, 84, 85], "29": [1, 6], "59": 1, "17": [1, 83], "792788": 1, "5616": 1, "796007": 1, "2330": 1, "798904": 1, "6354": 1, "799853": 1, "2223": 1, "799882": 1, "1976": 1, "799928": 1, "1509": 1, "799970": 1, "0870": 1, "799991": 1, "0130": 1, "799981": 1, "0629": 1, "0611": 1, "799982": 1, "0576": 1, "799984": 1, "0525": 1, "12": [1, 6, 48, 53, 58, 59, 62, 71, 77, 83], "799986": 1, "0458": 1, "799988": 1, "0379": 1, "799989": 1, "0289": 1, "0191": 1, "16": [1, 48, 53], "0076": 1, "799992": 1, "0052": 1, "19": 1, "0051": 1, "0049": 1, "0047": 1, "22": 1, "0044": 1, "0041": 1, "0038": 1, "25": [1, 53], "0034": 1, "0028": 1, "0022": 1, "0015": 1, "0006": 1, "30": [1, 6, 77], "00": [1, 6, 74], "0003": [1, 6], "33": 1, "0002": 1, "39": [1, 53, 78], "40": [1, 53], "41": [1, 6], "0001": [1, 6], "42": [1, 9], "fit": [1, 4, 6, 20, 53, 55, 62], "c_11": [1, 6], "strain": [1, 3, 4, 9, 52, 55, 62, 72, 75, 81], "arrai": [1, 6, 7, 12, 19, 20, 22, 25, 28, 29, 31, 33, 34, 35, 38, 40, 41, 45, 46, 48, 50, 53, 55, 57, 59, 62, 64, 67, 72, 74, 76, 77, 78, 79, 83], "02": [1, 6, 72], "01": [1, 6, 23, 53, 55, 62, 65, 71, 72, 78], "stress": [1, 6, 7, 12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 55, 62, 65, 75, 77, 78], "18143011e": 1, "57729763e": 1, "88261126e": 1, "04": 1, "98286691e": 1, "85079614e": 1, "gpa": [1, 6, 7, 9, 78], "cij": [1, 6], "gradient": [1, 6, 11, 12, 19, 22, 25, 27, 31, 32, 48, 50, 53, 55, 59, 62, 64], "538": 1, "9035896451805": 1, "error": [1, 6, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 62, 65], "584381718776033": 1, "correl": [1, 6, 80, 81, 84], "coeffici": [1, 6, 12, 19, 22, 25, 31, 46, 48, 50, 55, 59], "9985824334709763": 1, "363572": 1, "103512": 1, "c_21": [1, 6], "18171556e": 1, "29563243e": 1, "85153957e": 1, "74132626e": 1, "219": 1, "93255649330877": 1, "450223131451542": 1, "9952274688373499": 1, "c21": [1, 6], "372711": 1, "077708": 1, "c_31": [1, 6], "93255649330868": 1, "450223131451247": 1, "9952274688373501": 1, "updat": [1, 6, 12, 14, 19, 25, 33, 34, 40, 41, 45, 46, 50, 51, 62, 65, 71, 77], "c31": [1, 6], "c_44": [1, 6], "37426370e": 1, "88654647e": 1, "30635418e": 1, "43563268e": 1, "90478138e": 1, "178": 1, "80269302570218": 1, "702352202927047": 1, "9925146216927534": 1, "115999": 1, "079282": 1, "93": [1, 18], "90": [1, 77], "58": 1, "c_12": [1, 6], "45": [1, 6], "80": [1, 58], "70": [1, 5], "print": [1, 6, 33, 34, 45, 46, 53, 55, 62, 74, 77], "3f": [1, 9], "angstrom": [1, 53, 77, 84], "2f": [1, 2, 9], "143": 1, "good": [1, 81], "agreement": [1, 53], "number": [1, 6, 7, 9, 10, 12, 14, 18, 19, 20, 22, 25, 31, 33, 34, 38, 40, 41, 48, 50, 51, 53, 55, 57, 58, 59, 62, 65, 67, 69, 71, 74, 76, 77, 79, 83, 85], "523": 1, "202": 1, "161": 1, "notat": [1, 18, 19, 55, 75, 77], "mean": [1, 7, 9, 14, 18, 20, 22, 46, 62, 77], "glide": [1, 53], "plane": [1, 53, 55, 59, 62, 65, 77], "geometri": [1, 6, 53, 62, 77], "112": 1, "think": 1, "about": [1, 7, 14, 33, 34, 53, 55, 62, 71, 77, 81], "bccscrew111disloc": [1, 53], "inform": [1, 5, 7, 12, 14, 19, 20, 22, 25, 31, 33, 34, 46, 48, 50, 51, 53, 62, 65, 69, 71], "pass": [1, 5, 6, 12, 14, 19, 25, 50, 51, 53, 55, 62, 65, 72, 77], "a_0": 1, "c_": [1, 6, 18, 55], "44": [1, 6, 53, 55, 79], "element": [1, 6, 7, 18, 20, 41, 53, 71, 74, 77], "constructor": [1, 59, 62], "w_screw": 1, "ax": [1, 2, 6, 53, 57, 62, 77], "57169453": 1, "go": [1, 2], "build_cylind": [1, 53], "automat": [1, 7, 77, 78], "onli": [1, 2, 5, 7, 10, 18, 20, 22, 25, 27, 33, 34, 41, 46, 48, 50, 53, 55, 58, 62, 64, 66, 67, 74, 75, 76, 77, 78, 80, 83], "chose": 1, "refer": [1, 6, 18, 19, 20, 31, 33, 34, 48, 50, 59, 62, 64, 71, 75, 77, 81], "iter": [1, 12, 19, 22, 25, 31, 48, 50, 52, 55, 59, 77], "until": 1, "achiev": [1, 12, 19, 22, 25, 31, 48, 50, 55], "output": [1, 5, 12, 14, 19, 20, 22, 25, 31, 33, 34, 38, 48, 50, 51, 53, 55, 62, 65, 71, 76], "show": [1, 2, 7, 53, 62, 83], "differ": [1, 2, 12, 14, 19, 20, 22, 25, 31, 33, 34, 38, 48, 50, 51, 53, 58, 59, 62, 65, 66, 71, 74, 75, 77], "between": [1, 7, 12, 19, 20, 23, 53, 58, 59, 62, 64, 71, 74, 77, 83, 84], "unconstrain": [1, 53], "region": [1, 7, 33, 34, 35, 45, 46, 53, 59, 62, 64, 78], "around": [1, 46, 53, 62, 77, 81], "core": [1, 33, 34, 35, 45, 53], "ad": [1, 5, 33, 34, 45, 46, 53, 77], "top": [1, 9, 78, 81, 83], "two": [1, 2, 7, 12, 18, 19, 31, 40, 45, 53, 62, 77, 83], "larger": [1, 44, 45, 46, 80], "than": [1, 2, 7, 10, 11, 12, 14, 19, 25, 41, 50, 51, 53, 59, 65, 74, 77, 80], "cutoff": [1, 2, 7, 10, 11, 19, 20, 22, 25, 32, 41, 48, 50, 53, 61, 62, 63, 65, 67, 71, 74, 77, 79, 80, 83, 84, 85], "store": [1, 14, 23, 35, 38, 46, 62, 65, 71, 74, 77, 83], "fix_mask": 1, "can": [1, 2, 5, 6, 7, 9, 12, 14, 18, 19, 22, 25, 27, 31, 33, 34, 40, 41, 46, 48, 50, 51, 55, 59, 62, 65, 71, 72, 74, 77, 78, 81, 83, 84], "access": [1, 12, 33, 34, 53], "w_screw_dislo": 1, "get_arrai": [1, 23, 77], "w_screw_bulk": 1, "ncell": 1, "nburger": 1, "lenth": 1, "linalg": [1, 6, 11], "norm": [1, 6, 11, 12, 19, 22, 25, 28, 29, 31, 48, 50, 53, 55, 62, 80], "scf": 1, "d1": 1, "d2": 1, "_inf": 1, "001400723332078968": 1, "704394990092455e": 1, "06": [1, 12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 53, 55, 65], "2089362583809233e": 1, "08": 1, "61": 1, "59759392": 1, "62": 1, "235928": 1, "72225477": 1, "72": 1, "now": [1, 6, 7, 9, 33, 34, 44, 45, 46], "look": [1, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "hover": 1, "mous": 1, "over": [1, 2, 14, 62, 83], "chemic": [1, 6, 77], "cna": 1, "algorithm": [1, 5, 7, 74, 75, 85], "arrow": 1, "displai": [1, 2, 9], "moreov": 1, "control": [1, 53, 59], "translat": [1, 7, 14, 77], "click": 1, "drag": 1, "rotat": [1, 6, 55, 77], "left": [1, 18, 19, 27, 53, 59, 62], "axi": [1, 6, 7, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 57, 65, 74, 76, 77, 78], "ctrl": 1, "zoom": 1, "scroll": 1, "wheel": [1, 81], "d_name": 1, "seen": 1, "some": [1, 2, 15, 33, 34, 41, 62, 65, 72, 78, 83], "grei": 1, "other": [1, 6, 8, 18, 23, 46, 53, 74, 77, 80, 84], "These": [1, 5, 12, 19, 22, 25, 31, 48, 50, 62], "repres": [1, 6, 7, 14, 37, 44, 45, 46, 53, 62], "defect": [1, 5], "where": [1, 3, 5, 12, 19, 46, 50, 59, 62, 74, 77], "could": [1, 7], "assign": [1, 2, 33, 34, 35, 80], "artifici": [1, 62], "free": [1, 62, 77, 78], "surfac": [1, 3, 6, 7, 53, 58, 62], "here": [1, 6, 59, 62, 70, 77, 81], "length": [1, 10, 19, 53, 58, 59, 62, 67, 71, 74, 76, 77, 79, 83, 85], "frac": [1, 9, 19, 27, 53, 62], "sqrt": [1, 2, 12, 19, 50, 53, 58, 59], "With": [1, 4, 57, 74, 77], "infinit": [1, 3, 55], "long": [1, 22, 40, 53, 76, 77, 84], "straight": [1, 5, 6, 53], "easier": [1, 77], "see": [1, 2, 5, 7, 11, 18, 20, 53, 55, 59, 62, 64, 70, 77, 79], "might": [1, 7, 77], "notic": [1, 77], "outsid": [1, 41, 53, 74, 77], "simul": [1, 3, 4, 5, 38, 42, 44, 45, 46, 48, 54, 58, 59, 71, 74, 77, 78, 81], "box": [1, 12, 19, 22, 25, 31, 48, 50, 53, 57, 74, 75, 83], "increas": [1, 7, 53, 58, 62, 78, 83], "reli": [1, 5], "magic": 1, "simpli": [1, 6, 18], "multipli": [1, 46, 59], "longer_w_screw_dislo": 1, "want": [1, 12, 19, 50, 51, 65, 77, 83], "save": [1, 7, 33, 34, 41, 53, 70, 72], "further": [1, 41], "input": [1, 44, 45, 46, 62, 71, 74], "code": [1, 5, 6, 7, 9, 55, 83], "write": [1, 6, 7, 12, 14, 16, 19, 20, 25, 27, 50, 51, 55, 65, 69, 71, 72, 77, 78], "filenam": [1, 14, 53, 71, 77, 78], "wide": [1, 4, 82], "rang": [1, 2, 22, 23, 55, 74], "format": [1, 12, 18, 19, 20, 22, 25, 31, 48, 50, 53, 70, 71, 73, 74, 77, 83], "xyz": [1, 53, 71, 77], "lammp": [1, 5, 20, 22, 52, 69, 71, 77], "data": [1, 2, 14, 20, 33, 34, 35, 37, 38, 46, 53, 69, 71, 72, 74, 76, 78, 83], "forget": 1, "account": [1, 2, 7, 55, 74, 77], "like": [1, 6, 12, 14, 18, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 65, 71, 77, 83], "said": 1, "vectpr": 1, "same": [1, 5, 6, 9, 18, 53, 62, 71, 74, 76, 77, 78], "bccedge111disloc": [1, 53], "w_edg": 1, "w_edge_bulk": 1, "w_edge_dislo": 1, "17503717189385382": 1, "030669651063355258": 1, "004376489640269432": 1, "0008807112000284167": 1, "00015452837692353505": 1, "6112647029508107e": 1, "05": [1, 6, 12, 19, 22, 25, 31, 48, 50, 55, 58, 59, 66, 75], "7487804006051135e": 1, "771108773702018e": 1, "07": [1, 59], "54": 1, "44509545": 1, "53": 1, "34508114": 1, "69969924": 1, "more": [1, 2, 12, 14, 19, 25, 27, 33, 34, 41, 45, 50, 51, 53, 59, 65, 71, 74, 77], "scale": [1, 2, 7, 14, 46, 50, 55, 77], "bar": [1, 27, 53], "bar1": 1, "angl": [1, 10, 27, 32, 53, 62, 71, 74, 77], "lead": [1, 58, 77], "both": [1, 7, 55, 77, 83], "compon": [1, 19, 55, 62, 77, 80, 83], "bccmixed111disloc": [1, 53], "w_mix": 1, "w_mixed_bulk": 1, "w_mixed_dislo": 1, "10539187767041772": 1, "018105716735450528": 1, "002853744720166418": 1, "00044617599789692486": 1, "968641396387643e": 1, "0882499856867955e": 1, "6994203833053945e": 1, "653822296916353e": 1, "burdger": 1, "form": [1, 5, 9, 18, 28, 29, 30, 48, 50, 55, 62, 74, 77, 81], "reaction": 1, "abund": 1, "thei": [1, 2, 12, 19, 41, 46, 50, 51, 65, 71, 74], "plai": [1, 2], "role": [1, 2], "impur": [1, 53], "segreg": 1, "bccedge100110disloc": [1, 53], "w_100110_edg": 1, "14338905": 1, "w_100110_edge_bulk": 1, "w_100110_edge_dislo": 1, "d_color": 1, "256011923011219": 1, "06016875789278883": 1, "008688239875985548": 1, "002036859690120879": 1, "00025500641555943615": 1, "302194247189476e": 1, "6579146270331857e": 1, "7272275882884713e": 1, "753932630942927e": 1, "ly": 1, "bccedge100disloc": [1, 53], "w_100_edg": 1, "w_100_edge_bulk": 1, "w_100_edge_dislo": 1, "29723896079013645": 1, "03893895819760007": 1, "011189961805871729": 1, "001492901691747324": 1, "00046542738716470744": 1, "162136711258039e": 1, "3593036747305831e": 1, "370960947186475e": 1, "007713447316431e": 1, "fcc": [1, 2, 6, 23, 61, 77], "consid": [1, 2, 10, 46, 52, 77, 83], "ni": [1, 59], "bonni": 1, "fecuni": 1, "alloi": [1, 2, 18, 19, 20, 48], "801046": 1, "12800014e": 1, "50333320e": 1, "41366167e": 1, "37961959e": 1, "63379565e": 1, "244": 1, "0654437182867": 1, "217968506243491": 1, "9995522932872427": 1, "523337": 1, "026326": 1, "37539886e": 1, "58459192e": 1, "38619385e": 1, "58171226e": 1, "148": 1, "85008009740656": 1, "776719382842348": 1, "9969053432709588": 1, "929049": 1, "042297": 1, "850080097406": 1, "776719382842323": 1, "51031965e": 1, "25545671e": 1, "54901650e": 1, "25652507e": 1, "51470655e": 1, "62034171207866": 1, "0380968152678079": 1, "9999998620414655": 1, "784061": 1, "000238": 1, "85": [1, 41, 53, 71, 74], "78": 1, "520": 1, "fccscrew110disloc": [1, 53], "ni_screw": 1, "76": [1, 6], "ni_screw_bulk": 1, "ni_screw_dislo": 1, "021791458261984697": 1, "0002936041882874109": 1, "8928735380371347e": 1, "2696678054050815e": 1, "0764587210498888e": 1, "020321133865591423": 1, "0006134137472214689": 1, "9406489367308524e": 1, "948341477265748e": 1, "340714410803862e": 1, "35542726": 1, "96818843": 1, "48901587": 1, "49": [1, 78], "due": [1, 3, 12, 19, 22, 25, 31, 48, 50, 58], "stabl": [1, 53], "intrins": 1, "stack": [1, 53, 74], "fault": [1, 53], "isf": 1, "shocklei": 1, "partial": [1, 19, 27, 53, 81], "bar10": 1, "rightarrow": 1, "mathrm": [1, 2, 19], "bar21": 1, "partial_dist": [1, 53], "distanc": [1, 7, 10, 12, 18, 19, 20, 22, 25, 27, 32, 41, 48, 52, 53, 58, 62, 64, 65, 71, 74, 77, 80, 83, 84], "defin": [1, 2, 6, 7, 12, 14, 15, 27, 31, 32, 53, 55, 65, 71, 74, 77], "obtain": [1, 3, 12, 14, 19, 22, 25, 31, 33, 34, 37, 48, 50, 55, 62, 74], "patial_dist": 1, "glide_dist": [1, 53], "nexpect": 1, "1f": [1, 2, 9], "02179145826198453": 1, "892873538059339e": 1, "2696678051752307e": 1, "0764587193845543e": 1, "020321133865591506": 1, "948341477515548e": 1, "340714444804442e": 1, "expect": [1, 59, 77], "togeth": [1, 5, 6, 53, 77], "green": [1, 62], "hcp": 1, "pink": 1, "result": [1, 5, 12, 14, 19, 22, 25, 31, 33, 34, 46, 48, 50, 51, 53, 55, 58, 62, 65, 71, 74, 75, 77], "chang": [1, 2, 7, 12, 14, 19, 22, 25, 31, 33, 34, 45, 48, 50, 51, 65, 77], "layer": [1, 7, 59], "fccedge110disloc": [1, 53], "ni_edg": 1, "ni_edge_bulk": 1, "ni_edge_dislo": 1, "04310715442453525": 1, "0031359890399249857": 1, "00018078113282300745": 1, "4501349156037513e": 1, "978781161934513e": 1, "03462421627571943": 1, "0022123322463467043": 1, "00021564683900149317": 1, "1838612354972411e": 1, "324895580611667e": 1, "64": [1, 6, 48], "71441261": 1, "31110195": 1, "4501349155759957e": 1, "978781162003902e": 1, "002212332246347065": 1, "si": [1, 6, 7, 9, 58, 59], "d": [1, 11, 12, 14, 19, 22, 23, 25, 31, 32, 33, 34, 48, 50, 51, 62, 63, 65, 74, 75, 77, 79, 83, 84], "holland": 1, "m": [1, 6, 7, 9, 12, 19, 22, 25, 31, 48, 50, 53, 55, 58, 59, 63, 65, 78, 81], "marder": [1, 65], "manybodi": [1, 6, 7, 9], "explicit_form": [1, 6, 7, 9], "stillinger_web": [1, 6, 7, 9], "stillingerweb": [1, 6, 7, 9, 29], "holland_marder_prl_80_746_si": [1, 6], "calc": [1, 2, 6, 7, 9, 12, 23, 51, 53, 62, 77], "692786": [1, 6], "0922": 1, "692742": 1, "1881": 1, "692797": 1, "0452": 1, "692771": 1, "1323": 1, "692781": 1, "1071": 1, "692794": 1, "0616": 1, "692800": [1, 6], "0043": 1, "692795": 1, "0537": 1, "692796": 1, "0511": 1, "0461": 1, "692798": 1, "0390": 1, "692799": 1, "0299": 1, "0195": 1, "0081": 1, "0036": 1, "0035": 1, "0032": 1, "0030": 1, "0025": 1, "0017": 1, "0013": 1, "0007": 1, "0000": [1, 6], "18437928e": 1, "05313584e": 1, "57946679e": 1, "97559670e": 1, "87433910e": 1, "201": [1, 6], "46169296718193": 1, "6470882834179283": 1, "999741134311275": 1, "257425": 1, "016522": [1, 6], "13686951e": 1, "40672589e": 1, "89041361e": 1, "30285346e": 1, "51": [1, 6], "640236590323106": 1, "7644327851076396": 1, "9982534295801976": 1, "322313": 1, "011013": [1, 6], "64023659032299": 1, "764432785107523": 1, "9982534295801978": 1, "43911684e": 1, "19995048e": 1, "16046225e": 1, "16236368e": 1, "28858547e": 1, "118": [1, 6], "17718786807852": 1, "2857535435707688": 1, "9998224896147394": 1, "737604": 1, "008025": [1, 6], "46": [1, 6], "65": [1, 6], "431": [1, 7], "diamondglidescrew": [1, 53], "si_screw": 1, "71547466": 1, "si_screw_bulk": 1, "si_screw_dislo": 1, "diamond_structur": 1, "true": [1, 6, 7, 12, 14, 16, 18, 19, 22, 25, 31, 33, 34, 40, 41, 45, 46, 48, 50, 51, 53, 55, 59, 62, 65, 67, 69, 71, 72, 74, 75, 77, 78, 80], "add_bond": 1, "bond": [1, 10, 27, 35, 44, 45, 46, 53, 62, 67, 71, 74, 77, 83], "bit": 1, "66": 1, "51527324": 1, "75": [1, 7, 53], "25344122": 1, "84026109": 1, "84": 1, "modif": 1, "gradual": 1, "how": [1, 7, 12, 19, 22, 25, 31, 48, 50, 55, 62, 83], "far": [1, 58, 62], "outcom": 1, "u": [1, 2, 6, 9, 27, 53, 58, 59, 62], "1st": [1, 77], "2nd": [1, 59, 77], "neighbor": [1, 12, 19, 40, 41, 67, 74, 77, 79, 83, 84, 85], "similar": [1, 5, 77, 83], "mechan": [1, 4, 7, 62, 81], "exist": [1, 14, 53, 71, 77], "hexagon": [1, 77], "particular": [1, 2, 23, 53, 83], "symmetri": [1, 2, 6, 55], "diamondglide60degre": [1, 53], "si_60_degree_screw": 1, "si_60_degree_screw_bulk": 1, "si_60_degree_screw_dislo": 1, "solid": [2, 5, 50, 65], "respond": [2, 5], "extern": [2, 14], "revers": [2, 53, 74], "respons": [2, 3, 6, 42, 44, 45, 46, 55, 60], "strength": [2, 6, 58, 59], "character": [2, 77], "moduli": [2, 9, 55], "comput": [2, 6, 9, 10, 11, 12, 14, 19, 20, 22, 25, 27, 28, 29, 31, 33, 34, 48, 50, 53, 55, 58, 59, 62, 64, 66, 69, 74, 75, 77, 79, 80, 83, 84, 85], "deform": [2, 3, 5, 7, 11, 12, 19, 22, 25, 31, 48, 50, 53, 55, 62, 64, 75], "underli": [2, 7], "crystal": [2, 5, 6, 7, 20, 23, 53, 55, 62, 64, 65], "analyt": [2, 25, 53, 55], "describ": [2, 9, 59, 62, 65, 77], "detail": [2, 53, 55, 77], "below": [2, 3, 6, 7, 40, 71, 78], "basic": [2, 3, 4, 12, 14, 19, 25, 50, 51, 65, 77, 82], "prerequisit": 2, "multi": [2, 76], "model": [2, 5, 7, 13, 14, 48, 53], "continuum": [2, 3, 6, 60, 62], "tutori": [2, 3, 4, 6, 7], "wai": [2, 12, 59, 74, 77], "configur": [2, 4, 5, 6, 7, 12, 16, 18, 19, 22, 25, 31, 41, 48, 50, 53, 55, 62, 64, 66, 67, 71, 74, 75, 77, 78, 79, 84, 85], "let": [2, 7], "cubic": [2, 4, 5, 6, 7, 53, 55, 62, 74], "facecenteredcub": [2, 6, 74], "def": [2, 6, 9], "interactive_view": [2, 9], "visual": [2, 9], "v": [2, 5, 7, 9, 19, 27, 53, 55, 58, 59, 62, 77, 78], "viewer": [2, 9, 77], "ngl": [2, 9], "resiz": [2, 9], "widget": [2, 9], "_remote_cal": [2, 9], "setsiz": [2, 9], "target": [2, 7, 9, 23], "arg": [2, 9, 10, 27, 42, 48, 59, 61, 62, 65, 77], "300px": [2, 9], "center": [2, 4, 5, 6, 7, 9, 53, 54, 62, 77, 83], "1": [2, 4, 5, 6, 7, 9, 18, 19, 20, 22, 23, 32, 33, 34, 35, 41, 46, 48, 50, 53, 55, 58, 59, 61, 62, 63, 65, 71, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84], "cu": [2, 74], "pbc": [2, 6, 7, 12, 14, 19, 33, 34, 50, 51, 65, 74, 77], "ll": 2, "lennard": [2, 48, 71, 77], "jone": [2, 48, 71, 77], "lennardjonescut": [2, 48], "pair_potenti": 2, "pairpotenti": [2, 22, 48], "reference_st": 2, "atomic_numb": [2, 18, 19, 20], "cu_num": 2, "sigma": [2, 32, 48, 62, 71, 77], "2": [2, 4, 5, 6, 7, 9, 19, 20, 27, 35, 46, 48, 53, 55, 58, 59, 62, 63, 65, 71, 72, 74, 77, 78, 80, 83, 84], "map": [2, 31, 53, 74], "copper": 2, "pair": [2, 12, 18, 19, 20, 22, 25, 27, 31, 32, 41, 48, 50, 71, 74, 77, 81, 82, 83], "epsilon": [2, 32, 48, 50, 63, 71, 77], "sensibl": 2, "equilibrium": [2, 6, 27, 46, 53, 64, 71, 77], "assert_allclos": 2, "latex": 2, "e_": 2, "pot": 2, "get_potential_energi": [2, 6, 9, 12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 62, 65, 77], "neg": 2, "assert": 2, "get_forc": [2, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 62, 65, 77], "atol": [2, 12, 19, 22, 25, 31, 48, 50, 55], "3e": 2, "889": 2, "measure_triclinic_elastic_const": [2, 55], "full": [2, 3, 6, 14, 18, 53, 55, 62, 69, 71, 77], "hook": 2, "tensor": [2, 11, 12, 19, 22, 25, 31, 48, 50, 55, 62, 77], "finit": [2, 3, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 59, 65, 75], "fit_elastic_const": [2, 6, 55], "least": [2, 41, 53, 62, 76], "squar": [2, 22, 32, 53, 62], "full_3x3x3x3_to_voigt_6x6": [2, 9, 55], "c_finite_differ": 2, "c_least_squar": 2, "_": [2, 18, 19, 27, 59], "verbos": [2, 5, 12, 14, 19, 22, 25, 31, 33, 34, 42, 45, 46, 48, 50, 51, 53, 55, 62, 65], "fals": [2, 6, 7, 12, 14, 19, 22, 23, 25, 31, 33, 34, 38, 46, 48, 50, 51, 53, 55, 59, 61, 62, 65, 69, 72, 73, 74, 77, 80, 84], "plot": [2, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 62, 65, 77, 84, 85], "pyplot": [2, 6, 55, 62, 84, 85], "plt": [2, 6, 53, 62, 84, 85], "spy_const": 2, "imshow": 2, "cmap": 2, "rdpu": 2, "interpol": 2, "none": [2, 11, 12, 14, 15, 19, 20, 22, 23, 25, 31, 32, 33, 34, 35, 37, 38, 42, 45, 46, 48, 50, 51, 53, 55, 59, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 75, 77, 80], "label": [2, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 71], "full_lik": 2, "dtype": [2, 69, 74, 77, 83], "lambda": [2, 46, 65], "arang": [2, 74], "mu": [2, 18, 19, 65], "max_c": 2, "max": [2, 12, 19, 22, 25, 31, 48, 50, 55, 77], "shape": [2, 12, 19, 20, 25, 48, 50, 53, 62, 74, 77, 80], "j": [2, 6, 9, 10, 14, 19, 30, 31, 48, 50, 53, 55, 58, 59, 62, 63, 64, 65, 70, 74, 77, 83], "white": 2, "els": [2, 6, 22, 25, 48, 53, 63, 77, 80], "black": 2, "numer": [2, 3, 7, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 66, 73], "ab": [2, 28, 29], "1e": [2, 6, 12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 53, 55, 59, 65, 66, 75], "sim": 2, "annot": 2, "horizontalalign": 2, "verticalalign": 2, "set_xtick": [2, 6], "set_ytick": [2, 6], "set_xticklabel": 2, "set_yticklabel": 2, "fig": [2, 6], "subplot": [2, 6, 53, 62], "figsiz": 2, "set_titl": [2, 6], "actual": [2, 62, 78, 83], "therefor": [2, 74, 77], "directli": [2, 80, 81], "get_properti": [2, 9, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "elastic_const": [2, 12, 22, 25, 31, 48, 50], "evalu": [2, 33, 34, 38, 55, 62, 77], "non": [2, 11, 12, 19, 22, 25, 27, 31, 33, 34, 44, 45, 46, 48, 50, 53, 55, 58, 59, 71, 75, 77, 78], "affin": [2, 9, 11, 12, 19, 22, 25, 31, 48, 50, 55, 75], "mode": [2, 5, 23, 38, 53, 62, 73, 77, 78, 80], "random": [2, 18, 74, 77], "our": [2, 6, 53], "mimic": 2, "glassi": 2, "read": [2, 7, 9, 12, 14, 18, 19, 20, 22, 25, 31, 33, 34, 48, 50, 51, 53, 65, 69, 71, 77, 84, 85], "pathlib": 2, "path": [2, 3, 14, 53, 69, 79, 85], "data_path": 2, "cuzr_glass_460_atom": 2, "gz": 2, "zrcu": [2, 18], "onecolumn": [2, 18], "2244": 2, "minim": [2, 50, 53, 59, 62], "procedur": 2, "argument": [2, 12, 14, 19, 25, 50, 51, 53, 55, 59, 62, 65, 67, 72, 77, 83, 85], "delta": [2, 18, 19, 53, 55, 80], "increment": [2, 55, 62, 66, 75], "c_affin": 2, "c_relax": 2, "adjust": [2, 7, 77, 78], "precis": [2, 58, 59], "One": [2, 5, 62], "significantli": 2, "reduc": [2, 6, 77], "intern": [2, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 55, 65, 77], "reduct": 2, "stop": [2, 12, 14, 19, 20, 22, 25, 31, 48, 50, 51, 55, 65, 79], "criterion": [2, 77], "ideal": [2, 5, 62, 65, 77], "lower": [2, 7, 50, 78], "higher": [2, 12], "demonstr": 2, "purpos": [2, 12, 14, 18, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 65, 77, 81], "crack": [3, 4, 60, 64, 65], "new": [3, 5, 14, 18, 45, 46, 53, 62, 77, 78], "area": [3, 6, 78], "split": 3, "apart": [3, 41], "fracture_mechan": [3, 6], "linear": [3, 6, 14, 55, 59, 60, 62, 65, 77], "tip": [3, 6, 60, 62, 64, 65], "anisotropi": [3, 60], "been": [3, 7, 12, 14, 19, 20, 22, 25, 31, 33, 34, 48, 50, 51, 55, 65, 77], "quantifi": 3, "trap": 3, "pin": 3, "discret": [3, 59], "compar": [3, 14, 53], "experiment": [3, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "measur": [3, 11, 12, 19, 22, 25, 31, 48, 50, 55, 62, 75, 85], "speed": [3, 6, 7, 53, 65, 78, 79], "silicon": [3, 6, 7, 9, 85], "quasi": [3, 4], "static": [3, 4, 22, 74], "link": [3, 41, 53], "final": [3, 7, 27, 33, 34, 35, 53], "flexibl": [3, 5, 62], "propos": 3, "sinclair": [3, 62], "domain": [3, 59, 64, 81], "coupl": [3, 5, 7, 78], "approach": [3, 13, 53], "give": [3, 6, 7, 27, 77], "scheme": [3, 59], "continu": [3, 7, 57, 62, 63], "usag": [3, 4, 77, 78, 82], "build": [3, 4, 5, 40, 41, 53, 83], "initi": [3, 4, 14, 22, 27, 33, 34, 40, 41, 42, 48, 53, 55, 59, 62, 69, 74, 77], "util": [4, 33, 34, 81, 82, 83, 84], "problem": [4, 55, 59], "setup": [4, 6, 9, 22], "crystallin": [4, 50], "second": [4, 9, 12, 19, 22, 25, 32, 48, 50, 53, 59, 71, 74, 77, 81], "deriv": [4, 7, 9, 12, 18, 19, 22, 23, 25, 27, 31, 32, 48, 50, 55, 62, 75, 77, 81], "amorph": [4, 9, 48, 84, 85], "plastic": [4, 81], "cylindr": [4, 5, 62], "disloc": [4, 5, 81], "bodi": [4, 5, 6, 8, 25, 31, 32, 81], "111": [4, 5, 6, 23], "110": [4, 5, 6, 23], "screw": [4, 5, 53], "edg": [4, 5, 53], "mix": [4, 5, 12, 19, 20, 23, 25, 30, 48, 50, 71, 77], "100": [4, 5, 6, 7, 18, 23, 33, 34, 45, 53, 57, 71, 74, 78, 84], "junction": [4, 5], "001": [4, 5, 12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 55, 62, 65, 71, 77], "face": [4, 5], "perfect": [4, 5, 53], "dissoci": [4, 5, 53], "diamond": [4, 5, 6, 7, 61], "60": [4, 5], "degre": [4, 5, 9, 12, 19, 22, 25, 31, 48, 50, 55, 62, 77, 78], "fractur": [4, 62, 81], "tribologi": [4, 78, 81], "pressur": [4, 78], "equilibr": [4, 78], "restart": [4, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 78], "slide": [4, 78], "larg": [5, 53, 79], "irrevers": 5, "carri": [5, 62, 64], "extend": [5, 14, 33, 34, 53, 71, 77], "movement": [5, 53], "construct": [5, 22, 31, 33, 34, 48, 53, 59, 71, 74], "compact": 5, "kink": [5, 53, 62], "rather": [5, 7], "deep": 5, "knowledg": 5, "theori": [5, 14, 58], "hand": [5, 59], "experi": 5, "challeng": 5, "peopl": 5, "familiar": 5, "attempt": 5, "friendli": 5, "enabl": [5, 6, 33, 34, 77], "eas": 5, "cubiccrystaldisloc": [5, 53], "user": [5, 12, 19, 22, 25, 31, 48, 50, 55, 77], "choos": [5, 7], "interest": 5, "easili": [5, 12, 19, 22, 25, 31, 48, 50, 55], "pip": [5, 81], "pytest": [5, 81], "repositori": 5, "follow": [5, 7, 9, 12, 14, 19, 22, 25, 27, 31, 33, 34, 48, 50, 51, 53, 59, 62, 65, 71, 77, 78, 83], "ssssssssssssss": 5, "ssssssss": 5, "stand": 5, "reason": 5, "behind": [5, 65], "onc": [5, 6, 27, 41, 45, 78], "abl": 5, "dure": [5, 7, 46, 52, 62, 77], "develop": 5, "idea": [5, 14], "check": [5, 12, 14, 19, 22, 25, 31, 33, 34, 45, 48, 50, 51, 53, 55, 65, 69, 71, 74, 77], "dxa": [5, 53], "intend": 5, "interfac": [5, 7, 12, 40, 42, 58, 59], "safe": 5, "ignor": [5, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77, 80], "analys": [6, 53], "unit": [6, 7, 9, 12, 14, 19, 25, 50, 51, 53, 55, 58, 59, 62, 65, 71, 77, 78], "constraint": [6, 7, 53, 62, 77, 78], "expcellfilt": 6, "precon": [6, 62], "preconlbfg": 6, "show_as": 6, "cubiccrystalcrack": [6, 62], "cluster": [6, 33, 34, 35, 37, 38, 42, 44, 45, 46, 53, 62], "set_group": [6, 61], "inadvertendli": 6, "stilling": [6, 7, 9, 29, 32], "weber": [6, 7, 9, 29, 32], "imsw": 6, "wa": [6, 40, 41, 81], "accident": 6, "doubl": [6, 45, 53, 74], "brittl": [6, 62, 65], "find": [6, 44, 45, 46, 53, 62, 74, 77], "perform": [6, 7, 12, 14, 19, 25, 33, 34, 38, 50, 51, 53, 62, 65, 76, 78], "filter": 6, "precondit": 6, "doe": [6, 55, 77], "still": [6, 59], "robust": 6, "quickli": 6, "calcual": 6, "forward": 6, "el": [6, 23, 61], "ecf": 6, "opt": 6, "smax": 6, "09": 6, "lbfg": 6, "133": 6, "userwarn": 6, "benefit": 6, "standard": [6, 14, 18, 55, 62, 77], "precondition": [6, 12, 19, 22, 25, 31, 48, 50, 55], "henc": 6, "disabl": 6, "re": 6, "explicitli": [6, 7, 62], "kwarg": [6, 12, 14, 19, 22, 23, 25, 31, 33, 34, 42, 48, 50, 51, 53, 55, 59, 61, 65, 72, 77], "a0": [6, 23, 27, 53, 61, 77], "next": [6, 7, 53], "c_err": [6, 55], "18433656e": 6, "05309496e": 6, "32979590e": 6, "97563406e": 6, "87437477e": 6, "4615167357166": 6, "647086489317546": 6, "9997411342093212": 6, "257424": 6, "13682864e": 6, "40632635e": 6, "89079644e": 6, "30322868e": 6, "640152889484874": 6, "764431020075705": 6, "9982534274183545": 6, "322312": 6, "64015288948469": 6, "7644310200754734": 6, "998253427418355": 6, "43911515": 6, "19994966": 6, "16236289": 6, "2885839": 6, "17710649364383": 6, "285752508674578": 6, "9998224896560226": 6, "737603": 6, "extract": [6, 53], "convert": [6, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 62, 64, 65], "64015288948479": 6, "remain": [6, 27], "ingredi": 6, "fly": 6, "adapticecont": 6, "branch": 6, "merg": [6, 7, 20], "find_surface_energi": 6, "vacuum": [6, 7, 23, 58, 59, 62, 65, 67, 77, 83], "1j": 6, "builder": 6, "startswith": 6, "bodycenteredcub": 6, "lattice_build": 6, "elif": 6, "untest": 6, "append": [6, 7, 77, 78], "unsupport": 6, "orthogon": [6, 53, 55, 78], "endswith": 6, "option": [6, 10, 12, 14, 19, 22, 25, 31, 48, 50, 51, 53, 55, 57, 59, 62, 65, 67, 71, 74, 76, 77, 79, 80, 81], "slab": [6, 7, 62, 67], "latticeconst": [6, 7], "get_cel": [6, 7, 77, 78], "normal": [6, 7, 27, 53, 58, 62, 77, 78], "copi": [6, 7, 45, 62, 77], "set_cel": [6, 77], "lbfgslinesearch": 6, "opt_bulk": 6, "opt_slab": 6, "ebulk": 6, "eslab": 6, "gamma_as": 6, "ase_unit": 6, "gamma_si": 6, "surface_energi": [6, 62], "diamond111": 6, "416": 6, "313600": 6, "403": 6, "303800": 6, "proce": 6, "usual": [6, 71], "content": 6, "would": [6, 77], "param": [6, 58, 62], "script": [6, 7, 55, 71], "quasistatic_crack": 6, "crack_surfac": [6, 61, 62], "crack_front": [6, 61, 62], "crack_tip": 6, "56": [6, 71], "skin_x": [6, 61], "skin_i": [6, 61], "cryst": [6, 61, 62], "cfg": [6, 9, 84, 85], "posit": [6, 7, 9, 12, 14, 19, 25, 31, 33, 34, 45, 50, 51, 53, 55, 59, 62, 64, 65, 71, 74, 77, 78], "r0": [6, 23, 27, 32, 48, 62], "sum": [6, 9, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 58, 59, 63, 65, 74, 83], "get_posit": [6, 7, 77], "len": [6, 7, 9, 12, 19, 50, 51, 53, 62, 64, 65, 74, 77, 83, 84], "tip_x0": 6, "tip_y0": 6, "tip_z0": 6, "651528178589903": 6, "406681360668651": 6, "either": [6, 12, 19, 22, 25, 52, 55, 59, 74, 77], "three": [6, 19, 22, 25, 31, 32, 48, 50, 55, 62, 74, 77, 83], "6x6": [6, 55, 62], "stiff": [6, 27, 55], "matrix": [6, 11, 12, 19, 22, 25, 31, 48, 50, 53, 55, 62, 66, 74, 75, 77], "frame": [6, 55, 62], "specimen": 6, "crk": [6, 62], "griffith": [6, 62], "estim": [6, 22, 55, 62], "critic": [6, 7, 62, 78], "intens": [6, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 62, 65], "factor": [6, 7, 12, 14, 19, 22, 25, 31, 48, 50, 53, 55, 62, 77, 78], "becom": [6, 74, 77], "thermodynam": 6, "favour": 6, "k1g": [6, 62], "137": 6, "7212872906663": 6, "everyth": 6, "centr": [6, 62], "middl": [6, 7, 77], "tip_x": [6, 64], "diagon": [6, 12, 19, 22, 25, 31, 48, 50, 55, 62], "tip_i": [6, 64], "set_pbc": [6, 7, 77], "k1": 6, "ux": [6, 62], "ui": [6, 62], "notch": 6, "enough": 6, "oldr": 6, "ax1": 6, "ax2": 6, "scatter": [6, 62], "50": [6, 57, 62], "group": [6, 45, 77, 78], "quiver": 6, "set_aspect": 6, "equal": [6, 74], "set_xlim": 6, "set_ylim": 6, "rel": [7, 58, 59, 62, 77], "anoth": [7, 14, 77], "encount": 7, "friction": 7, "adhes": 7, "molecular": [7, 74, 77], "dynam": [7, 12, 19, 22, 25, 31, 48, 50, 65, 74, 77], "volum": [7, 52, 53, 57, 59, 64, 75, 77], "tribolog": 7, "routin": [7, 23, 40, 55, 81], "gain": 7, "insight": 7, "wear": 7, "pressurecoupl": 7, "veloc": [7, 71, 77], "fast": [7, 78], "prior": [7, 55], "afterward": [7, 33, 34], "pastewka": [7, 48, 50, 78], "inertia": [7, 77], "exemplari": 7, "slab1": 7, "slab2": 7, "them": [7, 14, 33, 34, 71, 77], "remov": [7, 27, 52, 54, 77], "lowest": 7, "mask": [7, 53, 62, 64, 67, 74, 77, 78], "bottom_mask": [7, 78], "topmost": 7, "upper": [7, 12, 19, 22, 25, 31, 48, 50, 55, 78], "treat": [7, 33, 34], "rigidli": [7, 62], "top_mask": [7, 78], "rigid": [7, 77, 78], "adapt": [7, 55], "reus": [7, 41], "subsequ": [7, 62], "savetxt": 7, "txt": [7, 53], "specifi": [7, 12, 19, 20, 22, 25, 31, 41, 45, 48, 50, 53, 55, 57, 58, 62, 71, 72, 74, 77], "md": [7, 62, 77, 78], "A": [7, 11, 12, 14, 18, 19, 20, 22, 25, 31, 32, 33, 34, 40, 41, 48, 50, 51, 53, 55, 58, 62, 65, 71, 74, 76, 77, 78, 84, 85], "langevin": [7, 78], "thermostat": [7, 78], "neither": 7, "nor": 7, "motion": [7, 54], "simplic": 7, "thermal": [7, 78], "sens": [7, 69], "dedic": 7, "dt": [7, 62, 65], "166": 7, "m_factor": [7, 78], "lid": [7, 78], "mass": [7, 12, 18, 19, 20, 22, 25, 31, 48, 50, 54, 77, 78], "expens": [7, 41], "pdir": [7, 78], "index": [7, 20, 25, 38, 40, 41, 44, 45, 46, 53, 74, 77, 78, 81, 83], "p": [7, 23, 27, 30, 62, 63, 78], "yet": 7, "vdir": [7, 78], "happen": 7, "t": [7, 12, 14, 19, 25, 50, 51, 58, 59, 62, 65, 74, 77, 83], "300": 7, "temperatur": [7, 12, 19, 22, 25, 31, 48, 50, 58, 59, 77, 78], "k": [7, 9, 22, 27, 31, 32, 48, 55, 58, 59, 62, 65, 74, 77, 78], "t_langevin": 7, "gamma_langevin": 7, "t_integr": 7, "steps_integr": [7, 78], "int": [7, 10, 12, 19, 20, 22, 25, 31, 33, 34, 38, 40, 41, 44, 45, 46, 48, 50, 53, 55, 57, 59, 62, 65, 71, 74, 76, 77, 78], "attach": [7, 12, 14, 19, 25, 42, 46, 50, 51, 53, 65, 77, 78], "damp": [7, 78], "typic": [7, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "minimum": [7, 74, 76, 77], "twice": [7, 59, 83], "stillinger_weber_prb_31_5262_si": [7, 9], "pc": 7, "velocitydistribut": 7, "maxwellboltzmanndistribut": 7, "fixedmasscriticaldamp": [7, 78], "slider": [7, 78], "slidewithnormalpressurecuboidcel": [7, 78], "set_constraint": [7, 65, 77], "temperature_k": 7, "clear": [7, 12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "momenta": [7, 77, 78], "otherwis": [7, 55, 59, 77], "awai": [7, 58], "set_calcul": [7, 23, 77], "integr": [7, 64, 78], "trajectori": [7, 52, 62], "log": [7, 23, 55, 73, 78], "track": 7, "current": [7, 12, 14, 18, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 62, 64, 65, 77], "statu": [7, 73], "term": [7, 12, 19, 20, 22, 25, 31, 48, 50, 53, 58], "height": [7, 62], "shear": [7, 52, 55, 62, 65, 78], "etc": [7, 75], "slidelog": [7, 78], "temp": 7, "zero": [7, 12, 19, 22, 25, 27, 31, 32, 48, 50, 51, 55, 59, 63, 65, 77], "middle_mask": [7, 78], "tdir": [7, 78], "gamma": [7, 18, 19, 53, 58, 78], "fixcm": 7, "equilibrate_pressure_01": 7, "traj": [7, 52, 54], "logger": [7, 15, 78], "log_handl": [7, 78], "log_equilibrate_01": 7, "encod": [7, 23, 73], "utf": [7, 23, 73], "buffer": [7, 33, 34, 35, 45, 78], "slidelogg": [7, 78], "write_head": [7, 78], "header": [7, 20, 72, 73, 78], "close": [7, 53, 58, 78], "previou": [7, 62], "correct": [7, 12, 19, 22, 25, 31, 48, 50, 53, 55, 77], "loadtxt": [7, 72], "astyp": 7, "bool": [7, 12, 14, 19, 22, 25, 33, 34, 38, 40, 41, 45, 46, 48, 50, 51, 53, 55, 59, 62, 65, 67, 71, 72, 75, 77], "again": [7, 78], "written": [7, 78], "equilibrate_pressure_02": 7, "r": [7, 9, 20, 22, 25, 27, 31, 32, 48, 50, 55, 58, 59, 62, 63, 64, 71, 77, 78, 83, 85], "step_offset": [7, 78], "log_equilibrate_02": 7, "after": [7, 12, 19, 22, 25, 31, 33, 34, 48, 50, 53, 55, 62, 67], "p_c": [7, 78], "empir": [7, 77, 78], "high": [7, 58], "frequenc": 7, "oscil": 7, "reset": [7, 12, 14, 19, 22, 25, 31, 33, 34, 42, 48, 50, 51, 65], "get_veloc": [7, 77], "set_veloc": [7, 77], "analogi": 7, "autodamp": [7, 78], "slide_01": 7, "log_slide_01": 7, "docstr": [7, 58], "slide_02": 7, "log_slide_02": 7, "o": [7, 55, 77, 83], "tmp_file": 7, "except": [7, 76, 77], "filenotfounderror": 7, "select": [8, 33, 34, 45, 77], "mani": [8, 25, 45, 57, 81], "kumagai": [8, 32], "sum_": [9, 18, 19, 31], "substack": [9, 19], "ij": [9, 11, 19, 27, 31, 32, 53, 55, 74, 83], "neq": [9, 19, 31], "u_2": [9, 53], "2_": 9, "u_": [9, 18, 19, 55], "text": [9, 18, 69, 85], "xi_": 9, "xi": [9, 25, 27, 32], "ik": [9, 27, 32, 74], "jk": [9, 32, 74], "m\u00fcser": 9, "grie\u00dfer": 9, "On": [9, 62], "respect": [9, 19, 25, 57, 62, 75, 77, 83], "freedom": [9, 55, 62, 77, 78], "explicit": 9, "represent": [9, 12, 19, 55, 77], "asi": [9, 85], "parametr": 9, "kumagai_comp_mat_sci_39_si": 9, "markdown": 9, "cohes": [9, 64], "ev": [9, 50, 53, 55, 62, 71, 77], "born": [9, 12, 19, 22, 25, 31, 32, 48, 50], "elastic_moduli": [9, 55], "without": [9, 16, 33, 34], "nonaffin": [9, 75], "born_const": [9, 12, 22, 25, 31, 48, 50], "isotrop": [9, 62], "nu": [9, 18, 19, 55, 62], "young": [9, 55, 62], "modulu": [9, 55, 62], "poisson": [9, 55, 58, 59, 62], "ey": [9, 74], "170": 9, "212": 9, "replac": [9, 16, 18, 45, 53], "tersoff": [9, 30, 32], "brenner": [9, 30, 32], "lookup": 9, "tabl": [9, 18], "erhart": 9, "alb": 9, "dr": [10, 74], "nbin": 10, "distribut": [10, 50, 57, 58, 59, 74, 77, 80, 81, 82], "list": [10, 11, 12, 14, 19, 22, 23, 25, 31, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 51, 53, 55, 57, 62, 65, 67, 70, 71, 72, 74, 77, 81, 82, 84], "array_lik": [10, 12, 18, 19, 20, 22, 25, 31, 48, 50, 55, 62, 64, 67, 70, 74, 76], "bin": [10, 74, 76, 84], "histogram": [10, 74, 84], "float": [10, 12, 19, 20, 22, 25, 31, 41, 46, 48, 50, 53, 55, 58, 59, 62, 64, 66, 67, 71, 74, 75, 77, 78, 79], "shorter": [10, 80], "2_min": 11, "falk": 11, "langer": 11, "phy": [11, 20, 48, 50, 53, 55, 79], "rev": [11, 20, 48, 79], "57": 11, "7192": 11, "1998": 11, "get_xij": 11, "nat": [11, 74], "i_now": 11, "dr_now": 11, "dr_old": 11, "x_": 11, "get_yij": 11, "y_": 11, "array_invers": 11, "invers": [11, 12, 19, 22, 25, 31, 48, 50, 55], "each": [11, 12, 19, 20, 22, 25, 31, 33, 34, 46, 48, 50, 53, 55, 57, 58, 59, 62, 71, 72, 74, 77, 78, 83], "matric": [11, 83], "faster": [11, 72, 77], "inv": [11, 55], "get_delta_plus_epsilon_dgesv": 11, "delta_ij": 11, "epsilon_ij": 11, "get_delta_plus_epsilon": 11, "get_d_square_min": 11, "atoms_now": 11, "atoms_old": 11, "j_now": 11, "delta_plus_epsilon": 11, "matscipycalcul": [12, 19, 25, 31, 48, 50], "ignore_bad_restart_fil": [12, 14, 19, 25, 50, 51, 65], "daughter": 12, "extra": [12, 41, 46], "hessian": [12, 19, 22, 25, 27, 31, 32, 48, 50, 55, 66, 75], "dynamical_matrix": [12, 22, 25, 31, 48, 50], "nonaffine_forc": [12, 22, 25, 31, 48, 50], "stress_elastic_contribut": [12, 22, 48, 50], "birch_coeffici": [12, 22, 25, 31, 48, 50], "nonaffine_elastic_contribut": [12, 19, 22, 25, 31, 48, 50, 55], "perspect": 12, "sumcalcul": 12, "attribut": [12, 14, 19, 20, 22, 23, 25, 31, 33, 34, 48, 50, 51, 53, 59, 65, 74, 77, 78], "calculation_requir": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "export_properti": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "get_atom": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "get_charg": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "get_default_paramet": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "get_dipole_mo": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "get_magnetic_mo": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "get_stress": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 62, 65, 77], "read_atom": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "todict": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "system_chang": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "str": [12, 14, 18, 19, 22, 25, 31, 33, 34, 45, 46, 48, 50, 51, 55, 62, 65, 69, 70, 71, 72, 74, 77], "what": [12, 19, 50, 51, 65, 77], "combin": [12, 14, 19, 33, 34, 50, 51, 65, 71, 77], "dipol": [12, 19, 50, 51, 53, 65, 77], "charg": [12, 19, 22, 50, 51, 58, 59, 65, 71, 77], "magmom": [12, 19, 50, 51, 65, 77], "six": [12, 19, 50, 51, 65, 77], "initial_charg": [12, 14, 19, 50, 51, 65, 77], "initial_magmom": [12, 14, 19, 50, 51, 65, 77], "subclass": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "insert": [12, 19, 50, 51, 65, 77], "dictionari": [12, 14, 19, 22, 23, 25, 31, 33, 34, 41, 46, 48, 50, 51, 55, 62, 65, 71, 72, 74, 77], "dummi": [12, 19, 50, 51, 65], "self": [12, 14, 19, 22, 25, 31, 33, 34, 42, 44, 45, 46, 48, 50, 51, 53, 62, 65, 77], "miss": [12, 14, 19, 25, 50, 51, 53, 62, 65], "get_dynamical_matrix": [12, 19, 22, 25, 31, 48, 50], "weight": [12, 18, 19, 20, 22, 25, 31, 48, 50, 74, 76], "get_hessian": [12, 19, 22, 25, 31, 48, 50], "spars": [12, 19, 22, 25, 31, 48, 50, 55, 74, 83], "divide_by_mass": [12, 19, 22, 25, 31, 48, 50], "dimens": [12, 19, 25, 48, 50, 57, 71, 76, 80], "symmetr": [12, 19, 25, 48, 50, 77], "hermitian": [12, 19, 25, 48, 50], "dens": [12, 19, 22, 25, 31, 48, 50, 55], "block": [12, 19, 25, 48, 50, 71, 74], "global": [12, 15, 19, 22, 25, 31, 41, 48, 50, 53, 55, 66, 71, 74, 75, 77], "minima": [12, 19, 22, 25, 31, 48, 50, 55, 66, 75], "scipi": [12, 19, 53, 55, 59, 62, 74, 81], "per": [12, 19, 33, 34, 46, 53, 57, 58, 59, 62, 64, 72, 74, 77, 82], "divid": [12, 19, 50, 62, 77], "entri": [12, 19, 22, 25, 31, 48, 50, 55, 59, 62, 72, 77, 83], "m_i": [12, 19], "m_j": [12, 19], "bsr_matrix": [12, 19, 25, 74], "hessian_ncc": [12, 19], "ndarrai": [12, 19, 53, 57, 58, 59, 74, 76, 77, 78], "distances_nc": [12, 19], "get_born_elastic_const": [12, 19, 22, 25, 31, 48, 50], "get_stress_contribution_to_elastic_const": [12, 19, 22, 25, 31, 48, 50], "cauchi": [12, 19, 22, 25, 31, 48, 50], "get_birch_coeffici": [12, 19, 22, 25, 31, 48, 50], "birch": [12, 19, 22, 25, 31, 48, 50], "effect": [12, 19, 22, 25, 31, 48, 50, 53], "get_nonaffine_forc": [12, 19, 22, 25, 31, 48, 50], "cg_paramet": [12, 19, 22, 25, 31, 48, 50, 55], "callback": [12, 19, 22, 25, 31, 48, 50, 55, 59, 62], "maxit": [12, 19, 22, 25, 31, 48, 50, 55, 59], "tol": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 55, 65], "x0": [12, 19, 22, 25, 31, 48, 50, 53, 55, 59, 62], "contribut": [12, 18, 19, 22, 25, 31, 48, 50, 55, 62, 77, 83], "dict": [12, 14, 19, 22, 23, 25, 31, 33, 34, 41, 48, 50, 51, 55, 62, 65, 71, 72, 74, 77], "dictonari": [12, 19, 22, 25, 31, 48, 50, 55], "conjug": [12, 19, 22, 25, 31, 48, 50, 55], "solver": [12, 19, 22, 23, 25, 31, 48, 50, 55, 59], "guess": [12, 19, 22, 25, 31, 48, 50, 53, 55, 62], "toler": [12, 19, 22, 25, 31, 46, 48, 50, 53, 55, 59], "residu": [12, 19, 22, 25, 31, 48, 50, 55, 59, 62], "maximum": [12, 19, 22, 25, 31, 48, 50, 53, 55, 59, 79, 85], "even": [12, 19, 22, 25, 31, 48, 50, 53, 55, 77], "linearoper": [12, 19, 22, 25, 31, 48, 50, 55], "suppli": [12, 19, 22, 25, 31, 48, 50, 55, 77], "get_non_affine_contribution_to_elastic_const": [12, 19, 22, 25, 31, 48, 50], "eigenvalu": [12, 19, 22, 25, 31, 48, 50, 55, 77], "eigenvector": [12, 19, 22, 25, 31, 48, 50, 55], "pc_paramet": [12, 19, 22, 25, 31, 48, 50, 55], "deprec": [12, 14, 19, 22, 25, 31, 48, 50, 51, 65, 66, 77], "occur": [12, 19, 22, 25, 31, 48, 50, 54, 55, 77, 83], "bypass": [12, 19, 22, 25, 31, 48, 50, 55], "cg": [12, 19, 22, 25, 31, 48, 50, 55], "given": [12, 16, 19, 22, 25, 31, 33, 34, 41, 42, 45, 46, 48, 50, 52, 53, 55, 57, 62, 67, 71, 74, 77, 80], "ascend": [12, 19, 22, 25, 31, 48, 50, 55, 74], "incomplet": [12, 19, 22, 25, 31, 48, 50, 55], "lu": [12, 19, 22, 25, 31, 48, 50, 55], "decomposit": [12, 19, 22, 25, 31, 48, 50, 55], "drop_tol": [12, 19, 22, 25, 31, 48, 50, 55], "drop": [12, 19, 22, 25, 31, 48, 50, 55, 59], "fill_factor": [12, 19, 22, 25, 31, 48, 50, 55], "fill": [12, 19, 22, 25, 31, 37, 48, 50, 55, 57], "ratio": [12, 19, 22, 25, 31, 48, 50, 55, 62], "bound": [12, 19, 22, 25, 31, 48, 50, 55], "drop_rul": [12, 19, 22, 25, 31, 48, 50, 55], "comma": [12, 19, 22, 25, 31, 48, 50, 55], "string": [12, 19, 20, 22, 25, 31, 48, 50, 53, 55, 59, 72, 73, 74, 77, 83], "rule": [12, 19, 22, 25, 30, 31, 48, 50, 55], "permc_spec": [12, 19, 22, 25, 31, 48, 50, 55], "permut": [12, 19, 22, 25, 31, 48, 50, 55, 77], "column": [12, 19, 22, 25, 31, 46, 48, 50, 55, 59, 69, 71, 72], "sparsiti": [12, 19, 22, 25, 31, 48, 50, 55], "diag_pivot_thresh": [12, 19, 22, 25, 31, 48, 50, 55], "threshold": [12, 19, 22, 25, 31, 33, 34, 45, 46, 48, 50, 55], "pivot": [12, 19, 22, 25, 31, 48, 50, 55], "expert": [12, 19, 22, 25, 31, 48, 50, 55], "custom": [12, 19, 22, 25, 31, 48, 50, 55, 77], "supernod": [12, 19, 22, 25, 31, 48, 50, 55], "panel_s": [12, 19, 22, 25, 31, 48, 50, 55], "panel": [12, 19, 22, 25, 31, 48, 50, 55], "superlu": [12, 19, 22, 25, 31, 48, 50, 55], "get_numerical_non_affine_forc": [12, 19, 22, 25, 31, 48, 50], "numerical_nonaffine_forc": [12, 19, 22, 25, 31, 48, 50, 75], "central": [12, 19, 22, 25, 31, 48, 50, 66, 75], "done": [12, 19, 22, 25, 31, 37, 48, 50, 75, 83], "rescal": [12, 19, 22, 25, 31, 48, 50, 62, 75], "prefix": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 71], "don": [12, 14, 19, 25, 50, 51, 65, 77], "broken": [12, 14, 19, 25, 50, 51, 62, 65], "purepath": [12, 14, 19, 25, 50, 51, 65], "Not": [12, 14, 19, 25, 50, 51, 65], "band_structur": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "band": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "calculate_numerical_forc": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "calculate_numerical_stress": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "voigt": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 55, 65, 75, 77], "calculate_properti": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "check_stat": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "default_paramet": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "discard_results_on_any_chang": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "whether": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 62, 65, 77], "purg": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "magnet": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "moment": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "project": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 81], "onto": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 83], "force_consist": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "allow_calcul": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "ignored_chang": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "cach": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 65], "implemented_properti": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "handl": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77, 78, 83], "rais": [12, 14, 19, 20, 22, 25, 31, 33, 34, 41, 48, 50, 51, 53, 65, 71, 77, 78], "readerror": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "corrupt": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "messag": [12, 14, 19, 22, 25, 31, 33, 34, 45, 46, 48, 50, 51, 65], "succ": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "must": [12, 14, 19, 22, 25, 31, 33, 34, 41, 48, 50, 51, 53, 59, 65, 67, 69, 74, 76, 77], "state": [12, 14, 19, 22, 23, 25, 31, 33, 34, 48, 50, 51, 53, 62, 65], "fileiocalcul": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "read_result": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "classmethod": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 77], "key1": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "value1": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "key2": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "value2": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "chaneg": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "decid": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "harmless": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "special": [12, 14, 19, 22, 25, 31, 33, 34, 45, 46, 48, 50, 51, 65], "keyword": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 53, 65, 72, 77], "set_label": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "abc": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65, 74], "dir1": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "skip_default": [12, 14, 19, 22, 25, 31, 33, 34, 48, 50, 51, 65], "committeeuncertainti": 14, "machin": [14, 59], "learn": 14, "mlip": 14, "individu": [14, 46, 74, 77], "member": [14, 83], "train": 14, "instanc": [14, 37, 55, 62, 74, 78], "uncertainti": 14, "deviat": [14, 77], "musil": 14, "chem": 14, "906": 14, "915": 14, "2019": [14, 58, 59], "http": [14, 20, 53, 55, 59, 70, 77, 81], "pub": 14, "ac": [14, 84], "doi": [14, 53], "1021": 14, "jctc": 14, "8b00959": 14, "varianc": [14, 80], "committeememb": 14, "calibr": 14, "sub": [14, 16, 44, 45, 46], "sampl": [14, 16, 57, 79], "alpha": [14, 20, 22, 53, 62, 77], "calibrated_for": 14, "id_count": 14, "counter": 14, "appear": [14, 74], "id_to_atom": 14, "id": [14, 66, 69, 71, 74, 75], "validation_set": 14, "add_memb": 14, "set_internal_validation_set": 14, "appearance_threshold": 14, "valid": [14, 25, 55], "prop": [14, 22], "kei": [14, 23, 30, 46, 62, 72, 77], "locat": [14, 15, 65], "properli": 14, "avail": [14, 20, 55, 77], "associ": [14, 55], "is_calibrated_for": 14, "scale_uncertainti": 14, "training_data": 14, "lightweight": 14, "set_training_data": 14, "is_sample_in_atom": 14, "create_logg": 15, "log_fil": 15, "nice": 15, "formatt": 15, "handler": 15, "set_log": 15, "subsampl": 16, "output_fil": 16, "num_subset": 16, "num_subset_sampl": 16, "keep_isolated_atom": 16, "draw": [16, 57], "average_potenti": 18, "concentr": [18, 58, 59], "rep": [18, 19, 20, 77], "kind": [18, 19, 20, 53], "avg_atom": 18, "999": 18, "crystal_structur": [18, 20], "unknown": 18, "lattice_const": [18, 20], "approxim": [18, 55, 59], "ref": [18, 62], "singl": [18, 33, 34, 41, 45, 46, 53, 55, 58, 74, 77, 83], "fictiou": 18, "yield": [18, 55, 77], "reproduc": 18, "tabul": [18, 20, 72], "just": [18, 77, 83], "pure": [18, 20], "phi_": [18, 19], "aa": [18, 71, 77], "r_": [18, 19, 27, 32], "n_t": 18, "xy": [18, 62, 77], "quad": 18, "rho_": [18, 19], "g_a": 18, "c_x": 18, "g_x": 18, "electron": [18, 19, 20], "densiti": [18, 19, 20, 58, 59, 84], "m_a": 18, "m_x": 18, "style": [18, 20, 69], "straightforward": 18, "eamparamet": [18, 20], "new_f": 18, "new_rep": 18, "sourc": [18, 20], "read_eam": [18, 20], "new_paramet": 18, "composit": 18, "join": [18, 46], "zip": [18, 62], "rstrip": 18, "write_eam": [18, 20], "equicomposit": 18, "varvenn": 18, "luqu": 18, "n\u00f6hring": 18, "curtin": 18, "physic": [18, 22, 45, 48, 81], "review": 18, "104201": 18, "2016": 18, "total": [18, 19, 33, 34, 38, 59, 74, 77, 80], "rho_nu": [18, 19], "g_": [18, 19], "equiv": [18, 19], "m_": [18, 19], "fn": [19, 70, 72], "free_energi": [19, 22, 25, 31, 48, 50, 65], "energy_virial_and_forc": 19, "atomic_numbers_i": 19, "i_n": [19, 74], "j_n": [19, 74], "dr_nc": [19, 74], "abs_dr_n": [19, 74], "virial": [19, 64], "abd_dr_n": 19, "epot": [19, 64], "virial_v": 19, "forces_": 19, "act": [19, 77], "calculate_hessian_matrix": 19, "mathcal": 19, "coordin": [19, 53, 57, 62, 63, 65, 74, 77, 83], "indic": [19, 40, 41, 45, 53, 58, 62, 66, 74, 75, 76, 77, 78, 83], "spatial": [19, 59, 80], "emb": 19, "delta_": [19, 27], "eight": 19, "t_1": 19, "t_2": 19, "t_3": 19, "t_4": 19, "t_5": 19, "t_6": 19, "t_7": 19, "t_8": 19, "row": [19, 59, 74, 78], "nonzero": 19, "atomic_mass": 20, "number_of_density_grid_point": 20, "number_of_distance_grid_point": 20, "density_grid_spac": 20, "distance_grid_spac": 20, "cover": 20, "empti": [20, 37, 59, 71, 74, 77], "metal": [20, 58, 71, 77], "grid": [20, 57, 59, 62, 80], "space": [20, 22, 57, 59, 82], "alia": 20, "count": [20, 57, 62, 67, 74, 76, 77, 79, 83], "occurr": 20, "sy": 20, "maxsiz": [20, 50], "valueerror": [20, 41, 53], "present": [20, 62, 67, 77], "eam_fil": 20, "There": [20, 77], "differnt": 20, "flavor": 20, "storag": 20, "subset": [20, 64], "sandia": 20, "gov": 20, "pair_eam": 20, "html": [20, 59, 77], "dynamo": 20, "funcfl": 20, "setfl": 20, "comment": [20, 71], "nb": 20, "mix_eam": 20, "rep_ab": 20, "beta": [20, 65], "interspeci": 20, "geometr": [20, 71, 77], "speci": [20, 58, 59, 71, 74], "kinf": 20, "arithmet": 20, "ponder": 20, "fb": 20, "fa": 20, "rep_a": 20, "rep_b": 20, "previous": 20, "pars": 20, "karg": 20, "fine": 20, "tune": 20, "alpha_a": 20, "alpha_b": 20, "f_ab": 20, "beta_00": 20, "beta_01": 20, "f_ba": 20, "beta_10": 20, "beta_11": 20, "parameters_mix": 20, "f_": 20, "rep_": 20, "zhou": 20, "johnson": 20, "h": [20, 27, 53, 62, 67, 71, 74, 77, 78, 83], "wadlei": 20, "69": 20, "144113": 20, "2004": [20, 65], "out_fil": 20, "summat": 22, "ewaldshortrang": 22, "cutoffinteract": [22, 48], "short": 22, "first_deriv": [22, 48, 50], "qi": [22, 48], "qj": [22, 48], "second_deriv": [22, 48, 50], "get_cutoff": [22, 25, 48, 50], "ewal": 22, "short_rang": 22, "accuraci": [22, 55], "kspace": 22, "determine_alpha": 22, "acc": 22, "determin": [22, 55, 62, 74, 77], "basi": [22, 53], "adopt": 22, "determine_nk": 22, "natom": [22, 35, 38, 46], "maxim": [22, 50], "reciproc": [22, 77], "determine_kc": 22, "nk": 22, "wave": [22, 65, 75], "integ": [22, 53, 62, 77], "triplet": [22, 25, 27, 31, 74], "rms_kspace": 22, "km": 22, "q2": 22, "rms_rspace": 22, "rc": [22, 48, 65], "real": [22, 62, 82], "allowed_wave_vector": 22, "prefactor": [22, 83], "self_energi": 22, "kspace_energi": 22, "po": [22, 53, 63, 71], "vol": 22, "first_derivative_kspac": 22, "stress_kspac": 22, "coulomb": [22, 71, 77], "reset_kspac": 22, "kspace_properti": 22, "recirproc": 22, "contributiom": 22, "naforc": 22, "restrict": [22, 25, 48, 50, 62], "dimension": [22, 25, 48, 50], "helper": [23, 69], "hidden": 23, "distinguish": 23, "latter": 23, "ones": [23, 53], "range_map": 23, "get_const": 23, "get_deriv": 23, "get_dict": 23, "get_lower_bound": 23, "get_upper_bound": 23, "get_vari": 23, "in_rang": 23, "set_arrai": [23, 77], "set_const": 23, "set_deriv": 23, "set_dict": 23, "set_range_deriv": 23, "set_vari": 23, "those": [23, 62, 74, 77], "par": 23, "cost_histori": 23, "minimal_cost": 23, "par_at_minimal_cost": 23, "residuals_histori": 23, "get_cohesive_energi": 23, "get_cost_funct": 23, "get_cost_histori": 23, "get_parameters_at_minimal_cost": 23, "get_residuals_histori": 23, "get_square_residu": 23, "optimize_ann": 23, "optimize_brut": 23, "optimize_leastsq": 23, "optimize_openopt": 23, "set_calculator_class": 23, "set_paramet": 23, "set_parameters_from_arrai": 23, "store_histori": 23, "_io": [23, 73], "textiowrapp": [23, 73], "stdout": [23, 73, 77], "interalg": 23, "combinedfit": 23, "get_residu": 23, "rotatingfit": 23, "pmax": 23, "penalti": 23, "func": [23, 57, 59, 69], "fitsinglepoint": 23, "w_energi": 23, "w_forc": 23, "w_stress": 23, "fitdim": 23, "d0": 23, "w_d0": 23, "w_r0": 23, "get_dist": [23, 77], "new_dim": 23, "ground": 23, "fitcubiccryst": 23, "ec": 23, "cp": 23, "sfe": 23, "w_ec": 23, "w_a0": 23, "w_b": 23, "w_c11": 23, "w_c12": 23, "w_c44": 23, "w_cp": 23, "w_sfe": 23, "ep": [23, 58, 59, 63, 77, 81], "ecoh_ref": 23, "get_c11": 23, "get_c44": 23, "get_cp": 23, "get_sf": 23, "get_lattice_const": [23, 53], "new_bulk": 23, "fittetragonalcryst": 23, "c0": [23, 77], "c_a": 23, "c13": 23, "c33": 23, "c66": 23, "w_c0": 23, "w_c_a": 23, "w_c13": 23, "w_c33": 23, "w_c66": 23, "get_c33": 23, "get_c66": 23, "get_d1": 23, "get_d2": 23, "get_d4": 23, "fithexagonalcryst": 23, "fitsurfac": 23, "esurf": 23, "w_esurf": 23, "get_surface_energi": 23, "fitsc": 23, "crystalstr": 23, "sc": [23, 61], "fitbcc": 23, "fitfcc": 23, "fitb2": 23, "b2": 23, "fitl1_0": 23, "l1_0": 23, "fitl1_2": 23, "l1_2": 23, "fitdiamond": 23, "dia": 23, "fitgraphit": 23, "gra": 23, "fitgraphen": 23, "grp": 23, "fitdiamond100": 23, "new_surfac": 23, "surfstr": 23, "fitdiamond110": 23, "fitdiamond111": 23, "atom_typ": [25, 74], "pair_typ": [25, 74], "d1f": 25, "d2f": 25, "d11f": 25, "d22f": 25, "d12f": 25, "d1g": 25, "d11g": 25, "d2g": 25, "d22g": 25, "d12g": 25, "neighbourhood": [25, 31, 74], "get_second_deriv": 25, "drda_pc": 25, "drdb_pc": 25, "i_p": [25, 74], "j_p": [25, 74], "r_p": [25, 32, 74], "r_pc": 25, "arbitrari": [25, 55, 71, 77], "absolut": [25, 28, 29, 55, 59, 74], "get_hessian_from_second_deriv": 25, "get_non_affine_forces_from_second_deriv": 25, "nicemanybodi": 25, "nicer": 25, "api": [25, 81], "abstract": [25, 31, 48, 74], "r_ij": [25, 63], "r_ik": 25, "ij_typ": 25, "ik_typ": 25, "init": [25, 59], "zeropair": [27, 32], "zerotriplet": 27, "harmonicbond": 27, "atyp": 27, "ptype": 27, "spring": [27, 48, 71, 77], "harmonicangl": [27, 32], "becaus": [27, 74], "mic": [27, 74, 77], "redefin": 27, "r_ij_c": 27, "r_ik_c": 27, "u_i": [27, 62], "v_i": 27, "express": 27, "_i": 27, "w_i": 27, "scalar": 27, "simpl": [27, 48, 52, 53, 59, 71, 77, 80, 83], "reader": [27, 78], "u_j": 27, "v_j": 27, "care": [27, 52, 74], "treatment": [27, 33, 34], "section": [27, 53], "_j": 27, "complex": [27, 74], "pair_index": 30, "maxval": 30, "triplet_index": 30, "mix_arithmet": 30, "mix_geometr": 30, "tersoffbrenn": 30, "abel": 30, "definit": [31, 32, 71, 77], "phi": [31, 32, 58, 77], "theta": [31, 32, 62, 77], "sum_xx_sum_ijk_tau_xx_mn": 31, "sum_xy_sum_ijk_tau_xy_mn": 31, "sum_x_sum_ijk_tau_ijx_mn": 31, "sum_x_sum_ijk_tau_ij_xor_x_mn": 31, "sum_ijk_tau_xy_mn": 31, "\u0278": 31, "r\u1d62\u2c7c\u00b2": [31, 32], "\u03be\u1d62\u2c7c": [31, 32], "rsq_p": 31, "xi_p": [31, 32], "\u2081\u0278": [31, 32], "\u2082\u0278": [31, 32], "\u2081\u2081\u0278": [31, 32], "\u2082\u2082\u0278": [31, 32], "\u2081\u2082\u0278": [31, 32], "\u03b8": 31, "r\u1d62\u2096\u00b2": [31, 32], "r\u2c7c\u2096\u00b2": [31, 32], "r1_p": 31, "r2_p": 31, "r3_p": 31, "\u2081\u03b8": [31, 32], "\u2082\u03b8": [31, 32], "\u2083\u03b8": [31, 32], "\u2081\u2081\u03b8": [31, 32], "\u2082\u2082\u03b8": [31, 32], "\u2083\u2083\u03b8": [31, 32], "\u2082\u2083\u03b8": [31, 32], "\u2081\u2083\u03b8": [31, 32], "\u2081\u2082\u03b8": [31, 32], "sum_ij_pi_ij_n": 31, "values_p": 31, "pi_": 31, "chi_": 31, "sum_ij_sum_x_pi_x_n": 31, "values_tq": 31, "chi_x": 31, "tr_p": 31, "values_t": 31, "values_txi": 31, "values_tx": 31, "distance_defin": 32, "cl": 32, "decor": 32, "transform": [32, 77, 80], "angle_distance_defin": 32, "zeroangl": 32, "r1": [32, 64], "r2": [32, 64], "r3": 32, "harmonicpair": 32, "harmon": [32, 71, 77], "k0": 32, "theta0": 32, "5707963267948966": 32, "rij": 32, "rik": 32, "rjk": 32, "lennardjon": 32, "inf": [32, 62], "bornmayercut": 32, "rho": 32, "mayer": 32, "shift": [32, 48, 53, 61, 62, 74], "stillingerweberpair": 32, "stillingerweberangl": 32, "kumagaipair": 32, "kumagaiangl": 32, "tersoffbrennerpair": 32, "tersoffbrennerangl": 32, "multiclusterforcemixingpotenti": [33, 34], "classical_calcul": [33, 34], "qm_calcul": [33, 34], "qm_cluster": [33, 34], "forced_qm_list": [33, 34], "change_bond": [33, 34], "calculate_error": [33, 34], "calculation_always_requir": [33, 34], "buffer_hop": [33, 34, 42, 45], "enable_check_st": [33, 34], "facilit": [33, 34, 42], "multipl": [33, 34, 53, 62, 78], "qm": [33, 34, 35, 42, 44, 45, 46, 53], "instac": [33, 34], "forcemixingpotenti": [33, 34], "potential_energi": [33, 34, 42, 46], "all_chang": [33, 34], "power": [33, 34, 50, 62], "mm_pot": [33, 34], "ae": [33, 34], "classic": [33, 34, 77], "flag": [33, 34, 46, 53, 69, 77], "carv": [33, 34, 45, 46], "enforc": [33, 34, 59], "topologi": [33, 34, 74, 81], "hop": [33, 34, 45, 46], "noth": [33, 34], "specif": [33, 34, 41, 74, 76, 81, 83], "meth": [33, 34], "emploi": [33, 34], "analyz": [33, 34], "independ": [33, 34, 77], "send": [33, 34], "qmmm": [33, 34, 37, 53], "accur": [33, 34], "produce_classical_result": [33, 34], "ot": [33, 34, 35, 38, 45, 46], "produce_qm_clust": [33, 34], "evaluate_qm_cluster_seri": [33, 34], "clusternumb": [33, 34], "qm_atom": [33, 34], "mark": [33, 34, 35, 62], "cluster_data": [33, 34], "combine_qm_mm_forc": [33, 34], "cluster_data_list": [33, 34], "mm": [33, 34, 53], "clusterdata": [33, 34, 35, 37], "attach_hybrid_data": [33, 34], "full_qm_atoms_mask": [33, 34], "quantm": [33, 34], "mmechan": [33, 34], "comprehens": [33, 34], "ooutput": [33, 34], "evaluate_error": [33, 34], "heavy_onli": [33, 34], "r_forc": [33, 34], "hybrid": [33, 34], "hydrogen": [33, 34, 35, 44, 45, 46, 53, 83], "set_qm_atom": [33, 34], "qm_list": [33, 34, 35], "certian": [33, 34], "throughout": [33, 34], "compute_stress": [33, 34], "viral": [33, 34], "theorem": [33, 34], "print_messag": [33, 34, 45], "limit": [33, 34, 45], "termin": [35, 45, 71], "cut": [35, 45, 48, 53, 78, 80], "off": [35, 45, 53, 58, 62, 78, 80], "inner": [35, 45], "get_cluster_data": 37, "mcfm_pot": 37, "being": [37, 78], "multiclusterforcemix": 37, "worker_populate_cluster_data": 38, "rank": 38, "nprocloc": 38, "atomic_clust": [38, 45], "clusterindex": 38, "qmcalcul": 38, "sharedlist": 38, "debug_qm_calcul": 38, "calcuat": 38, "tb": 38, "cpu": 38, "stuctur": 38, "mp": 38, "debug": 38, "neighbourlistbas": [40, 41], "date": [40, 41, 81], "clled": [40, 41], "sucesful": [40, 41], "get_neighbour": [40, 41], "neighbourlistmcfm": 41, "skin": 41, "hysteretic_break_factor": 41, "wrapper": 41, "aroud": 41, "neighbour_list": [41, 42, 44, 45, 46, 53, 62, 74, 83, 84], "search": [41, 62, 74, 79, 81, 85], "move": [41, 46, 52, 53, 62, 77], "rebuild": [41, 77], "connect": [41, 45, 69, 74], "do_upd": 41, "pairwis": [41, 50], "radii": 41, "runtimeerror": [41, 71, 77], "qmcluster": [42, 44, 45, 46], "special_atoms_list": [42, 46], "manag": [42, 44, 45, 46], "attach_neighbour_list": 42, "attach_flagging_modul": 42, "qmflaggingtool": [42, 46], "attach_clustering_modul": 42, "qmclusteringtool": [42, 45], "reset_energized_list": 42, "old_energized_atom": 42, "flaggingmodul": 42, "warmup": 42, "update_qm_region": [42, 46], "flagging_modul": 42, "carve_clust": [42, 45], "clustering_modul": 42, "core_qm_list": [42, 45], "baseqmclustertool": [44, 45, 46], "mediat": [44, 45, 46], "hold": 44, "find_neighbour": [44, 45, 46], "heavy_neighbour": [44, 45, 46], "hydrogen_neighbour": [44, 45, 46], "hydrogenate_clust": [44, 45, 46], "neigobur": [44, 45, 46], "compos": [44, 45, 46], "heavi": [44, 45, 46], "ion": [44, 45, 46, 58, 59], "oper": [44, 45, 46], "struct": [44, 45, 46], "dangl": [44, 45, 46], "origin": [44, 45, 46, 53, 55, 62, 77], "double_bonded_atoms_list": 45, "doubli": 45, "create_buffer_region": 45, "qm_atoms_list": 45, "activ": 45, "whole": [45, 46], "expand": 45, "buffer_list": 45, "terminal_atom": 45, "verg": 45, "cutoff_atoms_list": 45, "hydrogenate_dangling_bond": 45, "terminal_atoms_list": 45, "were": [45, 77], "replace_single_bond": 45, "terminal_atom_index": 45, "cutoff_atom_index": 45, "atomic_posit": 45, "replace_double_bond": 45, "include_special_atom": 45, "specialatomindex": 45, "molecul": [45, 69, 71, 74, 77, 83], "regio": [45, 46], "complete_aromatic_r": 45, "total_supplementary_terminal_atom": 45, "deal": 45, "aromat": 45, "ring": [45, 81, 82], "aromnat": 45, "create_cluster_from_mark": 45, "select_list": 45, "mesag": 45, "qm_flag_potential_energi": 46, "small_cluster_hop": 46, "only_heavi": 46, "ema_paramet": 46, "energy_cap": 46, "energy_increas": 46, "out": [46, 53, 62, 64, 76, 77], "threshhold": 46, "indivu": 46, "diension": 46, "enter": 46, "stai": 46, "later": 46, "expans": 46, "exponenti": 46, "cap": 46, "convininec": 46, "get_energized_list": 46, "data_arrai": 46, "property_str": 46, "hysteretic_toler": 46, "produc": [46, 53, 62], "th": [46, 50], "create_cluster_around_atom": 46, "atom_id": 46, "join_clust": 46, "overlap": [46, 74], "expand_clust": 46, "exponential_moving_averag": 46, "oldset": 46, "newset": 46, "update_avg_property_per_atom": 46, "avarag": 46, "hard": [48, 53], "lennardjonesquadrat": 48, "soft": [48, 53], "lennardjoneslinear": 48, "feneljcut": 48, "nonlinear": 48, "fene": 48, "bead": 48, "polym": 48, "lj": [48, 71, 77], "choic": 48, "contin": 48, "lennardjones84": 48, "c1": [48, 71, 77], "c2": [48, 77], "c3": [48, 77], "c4": 48, "cuzr": 48, "kobayashi": 48, "shinji": 48, "cu57zr43": 48, "journal": [48, 50], "societi": 48, "japan": 48, "48": 48, "1980": 48, "1147": 48, "1152": 48, "beestkramersanten": 48, "beest": 48, "kramer": 48, "van": 48, "santen": 48, "bk": 48, "buckingham": 48, "lett": [48, 78], "1990": 48, "seamless": [48, 50], "86": [48, 50], "075459": [48, 50], "2012": [48, 50], "inversepowerlawpotenti": 50, "na": 50, "q": [50, 64], "minsiz": 50, "smooth": 50, "law": [50, 62], "ipl": 50, "repuls": 50, "expon": 50, "particl": [50, 58, 71, 77], "distribtuion": 50, "paramt": 50, "lerner": 50, "522": 50, "119570": 50, "mix_siz": 50, "isiz": 50, "jsize": 50, "nonaddit": 50, "get_coeff": 50, "get_maxs": 50, "get_mins": 50, "ijsiz": 50, "m_l": 50, "m_m": 50, "supercel": 51, "supercellcalcul": 51, "relat": [52, 53], "homogen": 52, "get_shear_dist": 52, "lee": 52, "edward": 52, "removesimplesheardeform": 52, "proper": [52, 69], "instantan": 52, "flip": [52, 53], "make_screw_cyl": 53, "cylinder_r": 53, "hard_cor": 53, "l_extend": 53, "descript": [53, 59, 71, 73], "fixatom": 53, "creation": 53, "equival": [53, 77], "simplecubicfactori": 53, "disk": 53, "make_edge_cyl": 53, "plot_vitek": 53, "dislo": 53, "plot_ax": 53, "xyscal": 53, "vitek": 53, "graph": [53, 70], "differenti": 53, "show_neb_configur": 53, "imag": [53, 74, 77], "core_posit": 53, "neb": 53, "show_configur": 53, "fixed_mask": 53, "pot_path": 53, "make_barrier_configur": 53, "elastic_param": 53, "fixedatom": 53, "constrain": [53, 62, 77], "chosen": [53, 55], "disloc_ini": 53, "disloc_fin": 53, "make_screw_cyl_kink": 53, "kink_length": 53, "quadrupol": 53, "reference_straight_disloc": 53, "large_bulk": 53, "slice_long_dislo": 53, "kink_bulk": 53, "slice": 53, "sliced_kink": 53, "sliced_bulk": 53, "disloc_z_posit": 53, "compare_configur": 53, "dislo_ref": 53, "bulk_ref": 53, "print_info": 53, "remap": 53, "bulk_neighbour": 53, "neghbour": 53, "comparison": [53, 55, 62], "coreself": 53, "switch": 53, "statement": 53, "swtich": 53, "tupl": [53, 72, 74, 77, 83], "bulk_i": 53, "bulk_j": 53, "y0": [53, 62], "du": 53, "cost_funct": 53, "cost": 53, "minimis": 53, "config": [53, 55], "optimis": [53, 55], "fit_core_posit": 53, "dislo_imag": 53, "core_radiu": 53, "current_po": 53, "powel": [53, 62], "core_x": 53, "core_i": 53, "neigbbour": 53, "calcualt": 53, "core_po": 53, "fit_core_position_imag": 53, "screw_cyl_tetrahedr": 53, "scan_r": 53, "imp_symbol": 53, "tetrahedr": 53, "lattuc": 53, "elemnt": 53, "dislocatino": 53, "sign": 53, "predict": 53, "screw_cyl_octahedr": 53, "octahedr": 53, "bodycenteredcubictetrahedralfactori": 53, "factori": 53, "element_basi": 53, "calc_num_atom": 53, "xtal_nam": 53, "bcc_tetrahedr": 53, "bravais_basi": 53, "sequenc": [53, 55, 62, 77], "align": 53, "atoms_in_unit_cel": 53, "basis_factor": 53, "check_basis_volum": 53, "chop_toler": 53, "convert_to_natural_basi": 53, "miller": [53, 62], "natur": 53, "find_direct": 53, "find_ortho": 53, "idx": 53, "ortho": 53, "insid": [53, 77], "int_basi": 53, "inverse_basi": 53, "inverse_basis_factor": 53, "make_crystal_basi": 53, "make_list_of_atom": 53, "repeat": [53, 77], "make_unit_cel": 53, "print_directions_and_mil": 53, "process_el": 53, "put_atom": 53, "place": [53, 57, 77], "bodycenteredcubicoctahedralfactori": 53, "bcc_octahedr": 53, "dipole_displacement_angl": 53, "w_bulk": 53, "dislo_coord_left": 53, "dislo_coord_right": 53, "ud": 53, "voltera": 53, "get_u_img": 53, "n_img": 53, "n1_shift": 53, "n2_shift": 53, "displacemnt": 53, "make_screw_quadrupol": 53, "left_shift": 53, "right_shift": 53, "n1u": 53, "arrang": 53, "dsitanc": 53, "disoc": 53, "odd": 53, "main": [53, 58, 69], "disloc_quadrupol": 53, "coodrin": 53, "c_1": 53, "u_1": 53, "v_1": 53, "z_1": 53, "c_2": 53, "v_2": 53, "z_2": 53, "c_3": 53, "135": 53, "approx": 53, "89": [53, 71], "tilt": 53, "compomemt": 53, "cz1": 53, "cz2": 53, "3n": 53, "easi": 53, "typo": 53, "ventelon": 53, "willaim": 53, "peierl": 53, "fe": 53, "principl": 53, "versu": 53, "aid": 53, "mater": 53, "de": [53, 58, 59, 74], "2007": 53, "suppl": 53, "1007": 53, "s10820": 53, "007": 53, "9064": 53, "cai": 53, "2005": [53, 55, 64], "yip": 53, "ed": 53, "handbook": 53, "springer": [53, 59], "dordrecht": 53, "com": [53, 55, 77, 81], "chapter": 53, "978": 53, "4020": 53, "3286": 53, "8_42": 53, "make_screw_quadrupole_kink": 53, "1016": 53, "jnucmat": 53, "2008": 53, "053": 53, "make_edge_cyl_001_100": 53, "determenit": 53, "disp": [53, 62], "read_dislo_qmmm": 53, "qm_mask": 53, "dislo_qmmm": 53, "plot_bulk": 53, "n_plane": 53, "200": [53, 59], "ovito_dxa_straight_dislo_info": 53, "replicate_z": 53, "1b": 53, "thick": [53, 59, 62], "replic": 53, "3b": 53, "get_centering_mask": 53, "check_dupl": 53, "closer": 53, "unit_cel": 53, "unit_cell_core_posit": 53, "pariti": 53, "self_consist": 53, "build_glide_configur": 53, "build_impurity_cylind": 53, "init_stroh": 53, "plot_unit_cel": 53, "set_burg": 53, "250": 53, "bulk_posit": 53, "max_it": 53, "fix_width": 53, "average_posit": 53, "extra_bulk_at_cor": 53, "diamondglide30degreeparti": 53, "diamondglide90degreeparti": 53, "cubiccrystaldissociateddisloc": 53, "left_disloc": 53, "right_disloc": 53, "vercor": 53, "b_left": 53, "b_right": 53, "righ": 53, "overload": 53, "sf": 53, "fccscrewshockleyparti": 53, "fccedgeshockleyparti": 53, "fixedlineatom": 53, "adjust_forc": [53, 62, 78], "adjust_posit": [53, 62, 78], "newposit": [53, 77], "gamma_lin": 53, "shift_dir": 53, "n_dot": 53, "return_imag": 53, "gsf": 53, "variat": 53, "quantiti": [53, 59, 74], "landscap": 53, "preserv": 53, "conden": 53, "matter": 53, "395502": 53, "15pp": 53, "iopscienc": 53, "iop": 53, "0953": 53, "8984": 53, "everi": [53, 62, 74, 77], "toten": 53, "removedrift": 54, "full_3x3_to_voigt_6_index": 55, "voigt_6_to_full_3x3_strain": 55, "strain_vector": 55, "3x3": [55, 64, 74, 77], "voigt_6_to_full_3x3_stress": 55, "stress_vector": 55, "full_3x3_to_voigt_6_strain": 55, "strain_matrix": 55, "full_3x3_to_voigt_6_stress": 55, "stress_matrix": 55, "voigt_6x6_to_full_3x3x3x3": 55, "3x3x3x3": 55, "check_symmetri": 55, "voigt_6x6_to_cub": 55, "cubic_to_voigt_6x6": 55, "invari": 55, "syi": 55, "szz": 55, "syz": 55, "sxz": 55, "sxy": 55, "full_3x3_to_voigt_6": 55, "rotate_cubic_elastic_const": 55, "rotate_elastic_const": 55, "cubicelasticmoduli": 55, "complianc": 55, "logfil": [55, 73], "brute": 55, "triclin": 55, "generate_strained_config": 55, "at0": 55, "n_step": 55, "pattern": 55, "triclininc": 55, "conifugur": 55, "c_ij": 55, "graphic": 55, "stress_err": 55, "grad_scal": 55, "6241509125883258": 55, "intercept_scal": 55, "03120754562941629": 55, "regress": 55, "infom": 55, "qualiti": 55, "summaris": 55, "curv": 55, "suppress": 55, "assumpt": [55, 74], "100gpa": 55, "intercept": 55, "5gpa": 55, "stat": 55, "github": [55, 81], "djw": 55, "youngs_modulu": 55, "e_l": 55, "exact": 55, "answer": 55, "anisotropui": 55, "cr": 55, "e_x": 55, "pull": [55, 62, 81], "e_i": 55, "e_z": 55, "formula": [55, 77], "brantlei": 55, "semiconductor": [55, 59], "devic": [55, 59], "appl": 55, "534": 55, "1973": 55, "poisson_ratio": 55, "lm": 55, "dimensionless": [55, 62], "muduli": 55, "mudulu": 55, "gm": 55, "rand": [55, 74], "rovenski": 55, "birkh": 55, "auser": 55, "pp": 55, "71": 55, "n_gridpoint": 57, "nan": [57, 59], "drawn": [57, 77], "uniformli": 57, "uniform": [57, 59], "arbitrarili": 57, "evenli": 57, "sample_s": 57, "ionic": [58, 59], "boltzmann": 58, "equat": [58, 59], "copyright": [58, 59], "2020": 58, "imtek": [58, 59], "univers": [58, 59], "freiburg": [58, 59], "author": [58, 59], "johann": [58, 59], "hoermann": [58, 59], "uni": [58, 59], "luka": 58, "elflein": 58, "elfleinl": 58, "ionic_strength": 58, "mol": [58, 59], "z_i": [58, 59], "c_i": [58, 59], "deby": [58, 59], "298": [58, 59], "relative_permitt": [58, 59], "79": [58, 59], "vacuum_permitt": [58, 59], "8541878128e": [58, 59], "314462618": [58, 59], "96485": [58, 59], "33212": [58, 59], "screen": [58, 73], "permitt": [58, 59], "854187817620389e": [58, 59], "molar": [58, 59], "ga": [58, 59, 77], "3144598": [58, 59], "faradai": [58, 59], "33289": [58, 59], "lambda_d": [58, 59], "epsr": [58, 59], "goui": 58, "chapmann": 58, "electrostat": 58, "volt": 58, "kelvin": [58, 77], "decim": 58, "unphys": 58, "substrat": 58, "neutral": 58, "liquid": 58, "against": 58, "water": [58, 83], "charge_dens": [58, 59], "unittest": 58, "stuff": 58, "nernst": 59, "planck": 59, "pnp": 59, "bernoulli": 59, "jacobian": [59, 66, 75], "dx": [59, 62, 63, 66], "naiv": 59, "jacobin": 59, "fij": 59, "callabl": 59, "built": [59, 81], "nxn": 59, "f_ij": [59, 63], "dfidxj": 59, "poissonnernstplancksystem": 59, "solv": 59, "1d": 59, "x1_scale": 59, "leftpotentialdirichletbc": 59, "leftpotentialrobinbc": 59, "rightdirichletbc": 59, "rightpotentialdirichletbc": 59, "rightpotentialrobinbc": 59, "newton": 59, "xij": 59, "solver_callback": 59, "initial_valu": 59, "decoupl": 59, "evok": 59, "uij": 59, "nij": 59, "lamj": 59, "lagrang": 59, "usestandardinterfacebc": 59, "side": [59, 77], "usestandardcellbc": 59, "usesternlayercellbc": 59, "implicit": 59, "stern": 59, "prescrib": 59, "regim": 59, "helmholtz": 59, "ohp": 59, "robin": 59, "bc": [59, 62], "flux": 59, "attent": 59, "crop": 59, "manual": 59, "lambda_": 59, "across": [59, 77], "usestandarddirichletbc": 59, "dirichlet": 59, "leftfinitedifferenceschemefluxbc": 59, "j0": 59, "rightfinitedifferenceschemefluxbc": 59, "leftcontrolledvolumeschemefluxbc": 59, "rightcontrolledvolumeschemefluxbc": 59, "u0": 59, "leftdirichletbc": 59, "lam": [59, 65], "leftrobinbc": 59, "dudx": 59, "steric": 59, "constitut": [59, 83], "beyond": 59, "rightrobinbc": 59, "numberconservationconstraint": 59, "n0": 59, "amount": [59, 62, 77], "poisson_pd": 59, "fd": [59, 69], "nernst_planck_pd": 59, "selbherr": 59, "1984": 59, "delta_u": 59, "potential0": 59, "concentration0": 59, "100e": 59, "segment": 59, "funx": 59, "central_x": 61, "central_i": 61, "invert_centr": 61, "set_region": 61, "r_i": 61, "r_iii": 61, "extended_far_field": [61, 62], "extended_region_i": 61, "exclude_surfac": 61, "rectilinearanisotropiccrack": 62, "Near": 62, "rectilinear": 62, "medium": 62, "sih": 62, "pari": 62, "irwin": 62, "mech": [62, 64], "189": 62, "1965": 62, "k1gsqg": 62, "set_plane_strain": 62, "set_plane_stress": 62, "a11": 62, "a22": 62, "a12": 62, "a16": 62, "a26": 62, "a66": 62, "b11": 62, "b22": 62, "b33": 62, "b12": 62, "b13": 62, "b23": 62, "b16": 62, "b26": 62, "b36": 62, "b66": 62, "deformation_gradi": [62, 64], "cyclind": 62, "du_dx": 62, "du_di": 62, "dv_dx": 62, "dv_dy": 62, "sig_x": 62, "sig_i": 62, "sig_xi": 62, "rtheta": 62, "invert": 62, "displacement_residu": 62, "ref_x": 62, "ref_i": 62, "minu": 62, "deformation_gradient_residu": 62, "cur": 62, "stress_stat": 62, "crot": 62, "cauchy_born": 62, "displacements_from_cylinder_coordin": 62, "displacements_from_cartesian_coordin": 62, "dy": 62, "cartesian": [62, 67, 77], "deformation_gradient_from_cylinder_coordin": 62, "deformation_gradient_from_cartesian_coordin": 62, "crack_tip_posit": 62, "residual_func": 62, "return_residu": 62, "addition": [62, 83], "leastsq": 62, "invok": 62, "crack_tip_position_i": 62, "scale_displac": 62, "old_k": 62, "new_k": 62, "extrapol": [62, 77], "stresses_from_cylinder_coordin": 62, "stresses_from_cartesian_coordin": 62, "xx": [62, 77], "yy": [62, 77], "sinclaircrack": 62, "variable_alpha": 62, "variable_k": 62, "alpha_scal": 62, "k_scale": 62, "ri": 62, "riii": 62, "influenc": 62, "propag": 62, "philo": 62, "mag": 62, "647": 62, "671": 62, "1975": 62, "anim": 62, "arc_length_continu": 62, "convergence_line_plot": 62, "fit_cl": 62, "get_crack_tip_forc": 62, "get_deformation_gradi": 62, "get_dof": 62, "get_f_alpha_correct": 62, "get_k_forc": 62, "get_precon": 62, "get_xdot": 62, "pack": 62, "rescale_k": 62, "set_atom": 62, "set_dof": 62, "set_shiftmask": 62, "unpack": 62, "update_precon": 62, "write_atoms_to_fil": 62, "undeform": 62, "compat": [62, 77], "vari": 62, "arc": 62, "contrib": 62, "iii": 62, "reshap": [62, 74], "u_cl": 62, "cle": 62, "NOT": [62, 77], "pre": [62, 77], "r_fit": 62, "radial_dist": 62, "update_atom": 62, "full_array_output": 62, "x1": [62, 80], "x2": [62, 80], "xdot1": 62, "ftol": 62, "dump": [62, 71], "krylov": 62, "check_grad": 62, "dump_interv": 62, "max_step": 62, "traj_fil": 62, "x_traj": 62, "h5": 62, "traj_interv": 62, "ds_max": 62, "ds_min": 62, "ds_aggress": 62, "opt_method": 62, "cos_alpha_min": 62, "1234": 62, "rzoom": 62, "regions_styl": 62, "atoms_arg": 62, "bonds_arg": 62, "tip_arg": 62, "plot_tip": 62, "strain_err": 62, "seperate_surfac": 62, "corrector": 62, "dv": 62, "adjac": 62, "seper": 62, "num": 62, "isotropic_modei_crack_tip_stress_field": 62, "xy_onli": 62, "singular": 62, "match": 62, "multidimension": [62, 83], "horzont": 62, "ahead": 62, "anticlockwis": 62, "yx": 62, "zz": [62, 77], "xyz_onli": 62, "isotropic_modei_crack_tip_displacement_field": 62, "horizont": 62, "isotropicstressfield": 62, "sxx0": 62, "syy0": 62, "sxy0": 62, "site": 62, "strain_to_g": 62, "orig_height": 62, "releas": [62, 64], "rate": [62, 64], "thin": 62, "strip": 62, "current_height": 62, "relev": 62, "sigma_yi": 62, "eps_yi": 62, "poission": 62, "eps_xx": 62, "unstrain": 62, "g_to_strain": 62, "get_strain": 62, "origheight": 62, "info": 62, "get_energy_release_r": 62, "get_stress_intensity_factor": 62, "k_i": 62, "youngsmodulu": 62, "poissionratio_yz": 62, "fit_crack_stress_field": 62, "r_rang": 62, "initial_param": 62, "fix_param": 62, "avg_sigma": 62, "avg_decai": 62, "005": 62, "possionratio_yx": 62, "crackpo": 62, "sigma0": 62, "poissonratio_yx": 62, "exit": 62, "annular": 62, "accumul": [62, 74], "attenu": 62, "tau": 62, "characterist": 62, "overrid": 62, "get_calcul": [62, 77], "resolv": 62, "atomresolvedstressfield": 62, "suitabl": 62, "find_tip_coordin": 62, "bondlength": 62, "bulk_nn": 62, "find_tip_broken_bond": 62, "boundary_thick": 62, "nearest": [62, 65, 77, 80], "boundary_buff": 62, "tip_posit": 62, "midpoint": 62, "depth": 62, "find_tip_stress_field": 62, "plot_stress_field": 62, "firstli": 62, "sigma_": 62, "thin_strip_displacement_i": 62, "vertic": 62, "ramp": 62, "down": 62, "2d": [62, 78], "red": 62, "blue": 62, "linspac": 62, "meshgrid": 62, "enumer": [62, 63], "axhlin": 62, "linewidth": 62, "linestyl": 62, "dash": 62, "axvlin": 62, "begin": [62, 71], "print_crack_system": 62, "pretti": 62, "crack_direct": 62, "cleavage_plan": 62, "constantstrainr": 62, "delta_strain": 62, "epsilon_yi": 62, "newpo": 62, "apply_strain": 62, "rigid_constraint": 62, "boolean": [62, 67, 78], "transition_width": 63, "df": 63, "elseif": 63, "co": 63, "pi": [63, 74, 77, 84], "sin": 63, "dcoordin": 63, "neighb_j": 63, "neighb_rij": 63, "float64": 63, "printf": 63, "sum_b_ij": 63, "b_ij": 63, "eb_i": 63, "local_e_p": 63, "n_p": 63, "2dx": 63, "em": 63, "local_e_m": 63, "n_m": 63, "j_integr": 64, "e0": 64, "contour": 64, "li": [64, 77], "shih": 64, "needleman": 64, "eng": 64, "fract": [64, 65], "405": 64, "1985": 64, "jin": 64, "yuan": 64, "nanosci": 64, "nanotech": 64, "2099": 64, "triangular_lattice_slab": 65, "find_triangles_2d": 65, "minangl": 65, "5235987755982988": 65, "maxangl": 65, "0943951023931953": 65, "xdim": 65, "ydim": 65, "triangl": 65, "triangular": 65, "sit": 65, "130": 65, "517": 65, "555": 65, "get_poisson_ratio": 65, "get_youngs_modulu": 65, "set_reference_cryst": 65, "get_wave_spe": 65, "longitudin": 65, "rayleigh": 65, "get_elastic_moduli": 65, "find_crack_tip": 65, "rightmost": 65, "whose": 65, "set_initial_veloc": 65, "initialis": 65, "kick": 65, "extend_strip": 65, "fd_hessian": 66, "numerical_hessian": [66, 75], "bond_length": 67, "exclud": 67, "turn": 67, "nonperiod": [67, 74], "ident": [67, 77], "much": [67, 77], "read_molecules_from_lammps_data": 69, "union": [69, 74], "pathlik": 69, "textiobas": 69, "descriptor": 69, "stream": 69, "sort_by_id": 69, "check_legal_nam": 69, "dataset": 69, "column_s": 69, "image_flag": 69, "save_meti": 70, "glaro": 70, "dtc": 70, "umn": 70, "edu": 70, "gkhome": 70, "read_extended_xyz": 71, "fileobj": 71, "charact": [71, 74, 77], "document": [71, 77], "h2": 71, "molid": 71, "h1": 71, "opls_struct": 71, "oplsstructur": [71, 77], "read_block": 71, "reactiv": [71, 77], "read_parameter_fil": 71, "read_cutoff": 71, "cutofflist": [71, 77], "command": [71, 77], "bond_styl": [71, 77], "angle_styl": [71, 77], "dihedral_styl": [71, 77], "overridden": 71, "behavior": [71, 77], "002": 71, "dihedr": [71, 77], "ljq": 71, "ljqdata": [71, 77], "bonddata": [71, 77], "anglesdata": [71, 77], "dihedralsdata": [71, 77], "write_lammp": 71, "write_lammps_in": 71, "write_lammps_atom": 71, "write_lammps_definit": 71, "read_lammps_definit": 71, "offset": 71, "bond_coeff": 71, "bb": 71, "bond_type_index": 71, "ljq_data": 71, "bond_data": 71, "ang_data": 71, "dih_data": 71, "particle_type_index": 71, "ang_type_index": 71, "dih_type_index": 71, "read_lammps_data": 71, "filename_lammps_param": 71, "restor": 71, "update_from_lammps_dump": 71, "savetbl": 72, "dat": 72, "loadtbl": 72, "usecol": 72, "fromfil": 72, "283": 72, "398": 72, "circumst": 72, "colum": 72, "hdr_str": 73, "hdrfmt_str": 73, "datatyp": 73, "numfmt_str": 73, "flatten": [73, 76], "outeveri": 73, "sepeveri": 73, "flush": 73, "get_logfil": 73, "has_logfil": 73, "iteration_finish": 73, "pr": 73, "set_logfil": 73, "set_outeveri": 73, "st": 73, "caller": 73, "hdr": 73, "val": 73, "force_print": 73, "connected_triplet": 74, "lexsort": 74, "triplet_to_numb": 74, "get_pair": 74, "request": [74, 81], "get_triplet": 74, "full_connect": 74, "pair_dist": 74, "make_result": 74, "accepted_quant": 74, "compute_dist": 74, "pair_list": 74, "triplet_list": 74, "nb_pair": 74, "find_triplet_typ": 74, "double_neighbourhood": 74, "reverse_pair_indic": 74, "cutoffneighbourhood": 74, "triplet_typ": 74, "proxim": 74, "arraylik": 74, "sphere": 74, "neighborhood": 74, "molecularneighbourhood": 74, "double_cutoff": 74, "initialz": 74, "double_connect": 74, "sort": 74, "complete_connect": 74, "typeoffset": 74, "wrap": [74, 77], "cell_origin": 74, "dot": 74, "shrink": 74, "guarante": 74, "coord": [74, 80], "bincount": [74, 76, 83], "bin_edg": 74, "pdf": 74, "get_volum": [74, 77, 84], "ijdd": [74, 83], "pair_forc": [74, 83], "forces_x": 74, "minlength": [74, 76], "forces_i": 74, "forces_z": 74, "abs_dr": 74, "dynmat": 74, "dde": 74, "dynmat_bsr": 74, "first_i": 74, "dynmat_diag": 74, "e_nc": 74, "d_ncc": 74, "dde_n": 74, "de_n": 74, "ddiag_icc": 74, "first_neighbour": 74, "abs_dr_p": 74, "tripl": [74, 77], "adress": 74, "occour": 74, "neighour": 74, "ij_t": 74, "ik_t": 74, "jk_t": 74, "ijd": [74, 83], "int32": [74, 83], "first_ij": 74, "find_ij": 74, "slower": 74, "less": 74, "get_jump_indici": 74, "find_indices_of_reversed_pair": 74, "taken": [74, 77], "fact": 74, "overhead": 74, "find_common_neighbour": 74, "i1": 74, "j1": 74, "i2": 74, "itself": 74, "cnl_i1_i2": 74, "cnl_j1": 74, "nl_index_i1_j1": 74, "nl_index_i2_j1": 74, "256": 74, "22016": 74, "1893376": 74, "unique_pairs_i1_i2": 74, "bincount_bin": 74, "uniqu": [74, 77], "return_invers": 74, "65536": 74, "tmp": 74, "my_sum": 74, "numerical_forc": 75, "minumum": 75, "numerical_stress": 75, "coo_matrix": 75, "numerical_nonaffine_forces_refer": 75, "get_derivative_volum": 75, "get_derivative_wave_vector": 75, "mabincount": [76, 83], "execut": 76, "onlin": 76, "twochar": 77, "exactli": 77, "simplest": 77, "lj_pair": 77, "lj_cutoff": 77, "c_cutoff": 77, "item": 77, "shallow": 77, "fromkei": 77, "pop": 77, "unrepresent": 77, "keyerror": 77, "popitem": 77, "lifo": 77, "setdefault": 77, "lack": 77, "name_value_hash": 77, "get_nam": 77, "get_valu": 77, "name_valu": 77, "set_nam": 77, "anam": 77, "bname": 77, "add_nam": 77, "cname": 77, "dname": 77, "manipul": 77, "number_of_lattice_vector": 77, "iterimag": 77, "default_map": 77, "br": 77, "Be": 77, "ca": 77, "mg": 77, "_combin": 77, "predefin": 77, "frequent": 77, "had": 77, "set_typ": 77, "get_typ": 77, "set_cutoff": 77, "get_neighbor": 77, "set_atom_data": 77, "atom_data": 77, "pair_modifi": 77, "get_bond": 77, "bond_typ": 77, "a1": 77, "a2": 77, "bond_list": 77, "indice": 77, "particip": 77, "get_angl": 77, "ang_typ": 77, "conceiv": 77, "ang_list": 77, "ang": [77, 78], "ase_objtyp": 77, "edit": 77, "gui": 77, "undesir": 77, "behaviour": 77, "aris": 77, "certain": 77, "backend": 77, "featur": 77, "circumv": 77, "gtk": 77, "euler_rot": 77, "psi": 77, "euler": 77, "mathworld": 77, "wolfram": 77, "eulerangl": 77, "explan": 77, "cop": 77, "cou": 77, "fromdict": 77, "dct": 77, "get_all_dist": 77, "a3": 77, "get_angular_momentum": 77, "angular": 77, "momentum": 77, "unless": 77, "get_atomic_numb": 77, "complet": [77, 78], "resembl": 77, "jth": 77, "ith": 77, "get_cell_lengths_and_angl": 77, "get_celldisp": 77, "get_center_of_mass": 77, "get_chemical_formula": 77, "hill": 77, "four": [77, 83], "contract": 77, "chhhoh": 77, "chhhochhh": 77, "ch3och3": 77, "alphabet": 77, "c2h6o": 77, "soohoho": 77, "h2o4": 77, "greatest": 77, "divisor": 77, "get_chemical_symbol": [77, 83], "get_dihedr": 77, "full_output": 77, "dih_typ": 77, "benzen": 77, "dih_list": 77, "electr": 77, "apply_constraint": 77, "ask": [77, 81], "raw": 77, "holonom": 77, "triatom": 77, "redistribut": 77, "get_global_number_of_atom": 77, "know": 77, "asap": 77, "maintain": 77, "few": 77, "situat": 77, "get_initial_charg": 77, "get_initial_magnetic_mo": 77, "get_kinetic_energi": 77, "kinet": 77, "get_mass": 77, "get_momenta": 77, "get_moments_of_inertia": 77, "princip": 77, "inerti": 77, "amu": 77, "get_number_of_atom": 77, "probabl": 77, "Or": 77, "get_pbc": 77, "wrap_kw": 77, "back": 77, "pretty_transl": 77, "wrap_posit": 77, "get_reciprocal_cel": 77, "commonli": 77, "fourier": [77, 80, 82], "get_scaled_posit": 77, "span": 77, "include_ideal_ga": 77, "tradit": 77, "yz": 77, "xz": 77, "get_tag": 77, "tag": 77, "get_temperatur": 77, "get_total_energi": 77, "plu": 77, "new_arrai": 77, "rattl": 77, "stdev": 77, "seed": 77, "rng": 77, "randomli": 77, "processor": 77, "rotate_cel": 77, "kept": 77, "rotate_dihedr": 77, "a4": 77, "set_dihedr": 77, "set_angl": 77, "overwrit": 77, "delet": 77, "set_atomic_numb": 77, "scale_atom": 77, "orthorhomb": 77, "lie": 77, "subspac": 77, "he": 77, "120": 77, "rhombohedr": 77, "77": 77, "set_celldisp": 77, "celldisp": 77, "set_center_of_mass": 77, "set_chemical_symbol": 77, "entir": 77, "subgroup": 77, "altern": 77, "crude": 77, "ethan": 77, "twist": 77, "half": 77, "hhcchh": 77, "210": 77, "set_dist": 77, "set_initial_charg": 77, "set_initial_magnetic_mo": 77, "collinear": 77, "spin": 77, "set_mass": 77, "set_momenta": 77, "set_posit": 77, "honor": 77, "set_scaled_posit": 77, "set_tag": 77, "json": 77, "databas": 77, "nx3": 77, "ipynb": 78, "moser": 78, "mosel": 78, "tribol": 78, "2010": 78, "get_m_gamma": 78, "dissip": 78, "fixeddamp": 78, "bottom": 78, "get_a": 78, "notimplementederror": 78, "adjust_momenta": 78, "adjust_potential_energi": 78, "job": 78, "filehandl": 78, "logfn": 78, "t_thermostat": 78, "instantantan": 78, "p_top": 78, "p_bottom": 78, "acceler": 78, "tau_top": 78, "tau_bottom": 78, "ring_statist": [79, 85], "maxlength": [79, 85], "shortest": [79, 85], "franzblau": [79, 85], "4925": 79, "1991": 79, "ringstat": 79, "n_atom": 80, "cell_vector": 80, "y1": 80, "z1": 80, "y2": 80, "z2": 80, "x3": 80, "y3": 80, "z3": 80, "dim": 80, "fft": [80, 84], "proport": 80, "nomalis": 80, "betrag": 80, "max_rad": 80, "length_cutoff": 80, "output_grids": 80, "fft_cutoff": 80, "approx_fft_grids": [80, 84], "spatial_correlation_function_near": 80, "gridsiz": 80, "scienc": 81, "toolbox": 81, "electro": 81, "chemistri": 81, "low": 81, "effici": 81, "window": 81, "linux": 81, "x86": 81, "maco": 81, "latest": 81, "compil": 81, "git": 81, "libatom": 81, "sphinx": 81, "complement": 81, "issu": 81, "bug": 81, "report": 81, "improv": 81, "suggest": 81, "welcom": 81, "cd": 81, "www": 81, "wiki": 81, "fysik": 81, "dtu": 81, "dk": 81, "quippi": 81, "quip": 81, "atomistica": 81, "chemview": 81, "gabrielelanaro": 81, "deutsch": 81, "forschungsgemeinschaft": 81, "258153560": 81, "engin": 81, "research": 81, "council": 81, "grant": 81, "p002188": 81, "r012474": 81, "r043612": 81, "page": 81, "coo": 83, "h2o": 83, "oxygen": 83, "96856502": 83, "\u00e5": [83, 84], "captur": 83, "526478": 83, "advanc": 83, "ship": 83, "attract": 83, "propto": 83, "london": 83, "dispers": 83, "math": 83, "numpy_trick": 83, "33444449": 83, "54138009": 83, "66722225": 83, "straightforwardli": 84, "instruct": 84, "inlin": [84, 85], "disord": [84, 85], "carbon": 84, "mean_dist": 84, "mean_dens": 84, "shell_volum": 84, "xlabel": [84, 85], "ylabel": [84, 85], "xlim": 84, "ylim": 84, "tail": 84, "spatial_correlation_funct": 84, "topolog": 85, "statist": 85, "sp": 85, "backtrack": 85}, "objects": {"matscipy": [[10, 0, 0, "-", "angle_distribution"], [11, 0, 0, "-", "atomic_strain"], [52, 0, 0, "-", "deformation"], [53, 0, 0, "-", "dislocation"], [54, 0, 0, "-", "drift"], [55, 0, 0, "-", "elasticity"], [56, 0, 0, "-", "electrochemistry"], [60, 0, 0, "-", "fracture_mechanics"], [66, 0, 0, "-", "hessian_finite_differences"], [67, 0, 0, "-", "hydrogenate"], [68, 0, 0, "-", "io"], [73, 0, 0, "-", "logger"], [74, 0, 0, "-", "neighbours"], [75, 0, 0, "-", "numerical"], [76, 0, 0, "-", "numpy_tricks"], [77, 0, 0, "-", "opls"], [78, 0, 0, "-", "pressurecoupling"], [79, 0, 0, "-", "rings"], [80, 0, 0, "-", "spatial_correlation_function"]], "matscipy.angle_distribution": [[10, 1, 1, "", "angle_distribution"]], "matscipy.atomic_strain": [[11, 1, 1, "", "array_inverse"], [11, 1, 1, "", "atomic_strain"], [11, 1, 1, "", "get_D_square_min"], [11, 1, 1, "", "get_XIJ"], [11, 1, 1, "", "get_YIJ"], [11, 1, 1, "", "get_delta_plus_epsilon"], [11, 1, 1, "", "get_delta_plus_epsilon_dgesv"]], "matscipy.calculators": [[12, 0, 0, "-", "calculator"], [13, 0, 0, "-", "committee"], [17, 0, 0, "-", "eam"], [21, 0, 0, "-", "ewald"], [23, 0, 0, "-", "fitting"], [24, 0, 0, "-", "manybody"], [33, 0, 0, "-", "mcfm"], [47, 0, 0, "-", "pair_potential"], [49, 0, 0, "-", "polydisperse"], [51, 0, 0, "-", "supercell_calculator"]], "matscipy.calculators.calculator": [[12, 2, 1, "", "MatscipyCalculator"]], "matscipy.calculators.calculator.MatscipyCalculator": [[12, 3, 1, "", "__init__"], [12, 3, 1, "", "band_structure"], [12, 3, 1, "", "calculate"], [12, 3, 1, "", "calculate_numerical_forces"], [12, 3, 1, "", "calculate_numerical_stress"], [12, 3, 1, "", "calculate_properties"], [12, 3, 1, "", "calculation_required"], [12, 3, 1, "", "check_state"], [12, 4, 1, "", "default_parameters"], [12, 5, 1, "", "directory"], [12, 4, 1, "", "discard_results_on_any_change"], [12, 3, 1, "", "export_properties"], [12, 3, 1, "", "get_atoms"], [12, 3, 1, "", "get_birch_coefficients"], [12, 3, 1, "", "get_born_elastic_constants"], [12, 3, 1, "", "get_charges"], [12, 3, 1, "", "get_default_parameters"], [12, 3, 1, "", "get_dipole_moment"], [12, 3, 1, "", "get_dynamical_matrix"], [12, 3, 1, "", "get_elastic_constants"], [12, 3, 1, "", "get_forces"], [12, 3, 1, "", "get_hessian"], [12, 3, 1, "", "get_magnetic_moment"], [12, 3, 1, "", "get_magnetic_moments"], [12, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [12, 3, 1, "", "get_nonaffine_forces"], [12, 3, 1, "", "get_numerical_non_affine_forces"], [12, 3, 1, "", "get_potential_energies"], [12, 3, 1, "", "get_potential_energy"], [12, 3, 1, "", "get_property"], [12, 3, 1, "", "get_stress"], [12, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [12, 3, 1, "", "get_stresses"], [12, 4, 1, "", "ignored_changes"], [12, 4, 1, "", "implemented_properties"], [12, 5, 1, "", "label"], [12, 3, 1, "", "read"], [12, 3, 1, "", "read_atoms"], [12, 3, 1, "", "reset"], [12, 3, 1, "", "set"], [12, 3, 1, "", "set_label"], [12, 3, 1, "", "todict"]], "matscipy.calculators.committee": [[14, 0, 0, "-", "committee"], [15, 0, 0, "-", "log"], [16, 0, 0, "-", "utils"]], "matscipy.calculators.committee.committee": [[14, 2, 1, "", "Committee"], [14, 2, 1, "", "CommitteeMember"], [14, 2, 1, "", "CommitteeUncertainty"]], "matscipy.calculators.committee.committee.Committee": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "add_member"], [14, 5, 1, "", "alphas"], [14, 5, 1, "", "atoms"], [14, 3, 1, "", "calibrate"], [14, 5, 1, "", "calibrated_for"], [14, 5, 1, "", "id_counter"], [14, 5, 1, "", "id_to_atoms"], [14, 5, 1, "", "ids"], [14, 3, 1, "", "is_calibrated_for"], [14, 5, 1, "", "members"], [14, 5, 1, "", "number"], [14, 3, 1, "", "scale_uncertainty"], [14, 3, 1, "", "set_internal_validation_set"], [14, 5, 1, "", "validation_set"]], "matscipy.calculators.committee.committee.CommitteeMember": [[14, 3, 1, "", "__init__"], [14, 5, 1, "", "atoms"], [14, 5, 1, "", "calculator"], [14, 5, 1, "", "filename"], [14, 5, 1, "", "ids"], [14, 3, 1, "", "is_sample_in_atoms"], [14, 3, 1, "", "set_training_data"]], "matscipy.calculators.committee.committee.CommitteeUncertainty": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "band_structure"], [14, 3, 1, "", "calculate"], [14, 3, 1, "", "calculate_numerical_forces"], [14, 3, 1, "", "calculate_numerical_stress"], [14, 3, 1, "", "calculate_properties"], [14, 3, 1, "", "calculation_required"], [14, 3, 1, "", "check_state"], [14, 4, 1, "", "default_parameters"], [14, 5, 1, "", "directory"], [14, 4, 1, "", "discard_results_on_any_change"], [14, 3, 1, "", "export_properties"], [14, 3, 1, "", "get_atoms"], [14, 3, 1, "", "get_charges"], [14, 3, 1, "", "get_default_parameters"], [14, 3, 1, "", "get_dipole_moment"], [14, 3, 1, "", "get_forces"], [14, 3, 1, "", "get_magnetic_moment"], [14, 3, 1, "", "get_magnetic_moments"], [14, 3, 1, "", "get_potential_energies"], [14, 3, 1, "", "get_potential_energy"], [14, 3, 1, "", "get_property"], [14, 3, 1, "", "get_stress"], [14, 3, 1, "", "get_stresses"], [14, 4, 1, "", "ignored_changes"], [14, 4, 1, "", "implemented_properties"], [14, 5, 1, "", "label"], [14, 3, 1, "", "read"], [14, 3, 1, "", "read_atoms"], [14, 3, 1, "", "reset"], [14, 3, 1, "", "set"], [14, 3, 1, "", "set_label"], [14, 3, 1, "", "todict"]], "matscipy.calculators.committee.log": [[15, 1, 1, "", "create_logger"], [15, 1, 1, "", "set_logging"]], "matscipy.calculators.committee.utils": [[16, 1, 1, "", "subsample"]], "matscipy.calculators.eam": [[18, 0, 0, "-", "average_atom"], [19, 0, 0, "-", "calculator"], [20, 0, 0, "-", "io"]], "matscipy.calculators.eam.average_atom": [[18, 1, 1, "", "average_potential"]], "matscipy.calculators.eam.calculator": [[19, 2, 1, "", "EAM"]], "matscipy.calculators.eam.calculator.EAM": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "band_structure"], [19, 3, 1, "", "calculate"], [19, 3, 1, "", "calculate_hessian_matrix"], [19, 3, 1, "", "calculate_numerical_forces"], [19, 3, 1, "", "calculate_numerical_stress"], [19, 3, 1, "", "calculate_properties"], [19, 3, 1, "", "calculation_required"], [19, 3, 1, "", "check_state"], [19, 5, 1, "", "cutoff"], [19, 4, 1, "", "default_parameters"], [19, 5, 1, "", "directory"], [19, 4, 1, "", "discard_results_on_any_change"], [19, 3, 1, "", "energy_virial_and_forces"], [19, 3, 1, "", "export_properties"], [19, 3, 1, "", "get_atoms"], [19, 3, 1, "", "get_birch_coefficients"], [19, 3, 1, "", "get_born_elastic_constants"], [19, 3, 1, "", "get_charges"], [19, 3, 1, "", "get_default_parameters"], [19, 3, 1, "", "get_dipole_moment"], [19, 3, 1, "", "get_dynamical_matrix"], [19, 3, 1, "", "get_elastic_constants"], [19, 3, 1, "", "get_forces"], [19, 3, 1, "", "get_hessian"], [19, 3, 1, "", "get_magnetic_moment"], [19, 3, 1, "", "get_magnetic_moments"], [19, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [19, 3, 1, "", "get_nonaffine_forces"], [19, 3, 1, "", "get_numerical_non_affine_forces"], [19, 3, 1, "", "get_potential_energies"], [19, 3, 1, "", "get_potential_energy"], [19, 3, 1, "", "get_property"], [19, 3, 1, "", "get_stress"], [19, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [19, 3, 1, "", "get_stresses"], [19, 4, 1, "", "ignored_changes"], [19, 4, 1, "", "implemented_properties"], [19, 5, 1, "", "label"], [19, 4, 1, "", "name"], [19, 3, 1, "", "read"], [19, 3, 1, "", "read_atoms"], [19, 3, 1, "", "reset"], [19, 3, 1, "", "set"], [19, 3, 1, "", "set_label"], [19, 3, 1, "", "todict"]], "matscipy.calculators.eam.io": [[20, 2, 1, "", "EAMParameters"], [20, 1, 1, "", "mix_eam"], [20, 1, 1, "", "read_eam"], [20, 1, 1, "", "write_eam"]], "matscipy.calculators.eam.io.EAMParameters": [[20, 4, 1, "", "atomic_masses"], [20, 4, 1, "", "atomic_numbers"], [20, 3, 1, "", "count"], [20, 4, 1, "", "crystal_structures"], [20, 4, 1, "", "cutoff"], [20, 4, 1, "", "density_grid_spacing"], [20, 4, 1, "", "distance_grid_spacing"], [20, 3, 1, "", "index"], [20, 4, 1, "", "lattice_constants"], [20, 4, 1, "", "number_of_density_grid_points"], [20, 4, 1, "", "number_of_distance_grid_points"], [20, 4, 1, "", "symbols"]], "matscipy.calculators.ewald": [[22, 0, 0, "-", "calculator"]], "matscipy.calculators.ewald.calculator": [[22, 2, 1, "", "Ewald"], [22, 2, 1, "", "EwaldShortRange"]], "matscipy.calculators.ewald.calculator.Ewald": [[22, 3, 1, "", "__init__"], [22, 3, 1, "", "allowed_wave_vectors"], [22, 5, 1, "", "alpha"], [22, 3, 1, "", "band_structure"], [22, 3, 1, "", "calculate"], [22, 3, 1, "", "calculate_numerical_forces"], [22, 3, 1, "", "calculate_numerical_stress"], [22, 3, 1, "", "calculate_properties"], [22, 3, 1, "", "calculation_required"], [22, 3, 1, "", "check_state"], [22, 4, 1, "", "default_parameters"], [22, 3, 1, "", "determine_alpha"], [22, 3, 1, "", "determine_kc"], [22, 3, 1, "", "determine_nk"], [22, 5, 1, "", "directory"], [22, 4, 1, "", "discard_results_on_any_change"], [22, 3, 1, "", "export_properties"], [22, 3, 1, "", "first_derivative_kspace"], [22, 3, 1, "", "get_atoms"], [22, 3, 1, "", "get_birch_coefficients"], [22, 3, 1, "", "get_born_elastic_constants"], [22, 3, 1, "", "get_charges"], [22, 3, 1, "", "get_default_parameters"], [22, 3, 1, "", "get_dipole_moment"], [22, 3, 1, "", "get_dynamical_matrix"], [22, 3, 1, "", "get_elastic_constants"], [22, 3, 1, "", "get_forces"], [22, 3, 1, "", "get_hessian"], [22, 3, 1, "", "get_magnetic_moment"], [22, 3, 1, "", "get_magnetic_moments"], [22, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [22, 3, 1, "", "get_nonaffine_forces"], [22, 3, 1, "", "get_numerical_non_affine_forces"], [22, 3, 1, "", "get_potential_energies"], [22, 3, 1, "", "get_potential_energy"], [22, 3, 1, "", "get_property"], [22, 3, 1, "", "get_stress"], [22, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [22, 3, 1, "", "get_stresses"], [22, 4, 1, "", "ignored_changes"], [22, 4, 1, "", "implemented_properties"], [22, 3, 1, "", "kspace_energy"], [22, 3, 1, "", "kspace_properties"], [22, 5, 1, "", "label"], [22, 4, 1, "", "name"], [22, 3, 1, "", "read"], [22, 3, 1, "", "read_atoms"], [22, 3, 1, "", "reset"], [22, 3, 1, "", "reset_kspace"], [22, 3, 1, "", "rms_kspace"], [22, 3, 1, "", "rms_rspace"], [22, 3, 1, "", "self_energy"], [22, 3, 1, "", "set"], [22, 3, 1, "", "set_label"], [22, 5, 1, "", "short_range"], [22, 3, 1, "", "stress_kspace"], [22, 3, 1, "", "todict"]], "matscipy.calculators.ewald.calculator.EwaldShortRange": [[22, 3, 1, "", "__init__"], [22, 5, 1, "", "cutoff"], [22, 3, 1, "", "derivative"], [22, 3, 1, "", "first_derivative"], [22, 3, 1, "", "get_cutoff"], [22, 3, 1, "", "second_derivative"]], "matscipy.calculators.fitting": [[23, 2, 1, "", "CombinedFit"], [23, 2, 1, "", "Fit"], [23, 2, 1, "", "FitB2"], [23, 2, 1, "", "FitBCC"], [23, 2, 1, "", "FitCubicCrystal"], [23, 2, 1, "", "FitDiamond"], [23, 2, 1, "", "FitDiamond100"], [23, 2, 1, "", "FitDiamond110"], [23, 2, 1, "", "FitDiamond111"], [23, 2, 1, "", "FitDimer"], [23, 2, 1, "", "FitFCC"], [23, 2, 1, "", "FitGraphene"], [23, 2, 1, "", "FitGraphite"], [23, 2, 1, "", "FitHexagonalCrystal"], [23, 2, 1, "", "FitL1_0"], [23, 2, 1, "", "FitL1_2"], [23, 2, 1, "", "FitSC"], [23, 2, 1, "", "FitSinglePoint"], [23, 2, 1, "", "FitSurface"], [23, 2, 1, "", "FitTetragonalCrystal"], [23, 2, 1, "", "Parameters"], [23, 2, 1, "", "Penalty"], [23, 2, 1, "", "RotatingFit"]], "matscipy.calculators.fitting.CombinedFit": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "targets"]], "matscipy.calculators.fitting.Fit": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.FitB2": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C11"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_Cp"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitBCC": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C11"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_Cp"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitCubicCrystal": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C11"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_Cp"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C11"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_Cp"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond100": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 3, 1, "", "get_surface_energy"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_surface"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "surfstr"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond110": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 3, 1, "", "get_surface_energy"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_surface"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "surfstr"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond111": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 3, 1, "", "get_surface_energy"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_surface"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "surfstr"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDimer": [[23, 4, 1, "", "D0"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_distance"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_dimer"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "r0"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_D0"], [23, 4, 1, "", "w_r0"]], "matscipy.calculators.fitting.FitFCC": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C11"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_Cp"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphene": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "c0"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphite": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "c0"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitHexagonalCrystal": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "c0"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitL1_0": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "c0"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C33"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_C66"], [23, 3, 1, "", "get_D1"], [23, 3, 1, "", "get_D2"], [23, 3, 1, "", "get_D4"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"], [23, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.FitL1_2": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C11"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_Cp"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSC": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "crystalstr"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C11"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_Cp"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSinglePoint": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "energy"], [23, 4, 1, "", "forces"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "stress"], [23, 4, 1, "", "w_energy"], [23, 4, 1, "", "w_forces"], [23, 4, 1, "", "w_stress"]], "matscipy.calculators.fitting.FitSurface": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 3, 1, "", "get_surface_energy"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitTetragonalCrystal": [[23, 4, 1, "", "Ec"], [23, 3, 1, "", "__init__"], [23, 4, 1, "", "a0"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "c0"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "crystal"], [23, 4, 1, "", "fmax"], [23, 3, 1, "", "get_C33"], [23, 3, 1, "", "get_C44"], [23, 3, 1, "", "get_C66"], [23, 3, 1, "", "get_D1"], [23, 3, 1, "", "get_D2"], [23, 3, 1, "", "get_D4"], [23, 3, 1, "", "get_SFE"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_lattice_constant"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "new_bulk"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"], [23, 4, 1, "", "w_Ec"], [23, 4, 1, "", "w_a0"], [23, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.Parameters": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "constant"], [23, 4, 1, "", "default"], [23, 4, 1, "", "derived"], [23, 3, 1, "", "get"], [23, 3, 1, "", "get_array"], [23, 3, 1, "", "get_constant"], [23, 3, 1, "", "get_derived"], [23, 3, 1, "", "get_dict"], [23, 3, 1, "", "get_lower_bounds"], [23, 3, 1, "", "get_upper_bounds"], [23, 3, 1, "", "get_variable"], [23, 4, 1, "", "hidden"], [23, 3, 1, "", "in_range"], [23, 4, 1, "", "parameters"], [23, 4, 1, "", "range_mapping"], [23, 4, 1, "", "ranges"], [23, 3, 1, "", "set"], [23, 3, 1, "", "set_array"], [23, 3, 1, "", "set_constant"], [23, 3, 1, "", "set_derived"], [23, 3, 1, "", "set_dict"], [23, 3, 1, "", "set_range_derived"], [23, 3, 1, "", "set_variable"], [23, 4, 1, "", "variable"]], "matscipy.calculators.fitting.Penalty": [[23, 3, 1, "", "__init__"], [23, 4, 1, "", "atoms"], [23, 4, 1, "", "calc"], [23, 4, 1, "", "cost_history"], [23, 4, 1, "", "func"], [23, 3, 1, "", "get_cohesive_energy"], [23, 3, 1, "", "get_cost_function"], [23, 3, 1, "", "get_cost_history"], [23, 3, 1, "", "get_parameters_at_minimal_cost"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_residuals"], [23, 3, 1, "", "get_residuals_history"], [23, 3, 1, "", "get_square_residuals"], [23, 4, 1, "", "minimal_cost"], [23, 3, 1, "", "optimize"], [23, 3, 1, "", "optimize_anneal"], [23, 3, 1, "", "optimize_brute"], [23, 3, 1, "", "optimize_leastsq"], [23, 3, 1, "", "optimize_openopt"], [23, 4, 1, "", "par"], [23, 4, 1, "", "par_at_minimal_cost"], [23, 4, 1, "", "residuals_history"], [23, 3, 1, "", "set_calculator"], [23, 3, 1, "", "set_calculator_class"], [23, 3, 1, "", "set_parameters"], [23, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.RotatingFit": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "optimize"], [23, 4, 1, "", "par"], [23, 4, 1, "", "targets"]], "matscipy.calculators.manybody": [[25, 0, 0, "-", "calculator"], [26, 0, 0, "-", "explicit_forms"], [31, 0, 0, "-", "newmb"], [32, 0, 0, "-", "potentials"]], "matscipy.calculators.manybody.calculator": [[25, 2, 1, "", "Manybody"], [25, 2, 1, "", "NiceManybody"]], "matscipy.calculators.manybody.calculator.Manybody": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "band_structure"], [25, 3, 1, "", "calculate"], [25, 3, 1, "", "calculate_numerical_forces"], [25, 3, 1, "", "calculate_numerical_stress"], [25, 3, 1, "", "calculate_properties"], [25, 3, 1, "", "calculation_required"], [25, 3, 1, "", "check_state"], [25, 4, 1, "", "default_parameters"], [25, 5, 1, "", "directory"], [25, 4, 1, "", "discard_results_on_any_change"], [25, 3, 1, "", "export_properties"], [25, 3, 1, "", "get_atoms"], [25, 3, 1, "", "get_birch_coefficients"], [25, 3, 1, "", "get_born_elastic_constants"], [25, 3, 1, "", "get_charges"], [25, 3, 1, "", "get_cutoff"], [25, 3, 1, "", "get_default_parameters"], [25, 3, 1, "", "get_dipole_moment"], [25, 3, 1, "", "get_dynamical_matrix"], [25, 3, 1, "", "get_elastic_constants"], [25, 3, 1, "", "get_forces"], [25, 3, 1, "", "get_hessian"], [25, 3, 1, "", "get_hessian_from_second_derivative"], [25, 3, 1, "", "get_magnetic_moment"], [25, 3, 1, "", "get_magnetic_moments"], [25, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [25, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [25, 3, 1, "", "get_nonaffine_forces"], [25, 3, 1, "", "get_numerical_non_affine_forces"], [25, 3, 1, "", "get_potential_energies"], [25, 3, 1, "", "get_potential_energy"], [25, 3, 1, "", "get_property"], [25, 3, 1, "", "get_second_derivative"], [25, 3, 1, "", "get_stress"], [25, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [25, 3, 1, "", "get_stresses"], [25, 4, 1, "", "ignored_changes"], [25, 4, 1, "", "implemented_properties"], [25, 5, 1, "", "label"], [25, 4, 1, "", "name"], [25, 3, 1, "", "read"], [25, 3, 1, "", "read_atoms"], [25, 3, 1, "", "reset"], [25, 3, 1, "", "set"], [25, 3, 1, "", "set_label"], [25, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody": [[25, 2, 1, "", "F"], [25, 2, 1, "", "G"], [25, 3, 1, "", "__init__"], [25, 3, 1, "", "band_structure"], [25, 3, 1, "", "calculate"], [25, 3, 1, "", "calculate_numerical_forces"], [25, 3, 1, "", "calculate_numerical_stress"], [25, 3, 1, "", "calculate_properties"], [25, 3, 1, "", "calculation_required"], [25, 3, 1, "", "check_state"], [25, 4, 1, "", "default_parameters"], [25, 5, 1, "", "directory"], [25, 4, 1, "", "discard_results_on_any_change"], [25, 3, 1, "", "export_properties"], [25, 3, 1, "", "get_atoms"], [25, 3, 1, "", "get_birch_coefficients"], [25, 3, 1, "", "get_born_elastic_constants"], [25, 3, 1, "", "get_charges"], [25, 3, 1, "", "get_cutoff"], [25, 3, 1, "", "get_default_parameters"], [25, 3, 1, "", "get_dipole_moment"], [25, 3, 1, "", "get_dynamical_matrix"], [25, 3, 1, "", "get_elastic_constants"], [25, 3, 1, "", "get_forces"], [25, 3, 1, "", "get_hessian"], [25, 3, 1, "", "get_hessian_from_second_derivative"], [25, 3, 1, "", "get_magnetic_moment"], [25, 3, 1, "", "get_magnetic_moments"], [25, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [25, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [25, 3, 1, "", "get_nonaffine_forces"], [25, 3, 1, "", "get_numerical_non_affine_forces"], [25, 3, 1, "", "get_potential_energies"], [25, 3, 1, "", "get_potential_energy"], [25, 3, 1, "", "get_property"], [25, 3, 1, "", "get_second_derivative"], [25, 3, 1, "", "get_stress"], [25, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [25, 3, 1, "", "get_stresses"], [25, 4, 1, "", "ignored_changes"], [25, 4, 1, "", "implemented_properties"], [25, 5, 1, "", "label"], [25, 4, 1, "", "name"], [25, 3, 1, "", "read"], [25, 3, 1, "", "read_atoms"], [25, 3, 1, "", "reset"], [25, 3, 1, "", "set"], [25, 3, 1, "", "set_label"], [25, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody.F": [[25, 3, 1, "", "gradient"], [25, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.calculator.NiceManybody.G": [[25, 3, 1, "", "gradient"], [25, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms": [[27, 0, 0, "-", "harmonic"], [28, 0, 0, "-", "kumagai"], [29, 0, 0, "-", "stillinger_weber"], [30, 0, 0, "-", "tersoff_brenner"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[27, 2, 1, "", "HarmonicAngle"], [27, 2, 1, "", "HarmonicBond"], [27, 2, 1, "", "ZeroPair"], [27, 2, 1, "", "ZeroTriplet"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "gradient"], [27, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond": [[27, 3, 1, "", "__init__"], [27, 3, 1, "", "gradient"], [27, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair": [[27, 3, 1, "", "gradient"], [27, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet": [[27, 3, 1, "", "gradient"], [27, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[28, 1, 1, "", "Kumagai"], [28, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[29, 1, 1, "", "StillingerWeber"], [29, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[30, 1, 1, "", "TersoffBrenner"], [30, 1, 1, "", "mix"], [30, 1, 1, "", "mix_arithmetic"], [30, 1, 1, "", "mix_geometric"], [30, 1, 1, "", "pair_index"], [30, 1, 1, "", "triplet_index"]], "matscipy.calculators.manybody.newmb": [[31, 2, 1, "", "Manybody"]], "matscipy.calculators.manybody.newmb.Manybody": [[31, 2, 1, "", "Phi"], [31, 2, 1, "", "Theta"], [31, 3, 1, "", "__init__"], [31, 3, 1, "", "band_structure"], [31, 3, 1, "", "calculate"], [31, 3, 1, "", "calculate_numerical_forces"], [31, 3, 1, "", "calculate_numerical_stress"], [31, 3, 1, "", "calculate_properties"], [31, 3, 1, "", "calculation_required"], [31, 3, 1, "", "check_state"], [31, 4, 1, "", "default_parameters"], [31, 5, 1, "", "directory"], [31, 4, 1, "", "discard_results_on_any_change"], [31, 3, 1, "", "export_properties"], [31, 3, 1, "", "get_atoms"], [31, 3, 1, "", "get_birch_coefficients"], [31, 3, 1, "", "get_born_elastic_constants"], [31, 3, 1, "", "get_charges"], [31, 3, 1, "", "get_default_parameters"], [31, 3, 1, "", "get_dipole_moment"], [31, 3, 1, "", "get_dynamical_matrix"], [31, 3, 1, "", "get_elastic_constants"], [31, 3, 1, "", "get_forces"], [31, 3, 1, "", "get_hessian"], [31, 3, 1, "", "get_magnetic_moment"], [31, 3, 1, "", "get_magnetic_moments"], [31, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [31, 3, 1, "", "get_nonaffine_forces"], [31, 3, 1, "", "get_numerical_non_affine_forces"], [31, 3, 1, "", "get_potential_energies"], [31, 3, 1, "", "get_potential_energy"], [31, 3, 1, "", "get_property"], [31, 3, 1, "", "get_stress"], [31, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [31, 3, 1, "", "get_stresses"], [31, 4, 1, "", "ignored_changes"], [31, 4, 1, "", "implemented_properties"], [31, 5, 1, "", "label"], [31, 3, 1, "", "read"], [31, 3, 1, "", "read_atoms"], [31, 3, 1, "", "reset"], [31, 3, 1, "", "set"], [31, 3, 1, "", "set_label"], [31, 3, 1, "", "sum_XX_sum_ijk_tau_XX_mn"], [31, 3, 1, "", "sum_XY_sum_ijk_tau_XY_mn"], [31, 3, 1, "", "sum_X_sum_ijk_tau_ijX_mn"], [31, 3, 1, "", "sum_X_sum_ijk_tau_ij_XOR_X_mn"], [31, 3, 1, "", "sum_ij_pi_ij_n"], [31, 3, 1, "", "sum_ij_sum_X_pi_X_n"], [31, 3, 1, "", "sum_ijk_tau_XY_mn"], [31, 3, 1, "", "todict"]], "matscipy.calculators.manybody.newmb.Manybody.Phi": [[31, 3, 1, "", "gradient"], [31, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.newmb.Manybody.Theta": [[31, 3, 1, "", "gradient"], [31, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials": [[32, 2, 1, "", "BornMayerCut"], [32, 2, 1, "", "HarmonicAngle"], [32, 2, 1, "", "HarmonicPair"], [32, 2, 1, "", "KumagaiAngle"], [32, 2, 1, "", "KumagaiPair"], [32, 2, 1, "", "LennardJones"], [32, 2, 1, "", "StillingerWeberAngle"], [32, 2, 1, "", "StillingerWeberPair"], [32, 2, 1, "", "TersoffBrennerAngle"], [32, 2, 1, "", "TersoffBrennerPair"], [32, 2, 1, "", "ZeroAngle"], [32, 2, 1, "", "ZeroPair"], [32, 1, 1, "", "angle_distance_defined"], [32, 1, 1, "", "distance_defined"]], "matscipy.calculators.manybody.potentials.BornMayerCut": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicAngle": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicPair": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiAngle": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiPair": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.LennardJones": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberAngle": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberPair": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerAngle": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerPair": [[32, 3, 1, "", "__init__"], [32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroAngle": [[32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroPair": [[32, 3, 1, "", "gradient"], [32, 3, 1, "", "hessian"]], "matscipy.calculators.mcfm": [[33, 2, 1, "", "MultiClusterForceMixingPotential"], [34, 0, 0, "-", "calculator"], [35, 0, 0, "-", "cluster_data"], [36, 0, 0, "-", "mcfm_parallel"], [39, 0, 0, "-", "neighbour_list_mcfm"], [42, 0, 0, "-", "qm_cluster"], [43, 0, 0, "-", "qm_cluster_tools"]], "matscipy.calculators.mcfm.MultiClusterForceMixingPotential": [[33, 3, 1, "", "__init__"], [33, 4, 1, "", "all_changes"], [33, 3, 1, "", "attach_hybrid_data"], [33, 3, 1, "", "band_structure"], [33, 3, 1, "", "calculate"], [33, 3, 1, "", "calculate_numerical_forces"], [33, 3, 1, "", "calculate_numerical_stress"], [33, 3, 1, "", "calculate_properties"], [33, 3, 1, "", "calculation_required"], [33, 3, 1, "", "check_state"], [33, 3, 1, "", "combine_qm_mm_forces"], [33, 3, 1, "", "compute_stress"], [33, 4, 1, "", "default_parameters"], [33, 5, 1, "", "directory"], [33, 4, 1, "", "discard_results_on_any_change"], [33, 3, 1, "", "evaluate_errors"], [33, 3, 1, "", "evaluate_qm_cluster_serial"], [33, 3, 1, "", "export_properties"], [33, 3, 1, "", "get_atoms"], [33, 3, 1, "", "get_charges"], [33, 3, 1, "", "get_default_parameters"], [33, 3, 1, "", "get_dipole_moment"], [33, 3, 1, "", "get_forces"], [33, 3, 1, "", "get_magnetic_moment"], [33, 3, 1, "", "get_magnetic_moments"], [33, 3, 1, "", "get_potential_energies"], [33, 3, 1, "", "get_potential_energy"], [33, 3, 1, "", "get_property"], [33, 3, 1, "", "get_stress"], [33, 3, 1, "", "get_stresses"], [33, 4, 1, "", "ignored_changes"], [33, 4, 1, "", "implemented_properties"], [33, 5, 1, "", "label"], [33, 3, 1, "", "print_message"], [33, 3, 1, "", "produce_classical_results"], [33, 3, 1, "", "produce_qm_clusters"], [33, 3, 1, "", "read"], [33, 3, 1, "", "read_atoms"], [33, 3, 1, "", "reset"], [33, 3, 1, "", "set"], [33, 3, 1, "", "set_label"], [33, 3, 1, "", "set_qm_atoms"], [33, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.calculator": [[34, 2, 1, "", "MultiClusterForceMixingPotential"]], "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential": [[34, 3, 1, "", "__init__"], [34, 4, 1, "", "all_changes"], [34, 3, 1, "", "attach_hybrid_data"], [34, 3, 1, "", "band_structure"], [34, 3, 1, "", "calculate"], [34, 3, 1, "", "calculate_numerical_forces"], [34, 3, 1, "", "calculate_numerical_stress"], [34, 3, 1, "", "calculate_properties"], [34, 3, 1, "", "calculation_required"], [34, 3, 1, "", "check_state"], [34, 3, 1, "", "combine_qm_mm_forces"], [34, 3, 1, "", "compute_stress"], [34, 4, 1, "", "default_parameters"], [34, 5, 1, "", "directory"], [34, 4, 1, "", "discard_results_on_any_change"], [34, 3, 1, "", "evaluate_errors"], [34, 3, 1, "", "evaluate_qm_cluster_serial"], [34, 3, 1, "", "export_properties"], [34, 3, 1, "", "get_atoms"], [34, 3, 1, "", "get_charges"], [34, 3, 1, "", "get_default_parameters"], [34, 3, 1, "", "get_dipole_moment"], [34, 3, 1, "", "get_forces"], [34, 3, 1, "", "get_magnetic_moment"], [34, 3, 1, "", "get_magnetic_moments"], [34, 3, 1, "", "get_potential_energies"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_property"], [34, 3, 1, "", "get_stress"], [34, 3, 1, "", "get_stresses"], [34, 4, 1, "", "ignored_changes"], [34, 4, 1, "", "implemented_properties"], [34, 5, 1, "", "label"], [34, 3, 1, "", "print_message"], [34, 3, 1, "", "produce_classical_results"], [34, 3, 1, "", "produce_qm_clusters"], [34, 3, 1, "", "read"], [34, 3, 1, "", "read_atoms"], [34, 3, 1, "", "reset"], [34, 3, 1, "", "set"], [34, 3, 1, "", "set_label"], [34, 3, 1, "", "set_qm_atoms"], [34, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.cluster_data": [[35, 2, 1, "", "ClusterData"]], "matscipy.calculators.mcfm.cluster_data.ClusterData": [[35, 3, 1, "", "__init__"], [35, 4, 1, "", "forces"], [35, 4, 1, "", "mark"], [35, 4, 1, "", "qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[37, 0, 0, "-", "mcfm_parallel_control"], [38, 0, 0, "-", "mcfm_parallel_worker"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[37, 1, 1, "", "get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[38, 1, 1, "", "worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[40, 0, 0, "-", "neighbour_list_base"], [41, 0, 0, "-", "neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[40, 2, 1, "", "NeighbourListBase"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase": [[40, 3, 1, "", "get_neighbours"], [40, 3, 1, "", "update"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[41, 2, 1, "", "NeighbourListMCFM"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM": [[41, 3, 1, "", "__init__"], [41, 3, 1, "", "do_update"], [41, 3, 1, "", "get_neighbours"], [41, 3, 1, "", "update"]], "matscipy.calculators.mcfm.qm_cluster": [[42, 2, 1, "", "QMCluster"]], "matscipy.calculators.mcfm.qm_cluster.QMCluster": [[42, 3, 1, "", "__init__"], [42, 3, 1, "", "attach_clustering_module"], [42, 3, 1, "", "attach_flagging_module"], [42, 3, 1, "", "attach_neighbour_list"], [42, 3, 1, "", "carve_cluster"], [42, 3, 1, "", "reset_energized_list"], [42, 3, 1, "", "update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[44, 0, 0, "-", "base_qm_cluster_tool"], [45, 0, 0, "-", "qm_clustering_tool"], [46, 0, 0, "-", "qm_flagging_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[44, 2, 1, "", "BaseQMClusterTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "find_neighbours"], [44, 3, 1, "", "hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[45, 2, 1, "", "QMClusteringTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool": [[45, 3, 1, "", "__init__"], [45, 3, 1, "", "carve_cluster"], [45, 3, 1, "", "complete_aromatic_rings"], [45, 3, 1, "", "create_buffer_region"], [45, 3, 1, "", "create_cluster_from_marks"], [45, 3, 1, "", "find_neighbours"], [45, 3, 1, "", "hydrogenate_cluster"], [45, 3, 1, "", "hydrogenate_dangling_bonds"], [45, 3, 1, "", "include_special_atom"], [45, 3, 1, "", "print_message"], [45, 3, 1, "", "replace_double_bond"], [45, 3, 1, "", "replace_single_bond"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[46, 2, 1, "", "QMFlaggingTool"], [46, 1, 1, "", "exponential_moving_average"], [46, 1, 1, "", "update_avg_property_per_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool": [[46, 3, 1, "", "__init__"], [46, 3, 1, "", "create_cluster_around_atom"], [46, 3, 1, "", "expand_cluster"], [46, 3, 1, "", "find_neighbours"], [46, 3, 1, "", "get_energized_list"], [46, 3, 1, "", "hydrogenate_cluster"], [46, 3, 1, "", "join_clusters"], [46, 3, 1, "", "update_qm_region"]], "matscipy.calculators.pair_potential": [[48, 0, 0, "-", "calculator"]], "matscipy.calculators.pair_potential.calculator": [[48, 2, 1, "", "BeestKramerSanten"], [48, 2, 1, "", "CutoffInteraction"], [48, 2, 1, "", "FeneLJCut"], [48, 2, 1, "", "LennardJones84"], [48, 2, 1, "", "LennardJonesCut"], [48, 2, 1, "", "LennardJonesLinear"], [48, 2, 1, "", "LennardJonesQuadratic"], [48, 2, 1, "", "PairPotential"]], "matscipy.calculators.pair_potential.calculator.BeestKramerSanten": [[48, 3, 1, "", "__init__"], [48, 5, 1, "", "cutoff"], [48, 3, 1, "", "derivative"], [48, 3, 1, "", "first_derivative"], [48, 3, 1, "", "get_cutoff"], [48, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.CutoffInteraction": [[48, 3, 1, "", "__init__"], [48, 5, 1, "", "cutoff"], [48, 3, 1, "", "derivative"], [48, 3, 1, "", "first_derivative"], [48, 3, 1, "", "get_cutoff"], [48, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.FeneLJCut": [[48, 3, 1, "", "__init__"], [48, 5, 1, "", "cutoff"], [48, 3, 1, "", "derivative"], [48, 3, 1, "", "first_derivative"], [48, 3, 1, "", "get_cutoff"], [48, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJones84": [[48, 3, 1, "", "__init__"], [48, 5, 1, "", "cutoff"], [48, 3, 1, "", "derivative"], [48, 3, 1, "", "first_derivative"], [48, 3, 1, "", "get_cutoff"], [48, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesCut": [[48, 3, 1, "", "__init__"], [48, 5, 1, "", "cutoff"], [48, 3, 1, "", "derivative"], [48, 3, 1, "", "first_derivative"], [48, 3, 1, "", "get_cutoff"], [48, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesLinear": [[48, 3, 1, "", "__init__"], [48, 5, 1, "", "cutoff"], [48, 3, 1, "", "derivative"], [48, 3, 1, "", "first_derivative"], [48, 3, 1, "", "get_cutoff"], [48, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic": [[48, 3, 1, "", "__init__"], [48, 5, 1, "", "cutoff"], [48, 3, 1, "", "derivative"], [48, 3, 1, "", "first_derivative"], [48, 3, 1, "", "get_cutoff"], [48, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.PairPotential": [[48, 3, 1, "", "__init__"], [48, 3, 1, "", "band_structure"], [48, 3, 1, "", "calculate"], [48, 3, 1, "", "calculate_numerical_forces"], [48, 3, 1, "", "calculate_numerical_stress"], [48, 3, 1, "", "calculate_properties"], [48, 3, 1, "", "calculation_required"], [48, 3, 1, "", "check_state"], [48, 4, 1, "", "default_parameters"], [48, 5, 1, "", "directory"], [48, 4, 1, "", "discard_results_on_any_change"], [48, 3, 1, "", "export_properties"], [48, 3, 1, "", "get_atoms"], [48, 3, 1, "", "get_birch_coefficients"], [48, 3, 1, "", "get_born_elastic_constants"], [48, 3, 1, "", "get_charges"], [48, 3, 1, "", "get_default_parameters"], [48, 3, 1, "", "get_dipole_moment"], [48, 3, 1, "", "get_dynamical_matrix"], [48, 3, 1, "", "get_elastic_constants"], [48, 3, 1, "", "get_forces"], [48, 3, 1, "", "get_hessian"], [48, 3, 1, "", "get_magnetic_moment"], [48, 3, 1, "", "get_magnetic_moments"], [48, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [48, 3, 1, "", "get_nonaffine_forces"], [48, 3, 1, "", "get_numerical_non_affine_forces"], [48, 3, 1, "", "get_potential_energies"], [48, 3, 1, "", "get_potential_energy"], [48, 3, 1, "", "get_property"], [48, 3, 1, "", "get_stress"], [48, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [48, 3, 1, "", "get_stresses"], [48, 4, 1, "", "ignored_changes"], [48, 4, 1, "", "implemented_properties"], [48, 5, 1, "", "label"], [48, 4, 1, "", "name"], [48, 3, 1, "", "read"], [48, 3, 1, "", "read_atoms"], [48, 3, 1, "", "reset"], [48, 3, 1, "", "set"], [48, 3, 1, "", "set_label"], [48, 3, 1, "", "todict"]], "matscipy.calculators.polydisperse": [[50, 0, 0, "-", "calculator"]], "matscipy.calculators.polydisperse.calculator": [[50, 2, 1, "", "InversePowerLawPotential"], [50, 2, 1, "", "Polydisperse"]], "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "derivative"], [50, 3, 1, "", "first_derivative"], [50, 3, 1, "", "get_coeffs"], [50, 3, 1, "", "get_cutoff"], [50, 3, 1, "", "get_maxSize"], [50, 3, 1, "", "get_minSize"], [50, 3, 1, "", "mix_sizes"], [50, 3, 1, "", "second_derivative"]], "matscipy.calculators.polydisperse.calculator.Polydisperse": [[50, 3, 1, "", "__init__"], [50, 3, 1, "", "band_structure"], [50, 3, 1, "", "calculate"], [50, 3, 1, "", "calculate_numerical_forces"], [50, 3, 1, "", "calculate_numerical_stress"], [50, 3, 1, "", "calculate_properties"], [50, 3, 1, "", "calculation_required"], [50, 3, 1, "", "check_state"], [50, 4, 1, "", "default_parameters"], [50, 5, 1, "", "directory"], [50, 4, 1, "", "discard_results_on_any_change"], [50, 3, 1, "", "export_properties"], [50, 3, 1, "", "get_atoms"], [50, 3, 1, "", "get_birch_coefficients"], [50, 3, 1, "", "get_born_elastic_constants"], [50, 3, 1, "", "get_charges"], [50, 3, 1, "", "get_default_parameters"], [50, 3, 1, "", "get_dipole_moment"], [50, 3, 1, "", "get_dynamical_matrix"], [50, 3, 1, "", "get_elastic_constants"], [50, 3, 1, "", "get_forces"], [50, 3, 1, "", "get_hessian"], [50, 3, 1, "", "get_magnetic_moment"], [50, 3, 1, "", "get_magnetic_moments"], [50, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [50, 3, 1, "", "get_nonaffine_forces"], [50, 3, 1, "", "get_numerical_non_affine_forces"], [50, 3, 1, "", "get_potential_energies"], [50, 3, 1, "", "get_potential_energy"], [50, 3, 1, "", "get_property"], [50, 3, 1, "", "get_stress"], [50, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [50, 3, 1, "", "get_stresses"], [50, 4, 1, "", "ignored_changes"], [50, 4, 1, "", "implemented_properties"], [50, 5, 1, "", "label"], [50, 4, 1, "", "name"], [50, 3, 1, "", "read"], [50, 3, 1, "", "read_atoms"], [50, 3, 1, "", "reset"], [50, 3, 1, "", "set"], [50, 3, 1, "", "set_label"], [50, 3, 1, "", "todict"]], "matscipy.calculators.supercell_calculator": [[51, 2, 1, "", "SupercellCalculator"]], "matscipy.calculators.supercell_calculator.SupercellCalculator": [[51, 3, 1, "", "__init__"], [51, 3, 1, "", "band_structure"], [51, 3, 1, "", "calculate"], [51, 3, 1, "", "calculate_numerical_forces"], [51, 3, 1, "", "calculate_numerical_stress"], [51, 3, 1, "", "calculate_properties"], [51, 3, 1, "", "calculation_required"], [51, 3, 1, "", "check_state"], [51, 4, 1, "", "default_parameters"], [51, 5, 1, "", "directory"], [51, 4, 1, "", "discard_results_on_any_change"], [51, 3, 1, "", "export_properties"], [51, 3, 1, "", "get_atoms"], [51, 3, 1, "", "get_charges"], [51, 3, 1, "", "get_default_parameters"], [51, 3, 1, "", "get_dipole_moment"], [51, 3, 1, "", "get_forces"], [51, 3, 1, "", "get_magnetic_moment"], [51, 3, 1, "", "get_magnetic_moments"], [51, 3, 1, "", "get_potential_energies"], [51, 3, 1, "", "get_potential_energy"], [51, 3, 1, "", "get_property"], [51, 3, 1, "", "get_stress"], [51, 3, 1, "", "get_stresses"], [51, 4, 1, "", "ignored_changes"], [51, 4, 1, "", "implemented_properties"], [51, 5, 1, "", "label"], [51, 4, 1, "", "name"], [51, 3, 1, "", "read"], [51, 3, 1, "", "read_atoms"], [51, 3, 1, "", "reset"], [51, 3, 1, "", "set"], [51, 3, 1, "", "set_label"], [51, 3, 1, "", "todict"]], "matscipy.deformation": [[52, 2, 1, "", "RemoveSimpleShearDeformation"], [52, 1, 1, "", "get_shear_distance"]], "matscipy.deformation.RemoveSimpleShearDeformation": [[52, 3, 1, "", "__init__"]], "matscipy.dislocation": [[53, 2, 1, "", "BCCEdge100110Dislocation"], [53, 2, 1, "", "BCCEdge100Dislocation"], [53, 2, 1, "", "BCCEdge111Dislocation"], [53, 2, 1, "", "BCCMixed111Dislocation"], [53, 2, 1, "", "BCCScrew111Dislocation"], [53, 2, 1, "", "BodyCenteredCubicOctahedralFactory"], [53, 2, 1, "", "BodyCenteredCubicTetrahedralFactory"], [53, 2, 1, "", "CubicCrystalDislocation"], [53, 2, 1, "", "CubicCrystalDissociatedDislocation"], [53, 2, 1, "", "DiamondGlide30degreePartial"], [53, 2, 1, "", "DiamondGlide60Degree"], [53, 2, 1, "", "DiamondGlide90degreePartial"], [53, 2, 1, "", "DiamondGlideScrew"], [53, 2, 1, "", "FCCEdge110Dislocation"], [53, 2, 1, "", "FCCEdgeShockleyPartial"], [53, 2, 1, "", "FCCScrew110Dislocation"], [53, 2, 1, "", "FCCScrewShockleyPartial"], [53, 2, 1, "", "FixedLineAtoms"], [53, 1, 1, "", "check_duplicates"], [53, 1, 1, "", "compare_configurations"], [53, 1, 1, "", "cost_function"], [53, 1, 1, "", "dipole_displacement_angle"], [53, 1, 1, "", "fit_core_position"], [53, 1, 1, "", "fit_core_position_images"], [53, 1, 1, "", "gamma_line"], [53, 1, 1, "", "get_centering_mask"], [53, 1, 1, "", "get_elastic_constants"], [53, 1, 1, "", "get_u_img"], [53, 1, 1, "", "make_barrier_configurations"], [53, 1, 1, "", "make_edge_cyl"], [53, 1, 1, "", "make_edge_cyl_001_100"], [53, 1, 1, "", "make_screw_cyl"], [53, 1, 1, "", "make_screw_cyl_kink"], [53, 1, 1, "", "make_screw_quadrupole"], [53, 1, 1, "", "make_screw_quadrupole_kink"], [53, 1, 1, "", "ovito_dxa_straight_dislo_info"], [53, 1, 1, "", "plot_bulk"], [53, 1, 1, "", "plot_vitek"], [53, 1, 1, "", "read_dislo_QMMM"], [53, 1, 1, "", "screw_cyl_octahedral"], [53, 1, 1, "", "screw_cyl_tetrahedral"], [53, 1, 1, "", "show_NEB_configurations"], [53, 1, 1, "", "show_configuration"], [53, 1, 1, "", "slice_long_dislo"]], "matscipy.dislocation.BCCEdge100110Dislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCEdge100Dislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCEdge111Dislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCMixed111Dislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BCCScrew111Dislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.BodyCenteredCubicOctahedralFactory": [[53, 3, 1, "", "align"], [53, 4, 1, "", "atoms_in_unit_cell"], [53, 4, 1, "", "basis_factor"], [53, 4, 1, "", "bravais_basis"], [53, 3, 1, "", "calc_num_atoms"], [53, 3, 1, "", "check_basis_volume"], [53, 4, 1, "", "chop_tolerance"], [53, 3, 1, "", "convert_to_natural_basis"], [53, 4, 1, "", "element_basis"], [53, 3, 1, "", "find_directions"], [53, 3, 1, "", "find_ortho"], [53, 3, 1, "", "get_lattice_constant"], [53, 3, 1, "", "inside"], [53, 4, 1, "", "int_basis"], [53, 4, 1, "", "inverse_basis"], [53, 4, 1, "", "inverse_basis_factor"], [53, 3, 1, "", "make_crystal_basis"], [53, 3, 1, "", "make_list_of_atoms"], [53, 3, 1, "", "make_unit_cell"], [53, 4, 1, "", "other"], [53, 3, 1, "", "print_directions_and_miller"], [53, 3, 1, "", "process_element"], [53, 3, 1, "", "put_atom"], [53, 4, 1, "", "xtal_name"]], "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory": [[53, 3, 1, "", "align"], [53, 4, 1, "", "atoms_in_unit_cell"], [53, 4, 1, "", "basis_factor"], [53, 4, 1, "", "bravais_basis"], [53, 3, 1, "", "calc_num_atoms"], [53, 3, 1, "", "check_basis_volume"], [53, 4, 1, "", "chop_tolerance"], [53, 3, 1, "", "convert_to_natural_basis"], [53, 4, 1, "", "element_basis"], [53, 3, 1, "", "find_directions"], [53, 3, 1, "", "find_ortho"], [53, 3, 1, "", "get_lattice_constant"], [53, 3, 1, "", "inside"], [53, 4, 1, "", "int_basis"], [53, 4, 1, "", "inverse_basis"], [53, 4, 1, "", "inverse_basis_factor"], [53, 3, 1, "", "make_crystal_basis"], [53, 3, 1, "", "make_list_of_atoms"], [53, 3, 1, "", "make_unit_cell"], [53, 4, 1, "", "other"], [53, 3, 1, "", "print_directions_and_miller"], [53, 3, 1, "", "process_element"], [53, 3, 1, "", "put_atom"], [53, 4, 1, "", "xtal_name"]], "matscipy.dislocation.CubicCrystalDislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.CubicCrystalDissociatedDislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlide30degreePartial": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlide60Degree": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlide90degreePartial": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.DiamondGlideScrew": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCEdge110Dislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCEdgeShockleyPartial": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCScrew110Dislocation": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FCCScrewShockleyPartial": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "build_cylinder"], [53, 3, 1, "", "build_glide_configurations"], [53, 3, 1, "", "build_impurity_cylinder"], [53, 3, 1, "", "displacements"], [53, 3, 1, "", "init_stroh"], [53, 3, 1, "", "plot_unit_cell"], [53, 3, 1, "", "set_burgers"]], "matscipy.dislocation.FixedLineAtoms": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "adjust_forces"], [53, 3, 1, "", "adjust_positions"]], "matscipy.drift": [[54, 2, 1, "", "RemoveDrift"]], "matscipy.drift.RemoveDrift": [[54, 3, 1, "", "__init__"]], "matscipy.elasticity": [[55, 2, 1, "", "CubicElasticModuli"], [55, 1, 1, "", "Voigt_6_to_full_3x3_strain"], [55, 1, 1, "", "Voigt_6_to_full_3x3_stress"], [55, 1, 1, "", "Voigt_6x6_to_cubic"], [55, 1, 1, "", "Voigt_6x6_to_full_3x3x3x3"], [55, 1, 1, "", "cubic_to_Voigt_6x6"], [55, 1, 1, "", "elastic_moduli"], [55, 1, 1, "", "fit_elastic_constants"], [55, 1, 1, "", "full_3x3_to_Voigt_6_index"], [55, 1, 1, "", "full_3x3_to_Voigt_6_strain"], [55, 1, 1, "", "full_3x3_to_Voigt_6_stress"], [55, 1, 1, "", "full_3x3x3x3_to_Voigt_6x6"], [55, 1, 1, "", "generate_strained_configs"], [55, 1, 1, "", "invariants"], [55, 1, 1, "", "measure_triclinic_elastic_constants"], [55, 1, 1, "", "nonaffine_elastic_contribution"], [55, 1, 1, "", "poisson_ratio"], [55, 1, 1, "", "rotate_cubic_elastic_constants"], [55, 1, 1, "", "rotate_elastic_constants"], [55, 1, 1, "", "youngs_modulus"]], "matscipy.elasticity.CubicElasticModuli": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "compliance"], [55, 3, 1, "", "rotate"], [55, 3, 1, "", "stiffness"], [55, 4, 1, "", "tol"]], "matscipy.electrochemistry": [[57, 1, 1, "", "continuous2discrete"], [58, 0, 0, "-", "poisson_boltzmann_distribution"], [59, 0, 0, "-", "poisson_nernst_planck_solver"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[58, 1, 1, "", "charge_density"], [58, 1, 1, "", "concentration"], [58, 1, 1, "", "debye"], [58, 1, 1, "", "gamma"], [58, 1, 1, "", "ionic_strength"], [58, 1, 1, "", "main"], [58, 1, 1, "", "potential"], [58, 1, 1, "", "test"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[59, 1, 1, "", "B"], [59, 2, 1, "", "PoissonNernstPlanckSystem"], [59, 1, 1, "", "jacobian"]], "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem": [[59, 3, 1, "", "G"], [59, 5, 1, "", "I"], [59, 3, 1, "", "__init__"], [59, 5, 1, "", "charge_density"], [59, 5, 1, "", "concentration"], [59, 3, 1, "", "discretize"], [59, 5, 1, "", "grid"], [59, 3, 1, "", "init"], [59, 3, 1, "", "initial_values"], [59, 5, 1, "", "lambda_D"], [59, 3, 1, "", "leftControlledVolumeSchemeFluxBC"], [59, 3, 1, "", "leftDirichletBC"], [59, 3, 1, "", "leftFiniteDifferenceSchemeFluxBC"], [59, 3, 1, "", "leftPotentialDirichletBC"], [59, 3, 1, "", "leftPotentialRobinBC"], [59, 3, 1, "", "leftRobinBC"], [59, 3, 1, "", "nernst_planck_pde"], [59, 3, 1, "", "newton"], [59, 3, 1, "", "numberConservationConstraint"], [59, 3, 1, "", "poisson_pde"], [59, 5, 1, "", "potential"], [59, 3, 1, "", "rightControlledVolumeSchemeFluxBC"], [59, 3, 1, "", "rightDirichletBC"], [59, 3, 1, "", "rightFiniteDifferenceSchemeFluxBC"], [59, 3, 1, "", "rightPotentialDirichletBC"], [59, 3, 1, "", "rightPotentialRobinBC"], [59, 3, 1, "", "rightRobinBC"], [59, 3, 1, "", "solve"], [59, 3, 1, "", "solver_callback"], [59, 3, 1, "", "useStandardCellBC"], [59, 3, 1, "", "useStandardDirichletBC"], [59, 3, 1, "", "useStandardInterfaceBC"], [59, 3, 1, "", "useSternLayerCellBC"], [59, 5, 1, "", "x1_scaled"]], "matscipy.fracture_mechanics": [[61, 0, 0, "-", "clusters"], [62, 0, 0, "-", "crack"], [63, 0, 0, "-", "crackpathsel"], [64, 0, 0, "-", "energy_release"], [65, 0, 0, "-", "idealbrittlesolid"]], "matscipy.fracture_mechanics.clusters": [[61, 1, 1, "", "bcc"], [61, 1, 1, "", "cluster"], [61, 1, 1, "", "diamond"], [61, 1, 1, "", "fcc"], [61, 1, 1, "", "sc"], [61, 1, 1, "", "set_groups"], [61, 1, 1, "", "set_regions"]], "matscipy.fracture_mechanics.crack": [[62, 2, 1, "", "ConstantStrainRate"], [62, 2, 1, "", "CubicCrystalCrack"], [62, 1, 1, "", "G_to_strain"], [62, 2, 1, "", "IsotropicStressField"], [62, 2, 1, "", "RectilinearAnisotropicCrack"], [62, 2, 1, "", "SinclairCrack"], [62, 1, 1, "", "counted"], [62, 1, 1, "", "deformation_gradient_residual"], [62, 1, 1, "", "deformation_gradient_residuals"], [62, 1, 1, "", "displacement_residual"], [62, 1, 1, "", "displacement_residuals"], [62, 1, 1, "", "find_tip_broken_bonds"], [62, 1, 1, "", "find_tip_coordination"], [62, 1, 1, "", "find_tip_stress_field"], [62, 1, 1, "", "fit_crack_stress_field"], [62, 1, 1, "", "get_energy_release_rate"], [62, 1, 1, "", "get_strain"], [62, 1, 1, "", "get_stress_intensity_factor"], [62, 1, 1, "", "isotropic_modeI_crack_tip_displacement_field"], [62, 1, 1, "", "isotropic_modeI_crack_tip_stress_field"], [62, 1, 1, "", "plot_stress_fields"], [62, 1, 1, "", "print_crack_system"], [62, 1, 1, "", "strain_to_G"], [62, 1, 1, "", "thin_strip_displacement_y"]], "matscipy.fracture_mechanics.crack.ConstantStrainRate": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "adjust_forces"], [62, 3, 1, "", "adjust_positions"], [62, 3, 1, "", "apply_strain"], [62, 3, 1, "", "copy"]], "matscipy.fracture_mechanics.crack.CubicCrystalCrack": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "crack_tip_position"], [62, 3, 1, "", "crack_tip_position_y"], [62, 3, 1, "", "deformation_gradient"], [62, 3, 1, "", "deformation_gradient_from_cartesian_coordinates"], [62, 3, 1, "", "deformation_gradient_from_cylinder_coordinates"], [62, 3, 1, "", "displacements"], [62, 3, 1, "", "displacements_from_cartesian_coordinates"], [62, 3, 1, "", "displacements_from_cylinder_coordinates"], [62, 3, 1, "", "k1g"], [62, 3, 1, "", "k1gsqG"], [62, 3, 1, "", "scale_displacements"], [62, 3, 1, "", "stresses"], [62, 3, 1, "", "stresses_from_cartesian_coordinates"], [62, 3, 1, "", "stresses_from_cylinder_coordinates"]], "matscipy.fracture_mechanics.crack.IsotropicStressField": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "get_stresses"]], "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "deformation_gradient"], [62, 3, 1, "", "displacements"], [62, 3, 1, "", "k1g"], [62, 3, 1, "", "k1gsqG"], [62, 3, 1, "", "rtheta"], [62, 3, 1, "", "set_plane_strain"], [62, 3, 1, "", "set_plane_stress"], [62, 3, 1, "", "stresses"]], "matscipy.fracture_mechanics.crack.SinclairCrack": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "animate"], [62, 3, 1, "", "arc_length_continuation"], [62, 3, 1, "", "convergence_line_plot"], [62, 3, 1, "", "fit_cle"], [62, 3, 1, "", "get_crack_tip_force"], [62, 3, 1, "", "get_deformation_gradient"], [62, 3, 1, "", "get_dofs"], [62, 3, 1, "", "get_f_alpha_correction"], [62, 3, 1, "", "get_forces"], [62, 3, 1, "", "get_k_force"], [62, 3, 1, "", "get_potential_energy"], [62, 3, 1, "", "get_precon"], [62, 3, 1, "", "get_xdot"], [62, 3, 1, "", "optimize"], [62, 3, 1, "", "pack"], [62, 3, 1, "", "plot"], [62, 3, 1, "", "rescale_k"], [62, 3, 1, "", "set_atoms"], [62, 3, 1, "", "set_dofs"], [62, 3, 1, "", "set_shiftmask"], [62, 3, 1, "", "strain_err"], [62, 3, 1, "", "u_cle"], [62, 3, 1, "", "unpack"], [62, 3, 1, "", "update_atoms"], [62, 3, 1, "", "update_precon"], [62, 3, 1, "", "write_atoms_to_file"]], "matscipy.fracture_mechanics.energy_release": [[64, 1, 1, "", "J_integral"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[65, 2, 1, "", "IdealBrittleSolid"], [65, 1, 1, "", "extend_strip"], [65, 1, 1, "", "find_crack_tip"], [65, 1, 1, "", "find_triangles_2d"], [65, 1, 1, "", "set_constraints"], [65, 1, 1, "", "set_initial_velocities"], [65, 1, 1, "", "triangular_lattice_slab"]], "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "band_structure"], [65, 3, 1, "", "calculate"], [65, 3, 1, "", "calculate_numerical_forces"], [65, 3, 1, "", "calculate_numerical_stress"], [65, 3, 1, "", "calculate_properties"], [65, 3, 1, "", "calculation_required"], [65, 3, 1, "", "check_state"], [65, 4, 1, "", "default_parameters"], [65, 5, 1, "", "directory"], [65, 4, 1, "", "discard_results_on_any_change"], [65, 3, 1, "", "export_properties"], [65, 3, 1, "", "get_atoms"], [65, 3, 1, "", "get_charges"], [65, 3, 1, "", "get_default_parameters"], [65, 3, 1, "", "get_dipole_moment"], [65, 3, 1, "", "get_elastic_moduli"], [65, 3, 1, "", "get_forces"], [65, 3, 1, "", "get_magnetic_moment"], [65, 3, 1, "", "get_magnetic_moments"], [65, 3, 1, "", "get_poisson_ratio"], [65, 3, 1, "", "get_potential_energies"], [65, 3, 1, "", "get_potential_energy"], [65, 3, 1, "", "get_property"], [65, 3, 1, "", "get_stress"], [65, 3, 1, "", "get_stresses"], [65, 3, 1, "", "get_wave_speeds"], [65, 3, 1, "", "get_youngs_modulus"], [65, 4, 1, "", "ignored_changes"], [65, 4, 1, "", "implemented_properties"], [65, 5, 1, "", "label"], [65, 3, 1, "", "read"], [65, 3, 1, "", "read_atoms"], [65, 3, 1, "", "reset"], [65, 3, 1, "", "set"], [65, 3, 1, "", "set_label"], [65, 3, 1, "", "set_reference_crystal"], [65, 3, 1, "", "todict"]], "matscipy.hessian_finite_differences": [[66, 1, 1, "", "fd_hessian"]], "matscipy.hydrogenate": [[67, 1, 1, "", "hydrogenate"]], "matscipy.io": [[69, 0, 0, "-", "lammpsdata"], [70, 0, 0, "-", "metis"], [71, 0, 0, "-", "opls"], [72, 0, 0, "-", "tbl"]], "matscipy.io.lammpsdata": [[69, 2, 1, "", "LAMMPSData"], [69, 1, 1, "", "check_legal_name"], [69, 1, 1, "", "column_size"], [69, 1, 1, "", "read_molecules_from_lammps_data"]], "matscipy.io.lammpsdata.LAMMPSData": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "read"], [69, 3, 1, "", "write"]], "matscipy.io.metis": [[70, 1, 1, "", "save_metis"]], "matscipy.io.opls": [[71, 1, 1, "", "read_block"], [71, 1, 1, "", "read_cutoffs"], [71, 1, 1, "", "read_extended_xyz"], [71, 1, 1, "", "read_lammps_data"], [71, 1, 1, "", "read_lammps_definitions"], [71, 1, 1, "", "read_parameter_file"], [71, 1, 1, "", "update_from_lammps_dump"], [71, 1, 1, "", "write_lammps"], [71, 1, 1, "", "write_lammps_atoms"], [71, 1, 1, "", "write_lammps_definitions"], [71, 1, 1, "", "write_lammps_in"]], "matscipy.io.tbl": [[72, 1, 1, "", "loadtbl"], [72, 1, 1, "", "savetbl"]], "matscipy.logger": [[73, 2, 1, "", "Logger"], [73, 1, 1, "", "flatten"], [73, 1, 1, "", "hdr_str"], [73, 1, 1, "", "hdrfmt_str"], [73, 1, 1, "", "numfmt_str"]], "matscipy.logger.Logger": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "flush"], [73, 3, 1, "", "get_logfile"], [73, 3, 1, "", "has_logfile"], [73, 3, 1, "", "iteration_finished"], [73, 3, 1, "", "pr"], [73, 3, 1, "", "set_logfile"], [73, 3, 1, "", "set_outevery"], [73, 3, 1, "", "st"], [73, 3, 1, "", "warn"]], "matscipy.neighbours": [[74, 2, 1, "", "CutoffNeighbourhood"], [74, 2, 1, "", "MolecularNeighbourhood"], [74, 2, 1, "", "Neighbourhood"], [74, 1, 1, "", "find_common_neighbours"], [74, 1, 1, "", "find_indices_of_reversed_pairs"], [74, 1, 1, "", "mic"], [74, 1, 1, "", "neighbour_list"], [74, 1, 1, "", "triplet_list"]], "matscipy.neighbours.CutoffNeighbourhood": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "compute_distances"], [74, 3, 1, "", "connected_triplets"], [74, 3, 1, "", "double_neighbourhood"], [74, 3, 1, "", "find_triplet_types"], [74, 3, 1, "", "get_pairs"], [74, 3, 1, "", "get_triplets"], [74, 3, 1, "", "lexsort"], [74, 3, 1, "", "make_result"], [74, 3, 1, "", "mask"], [74, 3, 1, "", "reverse_pair_indices"], [74, 3, 1, "", "triplet_to_numbers"]], "matscipy.neighbours.MolecularNeighbourhood": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "complete_connectivity"], [74, 3, 1, "", "compute_distances"], [74, 3, 1, "", "connected_triplets"], [74, 3, 1, "", "double_connectivity"], [74, 3, 1, "", "double_neighbourhood"], [74, 3, 1, "", "find_triplet_types"], [74, 3, 1, "", "get_pairs"], [74, 3, 1, "", "get_triplets"], [74, 3, 1, "", "lexsort"], [74, 3, 1, "", "make_result"], [74, 3, 1, "", "mask"], [74, 5, 1, "", "molecules"], [74, 5, 1, "", "pair_type"], [74, 3, 1, "", "reverse_pair_indices"], [74, 3, 1, "", "triplet_to_numbers"], [74, 5, 1, "", "triplet_type"]], "matscipy.neighbours.Neighbourhood": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "compute_distances"], [74, 3, 1, "", "connected_triplets"], [74, 3, 1, "", "double_neighbourhood"], [74, 3, 1, "", "find_triplet_types"], [74, 3, 1, "", "get_pairs"], [74, 3, 1, "", "get_triplets"], [74, 3, 1, "", "lexsort"], [74, 3, 1, "", "make_result"], [74, 3, 1, "", "mask"], [74, 3, 1, "", "reverse_pair_indices"], [74, 3, 1, "", "triplet_to_numbers"]], "matscipy.numerical": [[75, 1, 1, "", "get_derivative_volume"], [75, 1, 1, "", "get_derivative_wave_vector"], [75, 1, 1, "", "numerical_forces"], [75, 1, 1, "", "numerical_hessian"], [75, 1, 1, "", "numerical_nonaffine_forces"], [75, 1, 1, "", "numerical_nonaffine_forces_reference"], [75, 1, 1, "", "numerical_stress"]], "matscipy.numpy_tricks": [[76, 1, 1, "", "mabincount"]], "matscipy.opls": [[77, 2, 1, "", "AnglesData"], [77, 2, 1, "", "BondData"], [77, 2, 1, "", "CutoffList"], [77, 2, 1, "", "DihedralsData"], [77, 2, 1, "", "LJQData"], [77, 2, 1, "", "OPLSStructure"], [77, 1, 1, "", "twochar"]], "matscipy.opls.AnglesData": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "add_name"], [77, 3, 1, "", "get_name"], [77, 3, 1, "", "name_value"], [77, 3, 1, "", "set_names"]], "matscipy.opls.BondData": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "get_name"], [77, 3, 1, "", "get_value"], [77, 3, 1, "", "name_value"], [77, 3, 1, "", "set_names"]], "matscipy.opls.CutoffList": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "get_name"], [77, 3, 1, "", "get_value"], [77, 3, 1, "", "max"], [77, 3, 1, "", "name_value"], [77, 3, 1, "", "set_names"]], "matscipy.opls.DihedralsData": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "add_name"], [77, 3, 1, "", "get_name"], [77, 3, 1, "", "name_value"], [77, 3, 1, "", "set_names"]], "matscipy.opls.LJQData": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "clear"], [77, 3, 1, "", "copy"], [77, 3, 1, "", "fromkeys"], [77, 3, 1, "", "get"], [77, 3, 1, "", "items"], [77, 3, 1, "", "keys"], [77, 3, 1, "", "pop"], [77, 3, 1, "", "popitem"], [77, 3, 1, "", "setdefault"], [77, 3, 1, "", "update"], [77, 3, 1, "", "values"]], "matscipy.opls.OPLSStructure": [[77, 3, 1, "", "__init__"], [77, 3, 1, "", "append"], [77, 4, 1, "", "ase_objtype"], [77, 5, 1, "", "calc"], [77, 5, 1, "", "cell"], [77, 3, 1, "", "center"], [77, 5, 1, "", "constraints"], [77, 3, 1, "", "copy"], [77, 4, 1, "", "default_map"], [77, 3, 1, "", "edit"], [77, 3, 1, "", "euler_rotate"], [77, 3, 1, "", "extend"], [77, 3, 1, "", "fromdict"], [77, 3, 1, "", "get_all_distances"], [77, 3, 1, "", "get_angle"], [77, 3, 1, "", "get_angles"], [77, 3, 1, "", "get_angular_momentum"], [77, 3, 1, "", "get_array"], [77, 3, 1, "", "get_atomic_numbers"], [77, 3, 1, "", "get_bonds"], [77, 3, 1, "", "get_calculator"], [77, 3, 1, "", "get_cell"], [77, 3, 1, "", "get_cell_lengths_and_angles"], [77, 3, 1, "", "get_celldisp"], [77, 3, 1, "", "get_center_of_mass"], [77, 3, 1, "", "get_charges"], [77, 3, 1, "", "get_chemical_formula"], [77, 3, 1, "", "get_chemical_symbols"], [77, 3, 1, "", "get_dihedral"], [77, 3, 1, "", "get_dihedrals"], [77, 3, 1, "", "get_dipole_moment"], [77, 3, 1, "", "get_distance"], [77, 3, 1, "", "get_distances"], [77, 3, 1, "", "get_forces"], [77, 3, 1, "", "get_global_number_of_atoms"], [77, 3, 1, "", "get_initial_charges"], [77, 3, 1, "", "get_initial_magnetic_moments"], [77, 3, 1, "", "get_kinetic_energy"], [77, 3, 1, "", "get_magnetic_moment"], [77, 3, 1, "", "get_magnetic_moments"], [77, 3, 1, "", "get_masses"], [77, 3, 1, "", "get_momenta"], [77, 3, 1, "", "get_moments_of_inertia"], [77, 3, 1, "", "get_neighbors"], [77, 3, 1, "", "get_number_of_atoms"], [77, 3, 1, "", "get_pbc"], [77, 3, 1, "", "get_positions"], [77, 3, 1, "", "get_potential_energies"], [77, 3, 1, "", "get_potential_energy"], [77, 3, 1, "", "get_properties"], [77, 3, 1, "", "get_reciprocal_cell"], [77, 3, 1, "", "get_scaled_positions"], [77, 3, 1, "", "get_stress"], [77, 3, 1, "", "get_stresses"], [77, 3, 1, "", "get_tags"], [77, 3, 1, "", "get_temperature"], [77, 3, 1, "", "get_total_energy"], [77, 3, 1, "", "get_types"], [77, 3, 1, "", "get_velocities"], [77, 3, 1, "", "get_volume"], [77, 3, 1, "", "has"], [77, 3, 1, "", "iterimages"], [77, 3, 1, "", "new_array"], [77, 5, 1, "", "number_of_lattice_vectors"], [77, 5, 1, "", "numbers"], [77, 5, 1, "", "pbc"], [77, 3, 1, "", "pop"], [77, 5, 1, "", "positions"], [77, 3, 1, "", "rattle"], [77, 3, 1, "", "repeat"], [77, 3, 1, "", "rotate"], [77, 3, 1, "", "rotate_dihedral"], [77, 3, 1, "", "set_angle"], [77, 3, 1, "", "set_array"], [77, 3, 1, "", "set_atom_data"], [77, 3, 1, "", "set_atomic_numbers"], [77, 3, 1, "", "set_calculator"], [77, 3, 1, "", "set_cell"], [77, 3, 1, "", "set_celldisp"], [77, 3, 1, "", "set_center_of_mass"], [77, 3, 1, "", "set_chemical_symbols"], [77, 3, 1, "", "set_constraint"], [77, 3, 1, "", "set_cutoffs"], [77, 3, 1, "", "set_dihedral"], [77, 3, 1, "", "set_distance"], [77, 3, 1, "", "set_initial_charges"], [77, 3, 1, "", "set_initial_magnetic_moments"], [77, 3, 1, "", "set_masses"], [77, 3, 1, "", "set_momenta"], [77, 3, 1, "", "set_pbc"], [77, 3, 1, "", "set_positions"], [77, 3, 1, "", "set_scaled_positions"], [77, 3, 1, "", "set_tags"], [77, 3, 1, "", "set_types"], [77, 3, 1, "", "set_velocities"], [77, 5, 1, "", "symbols"], [77, 3, 1, "", "todict"], [77, 3, 1, "", "translate"], [77, 3, 1, "", "wrap"], [77, 3, 1, "", "write"]], "matscipy.pressurecoupling": [[78, 2, 1, "", "AutoDamping"], [78, 2, 1, "", "FixedDamping"], [78, 2, 1, "", "FixedMassCriticalDamping"], [78, 2, 1, "", "SlideLog"], [78, 2, 1, "", "SlideLogger"], [78, 2, 1, "", "SlideWithNormalPressureCuboidCell"]], "matscipy.pressurecoupling.AutoDamping": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedDamping": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedMassCriticalDamping": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.SlideLog": [[78, 4, 1, "", "P_bottom"], [78, 4, 1, "", "P_top"], [78, 4, 1, "", "T_thermostat"], [78, 3, 1, "", "__init__"], [78, 4, 1, "", "a"], [78, 4, 1, "", "h"], [78, 4, 1, "", "rows"], [78, 4, 1, "", "step"], [78, 4, 1, "", "tau_bottom"], [78, 4, 1, "", "tau_top"], [78, 4, 1, "", "time"], [78, 4, 1, "", "v"]], "matscipy.pressurecoupling.SlideLogger": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "write_header"]], "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell": [[78, 5, 1, "", "Tdir"], [78, 3, 1, "", "__init__"], [78, 3, 1, "", "adjust_forces"], [78, 3, 1, "", "adjust_momenta"], [78, 3, 1, "", "adjust_positions"], [78, 3, 1, "", "adjust_potential_energy"], [78, 3, 1, "", "get_A"], [78, 5, 1, "", "middle_mask"]], "matscipy.rings": [[79, 1, 1, "", "ring_statistics"]], "matscipy.spatial_correlation_function": [[80, 1, 1, "", "betrag"], [80, 1, 1, "", "max_rad"], [80, 1, 1, "", "spatial_correlation_function"], [80, 1, 1, "", "spatial_correlation_function_near"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": [0, 53], "applic": [0, 4], "domain": [0, 4], "structur": 0, "topologi": 0, "gener": 0, "analysi": [0, 82, 85], "tool": [0, 82], "interatom": [0, 8, 83], "potenti": [0, 8, 9, 32, 83], "util": [0, 16], "function": [0, 84], "build": [1, 6], "cylindr": 1, "configur": 1, "disloc": [1, 53], "bodi": [1, 9], "center": 1, "cubic": 1, "1": 1, "2": 1, "111": 1, "110": 1, "screw": 1, "edg": 1, "mix": 1, "100": 1, "junction": 1, "001": 1, "face": 1, "perfect": 1, "dissoci": 1, "diamond": 1, "60": 1, "degre": 1, "elast": [2, 6, 55], "constant": 2, "problem": 2, "setup": [2, 7], "crystallin": 2, "With": 2, "second": 2, "order": 2, "deriv": 2, "amorph": 2, "fit": [2, 23], "fractur": [3, 6], "mechan": 3, "plastic": 5, "instal": 5, "test": [5, 81], "tutori": 5, "quasi": 6, "static": 6, "simul": [6, 7], "basic": [6, 83], "usag": [6, 83], "bulk": 6, "properti": [6, 83], "crack": [6, 62], "system": [6, 7], "appli": 6, "initi": [6, 7], "strain": 6, "field": 6, "tribologi": 7, "pressur": 7, "equilibr": 7, "restart": 7, "slide": 7, "mani": 9, "kumagai": [9, 28], "other": 9, "matscipi": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "angle_distribut": 10, "atomic_strain": 11, "calcul": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "committe": [13, 14, 15, 16], "log": 15, "eam": [17, 18, 19, 20], "average_atom": 18, "io": [20, 68, 69, 70, 71, 72], "ewald": [21, 22], "manybodi": [24, 25, 26, 27, 28, 29, 30, 31, 32], "explicit_form": [26, 27, 28, 29, 30], "harmon": 27, "stillinger_web": 29, "tersoff_brenn": 30, "newmb": 31, "mcfm": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "cluster_data": 35, "mcfm_parallel": [36, 37, 38], "mcfm_parallel_control": 37, "mcfm_parallel_work": 38, "neighbour_list_mcfm": [39, 40, 41], "neighbour_list_bas": 40, "qm_cluster": 42, "qm_cluster_tool": [43, 44, 45, 46], "base_qm_cluster_tool": 44, "qm_clustering_tool": 45, "qm_flagging_tool": 46, "pair_potenti": [47, 48], "polydispers": [49, 50], "supercell_calcul": 51, "deform": 52, "cell": 53, "vector": 53, "drift": 54, "electrochemistri": [56, 57, 58, 59], "continuous2discret": 57, "poisson_boltzmann_distribut": 58, "poisson_nernst_planck_solv": 59, "fracture_mechan": [60, 61, 62, 63, 64, 65], "cluster": 61, "crackpathsel": 63, "energy_releas": 64, "idealbrittlesolid": 65, "hessian_finite_differ": 66, "hydrogen": 67, "lammpsdata": 69, "meti": 70, "opl": [71, 77], "tbl": 72, "logger": 73, "neighbour": [74, 83], "numer": 75, "numpy_trick": 76, "pressurecoupl": 78, "ring": [79, 85], "spatial_correlation_funct": 80, "quick": 81, "start": 81, "document": 81, "seek": 81, "help": 81, "contribut": 81, "run": 81, "depend": 81, "fund": 81, "tabl": 81, "content": 81, "indic": 81, "list": 83, "per": 83, "atom": 83, "pair": 84, "distribut": 84, "real": 84, "space": 84, "fourier": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "Application domains": [[0, "application-domains"], [4, "application-domains"]], "Structure and topology generation": [[0, "structure-and-topology-generation"]], "Analysis tools": [[0, "analysis-tools"], [82, "analysis-tools"]], "Interatomic potentials": [[0, "interatomic-potentials"], [8, "interatomic-potentials"]], "Utility functions": [[0, "utility-functions"]], "Building cylindrical configurations with dislocations": [[1, "building-cylindrical-configurations-with-dislocations"]], "Body Centered Cubic": [[1, "body-centered-cubic"]], "1/2<111>{110} screw dislocation": [[1, "screw-dislocation"]], "1/2<111>{110} edge dislocation": [[1, "edge-dislocation"]], "1/2<111>{110} mixed dislocation": [[1, "mixed-dislocation"]], "<100>{110} edge \u2018junction\u2019 dislocation": [[1, "edge-junction-dislocation"]], "<100>{001} edge dislocation": [[1, "id1"]], "Face Centered Cubic": [[1, "face-centered-cubic"]], "1/2<110>{111} screw dislocation (perfect and dissociated)": [[1, "screw-dislocation-perfect-and-dissociated"], [1, "id2"]], "1/2<110>{111} edge dislocation (perfect and dissociated)": [[1, "edge-dislocation-perfect-and-dissociated"]], "Diamond Cubic": [[1, "diamond-cubic"]], "1/2<110>{111} 60 degree screw dislocation (perfect and dissociated)": [[1, "degree-screw-dislocation-perfect-and-dissociated"]], "Elastic Constants": [[2, "elastic-constants"]], "Problem setup": [[2, "problem-setup"], [2, "id1"]], "Crystalline elastic constants": [[2, "crystalline-elastic-constants"]], "With second-order derivatives": [[2, "with-second-order-derivatives"]], "Amorphous elastic constants": [[2, "amorphous-elastic-constants"]], "Fitting elastic constants": [[2, "fitting-elastic-constants"]], "Fracture Mechanics": [[3, "fracture-mechanics"]], "Plasticity": [[5, "plasticity"]], "Installation and tests": [[5, "installation-and-tests"]], "Tutorials:": [[5, "tutorials"]], "Quasi static fracture simulations": [[6, "quasi-static-fracture-simulations"]], "Basic usage": [[6, "basic-usage"], [83, "basic-usage"]], "Bulk and Elastic properties": [[6, "bulk-and-elastic-properties"]], "Build crack system": [[6, "build-crack-system"]], "Apply initial strain field": [[6, "apply-initial-strain-field"]], "Tribology": [[7, "tribology"]], "System setup": [[7, "system-setup"]], "Initial pressure equilibration": [[7, "initial-pressure-equilibration"]], "Restarting a pressure equilibration": [[7, "restarting-a-pressure-equilibration"]], "Sliding simulation": [[7, "sliding-simulation"]], "Restarting a sliding simulation": [[7, "restarting-a-sliding-simulation"]], "Many-body potentials": [[9, "many-body-potentials"]], "Kumagai potential": [[9, "kumagai-potential"]], "Other many-body potentials": [[9, "other-many-body-potentials"]], "matscipy.angle_distribution": [[10, "module-matscipy.angle_distribution"]], "matscipy.atomic_strain": [[11, "module-matscipy.atomic_strain"]], "matscipy.calculators.calculator": [[12, "module-matscipy.calculators.calculator"]], "matscipy.calculators.committee": [[13, "module-matscipy.calculators.committee"]], "matscipy.calculators.committee.committee": [[14, "module-matscipy.calculators.committee.committee"]], "matscipy.calculators.committee.log": [[15, "module-matscipy.calculators.committee.log"]], "matscipy.calculators.committee.utils": [[16, "module-matscipy.calculators.committee.utils"]], "matscipy.calculators.eam": [[17, "module-matscipy.calculators.eam"]], "matscipy.calculators.eam.average_atom": [[18, "module-matscipy.calculators.eam.average_atom"]], "matscipy.calculators.eam.calculator": [[19, "module-matscipy.calculators.eam.calculator"]], "matscipy.calculators.eam.io": [[20, "module-matscipy.calculators.eam.io"]], "matscipy.calculators.ewald": [[21, "module-matscipy.calculators.ewald"]], "matscipy.calculators.ewald.calculator": [[22, "module-matscipy.calculators.ewald.calculator"]], "matscipy.calculators.fitting": [[23, "module-matscipy.calculators.fitting"]], "matscipy.calculators.manybody": [[24, "module-matscipy.calculators.manybody"]], "matscipy.calculators.manybody.calculator": [[25, "module-matscipy.calculators.manybody.calculator"]], "matscipy.calculators.manybody.explicit_forms": [[26, "module-matscipy.calculators.manybody.explicit_forms"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[27, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[28, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[29, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[30, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "matscipy.calculators.manybody.newmb": [[31, "module-matscipy.calculators.manybody.newmb"]], "matscipy.calculators.manybody.potentials": [[32, "module-matscipy.calculators.manybody.potentials"]], "matscipy.calculators.mcfm": [[33, "module-matscipy.calculators.mcfm"]], "matscipy.calculators.mcfm.calculator": [[34, "module-matscipy.calculators.mcfm.calculator"]], "matscipy.calculators.mcfm.cluster_data": [[35, "module-matscipy.calculators.mcfm.cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel": [[36, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[37, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[38, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[39, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[40, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[41, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.qm_cluster": [[42, "module-matscipy.calculators.mcfm.qm_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[43, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[44, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[45, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[46, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "matscipy.calculators.pair_potential": [[47, "module-matscipy.calculators.pair_potential"]], "matscipy.calculators.pair_potential.calculator": [[48, "module-matscipy.calculators.pair_potential.calculator"]], "matscipy.calculators.polydisperse": [[49, "module-matscipy.calculators.polydisperse"]], "matscipy.calculators.polydisperse.calculator": [[50, "module-matscipy.calculators.polydisperse.calculator"]], "matscipy.calculators.supercell_calculator": [[51, "module-matscipy.calculators.supercell_calculator"]], "matscipy.deformation": [[52, "module-matscipy.deformation"]], "matscipy.dislocation": [[53, "module-matscipy.dislocation"]], "Calculation of cell vectors": [[53, "calculation-of-cell-vectors"]], "References:": [[53, "references"]], "matscipy.drift": [[54, "module-matscipy.drift"]], "matscipy.elasticity": [[55, "module-matscipy.elasticity"]], "matscipy.electrochemistry": [[56, "module-matscipy.electrochemistry"]], "matscipy.electrochemistry.continuous2discrete": [[57, "matscipy-electrochemistry-continuous2discrete"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[58, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[59, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "matscipy.fracture_mechanics": [[60, "module-matscipy.fracture_mechanics"]], "matscipy.fracture_mechanics.clusters": [[61, "module-matscipy.fracture_mechanics.clusters"]], "matscipy.fracture_mechanics.crack": [[62, "module-matscipy.fracture_mechanics.crack"]], "matscipy.fracture_mechanics.crackpathsel": [[63, "module-matscipy.fracture_mechanics.crackpathsel"]], "matscipy.fracture_mechanics.energy_release": [[64, "module-matscipy.fracture_mechanics.energy_release"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[65, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "matscipy.hessian_finite_differences": [[66, "module-matscipy.hessian_finite_differences"]], "matscipy.hydrogenate": [[67, "module-matscipy.hydrogenate"]], "matscipy.io": [[68, "module-matscipy.io"]], "matscipy.io.lammpsdata": [[69, "module-matscipy.io.lammpsdata"]], "matscipy.io.metis": [[70, "module-matscipy.io.metis"]], "matscipy.io.opls": [[71, "module-matscipy.io.opls"]], "matscipy.io.tbl": [[72, "module-matscipy.io.tbl"]], "matscipy.logger": [[73, "module-matscipy.logger"]], "matscipy.neighbours": [[74, "module-matscipy.neighbours"]], "matscipy.numerical": [[75, "module-matscipy.numerical"]], "matscipy.numpy_tricks": [[76, "module-matscipy.numpy_tricks"]], "matscipy.opls": [[77, "module-matscipy.opls"]], "matscipy.pressurecoupling": [[78, "module-matscipy.pressurecoupling"]], "matscipy.rings": [[79, "module-matscipy.rings"]], "matscipy.spatial_correlation_function": [[80, "module-matscipy.spatial_correlation_function"]], "Matscipy": [[81, "matscipy"]], "Quick start": [[81, "quick-start"]], "Documentation": [[81, "documentation"]], "Seeking help": [[81, "seeking-help"]], "Contributing": [[81, "contributing"]], "Running tests": [[81, "running-tests"]], "Dependencies": [[81, "dependencies"]], "Funding": [[81, "funding"]], "Table of Contents:": [[81, null]], "Indices and tables": [[81, "indices-and-tables"]], "Neighbour list": [[83, "neighbour-list"]], "Per-atom properties": [[83, "per-atom-properties"]], "Interatomic potential": [[83, "interatomic-potential"]], "Pair-distribution function": [[84, "pair-distribution-function"]], "Real-space": [[84, "real-space"]], "Fourier space": [[84, "fourier-space"]], "Ring analysis": [[85, "ring-analysis"]]}, "indexentries": {"angle_distribution() (in module matscipy.angle_distribution)": [[10, "matscipy.angle_distribution.angle_distribution"]], "matscipy.angle_distribution": [[10, "module-matscipy.angle_distribution"]], "module": [[10, "module-matscipy.angle_distribution"], [11, "module-matscipy.atomic_strain"], [12, "module-matscipy.calculators.calculator"], [13, "module-matscipy.calculators.committee"], [14, "module-matscipy.calculators.committee.committee"], [15, "module-matscipy.calculators.committee.log"], [16, "module-matscipy.calculators.committee.utils"], [17, "module-matscipy.calculators.eam"], [18, "module-matscipy.calculators.eam.average_atom"], [19, "module-matscipy.calculators.eam.calculator"], [20, "module-matscipy.calculators.eam.io"], [21, "module-matscipy.calculators.ewald"], [22, "module-matscipy.calculators.ewald.calculator"], [23, "module-matscipy.calculators.fitting"], [24, "module-matscipy.calculators.manybody"], [25, "module-matscipy.calculators.manybody.calculator"], [26, "module-matscipy.calculators.manybody.explicit_forms"], [27, "module-matscipy.calculators.manybody.explicit_forms.harmonic"], [28, "module-matscipy.calculators.manybody.explicit_forms.kumagai"], [29, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"], [30, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"], [31, "module-matscipy.calculators.manybody.newmb"], [32, "module-matscipy.calculators.manybody.potentials"], [33, "module-matscipy.calculators.mcfm"], [34, "module-matscipy.calculators.mcfm.calculator"], [35, "module-matscipy.calculators.mcfm.cluster_data"], [36, "module-matscipy.calculators.mcfm.mcfm_parallel"], [37, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"], [38, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"], [39, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"], [40, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"], [41, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"], [42, "module-matscipy.calculators.mcfm.qm_cluster"], [43, "module-matscipy.calculators.mcfm.qm_cluster_tools"], [44, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"], [45, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"], [46, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"], [47, "module-matscipy.calculators.pair_potential"], [48, "module-matscipy.calculators.pair_potential.calculator"], [49, "module-matscipy.calculators.polydisperse"], [50, "module-matscipy.calculators.polydisperse.calculator"], [51, "module-matscipy.calculators.supercell_calculator"], [52, "module-matscipy.deformation"], [53, "module-matscipy.dislocation"], [54, "module-matscipy.drift"], [55, "module-matscipy.elasticity"], [56, "module-matscipy.electrochemistry"], [58, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"], [59, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"], [60, "module-matscipy.fracture_mechanics"], [61, "module-matscipy.fracture_mechanics.clusters"], [62, "module-matscipy.fracture_mechanics.crack"], [63, "module-matscipy.fracture_mechanics.crackpathsel"], [64, "module-matscipy.fracture_mechanics.energy_release"], [65, "module-matscipy.fracture_mechanics.idealbrittlesolid"], [66, "module-matscipy.hessian_finite_differences"], [67, "module-matscipy.hydrogenate"], [68, "module-matscipy.io"], [69, "module-matscipy.io.lammpsdata"], [70, "module-matscipy.io.metis"], [71, "module-matscipy.io.opls"], [72, "module-matscipy.io.tbl"], [73, "module-matscipy.logger"], [74, "module-matscipy.neighbours"], [75, "module-matscipy.numerical"], [76, "module-matscipy.numpy_tricks"], [77, "module-matscipy.opls"], [78, "module-matscipy.pressurecoupling"], [79, "module-matscipy.rings"], [80, "module-matscipy.spatial_correlation_function"]], "array_inverse() (in module matscipy.atomic_strain)": [[11, "matscipy.atomic_strain.array_inverse"]], "atomic_strain() (in module matscipy.atomic_strain)": [[11, "matscipy.atomic_strain.atomic_strain"]], "get_d_square_min() (in module matscipy.atomic_strain)": [[11, "matscipy.atomic_strain.get_D_square_min"]], "get_xij() (in module matscipy.atomic_strain)": [[11, "matscipy.atomic_strain.get_XIJ"]], "get_yij() (in module matscipy.atomic_strain)": [[11, "matscipy.atomic_strain.get_YIJ"]], "get_delta_plus_epsilon() (in module matscipy.atomic_strain)": [[11, "matscipy.atomic_strain.get_delta_plus_epsilon"]], "get_delta_plus_epsilon_dgesv() (in module matscipy.atomic_strain)": [[11, "matscipy.atomic_strain.get_delta_plus_epsilon_dgesv"]], "matscipy.atomic_strain": [[11, "module-matscipy.atomic_strain"]], "matscipycalculator (class in matscipy.calculators.calculator)": [[12, "matscipy.calculators.calculator.MatscipyCalculator"]], "__init__() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.__init__"]], "band_structure() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.band_structure"]], "calculate() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.calculation_required"]], "check_state() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.check_state"]], "default_parameters (matscipy.calculators.calculator.matscipycalculator attribute)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.default_parameters"]], "directory (matscipy.calculators.calculator.matscipycalculator property)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.calculator.matscipycalculator attribute)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.export_properties"]], "get_atoms() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_elastic_constants"]], "get_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_forces"]], "get_hessian() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_property"]], "get_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.calculator.matscipycalculator attribute)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.calculator.matscipycalculator attribute)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.implemented_properties"]], "label (matscipy.calculators.calculator.matscipycalculator property)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.label"]], "matscipy.calculators.calculator": [[12, "module-matscipy.calculators.calculator"]], "read() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.read"]], "read_atoms() (matscipy.calculators.calculator.matscipycalculator class method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.read_atoms"]], "reset() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.reset"]], "set() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.set"]], "set_label() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.set_label"]], "todict() (matscipy.calculators.calculator.matscipycalculator method)": [[12, "matscipy.calculators.calculator.MatscipyCalculator.todict"]], "matscipy.calculators.committee": [[13, "module-matscipy.calculators.committee"]], "committee (class in matscipy.calculators.committee.committee)": [[14, "matscipy.calculators.committee.committee.Committee"]], "committeemember (class in matscipy.calculators.committee.committee)": [[14, "matscipy.calculators.committee.committee.CommitteeMember"]], "committeeuncertainty (class in matscipy.calculators.committee.committee)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty"]], "__init__() (matscipy.calculators.committee.committee.committee method)": [[14, "matscipy.calculators.committee.committee.Committee.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeemember method)": [[14, "matscipy.calculators.committee.committee.CommitteeMember.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.__init__"]], "add_member() (matscipy.calculators.committee.committee.committee method)": [[14, "matscipy.calculators.committee.committee.Committee.add_member"]], "alphas (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.alphas"]], "atoms (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.atoms"]], "atoms (matscipy.calculators.committee.committee.committeemember property)": [[14, "matscipy.calculators.committee.committee.CommitteeMember.atoms"]], "band_structure() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.band_structure"]], "calculate() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate"]], "calculate_numerical_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_properties"]], "calculation_required() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculation_required"]], "calculator (matscipy.calculators.committee.committee.committeemember property)": [[14, "matscipy.calculators.committee.committee.CommitteeMember.calculator"]], "calibrate() (matscipy.calculators.committee.committee.committee method)": [[14, "matscipy.calculators.committee.committee.Committee.calibrate"]], "calibrated_for (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.calibrated_for"]], "check_state() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.check_state"]], "default_parameters (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.default_parameters"]], "directory (matscipy.calculators.committee.committee.committeeuncertainty property)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.directory"]], "discard_results_on_any_change (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.export_properties"]], "filename (matscipy.calculators.committee.committee.committeemember property)": [[14, "matscipy.calculators.committee.committee.CommitteeMember.filename"]], "get_atoms() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_atoms"]], "get_charges() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_charges"]], "get_default_parameters() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_dipole_moment"]], "get_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_forces"]], "get_magnetic_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energy"]], "get_property() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_property"]], "get_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stress"]], "get_stresses() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stresses"]], "id_counter (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.id_counter"]], "id_to_atoms (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.id_to_atoms"]], "ids (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.ids"]], "ids (matscipy.calculators.committee.committee.committeemember property)": [[14, "matscipy.calculators.committee.committee.CommitteeMember.ids"]], "ignored_changes (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.ignored_changes"]], "implemented_properties (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.implemented_properties"]], "is_calibrated_for() (matscipy.calculators.committee.committee.committee method)": [[14, "matscipy.calculators.committee.committee.Committee.is_calibrated_for"]], "is_sample_in_atoms() (matscipy.calculators.committee.committee.committeemember method)": [[14, "matscipy.calculators.committee.committee.CommitteeMember.is_sample_in_atoms"]], "label (matscipy.calculators.committee.committee.committeeuncertainty property)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.label"]], "matscipy.calculators.committee.committee": [[14, "module-matscipy.calculators.committee.committee"]], "members (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.members"]], "number (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.number"]], "read() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.read"]], "read_atoms() (matscipy.calculators.committee.committee.committeeuncertainty class method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.read_atoms"]], "reset() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.reset"]], "scale_uncertainty() (matscipy.calculators.committee.committee.committee method)": [[14, "matscipy.calculators.committee.committee.Committee.scale_uncertainty"]], "set() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.set"]], "set_internal_validation_set() (matscipy.calculators.committee.committee.committee method)": [[14, "matscipy.calculators.committee.committee.Committee.set_internal_validation_set"]], "set_label() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.set_label"]], "set_training_data() (matscipy.calculators.committee.committee.committeemember method)": [[14, "matscipy.calculators.committee.committee.CommitteeMember.set_training_data"]], "todict() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[14, "matscipy.calculators.committee.committee.CommitteeUncertainty.todict"]], "validation_set (matscipy.calculators.committee.committee.committee property)": [[14, "matscipy.calculators.committee.committee.Committee.validation_set"]], "create_logger() (in module matscipy.calculators.committee.log)": [[15, "matscipy.calculators.committee.log.create_logger"]], "matscipy.calculators.committee.log": [[15, "module-matscipy.calculators.committee.log"]], "set_logging() (in module matscipy.calculators.committee.log)": [[15, "matscipy.calculators.committee.log.set_logging"]], "matscipy.calculators.committee.utils": [[16, "module-matscipy.calculators.committee.utils"]], "subsample() (in module matscipy.calculators.committee.utils)": [[16, "matscipy.calculators.committee.utils.subsample"]], "matscipy.calculators.eam": [[17, "module-matscipy.calculators.eam"]], "average_potential() (in module matscipy.calculators.eam.average_atom)": [[18, "matscipy.calculators.eam.average_atom.average_potential"]], "matscipy.calculators.eam.average_atom": [[18, "module-matscipy.calculators.eam.average_atom"]], "eam (class in matscipy.calculators.eam.calculator)": [[19, "matscipy.calculators.eam.calculator.EAM"]], "__init__() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.__init__"]], "band_structure() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.band_structure"]], "calculate() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.calculate"]], "calculate_hessian_matrix() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.calculate_hessian_matrix"]], "calculate_numerical_forces() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.calculate_properties"]], "calculation_required() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.calculation_required"]], "check_state() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.check_state"]], "cutoff (matscipy.calculators.eam.calculator.eam property)": [[19, "matscipy.calculators.eam.calculator.EAM.cutoff"]], "default_parameters (matscipy.calculators.eam.calculator.eam attribute)": [[19, "matscipy.calculators.eam.calculator.EAM.default_parameters"]], "directory (matscipy.calculators.eam.calculator.eam property)": [[19, "matscipy.calculators.eam.calculator.EAM.directory"]], "discard_results_on_any_change (matscipy.calculators.eam.calculator.eam attribute)": [[19, "matscipy.calculators.eam.calculator.EAM.discard_results_on_any_change"]], "energy_virial_and_forces() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.energy_virial_and_forces"]], "export_properties() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.export_properties"]], "get_atoms() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_charges"]], "get_default_parameters() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_elastic_constants"]], "get_forces() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_forces"]], "get_hessian() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_potential_energy"]], "get_property() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_property"]], "get_stress() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.get_stresses"]], "ignored_changes (matscipy.calculators.eam.calculator.eam attribute)": [[19, "matscipy.calculators.eam.calculator.EAM.ignored_changes"]], "implemented_properties (matscipy.calculators.eam.calculator.eam attribute)": [[19, "matscipy.calculators.eam.calculator.EAM.implemented_properties"]], "label (matscipy.calculators.eam.calculator.eam property)": [[19, "matscipy.calculators.eam.calculator.EAM.label"]], "matscipy.calculators.eam.calculator": [[19, "module-matscipy.calculators.eam.calculator"]], "name (matscipy.calculators.eam.calculator.eam attribute)": [[19, "matscipy.calculators.eam.calculator.EAM.name"]], "read() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.read"]], "read_atoms() (matscipy.calculators.eam.calculator.eam class method)": [[19, "matscipy.calculators.eam.calculator.EAM.read_atoms"]], "reset() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.reset"]], "set() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.set"]], "set_label() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.set_label"]], "todict() (matscipy.calculators.eam.calculator.eam method)": [[19, "matscipy.calculators.eam.calculator.EAM.todict"]], "eamparameters (class in matscipy.calculators.eam.io)": [[20, "matscipy.calculators.eam.io.EAMParameters"]], "atomic_masses (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.atomic_masses"]], "atomic_numbers (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.atomic_numbers"]], "count() (matscipy.calculators.eam.io.eamparameters method)": [[20, "matscipy.calculators.eam.io.EAMParameters.count"]], "crystal_structures (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.crystal_structures"]], "cutoff (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.cutoff"]], "density_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.density_grid_spacing"]], "distance_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.distance_grid_spacing"]], "index() (matscipy.calculators.eam.io.eamparameters method)": [[20, "matscipy.calculators.eam.io.EAMParameters.index"]], "lattice_constants (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.lattice_constants"]], "matscipy.calculators.eam.io": [[20, "module-matscipy.calculators.eam.io"]], "mix_eam() (in module matscipy.calculators.eam.io)": [[20, "matscipy.calculators.eam.io.mix_eam"]], "number_of_density_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.number_of_density_grid_points"]], "number_of_distance_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.number_of_distance_grid_points"]], "read_eam() (in module matscipy.calculators.eam.io)": [[20, "matscipy.calculators.eam.io.read_eam"]], "symbols (matscipy.calculators.eam.io.eamparameters attribute)": [[20, "matscipy.calculators.eam.io.EAMParameters.symbols"]], "write_eam() (in module matscipy.calculators.eam.io)": [[20, "matscipy.calculators.eam.io.write_eam"]], "matscipy.calculators.ewald": [[21, "module-matscipy.calculators.ewald"]], "ewald (class in matscipy.calculators.ewald.calculator)": [[22, "matscipy.calculators.ewald.calculator.Ewald"]], "ewaldshortrange (class in matscipy.calculators.ewald.calculator)": [[22, "matscipy.calculators.ewald.calculator.EwaldShortRange"]], "__init__() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.__init__"]], "__init__() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[22, "matscipy.calculators.ewald.calculator.EwaldShortRange.__init__"]], "allowed_wave_vectors() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.allowed_wave_vectors"]], "alpha (matscipy.calculators.ewald.calculator.ewald property)": [[22, "matscipy.calculators.ewald.calculator.Ewald.alpha"]], "band_structure() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.band_structure"]], "calculate() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.calculate"]], "calculate_numerical_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.calculate_properties"]], "calculation_required() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.calculation_required"]], "check_state() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.check_state"]], "cutoff (matscipy.calculators.ewald.calculator.ewaldshortrange property)": [[22, "matscipy.calculators.ewald.calculator.EwaldShortRange.cutoff"]], "default_parameters (matscipy.calculators.ewald.calculator.ewald attribute)": [[22, "matscipy.calculators.ewald.calculator.Ewald.default_parameters"]], "derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[22, "matscipy.calculators.ewald.calculator.EwaldShortRange.derivative"]], "determine_alpha() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.determine_alpha"]], "determine_kc() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.determine_kc"]], "determine_nk() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.determine_nk"]], "directory (matscipy.calculators.ewald.calculator.ewald property)": [[22, "matscipy.calculators.ewald.calculator.Ewald.directory"]], "discard_results_on_any_change (matscipy.calculators.ewald.calculator.ewald attribute)": [[22, "matscipy.calculators.ewald.calculator.Ewald.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.export_properties"]], "first_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[22, "matscipy.calculators.ewald.calculator.EwaldShortRange.first_derivative"]], "first_derivative_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.first_derivative_kspace"]], "get_atoms() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_charges"]], "get_cutoff() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[22, "matscipy.calculators.ewald.calculator.EwaldShortRange.get_cutoff"]], "get_default_parameters() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_elastic_constants"]], "get_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_forces"]], "get_hessian() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energy"]], "get_property() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_property"]], "get_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.get_stresses"]], "ignored_changes (matscipy.calculators.ewald.calculator.ewald attribute)": [[22, "matscipy.calculators.ewald.calculator.Ewald.ignored_changes"]], "implemented_properties (matscipy.calculators.ewald.calculator.ewald attribute)": [[22, "matscipy.calculators.ewald.calculator.Ewald.implemented_properties"]], "kspace_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.kspace_energy"]], "kspace_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.kspace_properties"]], "label (matscipy.calculators.ewald.calculator.ewald property)": [[22, "matscipy.calculators.ewald.calculator.Ewald.label"]], "matscipy.calculators.ewald.calculator": [[22, "module-matscipy.calculators.ewald.calculator"]], "name (matscipy.calculators.ewald.calculator.ewald attribute)": [[22, "matscipy.calculators.ewald.calculator.Ewald.name"]], "read() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.read"]], "read_atoms() (matscipy.calculators.ewald.calculator.ewald class method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.read_atoms"]], "reset() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.reset"]], "reset_kspace() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.reset_kspace"]], "rms_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.rms_kspace"]], "rms_rspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.rms_rspace"]], "second_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[22, "matscipy.calculators.ewald.calculator.EwaldShortRange.second_derivative"]], "self_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.self_energy"]], "set() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.set"]], "set_label() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.set_label"]], "short_range (matscipy.calculators.ewald.calculator.ewald property)": [[22, "matscipy.calculators.ewald.calculator.Ewald.short_range"]], "stress_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.stress_kspace"]], "todict() (matscipy.calculators.ewald.calculator.ewald method)": [[22, "matscipy.calculators.ewald.calculator.Ewald.todict"]], "combinedfit (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.CombinedFit"]], "d0 (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.D0"]], "ec (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.Ec"]], "ec (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.Ec"]], "ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.Ec"]], "ec (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.Ec"]], "ec (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.Ec"]], "ec (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.Ec"]], "ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.Ec"]], "ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.Ec"]], "ec (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.Ec"]], "ec (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.Ec"]], "ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.Ec"]], "fit (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.Fit"]], "fitb2 (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitB2"]], "fitbcc (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitBCC"]], "fitcubiccrystal (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitCubicCrystal"]], "fitdiamond (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitDiamond"]], "fitdiamond100 (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitDiamond100"]], "fitdiamond110 (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitDiamond110"]], "fitdiamond111 (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitDiamond111"]], "fitdimer (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitDimer"]], "fitfcc (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitFCC"]], "fitgraphene (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitGraphene"]], "fitgraphite (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitGraphite"]], "fithexagonalcrystal (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal"]], "fitl1_0 (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitL1_0"]], "fitl1_2 (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitL1_2"]], "fitsc (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitSC"]], "fitsinglepoint (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitSinglePoint"]], "fitsurface (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitSurface"]], "fittetragonalcrystal (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal"]], "parameters (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.Parameters"]], "penalty (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.Penalty"]], "rotatingfit (class in matscipy.calculators.fitting)": [[23, "matscipy.calculators.fitting.RotatingFit"]], "__init__() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.__init__"]], "__init__() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.__init__"]], "__init__() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.__init__"]], "__init__() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.__init__"]], "__init__() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.__init__"]], "__init__() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.__init__"]], "__init__() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.__init__"]], "__init__() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.__init__"]], "__init__() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.__init__"]], "__init__() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.__init__"]], "__init__() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.__init__"]], "__init__() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.__init__"]], "__init__() (matscipy.calculators.fitting.rotatingfit method)": [[23, "matscipy.calculators.fitting.RotatingFit.__init__"]], "a0 (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.a0"]], "a0 (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.a0"]], "a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.a0"]], "a0 (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.a0"]], "a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.a0"]], "a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.a0"]], "a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.a0"]], "a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.a0"]], "a0 (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.a0"]], "a0 (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.a0"]], "a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.a0"]], "atoms (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.atoms"]], "atoms (matscipy.calculators.fitting.fit attribute)": [[23, "matscipy.calculators.fitting.Fit.atoms"]], "atoms (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.atoms"]], "atoms (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.atoms"]], "atoms (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.atoms"]], "atoms (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.atoms"]], "atoms (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.atoms"]], "atoms (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.atoms"]], "atoms (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.atoms"]], "atoms (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.atoms"]], "atoms (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.atoms"]], "atoms (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.atoms"]], "c0 (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.c0"]], "c0 (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.c0"]], "c0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.c0"]], "c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.c0"]], "c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.c0"]], "calc (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.calc"]], "calc (matscipy.calculators.fitting.fit attribute)": [[23, "matscipy.calculators.fitting.Fit.calc"]], "calc (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.calc"]], "calc (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.calc"]], "calc (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.calc"]], "calc (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.calc"]], "calc (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.calc"]], "calc (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.calc"]], "calc (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.calc"]], "calc (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.calc"]], "calc (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.calc"]], "calc (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.calc"]], "calc (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.calc"]], "calc (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.calc"]], "calc (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.calc"]], "calc (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.calc"]], "calc (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.calc"]], "calc (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.calc"]], "calc (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.calc"]], "calc (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.calc"]], "calc (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.calc"]], "constant (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.constant"]], "cost_history (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.cost_history"]], "cost_history (matscipy.calculators.fitting.fit attribute)": [[23, "matscipy.calculators.fitting.Fit.cost_history"]], "cost_history (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.cost_history"]], "cost_history (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.cost_history"]], "cost_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.cost_history"]], "cost_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.cost_history"]], "crystal (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.crystal"]], "crystal (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.crystal"]], "crystal (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.crystal"]], "crystal (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.crystal"]], "crystal (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.crystal"]], "crystal (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.crystal"]], "crystal (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.crystal"]], "crystal (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.crystal"]], "crystalstr (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.crystalstr"]], "default (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.default"]], "derived (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.derived"]], "energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.energy"]], "fmax (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.fmax"]], "fmax (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.fmax"]], "fmax (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.fmax"]], "fmax (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.fmax"]], "fmax (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.fmax"]], "fmax (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.fmax"]], "fmax (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.fmax"]], "fmax (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.fmax"]], "fmax (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.fmax"]], "forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.forces"]], "func (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.func"]], "get() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get"]], "get_c11() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_C11"]], "get_c33() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_C33"]], "get_c33() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C33"]], "get_c44() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C44"]], "get_c66() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_C66"]], "get_c66() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C66"]], "get_cp() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_Cp"]], "get_d1() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_D1"]], "get_d1() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D1"]], "get_d2() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_D2"]], "get_d2() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D2"]], "get_d4() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_D4"]], "get_d4() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D4"]], "get_sfe() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_SFE"]], "get_array() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get_array"]], "get_cohesive_energy() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_cohesive_energy"]], "get_constant() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get_constant"]], "get_cost_function() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_cost_function"]], "get_cost_history() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_cost_history"]], "get_derived() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get_derived"]], "get_dict() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get_dict"]], "get_distance() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_distance"]], "get_lattice_constant() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_lattice_constant"]], "get_lower_bounds() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get_lower_bounds"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_parameters_at_minimal_cost"]], "get_potential_energy() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_potential_energy"]], "get_residuals() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_residuals"]], "get_residuals_history() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_residuals_history"]], "get_square_residuals() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.get_square_residuals"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.get_surface_energy"]], "get_upper_bounds() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get_upper_bounds"]], "get_variable() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.get_variable"]], "hidden (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.hidden"]], "in_range() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.in_range"]], "matscipy.calculators.fitting": [[23, "module-matscipy.calculators.fitting"]], "minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fit attribute)": [[23, "matscipy.calculators.fitting.Fit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.minimal_cost"]], "new_bulk() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.new_bulk"]], "new_dimer() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.new_dimer"]], "new_surface() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.new_surface"]], "optimize() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.optimize"]], "optimize() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.optimize"]], "optimize() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.optimize"]], "optimize() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.optimize"]], "optimize() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.optimize"]], "optimize() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.optimize"]], "optimize() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.optimize"]], "optimize() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.optimize"]], "optimize() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.optimize"]], "optimize() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.optimize"]], "optimize() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.optimize"]], "optimize() (matscipy.calculators.fitting.rotatingfit method)": [[23, "matscipy.calculators.fitting.RotatingFit.optimize"]], "optimize_anneal() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.optimize_anneal"]], "optimize_brute() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.optimize_brute"]], "optimize_leastsq() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.optimize_leastsq"]], "optimize_openopt() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.optimize_openopt"]], "par (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.par"]], "par (matscipy.calculators.fitting.fit attribute)": [[23, "matscipy.calculators.fitting.Fit.par"]], "par (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.par"]], "par (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.par"]], "par (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.par"]], "par (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.par"]], "par (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.par"]], "par (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.par"]], "par (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.par"]], "par (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.par"]], "par (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.par"]], "par (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.par"]], "par (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.par"]], "par (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.par"]], "par (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.par"]], "par (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.par"]], "par (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.par"]], "par (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.par"]], "par (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.par"]], "par (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.par"]], "par (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.par"]], "par (matscipy.calculators.fitting.rotatingfit attribute)": [[23, "matscipy.calculators.fitting.RotatingFit.par"]], "par_at_minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fit attribute)": [[23, "matscipy.calculators.fitting.Fit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.par_at_minimal_cost"]], "parameters (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.parameters"]], "r0 (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.r0"]], "range_mapping (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.range_mapping"]], "ranges (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.ranges"]], "residuals_history (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fit attribute)": [[23, "matscipy.calculators.fitting.Fit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.penalty attribute)": [[23, "matscipy.calculators.fitting.Penalty.residuals_history"]], "set() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.set"]], "set_array() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.set_array"]], "set_calculator() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.set_calculator"]], "set_calculator_class() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.set_calculator_class"]], "set_constant() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.set_constant"]], "set_derived() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.set_derived"]], "set_dict() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.set_dict"]], "set_parameters() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.set_parameters"]], "set_parameters_from_array() (matscipy.calculators.fitting.combinedfit method)": [[23, "matscipy.calculators.fitting.CombinedFit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fit method)": [[23, "matscipy.calculators.fitting.Fit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitb2 method)": [[23, "matscipy.calculators.fitting.FitB2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitbcc method)": [[23, "matscipy.calculators.fitting.FitBCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitcubiccrystal method)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond method)": [[23, "matscipy.calculators.fitting.FitDiamond.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond100 method)": [[23, "matscipy.calculators.fitting.FitDiamond100.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond110 method)": [[23, "matscipy.calculators.fitting.FitDiamond110.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond111 method)": [[23, "matscipy.calculators.fitting.FitDiamond111.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdimer method)": [[23, "matscipy.calculators.fitting.FitDimer.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitfcc method)": [[23, "matscipy.calculators.fitting.FitFCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphene method)": [[23, "matscipy.calculators.fitting.FitGraphene.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphite method)": [[23, "matscipy.calculators.fitting.FitGraphite.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_0 method)": [[23, "matscipy.calculators.fitting.FitL1_0.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_2 method)": [[23, "matscipy.calculators.fitting.FitL1_2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsc method)": [[23, "matscipy.calculators.fitting.FitSC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsinglepoint method)": [[23, "matscipy.calculators.fitting.FitSinglePoint.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsurface method)": [[23, "matscipy.calculators.fitting.FitSurface.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.penalty method)": [[23, "matscipy.calculators.fitting.Penalty.set_parameters_from_array"]], "set_range_derived() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.set_range_derived"]], "set_variable() (matscipy.calculators.fitting.parameters method)": [[23, "matscipy.calculators.fitting.Parameters.set_variable"]], "stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.stress"]], "surfstr (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.surfstr"]], "targets (matscipy.calculators.fitting.combinedfit attribute)": [[23, "matscipy.calculators.fitting.CombinedFit.targets"]], "targets (matscipy.calculators.fitting.rotatingfit attribute)": [[23, "matscipy.calculators.fitting.RotatingFit.targets"]], "variable (matscipy.calculators.fitting.parameters attribute)": [[23, "matscipy.calculators.fitting.Parameters.variable"]], "w_d0 (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.w_D0"]], "w_ec (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.w_Ec"]], "w_ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.w_Ec"]], "w_ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.w_Ec"]], "w_a0 (matscipy.calculators.fitting.fitb2 attribute)": [[23, "matscipy.calculators.fitting.FitB2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitbcc attribute)": [[23, "matscipy.calculators.fitting.FitBCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[23, "matscipy.calculators.fitting.FitCubicCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[23, "matscipy.calculators.fitting.FitDiamond.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond100.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond110.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[23, "matscipy.calculators.fitting.FitDiamond111.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitfcc attribute)": [[23, "matscipy.calculators.fitting.FitFCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[23, "matscipy.calculators.fitting.FitGraphene.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[23, "matscipy.calculators.fitting.FitGraphite.w_a0"]], "w_a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitHexagonalCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[23, "matscipy.calculators.fitting.FitL1_2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsc attribute)": [[23, "matscipy.calculators.fitting.FitSC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsurface attribute)": [[23, "matscipy.calculators.fitting.FitSurface.w_a0"]], "w_a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.w_a0"]], "w_c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[23, "matscipy.calculators.fitting.FitL1_0.w_c0"]], "w_c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[23, "matscipy.calculators.fitting.FitTetragonalCrystal.w_c0"]], "w_energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.w_energy"]], "w_forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.w_forces"]], "w_r0 (matscipy.calculators.fitting.fitdimer attribute)": [[23, "matscipy.calculators.fitting.FitDimer.w_r0"]], "w_stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[23, "matscipy.calculators.fitting.FitSinglePoint.w_stress"]], "matscipy.calculators.manybody": [[24, "module-matscipy.calculators.manybody"]], "manybody (class in matscipy.calculators.manybody.calculator)": [[25, "matscipy.calculators.manybody.calculator.Manybody"]], "nicemanybody (class in matscipy.calculators.manybody.calculator)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody"]], "nicemanybody.f (class in matscipy.calculators.manybody.calculator)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.F"]], "nicemanybody.g (class in matscipy.calculators.manybody.calculator)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.G"]], "__init__() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.__init__"]], "__init__() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.__init__"]], "band_structure() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.band_structure"]], "band_structure() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.band_structure"]], "calculate() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.calculate"]], "calculate() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_forces"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_stress"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.calculate_properties"]], "calculate_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.calculation_required"]], "calculation_required() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.check_state"]], "check_state() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.check_state"]], "default_parameters (matscipy.calculators.manybody.calculator.manybody attribute)": [[25, "matscipy.calculators.manybody.calculator.Manybody.default_parameters"]], "default_parameters (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.default_parameters"]], "directory (matscipy.calculators.manybody.calculator.manybody property)": [[25, "matscipy.calculators.manybody.calculator.Manybody.directory"]], "directory (matscipy.calculators.manybody.calculator.nicemanybody property)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.manybody attribute)": [[25, "matscipy.calculators.manybody.calculator.Manybody.discard_results_on_any_change"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.export_properties"]], "export_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_atoms"]], "get_atoms() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_birch_coefficients"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_born_elastic_constants"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_charges"]], "get_charges() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_charges"]], "get_cutoff() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_cutoff"]], "get_cutoff() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_cutoff"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_default_parameters"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_dipole_moment"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_dynamical_matrix"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_elastic_constants"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_forces"]], "get_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_hessian"]], "get_hessian() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_hessian_from_second_derivative"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian_from_second_derivative"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moment"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moments"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_forces_from_second_derivative"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_forces_from_second_derivative"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_nonaffine_forces"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_numerical_non_affine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energies"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_property"]], "get_property() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_property"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_second_derivative"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_second_derivative"]], "get_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_stress"]], "get_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.get_stresses"]], "get_stresses() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.F.gradient"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.G.gradient"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.F.hessian"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.G.hessian"]], "ignored_changes (matscipy.calculators.manybody.calculator.manybody attribute)": [[25, "matscipy.calculators.manybody.calculator.Manybody.ignored_changes"]], "ignored_changes (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.calculator.manybody attribute)": [[25, "matscipy.calculators.manybody.calculator.Manybody.implemented_properties"]], "implemented_properties (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.implemented_properties"]], "label (matscipy.calculators.manybody.calculator.manybody property)": [[25, "matscipy.calculators.manybody.calculator.Manybody.label"]], "label (matscipy.calculators.manybody.calculator.nicemanybody property)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.label"]], "matscipy.calculators.manybody.calculator": [[25, "module-matscipy.calculators.manybody.calculator"]], "name (matscipy.calculators.manybody.calculator.manybody attribute)": [[25, "matscipy.calculators.manybody.calculator.Manybody.name"]], "name (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.name"]], "read() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.read"]], "read() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.read"]], "read_atoms() (matscipy.calculators.manybody.calculator.manybody class method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.read_atoms"]], "read_atoms() (matscipy.calculators.manybody.calculator.nicemanybody class method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.read_atoms"]], "reset() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.reset"]], "reset() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.reset"]], "set() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.set"]], "set() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.set"]], "set_label() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.set_label"]], "set_label() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.set_label"]], "todict() (matscipy.calculators.manybody.calculator.manybody method)": [[25, "matscipy.calculators.manybody.calculator.Manybody.todict"]], "todict() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[25, "matscipy.calculators.manybody.calculator.NiceManybody.todict"]], "matscipy.calculators.manybody.explicit_forms": [[26, "module-matscipy.calculators.manybody.explicit_forms"]], "harmonicangle (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle"]], "harmonicbond (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond"]], "zeropair (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair"]], "zerotriplet (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__init__"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.gradient"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[27, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[27, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "kumagai() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[28, "matscipy.calculators.manybody.explicit_forms.kumagai.Kumagai"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[28, "matscipy.calculators.manybody.explicit_forms.kumagai.ab"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[28, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "stillingerweber() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[29, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.StillingerWeber"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[29, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[29, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "tersoffbrenner() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[30, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.TersoffBrenner"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[30, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "mix() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[30, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix"]], "mix_arithmetic() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[30, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_arithmetic"]], "mix_geometric() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[30, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_geometric"]], "pair_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[30, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.pair_index"]], "triplet_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[30, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.triplet_index"]], "manybody (class in matscipy.calculators.manybody.newmb)": [[31, "matscipy.calculators.manybody.newmb.Manybody"]], "manybody.phi (class in matscipy.calculators.manybody.newmb)": [[31, "matscipy.calculators.manybody.newmb.Manybody.Phi"]], "manybody.theta (class in matscipy.calculators.manybody.newmb)": [[31, "matscipy.calculators.manybody.newmb.Manybody.Theta"]], "__init__() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.__init__"]], "band_structure() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.band_structure"]], "calculate() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.check_state"]], "default_parameters (matscipy.calculators.manybody.newmb.manybody attribute)": [[31, "matscipy.calculators.manybody.newmb.Manybody.default_parameters"]], "directory (matscipy.calculators.manybody.newmb.manybody property)": [[31, "matscipy.calculators.manybody.newmb.Manybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.newmb.manybody attribute)": [[31, "matscipy.calculators.manybody.newmb.Manybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_charges"]], "get_default_parameters() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_property"]], "get_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.Phi.gradient"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.Theta.gradient"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.Phi.hessian"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.Theta.hessian"]], "ignored_changes (matscipy.calculators.manybody.newmb.manybody attribute)": [[31, "matscipy.calculators.manybody.newmb.Manybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.newmb.manybody attribute)": [[31, "matscipy.calculators.manybody.newmb.Manybody.implemented_properties"]], "label (matscipy.calculators.manybody.newmb.manybody property)": [[31, "matscipy.calculators.manybody.newmb.Manybody.label"]], "matscipy.calculators.manybody.newmb": [[31, "module-matscipy.calculators.manybody.newmb"]], "read() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.read"]], "read_atoms() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.read_atoms"]], "reset() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.reset"]], "set() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.set"]], "set_label() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.set_label"]], "sum_xx_sum_ijk_tau_xx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.sum_XX_sum_ijk_tau_XX_mn"]], "sum_xy_sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.sum_XY_sum_ijk_tau_XY_mn"]], "sum_x_sum_ijk_tau_ijx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ijX_mn"]], "sum_x_sum_ijk_tau_ij_xor_x_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ij_XOR_X_mn"]], "sum_ij_pi_ij_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_pi_ij_n"]], "sum_ij_sum_x_pi_x_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_sum_X_pi_X_n"]], "sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.sum_ijk_tau_XY_mn"]], "todict() (matscipy.calculators.manybody.newmb.manybody method)": [[31, "matscipy.calculators.manybody.newmb.Manybody.todict"]], "bornmayercut (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.BornMayerCut"]], "harmonicangle (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.HarmonicAngle"]], "harmonicpair (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.HarmonicPair"]], "kumagaiangle (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.KumagaiAngle"]], "kumagaipair (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.KumagaiPair"]], "lennardjones (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.LennardJones"]], "stillingerweberangle (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberAngle"]], "stillingerweberpair (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberPair"]], "tersoffbrennerangle (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle"]], "tersoffbrennerpair (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerPair"]], "zeroangle (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.ZeroAngle"]], "zeropair (class in matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.ZeroPair"]], "__init__() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[32, "matscipy.calculators.manybody.potentials.BornMayerCut.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[32, "matscipy.calculators.manybody.potentials.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[32, "matscipy.calculators.manybody.potentials.HarmonicPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[32, "matscipy.calculators.manybody.potentials.KumagaiAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[32, "matscipy.calculators.manybody.potentials.KumagaiPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.lennardjones method)": [[32, "matscipy.calculators.manybody.potentials.LennardJones.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.__init__"]], "angle_distance_defined() (in module matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.angle_distance_defined"]], "distance_defined() (in module matscipy.calculators.manybody.potentials)": [[32, "matscipy.calculators.manybody.potentials.distance_defined"]], "gradient() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[32, "matscipy.calculators.manybody.potentials.BornMayerCut.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[32, "matscipy.calculators.manybody.potentials.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[32, "matscipy.calculators.manybody.potentials.HarmonicPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[32, "matscipy.calculators.manybody.potentials.KumagaiAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[32, "matscipy.calculators.manybody.potentials.KumagaiPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.lennardjones method)": [[32, "matscipy.calculators.manybody.potentials.LennardJones.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeroangle method)": [[32, "matscipy.calculators.manybody.potentials.ZeroAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeropair method)": [[32, "matscipy.calculators.manybody.potentials.ZeroPair.gradient"]], "hessian() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[32, "matscipy.calculators.manybody.potentials.BornMayerCut.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[32, "matscipy.calculators.manybody.potentials.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[32, "matscipy.calculators.manybody.potentials.HarmonicPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[32, "matscipy.calculators.manybody.potentials.KumagaiAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[32, "matscipy.calculators.manybody.potentials.KumagaiPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.lennardjones method)": [[32, "matscipy.calculators.manybody.potentials.LennardJones.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[32, "matscipy.calculators.manybody.potentials.StillingerWeberPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[32, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeroangle method)": [[32, "matscipy.calculators.manybody.potentials.ZeroAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeropair method)": [[32, "matscipy.calculators.manybody.potentials.ZeroPair.hessian"]], "matscipy.calculators.manybody.potentials": [[32, "module-matscipy.calculators.manybody.potentials"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm": [[33, "module-matscipy.calculators.mcfm"]], "print_message() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential class method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[33, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.todict"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm.calculator)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm.calculator": [[34, "module-matscipy.calculators.mcfm.calculator"]], "print_message() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential class method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[34, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.todict"]], "clusterdata (class in matscipy.calculators.mcfm.cluster_data)": [[35, "matscipy.calculators.mcfm.cluster_data.ClusterData"]], "__init__() (matscipy.calculators.mcfm.cluster_data.clusterdata method)": [[35, "matscipy.calculators.mcfm.cluster_data.ClusterData.__init__"]], "forces (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[35, "matscipy.calculators.mcfm.cluster_data.ClusterData.forces"]], "mark (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[35, "matscipy.calculators.mcfm.cluster_data.ClusterData.mark"]], "matscipy.calculators.mcfm.cluster_data": [[35, "module-matscipy.calculators.mcfm.cluster_data"]], "qm_list (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[35, "matscipy.calculators.mcfm.cluster_data.ClusterData.qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[36, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "get_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control)": [[37, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[37, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[38, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "worker_populate_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker)": [[38, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[39, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "neighbourlistbase (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base)": [[40, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[40, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[40, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[40, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.update"]], "neighbourlistmcfm (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm)": [[41, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM"]], "__init__() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[41, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.__init__"]], "do_update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[41, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.do_update"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[41, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[41, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[41, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.update"]], "qmcluster (class in matscipy.calculators.mcfm.qm_cluster)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster"]], "__init__() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster.__init__"]], "attach_clustering_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_clustering_module"]], "attach_flagging_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_flagging_module"]], "attach_neighbour_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_neighbour_list"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster.carve_cluster"]], "matscipy.calculators.mcfm.qm_cluster": [[42, "module-matscipy.calculators.mcfm.qm_cluster"]], "reset_energized_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster.reset_energized_list"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[42, "matscipy.calculators.mcfm.qm_cluster.QMCluster.update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[43, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "baseqmclustertool (class in matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool)": [[44, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[44, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.__init__"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[44, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[44, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[44, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "qmclusteringtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.__init__"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.carve_cluster"]], "complete_aromatic_rings() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.complete_aromatic_rings"]], "create_buffer_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_buffer_region"]], "create_cluster_from_marks() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_cluster_from_marks"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_cluster"]], "hydrogenate_dangling_bonds() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_dangling_bonds"]], "include_special_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.include_special_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[45, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "print_message() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.print_message"]], "replace_double_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_double_bond"]], "replace_single_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[45, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_single_bond"]], "qmflaggingtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.__init__"]], "create_cluster_around_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.create_cluster_around_atom"]], "expand_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.expand_cluster"]], "exponential_moving_average() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.exponential_moving_average"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.find_neighbours"]], "get_energized_list() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.get_energized_list"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.hydrogenate_cluster"]], "join_clusters() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.join_clusters"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[46, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "update_avg_property_per_atom() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.update_avg_property_per_atom"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[46, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.update_qm_region"]], "matscipy.calculators.pair_potential": [[47, "module-matscipy.calculators.pair_potential"]], "beestkramersanten (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten"]], "cutoffinteraction (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.CutoffInteraction"]], "feneljcut (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.FeneLJCut"]], "lennardjones84 (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJones84"]], "lennardjonescut (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesCut"]], "lennardjoneslinear (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear"]], "lennardjonesquadratic (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic"]], "pairpotential (class in matscipy.calculators.pair_potential.calculator)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential"]], "__init__() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[48, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[48, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[48, "matscipy.calculators.pair_potential.calculator.FeneLJCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJones84.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.__init__"]], "band_structure() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.band_structure"]], "calculate() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.calculation_required"]], "check_state() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.check_state"]], "cutoff (matscipy.calculators.pair_potential.calculator.beestkramersanten property)": [[48, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.cutoffinteraction property)": [[48, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.feneljcut property)": [[48, "matscipy.calculators.pair_potential.calculator.FeneLJCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjones84 property)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJones84.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonescut property)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjoneslinear property)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic property)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.cutoff"]], "default_parameters (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.default_parameters"]], "derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[48, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[48, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[48, "matscipy.calculators.pair_potential.calculator.FeneLJCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJones84.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.derivative"]], "directory (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.export_properties"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[48, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[48, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[48, "matscipy.calculators.pair_potential.calculator.FeneLJCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJones84.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.first_derivative"]], "get_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_charges"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[48, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[48, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[48, "matscipy.calculators.pair_potential.calculator.FeneLJCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJones84.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.get_cutoff"]], "get_default_parameters() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_elastic_constants"]], "get_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_forces"]], "get_hessian() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energy"]], "get_property() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_property"]], "get_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stresses"]], "ignored_changes (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.implemented_properties"]], "label (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.label"]], "matscipy.calculators.pair_potential.calculator": [[48, "module-matscipy.calculators.pair_potential.calculator"]], "name (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.name"]], "read() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.read"]], "read_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential class method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.read_atoms"]], "reset() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.reset"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[48, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[48, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[48, "matscipy.calculators.pair_potential.calculator.FeneLJCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJones84.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[48, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.second_derivative"]], "set() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.set"]], "set_label() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.set_label"]], "todict() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[48, "matscipy.calculators.pair_potential.calculator.PairPotential.todict"]], "matscipy.calculators.polydisperse": [[49, "module-matscipy.calculators.polydisperse"]], "inversepowerlawpotential (class in matscipy.calculators.polydisperse.calculator)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential"]], "polydisperse (class in matscipy.calculators.polydisperse.calculator)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse"]], "__init__() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.__init__"]], "__init__() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.__init__"]], "band_structure() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.band_structure"]], "calculate() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate"]], "calculate_numerical_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_properties"]], "calculation_required() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculation_required"]], "check_state() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.check_state"]], "default_parameters (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.default_parameters"]], "derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.derivative"]], "directory (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.directory"]], "discard_results_on_any_change (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.export_properties"]], "first_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.first_derivative"]], "get_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_charges"]], "get_coeffs() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_coeffs"]], "get_cutoff() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_cutoff"]], "get_default_parameters() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_elastic_constants"]], "get_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_forces"]], "get_hessian() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moments"]], "get_maxsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_maxSize"]], "get_minsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_minSize"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energy"]], "get_property() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_property"]], "get_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stresses"]], "ignored_changes (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.ignored_changes"]], "implemented_properties (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.implemented_properties"]], "label (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.label"]], "matscipy.calculators.polydisperse.calculator": [[50, "module-matscipy.calculators.polydisperse.calculator"]], "mix_sizes() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.mix_sizes"]], "name (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.name"]], "read() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.read"]], "read_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse class method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.read_atoms"]], "reset() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.reset"]], "second_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[50, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.second_derivative"]], "set() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.set"]], "set_label() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.set_label"]], "todict() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[50, "matscipy.calculators.polydisperse.calculator.Polydisperse.todict"]], "supercellcalculator (class in matscipy.calculators.supercell_calculator)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator"]], "__init__() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.__init__"]], "band_structure() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.band_structure"]], "calculate() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculation_required"]], "check_state() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.check_state"]], "default_parameters (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.default_parameters"]], "directory (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.export_properties"]], "get_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_atoms"]], "get_charges() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_dipole_moment"]], "get_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_forces"]], "get_magnetic_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_property"]], "get_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stress"]], "get_stresses() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.implemented_properties"]], "label (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.label"]], "matscipy.calculators.supercell_calculator": [[51, "module-matscipy.calculators.supercell_calculator"]], "name (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.name"]], "read() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.read"]], "read_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator class method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.read_atoms"]], "reset() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.reset"]], "set() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.set"]], "set_label() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.set_label"]], "todict() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[51, "matscipy.calculators.supercell_calculator.SupercellCalculator.todict"]], "removesimplesheardeformation (class in matscipy.deformation)": [[52, "matscipy.deformation.RemoveSimpleShearDeformation"]], "__init__() (matscipy.deformation.removesimplesheardeformation method)": [[52, "matscipy.deformation.RemoveSimpleShearDeformation.__init__"]], "get_shear_distance() (in module matscipy.deformation)": [[52, "matscipy.deformation.get_shear_distance"]], "matscipy.deformation": [[52, "module-matscipy.deformation"]], "bccedge100110dislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation"]], "bccedge100dislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.BCCEdge100Dislocation"]], "bccedge111dislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.BCCEdge111Dislocation"]], "bccmixed111dislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.BCCMixed111Dislocation"]], "bccscrew111dislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.BCCScrew111Dislocation"]], "bodycenteredcubicoctahedralfactory (class in matscipy.dislocation)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory"]], "bodycenteredcubictetrahedralfactory (class in matscipy.dislocation)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory"]], "cubiccrystaldislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.CubicCrystalDislocation"]], "cubiccrystaldissociateddislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation"]], "diamondglide30degreepartial (class in matscipy.dislocation)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial"]], "diamondglide60degree (class in matscipy.dislocation)": [[53, "matscipy.dislocation.DiamondGlide60Degree"]], "diamondglide90degreepartial (class in matscipy.dislocation)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial"]], "diamondglidescrew (class in matscipy.dislocation)": [[53, "matscipy.dislocation.DiamondGlideScrew"]], "fccedge110dislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.FCCEdge110Dislocation"]], "fccedgeshockleypartial (class in matscipy.dislocation)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial"]], "fccscrew110dislocation (class in matscipy.dislocation)": [[53, "matscipy.dislocation.FCCScrew110Dislocation"]], "fccscrewshockleypartial (class in matscipy.dislocation)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial"]], "fixedlineatoms (class in matscipy.dislocation)": [[53, "matscipy.dislocation.FixedLineAtoms"]], "__init__() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.__init__"]], "__init__() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.__init__"]], "__init__() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.__init__"]], "__init__() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fixedlineatoms method)": [[53, "matscipy.dislocation.FixedLineAtoms.__init__"]], "adjust_forces() (matscipy.dislocation.fixedlineatoms method)": [[53, "matscipy.dislocation.FixedLineAtoms.adjust_forces"]], "adjust_positions() (matscipy.dislocation.fixedlineatoms method)": [[53, "matscipy.dislocation.FixedLineAtoms.adjust_positions"]], "align() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.align"]], "align() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.align"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.atoms_in_unit_cell"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.atoms_in_unit_cell"]], "basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.basis_factor"]], "basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.basis_factor"]], "bravais_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.bravais_basis"]], "bravais_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.bravais_basis"]], "build_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.build_cylinder"]], "build_glide_configurations() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.build_glide_configurations"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.build_impurity_cylinder"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.calc_num_atoms"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.calc_num_atoms"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.check_basis_volume"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.check_basis_volume"]], "check_duplicates() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.check_duplicates"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.chop_tolerance"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.chop_tolerance"]], "compare_configurations() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.compare_configurations"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.convert_to_natural_basis"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.convert_to_natural_basis"]], "cost_function() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.cost_function"]], "dipole_displacement_angle() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.dipole_displacement_angle"]], "displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.displacements"]], "displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.displacements"]], "displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.displacements"]], "displacements() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.displacements"]], "displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.displacements"]], "element_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.element_basis"]], "element_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.element_basis"]], "find_directions() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_directions"]], "find_directions() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_directions"]], "find_ortho() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_ortho"]], "find_ortho() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_ortho"]], "fit_core_position() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.fit_core_position"]], "fit_core_position_images() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.fit_core_position_images"]], "gamma_line() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.gamma_line"]], "get_centering_mask() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.get_centering_mask"]], "get_elastic_constants() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.get_elastic_constants"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.get_lattice_constant"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.get_lattice_constant"]], "get_u_img() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.get_u_img"]], "init_stroh() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.init_stroh"]], "inside() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inside"]], "inside() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inside"]], "int_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.int_basis"]], "int_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.int_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis_factor"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis_factor"]], "make_barrier_configurations() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.make_barrier_configurations"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_crystal_basis"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_crystal_basis"]], "make_edge_cyl() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.make_edge_cyl"]], "make_edge_cyl_001_100() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.make_edge_cyl_001_100"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_list_of_atoms"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_list_of_atoms"]], "make_screw_cyl() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.make_screw_cyl"]], "make_screw_cyl_kink() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.make_screw_cyl_kink"]], "make_screw_quadrupole() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.make_screw_quadrupole"]], "make_screw_quadrupole_kink() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.make_screw_quadrupole_kink"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_unit_cell"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_unit_cell"]], "matscipy.dislocation": [[53, "module-matscipy.dislocation"]], "other (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.other"]], "other (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.other"]], "ovito_dxa_straight_dislo_info() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.ovito_dxa_straight_dislo_info"]], "plot_bulk() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.plot_bulk"]], "plot_unit_cell() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.plot_unit_cell"]], "plot_vitek() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.plot_vitek"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.print_directions_and_miller"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.print_directions_and_miller"]], "process_element() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.process_element"]], "process_element() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.process_element"]], "put_atom() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.put_atom"]], "put_atom() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.put_atom"]], "read_dislo_qmmm() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.read_dislo_QMMM"]], "screw_cyl_octahedral() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.screw_cyl_octahedral"]], "screw_cyl_tetrahedral() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.screw_cyl_tetrahedral"]], "set_burgers() (matscipy.dislocation.bccedge100110dislocation method)": [[53, "matscipy.dislocation.BCCEdge100110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge100dislocation method)": [[53, "matscipy.dislocation.BCCEdge100Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111dislocation method)": [[53, "matscipy.dislocation.BCCEdge111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccmixed111dislocation method)": [[53, "matscipy.dislocation.BCCMixed111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccscrew111dislocation method)": [[53, "matscipy.dislocation.BCCScrew111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldislocation method)": [[53, "matscipy.dislocation.CubicCrystalDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[53, "matscipy.dislocation.CubicCrystalDissociatedDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide30degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide30degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide60degree method)": [[53, "matscipy.dislocation.DiamondGlide60Degree.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide90degreepartial method)": [[53, "matscipy.dislocation.DiamondGlide90degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglidescrew method)": [[53, "matscipy.dislocation.DiamondGlideScrew.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedge110dislocation method)": [[53, "matscipy.dislocation.FCCEdge110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedgeshockleypartial method)": [[53, "matscipy.dislocation.FCCEdgeShockleyPartial.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrew110dislocation method)": [[53, "matscipy.dislocation.FCCScrew110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrewshockleypartial method)": [[53, "matscipy.dislocation.FCCScrewShockleyPartial.set_burgers"]], "show_neb_configurations() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.show_NEB_configurations"]], "show_configuration() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.show_configuration"]], "slice_long_dislo() (in module matscipy.dislocation)": [[53, "matscipy.dislocation.slice_long_dislo"]], "xtal_name (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.xtal_name"]], "xtal_name (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[53, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.xtal_name"]], "removedrift (class in matscipy.drift)": [[54, "matscipy.drift.RemoveDrift"]], "__init__() (matscipy.drift.removedrift method)": [[54, "matscipy.drift.RemoveDrift.__init__"]], "matscipy.drift": [[54, "module-matscipy.drift"]], "cubicelasticmoduli (class in matscipy.elasticity)": [[55, "matscipy.elasticity.CubicElasticModuli"]], "voigt_6_to_full_3x3_strain() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.Voigt_6_to_full_3x3_strain"]], "voigt_6_to_full_3x3_stress() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.Voigt_6_to_full_3x3_stress"]], "voigt_6x6_to_cubic() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.Voigt_6x6_to_cubic"]], "voigt_6x6_to_full_3x3x3x3() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.Voigt_6x6_to_full_3x3x3x3"]], "__init__() (matscipy.elasticity.cubicelasticmoduli method)": [[55, "matscipy.elasticity.CubicElasticModuli.__init__"]], "compliance() (matscipy.elasticity.cubicelasticmoduli method)": [[55, "matscipy.elasticity.CubicElasticModuli.compliance"]], "cubic_to_voigt_6x6() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.cubic_to_Voigt_6x6"]], "elastic_moduli() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.elastic_moduli"]], "fit_elastic_constants() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.fit_elastic_constants"]], "full_3x3_to_voigt_6_index() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.full_3x3_to_Voigt_6_index"]], "full_3x3_to_voigt_6_strain() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.full_3x3_to_Voigt_6_strain"]], "full_3x3_to_voigt_6_stress() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.full_3x3_to_Voigt_6_stress"]], "full_3x3x3x3_to_voigt_6x6() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.full_3x3x3x3_to_Voigt_6x6"]], "generate_strained_configs() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.generate_strained_configs"]], "invariants() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.invariants"]], "matscipy.elasticity": [[55, "module-matscipy.elasticity"]], "measure_triclinic_elastic_constants() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.measure_triclinic_elastic_constants"]], "nonaffine_elastic_contribution() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.nonaffine_elastic_contribution"]], "poisson_ratio() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.poisson_ratio"]], "rotate() (matscipy.elasticity.cubicelasticmoduli method)": [[55, "matscipy.elasticity.CubicElasticModuli.rotate"]], "rotate_cubic_elastic_constants() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.rotate_cubic_elastic_constants"]], "rotate_elastic_constants() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.rotate_elastic_constants"]], "stiffness() (matscipy.elasticity.cubicelasticmoduli method)": [[55, "matscipy.elasticity.CubicElasticModuli.stiffness"]], "tol (matscipy.elasticity.cubicelasticmoduli attribute)": [[55, "matscipy.elasticity.CubicElasticModuli.tol"]], "youngs_modulus() (in module matscipy.elasticity)": [[55, "matscipy.elasticity.youngs_modulus"]], "matscipy.electrochemistry": [[56, "module-matscipy.electrochemistry"]], "continuous2discrete() (in module matscipy.electrochemistry)": [[57, "matscipy.electrochemistry.continuous2discrete"]], "charge_density() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.charge_density"]], "concentration() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.concentration"]], "debye() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.debye"]], "gamma() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.gamma"]], "ionic_strength() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.ionic_strength"]], "main() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.main"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[58, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "potential() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.potential"]], "test() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[58, "matscipy.electrochemistry.poisson_boltzmann_distribution.test"]], "b() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.B"]], "g() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.G"]], "i (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.I"]], "poissonnernstplancksystem (class in matscipy.electrochemistry.poisson_nernst_planck_solver)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.__init__"]], "charge_density (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.charge_density"]], "concentration (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.concentration"]], "discretize() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.discretize"]], "grid (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.grid"]], "init() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.init"]], "initial_values() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.initial_values"]], "jacobian() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.jacobian"]], "lambda_d (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.lambda_D"]], "leftcontrolledvolumeschemefluxbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.leftControlledVolumeSchemeFluxBC"]], "leftdirichletbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.leftDirichletBC"]], "leftfinitedifferenceschemefluxbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.leftFiniteDifferenceSchemeFluxBC"]], "leftpotentialdirichletbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.leftPotentialDirichletBC"]], "leftpotentialrobinbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.leftPotentialRobinBC"]], "leftrobinbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.leftRobinBC"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[59, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "nernst_planck_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.nernst_planck_pde"]], "newton() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.newton"]], "numberconservationconstraint() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.numberConservationConstraint"]], "poisson_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.poisson_pde"]], "potential (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.potential"]], "rightcontrolledvolumeschemefluxbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.rightControlledVolumeSchemeFluxBC"]], "rightdirichletbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.rightDirichletBC"]], "rightfinitedifferenceschemefluxbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.rightFiniteDifferenceSchemeFluxBC"]], "rightpotentialdirichletbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.rightPotentialDirichletBC"]], "rightpotentialrobinbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.rightPotentialRobinBC"]], "rightrobinbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.rightRobinBC"]], "solve() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solve"]], "solver_callback() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solver_callback"]], "usestandardcellbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.useStandardCellBC"]], "usestandarddirichletbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.useStandardDirichletBC"]], "usestandardinterfacebc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.useStandardInterfaceBC"]], "usesternlayercellbc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.useSternLayerCellBC"]], "x1_scaled (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[59, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.x1_scaled"]], "matscipy.fracture_mechanics": [[60, "module-matscipy.fracture_mechanics"]], "bcc() (in module matscipy.fracture_mechanics.clusters)": [[61, "matscipy.fracture_mechanics.clusters.bcc"]], "cluster() (in module matscipy.fracture_mechanics.clusters)": [[61, "matscipy.fracture_mechanics.clusters.cluster"]], "diamond() (in module matscipy.fracture_mechanics.clusters)": [[61, "matscipy.fracture_mechanics.clusters.diamond"]], "fcc() (in module matscipy.fracture_mechanics.clusters)": [[61, "matscipy.fracture_mechanics.clusters.fcc"]], "matscipy.fracture_mechanics.clusters": [[61, "module-matscipy.fracture_mechanics.clusters"]], "sc() (in module matscipy.fracture_mechanics.clusters)": [[61, "matscipy.fracture_mechanics.clusters.sc"]], "set_groups() (in module matscipy.fracture_mechanics.clusters)": [[61, "matscipy.fracture_mechanics.clusters.set_groups"]], "set_regions() (in module matscipy.fracture_mechanics.clusters)": [[61, "matscipy.fracture_mechanics.clusters.set_regions"]], "constantstrainrate (class in matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.ConstantStrainRate"]], "cubiccrystalcrack (class in matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack"]], "g_to_strain() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.G_to_strain"]], "isotropicstressfield (class in matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.IsotropicStressField"]], "rectilinearanisotropiccrack (class in matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack"]], "sinclaircrack (class in matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack"]], "__init__() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[62, "matscipy.fracture_mechanics.crack.ConstantStrainRate.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[62, "matscipy.fracture_mechanics.crack.IsotropicStressField.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.__init__"]], "adjust_forces() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[62, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_forces"]], "adjust_positions() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[62, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_positions"]], "animate() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.animate"]], "apply_strain() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[62, "matscipy.fracture_mechanics.crack.ConstantStrainRate.apply_strain"]], "arc_length_continuation() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.arc_length_continuation"]], "convergence_line_plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.convergence_line_plot"]], "copy() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[62, "matscipy.fracture_mechanics.crack.ConstantStrainRate.copy"]], "counted() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.counted"]], "crack_tip_position() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position"]], "crack_tip_position_y() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position_y"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.deformation_gradient"]], "deformation_gradient_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cartesian_coordinates"]], "deformation_gradient_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cylinder_coordinates"]], "deformation_gradient_residual() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.deformation_gradient_residual"]], "deformation_gradient_residuals() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.deformation_gradient_residuals"]], "displacement_residual() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.displacement_residual"]], "displacement_residuals() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.displacement_residuals"]], "displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements"]], "displacements() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.displacements"]], "displacements_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cartesian_coordinates"]], "displacements_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cylinder_coordinates"]], "find_tip_broken_bonds() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.find_tip_broken_bonds"]], "find_tip_coordination() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.find_tip_coordination"]], "find_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.find_tip_stress_field"]], "fit_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.fit_cle"]], "fit_crack_stress_field() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.fit_crack_stress_field"]], "get_crack_tip_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_crack_tip_force"]], "get_deformation_gradient() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_deformation_gradient"]], "get_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_dofs"]], "get_energy_release_rate() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.get_energy_release_rate"]], "get_f_alpha_correction() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_f_alpha_correction"]], "get_forces() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_forces"]], "get_k_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_k_force"]], "get_potential_energy() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_potential_energy"]], "get_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_precon"]], "get_strain() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.get_strain"]], "get_stress_intensity_factor() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.get_stress_intensity_factor"]], "get_stresses() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[62, "matscipy.fracture_mechanics.crack.IsotropicStressField.get_stresses"]], "get_xdot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.get_xdot"]], "isotropic_modei_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_stress_field"]], "k1g() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1g"]], "k1g() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1g"]], "k1gsqg() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1gsqG"]], "k1gsqg() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1gsqG"]], "matscipy.fracture_mechanics.crack": [[62, "module-matscipy.fracture_mechanics.crack"]], "optimize() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.optimize"]], "pack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.pack"]], "plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.plot"]], "plot_stress_fields() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.plot_stress_fields"]], "print_crack_system() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.print_crack_system"]], "rescale_k() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.rescale_k"]], "rtheta() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.rtheta"]], "scale_displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.scale_displacements"]], "set_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.set_atoms"]], "set_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.set_dofs"]], "set_plane_strain() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_strain"]], "set_plane_stress() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_stress"]], "set_shiftmask() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.set_shiftmask"]], "strain_err() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.strain_err"]], "strain_to_g() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.strain_to_G"]], "stresses() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses"]], "stresses() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[62, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.stresses"]], "stresses_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cartesian_coordinates"]], "stresses_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[62, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cylinder_coordinates"]], "thin_strip_displacement_y() (in module matscipy.fracture_mechanics.crack)": [[62, "matscipy.fracture_mechanics.crack.thin_strip_displacement_y"]], "u_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.u_cle"]], "unpack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.unpack"]], "update_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.update_atoms"]], "update_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.update_precon"]], "write_atoms_to_file() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[62, "matscipy.fracture_mechanics.crack.SinclairCrack.write_atoms_to_file"]], "matscipy.fracture_mechanics.crackpathsel": [[63, "module-matscipy.fracture_mechanics.crackpathsel"]], "j_integral() (in module matscipy.fracture_mechanics.energy_release)": [[64, "matscipy.fracture_mechanics.energy_release.J_integral"]], "matscipy.fracture_mechanics.energy_release": [[64, "module-matscipy.fracture_mechanics.energy_release"]], "idealbrittlesolid (class in matscipy.fracture_mechanics.idealbrittlesolid)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid"]], "__init__() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.__init__"]], "band_structure() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.band_structure"]], "calculate() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate"]], "calculate_numerical_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_stress"]], "calculate_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_properties"]], "calculation_required() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculation_required"]], "check_state() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.check_state"]], "default_parameters (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.default_parameters"]], "directory (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.directory"]], "discard_results_on_any_change (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.discard_results_on_any_change"]], "export_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.export_properties"]], "extend_strip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.extend_strip"]], "find_crack_tip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.find_crack_tip"]], "find_triangles_2d() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.find_triangles_2d"]], "get_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_atoms"]], "get_charges() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_charges"]], "get_default_parameters() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_default_parameters"]], "get_dipole_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_dipole_moment"]], "get_elastic_moduli() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_elastic_moduli"]], "get_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_forces"]], "get_magnetic_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moments"]], "get_poisson_ratio() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_poisson_ratio"]], "get_potential_energies() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energies"]], "get_potential_energy() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energy"]], "get_property() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_property"]], "get_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stress"]], "get_stresses() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stresses"]], "get_wave_speeds() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_wave_speeds"]], "get_youngs_modulus() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_youngs_modulus"]], "ignored_changes (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.ignored_changes"]], "implemented_properties (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.implemented_properties"]], "label (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.label"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[65, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "read() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read"]], "read_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid class method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read_atoms"]], "reset() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.reset"]], "set() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set"]], "set_constraints() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.set_constraints"]], "set_initial_velocities() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.set_initial_velocities"]], "set_label() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_label"]], "set_reference_crystal() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_reference_crystal"]], "todict() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.todict"]], "triangular_lattice_slab() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[65, "matscipy.fracture_mechanics.idealbrittlesolid.triangular_lattice_slab"]], "fd_hessian() (in module matscipy.hessian_finite_differences)": [[66, "matscipy.hessian_finite_differences.fd_hessian"]], "matscipy.hessian_finite_differences": [[66, "module-matscipy.hessian_finite_differences"]], "hydrogenate() (in module matscipy.hydrogenate)": [[67, "matscipy.hydrogenate.hydrogenate"]], "matscipy.hydrogenate": [[67, "module-matscipy.hydrogenate"]], "matscipy.io": [[68, "module-matscipy.io"]], "lammpsdata (class in matscipy.io.lammpsdata)": [[69, "matscipy.io.lammpsdata.LAMMPSData"]], "__init__() (matscipy.io.lammpsdata.lammpsdata method)": [[69, "matscipy.io.lammpsdata.LAMMPSData.__init__"]], "check_legal_name() (in module matscipy.io.lammpsdata)": [[69, "matscipy.io.lammpsdata.check_legal_name"]], "column_size() (in module matscipy.io.lammpsdata)": [[69, "matscipy.io.lammpsdata.column_size"]], "matscipy.io.lammpsdata": [[69, "module-matscipy.io.lammpsdata"]], "read() (matscipy.io.lammpsdata.lammpsdata method)": [[69, "matscipy.io.lammpsdata.LAMMPSData.read"]], "read_molecules_from_lammps_data() (in module matscipy.io.lammpsdata)": [[69, "matscipy.io.lammpsdata.read_molecules_from_lammps_data"]], "write() (matscipy.io.lammpsdata.lammpsdata method)": [[69, "matscipy.io.lammpsdata.LAMMPSData.write"]], "matscipy.io.metis": [[70, "module-matscipy.io.metis"]], "save_metis() (in module matscipy.io.metis)": [[70, "matscipy.io.metis.save_metis"]], "matscipy.io.opls": [[71, "module-matscipy.io.opls"]], "read_block() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.read_block"]], "read_cutoffs() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.read_cutoffs"]], "read_extended_xyz() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.read_extended_xyz"]], "read_lammps_data() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.read_lammps_data"]], "read_lammps_definitions() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.read_lammps_definitions"]], "read_parameter_file() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.read_parameter_file"]], "update_from_lammps_dump() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.update_from_lammps_dump"]], "write_lammps() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.write_lammps"]], "write_lammps_atoms() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.write_lammps_atoms"]], "write_lammps_definitions() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.write_lammps_definitions"]], "write_lammps_in() (in module matscipy.io.opls)": [[71, "matscipy.io.opls.write_lammps_in"]], "loadtbl() (in module matscipy.io.tbl)": [[72, "matscipy.io.tbl.loadtbl"]], "matscipy.io.tbl": [[72, "module-matscipy.io.tbl"]], "savetbl() (in module matscipy.io.tbl)": [[72, "matscipy.io.tbl.savetbl"]], "logger (class in matscipy.logger)": [[73, "matscipy.logger.Logger"]], "__init__() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.__init__"]], "flatten() (in module matscipy.logger)": [[73, "matscipy.logger.flatten"]], "flush() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.flush"]], "get_logfile() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.get_logfile"]], "has_logfile() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.has_logfile"]], "hdr_str() (in module matscipy.logger)": [[73, "matscipy.logger.hdr_str"]], "hdrfmt_str() (in module matscipy.logger)": [[73, "matscipy.logger.hdrfmt_str"]], "iteration_finished() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.iteration_finished"]], "matscipy.logger": [[73, "module-matscipy.logger"]], "numfmt_str() (in module matscipy.logger)": [[73, "matscipy.logger.numfmt_str"]], "pr() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.pr"]], "set_logfile() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.set_logfile"]], "set_outevery() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.set_outevery"]], "st() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.st"]], "warn() (matscipy.logger.logger method)": [[73, "matscipy.logger.Logger.warn"]], "cutoffneighbourhood (class in matscipy.neighbours)": [[74, "matscipy.neighbours.CutoffNeighbourhood"]], "molecularneighbourhood (class in matscipy.neighbours)": [[74, "matscipy.neighbours.MolecularNeighbourhood"]], "neighbourhood (class in matscipy.neighbours)": [[74, "matscipy.neighbours.Neighbourhood"]], "__init__() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.__init__"]], "complete_connectivity() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.complete_connectivity"]], "compute_distances() (matscipy.neighbours.cutoffneighbourhood static method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.molecularneighbourhood static method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.neighbourhood static method)": [[74, "matscipy.neighbours.Neighbourhood.compute_distances"]], "connected_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.connected_triplets"]], "double_connectivity() (matscipy.neighbours.molecularneighbourhood static method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.double_connectivity"]], "double_neighbourhood() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.double_neighbourhood"]], "find_common_neighbours() (in module matscipy.neighbours)": [[74, "matscipy.neighbours.find_common_neighbours"]], "find_indices_of_reversed_pairs() (in module matscipy.neighbours)": [[74, "matscipy.neighbours.find_indices_of_reversed_pairs"]], "find_triplet_types() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.find_triplet_types"]], "get_pairs() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.get_pairs"]], "get_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.get_triplets"]], "lexsort() (matscipy.neighbours.cutoffneighbourhood static method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.molecularneighbourhood static method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.neighbourhood static method)": [[74, "matscipy.neighbours.Neighbourhood.lexsort"]], "make_result() (matscipy.neighbours.cutoffneighbourhood static method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.molecularneighbourhood static method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.neighbourhood static method)": [[74, "matscipy.neighbours.Neighbourhood.make_result"]], "mask() (matscipy.neighbours.cutoffneighbourhood static method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.mask"]], "mask() (matscipy.neighbours.molecularneighbourhood static method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.mask"]], "mask() (matscipy.neighbours.neighbourhood static method)": [[74, "matscipy.neighbours.Neighbourhood.mask"]], "matscipy.neighbours": [[74, "module-matscipy.neighbours"]], "mic() (in module matscipy.neighbours)": [[74, "matscipy.neighbours.mic"]], "molecules (matscipy.neighbours.molecularneighbourhood property)": [[74, "matscipy.neighbours.MolecularNeighbourhood.molecules"]], "neighbour_list() (in module matscipy.neighbours)": [[74, "matscipy.neighbours.neighbour_list"]], "pair_type (matscipy.neighbours.molecularneighbourhood property)": [[74, "matscipy.neighbours.MolecularNeighbourhood.pair_type"]], "reverse_pair_indices() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.reverse_pair_indices"]], "triplet_list() (in module matscipy.neighbours)": [[74, "matscipy.neighbours.triplet_list"]], "triplet_to_numbers() (matscipy.neighbours.cutoffneighbourhood method)": [[74, "matscipy.neighbours.CutoffNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.molecularneighbourhood method)": [[74, "matscipy.neighbours.MolecularNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.neighbourhood method)": [[74, "matscipy.neighbours.Neighbourhood.triplet_to_numbers"]], "triplet_type (matscipy.neighbours.molecularneighbourhood property)": [[74, "matscipy.neighbours.MolecularNeighbourhood.triplet_type"]], "get_derivative_volume() (in module matscipy.numerical)": [[75, "matscipy.numerical.get_derivative_volume"]], "get_derivative_wave_vector() (in module matscipy.numerical)": [[75, "matscipy.numerical.get_derivative_wave_vector"]], "matscipy.numerical": [[75, "module-matscipy.numerical"]], "numerical_forces() (in module matscipy.numerical)": [[75, "matscipy.numerical.numerical_forces"]], "numerical_hessian() (in module matscipy.numerical)": [[75, "matscipy.numerical.numerical_hessian"]], "numerical_nonaffine_forces() (in module matscipy.numerical)": [[75, "matscipy.numerical.numerical_nonaffine_forces"]], "numerical_nonaffine_forces_reference() (in module matscipy.numerical)": [[75, "matscipy.numerical.numerical_nonaffine_forces_reference"]], "numerical_stress() (in module matscipy.numerical)": [[75, "matscipy.numerical.numerical_stress"]], "mabincount() (in module matscipy.numpy_tricks)": [[76, "matscipy.numpy_tricks.mabincount"]], "matscipy.numpy_tricks": [[76, "module-matscipy.numpy_tricks"]], "anglesdata (class in matscipy.opls)": [[77, "matscipy.opls.AnglesData"]], "bonddata (class in matscipy.opls)": [[77, "matscipy.opls.BondData"]], "cutofflist (class in matscipy.opls)": [[77, "matscipy.opls.CutoffList"]], "dihedralsdata (class in matscipy.opls)": [[77, "matscipy.opls.DihedralsData"]], "ljqdata (class in matscipy.opls)": [[77, "matscipy.opls.LJQData"]], "oplsstructure (class in matscipy.opls)": [[77, "matscipy.opls.OPLSStructure"]], "__init__() (matscipy.opls.anglesdata method)": [[77, "matscipy.opls.AnglesData.__init__"]], "__init__() (matscipy.opls.bonddata method)": [[77, "matscipy.opls.BondData.__init__"]], "__init__() (matscipy.opls.cutofflist method)": [[77, "matscipy.opls.CutoffList.__init__"]], "__init__() (matscipy.opls.dihedralsdata method)": [[77, "matscipy.opls.DihedralsData.__init__"]], "__init__() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.__init__"]], "__init__() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.__init__"]], "add_name() (matscipy.opls.anglesdata method)": [[77, "matscipy.opls.AnglesData.add_name"]], "add_name() (matscipy.opls.dihedralsdata method)": [[77, "matscipy.opls.DihedralsData.add_name"]], "append() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.append"]], "ase_objtype (matscipy.opls.oplsstructure attribute)": [[77, "matscipy.opls.OPLSStructure.ase_objtype"]], "calc (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.calc"]], "cell (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.cell"]], "center() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.center"]], "clear() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.clear"]], "constraints (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.constraints"]], "copy() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.copy"]], "copy() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.copy"]], "default_map (matscipy.opls.oplsstructure attribute)": [[77, "matscipy.opls.OPLSStructure.default_map"]], "edit() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.edit"]], "euler_rotate() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.euler_rotate"]], "extend() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.extend"]], "fromdict() (matscipy.opls.oplsstructure class method)": [[77, "matscipy.opls.OPLSStructure.fromdict"]], "fromkeys() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.fromkeys"]], "get() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.get"]], "get_all_distances() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_all_distances"]], "get_angle() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_angle"]], "get_angles() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_angles"]], "get_angular_momentum() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_angular_momentum"]], "get_array() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_array"]], "get_atomic_numbers() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_atomic_numbers"]], "get_bonds() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_bonds"]], "get_calculator() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_calculator"]], "get_cell() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_cell"]], "get_cell_lengths_and_angles() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_cell_lengths_and_angles"]], "get_celldisp() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_celldisp"]], "get_center_of_mass() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_center_of_mass"]], "get_charges() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_charges"]], "get_chemical_formula() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_chemical_formula"]], "get_chemical_symbols() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_chemical_symbols"]], "get_dihedral() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_dihedral"]], "get_dihedrals() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_dihedrals"]], "get_dipole_moment() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_dipole_moment"]], "get_distance() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_distance"]], "get_distances() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_distances"]], "get_forces() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_forces"]], "get_global_number_of_atoms() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_global_number_of_atoms"]], "get_initial_charges() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_initial_charges"]], "get_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_initial_magnetic_moments"]], "get_kinetic_energy() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_kinetic_energy"]], "get_magnetic_moment() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_magnetic_moments"]], "get_masses() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_masses"]], "get_momenta() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_momenta"]], "get_moments_of_inertia() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_moments_of_inertia"]], "get_name() (matscipy.opls.anglesdata method)": [[77, "matscipy.opls.AnglesData.get_name"]], "get_name() (matscipy.opls.bonddata method)": [[77, "matscipy.opls.BondData.get_name"]], "get_name() (matscipy.opls.cutofflist method)": [[77, "matscipy.opls.CutoffList.get_name"]], "get_name() (matscipy.opls.dihedralsdata method)": [[77, "matscipy.opls.DihedralsData.get_name"]], "get_neighbors() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_neighbors"]], "get_number_of_atoms() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_number_of_atoms"]], "get_pbc() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_pbc"]], "get_positions() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_positions"]], "get_potential_energies() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_potential_energies"]], "get_potential_energy() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_potential_energy"]], "get_properties() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_properties"]], "get_reciprocal_cell() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_reciprocal_cell"]], "get_scaled_positions() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_scaled_positions"]], "get_stress() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_stress"]], "get_stresses() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_stresses"]], "get_tags() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_tags"]], "get_temperature() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_temperature"]], "get_total_energy() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_total_energy"]], "get_types() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_types"]], "get_value() (matscipy.opls.bonddata method)": [[77, "matscipy.opls.BondData.get_value"]], "get_value() (matscipy.opls.cutofflist method)": [[77, "matscipy.opls.CutoffList.get_value"]], "get_velocities() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_velocities"]], "get_volume() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.get_volume"]], "has() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.has"]], "items() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.items"]], "iterimages() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.iterimages"]], "keys() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.keys"]], "matscipy.opls": [[77, "module-matscipy.opls"]], "max() (matscipy.opls.cutofflist method)": [[77, "matscipy.opls.CutoffList.max"]], "name_value() (matscipy.opls.anglesdata method)": [[77, "matscipy.opls.AnglesData.name_value"]], "name_value() (matscipy.opls.bonddata method)": [[77, "matscipy.opls.BondData.name_value"]], "name_value() (matscipy.opls.cutofflist method)": [[77, "matscipy.opls.CutoffList.name_value"]], "name_value() (matscipy.opls.dihedralsdata method)": [[77, "matscipy.opls.DihedralsData.name_value"]], "new_array() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.new_array"]], "number_of_lattice_vectors (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.number_of_lattice_vectors"]], "numbers (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.numbers"]], "pbc (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.pbc"]], "pop() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.pop"]], "pop() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.pop"]], "popitem() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.popitem"]], "positions (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.positions"]], "rattle() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.rattle"]], "repeat() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.repeat"]], "rotate() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.rotate"]], "rotate_dihedral() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.rotate_dihedral"]], "set_angle() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_angle"]], "set_array() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_array"]], "set_atom_data() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_atom_data"]], "set_atomic_numbers() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_atomic_numbers"]], "set_calculator() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_calculator"]], "set_cell() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_cell"]], "set_celldisp() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_celldisp"]], "set_center_of_mass() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_center_of_mass"]], "set_chemical_symbols() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_chemical_symbols"]], "set_constraint() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_constraint"]], "set_cutoffs() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_cutoffs"]], "set_dihedral() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_dihedral"]], "set_distance() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_distance"]], "set_initial_charges() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_initial_charges"]], "set_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_initial_magnetic_moments"]], "set_masses() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_masses"]], "set_momenta() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_momenta"]], "set_names() (matscipy.opls.anglesdata method)": [[77, "matscipy.opls.AnglesData.set_names"]], "set_names() (matscipy.opls.bonddata method)": [[77, "matscipy.opls.BondData.set_names"]], "set_names() (matscipy.opls.cutofflist method)": [[77, "matscipy.opls.CutoffList.set_names"]], "set_names() (matscipy.opls.dihedralsdata method)": [[77, "matscipy.opls.DihedralsData.set_names"]], "set_pbc() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_pbc"]], "set_positions() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_positions"]], "set_scaled_positions() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_scaled_positions"]], "set_tags() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_tags"]], "set_types() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_types"]], "set_velocities() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.set_velocities"]], "setdefault() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.setdefault"]], "symbols (matscipy.opls.oplsstructure property)": [[77, "matscipy.opls.OPLSStructure.symbols"]], "todict() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.todict"]], "translate() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.translate"]], "twochar() (in module matscipy.opls)": [[77, "matscipy.opls.twochar"]], "update() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.update"]], "values() (matscipy.opls.ljqdata method)": [[77, "matscipy.opls.LJQData.values"]], "wrap() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.wrap"]], "write() (matscipy.opls.oplsstructure method)": [[77, "matscipy.opls.OPLSStructure.write"]], "autodamping (class in matscipy.pressurecoupling)": [[78, "matscipy.pressurecoupling.AutoDamping"]], "fixeddamping (class in matscipy.pressurecoupling)": [[78, "matscipy.pressurecoupling.FixedDamping"]], "fixedmasscriticaldamping (class in matscipy.pressurecoupling)": [[78, "matscipy.pressurecoupling.FixedMassCriticalDamping"]], "p_bottom (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.P_bottom"]], "p_top (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.P_top"]], "slidelog (class in matscipy.pressurecoupling)": [[78, "matscipy.pressurecoupling.SlideLog"]], "slidelogger (class in matscipy.pressurecoupling)": [[78, "matscipy.pressurecoupling.SlideLogger"]], "slidewithnormalpressurecuboidcell (class in matscipy.pressurecoupling)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell"]], "t_thermostat (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.T_thermostat"]], "tdir (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.Tdir"]], "__init__() (matscipy.pressurecoupling.autodamping method)": [[78, "matscipy.pressurecoupling.AutoDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixeddamping method)": [[78, "matscipy.pressurecoupling.FixedDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[78, "matscipy.pressurecoupling.FixedMassCriticalDamping.__init__"]], "__init__() (matscipy.pressurecoupling.slidelog method)": [[78, "matscipy.pressurecoupling.SlideLog.__init__"]], "__init__() (matscipy.pressurecoupling.slidelogger method)": [[78, "matscipy.pressurecoupling.SlideLogger.__init__"]], "__init__() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.__init__"]], "a (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.a"]], "adjust_forces() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_forces"]], "adjust_momenta() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_momenta"]], "adjust_positions() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_positions"]], "adjust_potential_energy() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_potential_energy"]], "get_a() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.get_A"]], "get_m_gamma() (matscipy.pressurecoupling.autodamping method)": [[78, "matscipy.pressurecoupling.AutoDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixeddamping method)": [[78, "matscipy.pressurecoupling.FixedDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[78, "matscipy.pressurecoupling.FixedMassCriticalDamping.get_M_gamma"]], "h (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.h"]], "matscipy.pressurecoupling": [[78, "module-matscipy.pressurecoupling"]], "middle_mask (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[78, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.middle_mask"]], "rows (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.rows"]], "step (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.step"]], "tau_bottom (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.tau_bottom"]], "tau_top (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.tau_top"]], "time (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.time"]], "v (matscipy.pressurecoupling.slidelog attribute)": [[78, "matscipy.pressurecoupling.SlideLog.v"]], "write_header() (matscipy.pressurecoupling.slidelogger method)": [[78, "matscipy.pressurecoupling.SlideLogger.write_header"]], "matscipy.rings": [[79, "module-matscipy.rings"]], "ring_statistics() (in module matscipy.rings)": [[79, "matscipy.rings.ring_statistics"]], "betrag() (in module matscipy.spatial_correlation_function)": [[80, "matscipy.spatial_correlation_function.betrag"]], "matscipy.spatial_correlation_function": [[80, "module-matscipy.spatial_correlation_function"]], "max_rad() (in module matscipy.spatial_correlation_function)": [[80, "matscipy.spatial_correlation_function.max_rad"]], "spatial_correlation_function() (in module matscipy.spatial_correlation_function)": [[80, "matscipy.spatial_correlation_function.spatial_correlation_function"]], "spatial_correlation_function_near() (in module matscipy.spatial_correlation_function)": [[80, "matscipy.spatial_correlation_function.spatial_correlation_function_near"]]}})