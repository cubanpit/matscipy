Search.setIndex({"docnames": ["api", "applications/cylinder_configurations", "applications/elastic_constants", "applications/electrochemistry", "applications/electrochemistry_1", "applications/electrochemistry_2", "applications/electrochemistry_3", "applications/fracture_mechanics", "applications/gamma_surface_advanced", "applications/gamma_surfaces", "applications/index", "applications/multispecies_dislocations", "applications/plasticity", "applications/quasi_static_crack", "applications/tribology", "applications/visualisation", "calculators/index", "calculators/manybody", "cli/electrochemistry", "cli/index", "conf", "generated/matscipy.angle_distribution", "generated/matscipy.atomic_strain", "generated/matscipy.calculators.calculator", "generated/matscipy.calculators.committee", "generated/matscipy.calculators.committee.committee", "generated/matscipy.calculators.committee.log", "generated/matscipy.calculators.committee.utils", "generated/matscipy.calculators.eam", "generated/matscipy.calculators.eam.average_atom", "generated/matscipy.calculators.eam.calculator", "generated/matscipy.calculators.eam.io", "generated/matscipy.calculators.ewald", "generated/matscipy.calculators.ewald.calculator", "generated/matscipy.calculators.fitting", "generated/matscipy.calculators.manybody", "generated/matscipy.calculators.manybody.calculator", "generated/matscipy.calculators.manybody.explicit_forms", "generated/matscipy.calculators.manybody.explicit_forms.harmonic", "generated/matscipy.calculators.manybody.explicit_forms.kumagai", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "generated/matscipy.calculators.manybody.newmb", "generated/matscipy.calculators.manybody.potentials", "generated/matscipy.calculators.mcfm", "generated/matscipy.calculators.mcfm.calculator", "generated/matscipy.calculators.mcfm.cluster_data", "generated/matscipy.calculators.mcfm.mcfm_parallel", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.qm_cluster", "generated/matscipy.calculators.mcfm.qm_cluster_tools", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "generated/matscipy.calculators.pair_potential", "generated/matscipy.calculators.pair_potential.calculator", "generated/matscipy.calculators.polydisperse", "generated/matscipy.calculators.polydisperse.calculator", "generated/matscipy.calculators.supercell_calculator", "generated/matscipy.deformation", "generated/matscipy.dislocation", "generated/matscipy.drift", "generated/matscipy.elasticity", "generated/matscipy.electrochemistry", "generated/matscipy.electrochemistry.continuous2discrete", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver_fenics", "generated/matscipy.electrochemistry.steric_correction", "generated/matscipy.fracture_mechanics", "generated/matscipy.fracture_mechanics.clusters", "generated/matscipy.fracture_mechanics.crack", "generated/matscipy.fracture_mechanics.crackpathsel", "generated/matscipy.fracture_mechanics.energy_release", "generated/matscipy.fracture_mechanics.idealbrittlesolid", "generated/matscipy.hessian_finite_differences", "generated/matscipy.hydrogenate", "generated/matscipy.io", "generated/matscipy.io.lammpsdata", "generated/matscipy.io.metis", "generated/matscipy.io.opls", "generated/matscipy.io.tbl", "generated/matscipy.logger", "generated/matscipy.neighbours", "generated/matscipy.numerical", "generated/matscipy.numpy_tricks", "generated/matscipy.opls", "generated/matscipy.pressurecoupling", "generated/matscipy.rings", "generated/matscipy.spatial_correlation_function", "index", "tools/angle_distribution", "tools/index", "tools/neighbour_list", "tools/pair_distribution", "tools/ring_analysis", "topology/index", "topology/setup_non-reactive_simulations", "topology/topology_building_aC"], "filenames": ["api.rst", "applications/cylinder_configurations.ipynb", "applications/elastic_constants.ipynb", "applications/electrochemistry.rst", "applications/electrochemistry_1.py", "applications/electrochemistry_2.py", "applications/electrochemistry_3.py", "applications/fracture_mechanics.rst", "applications/gamma_surface_advanced.ipynb", "applications/gamma_surfaces.ipynb", "applications/index.rst", "applications/multispecies_dislocations.ipynb", "applications/plasticity.rst", "applications/quasi_static_crack.ipynb", "applications/tribology.ipynb", "applications/visualisation.py", "calculators/index.rst", "calculators/manybody.ipynb", "cli/electrochemistry.md", "cli/index.rst", "conf.py", "generated/matscipy.angle_distribution.rst", "generated/matscipy.atomic_strain.rst", "generated/matscipy.calculators.calculator.rst", "generated/matscipy.calculators.committee.rst", "generated/matscipy.calculators.committee.committee.rst", "generated/matscipy.calculators.committee.log.rst", "generated/matscipy.calculators.committee.utils.rst", "generated/matscipy.calculators.eam.rst", "generated/matscipy.calculators.eam.average_atom.rst", "generated/matscipy.calculators.eam.calculator.rst", "generated/matscipy.calculators.eam.io.rst", "generated/matscipy.calculators.ewald.rst", "generated/matscipy.calculators.ewald.calculator.rst", "generated/matscipy.calculators.fitting.rst", "generated/matscipy.calculators.manybody.rst", "generated/matscipy.calculators.manybody.calculator.rst", "generated/matscipy.calculators.manybody.explicit_forms.rst", "generated/matscipy.calculators.manybody.explicit_forms.harmonic.rst", "generated/matscipy.calculators.manybody.explicit_forms.kumagai.rst", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber.rst", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner.rst", "generated/matscipy.calculators.manybody.newmb.rst", "generated/matscipy.calculators.manybody.potentials.rst", "generated/matscipy.calculators.mcfm.rst", "generated/matscipy.calculators.mcfm.calculator.rst", "generated/matscipy.calculators.mcfm.cluster_data.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.qm_cluster.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.rst", "generated/matscipy.calculators.pair_potential.rst", "generated/matscipy.calculators.pair_potential.calculator.rst", "generated/matscipy.calculators.polydisperse.rst", "generated/matscipy.calculators.polydisperse.calculator.rst", "generated/matscipy.calculators.supercell_calculator.rst", "generated/matscipy.deformation.rst", "generated/matscipy.dislocation.rst", "generated/matscipy.drift.rst", "generated/matscipy.elasticity.rst", "generated/matscipy.electrochemistry.rst", "generated/matscipy.electrochemistry.continuous2discrete.rst", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution.rst", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver.rst", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.rst", "generated/matscipy.electrochemistry.steric_correction.rst", "generated/matscipy.fracture_mechanics.rst", "generated/matscipy.fracture_mechanics.clusters.rst", "generated/matscipy.fracture_mechanics.crack.rst", "generated/matscipy.fracture_mechanics.crackpathsel.rst", "generated/matscipy.fracture_mechanics.energy_release.rst", "generated/matscipy.fracture_mechanics.idealbrittlesolid.rst", "generated/matscipy.hessian_finite_differences.rst", "generated/matscipy.hydrogenate.rst", "generated/matscipy.io.rst", "generated/matscipy.io.lammpsdata.rst", "generated/matscipy.io.metis.rst", "generated/matscipy.io.opls.rst", "generated/matscipy.io.tbl.rst", "generated/matscipy.logger.rst", "generated/matscipy.neighbours.rst", "generated/matscipy.numerical.rst", "generated/matscipy.numpy_tricks.rst", "generated/matscipy.opls.rst", "generated/matscipy.pressurecoupling.rst", "generated/matscipy.rings.rst", "generated/matscipy.spatial_correlation_function.rst", "index.rst", "tools/angle_distribution.ipynb", "tools/index.rst", "tools/neighbour_list.ipynb", "tools/pair_distribution.ipynb", "tools/ring_analysis.ipynb", "topology/index.rst", "topology/setup_non-reactive_simulations.ipynb", "topology/topology_building_aC.ipynb"], "titles": ["API Reference", "Building cylindrical configurations with dislocations", "Elastic Constants", "Electrochemistry", "One-dimensional Poisson-Nernst-Planck systems", "Poisson-Nernst-Planck systems by finite element method", "Steric correction", "Fracture Mechanics", "Advanced Features of <code class=\"docutils literal notranslate\"><span class=\"pre\">gamma_surface.py</span></code>", "Generating Gamma Surfaces &amp; Stacking Faults", "Application domains", "Multi-species Dislocation Systems", "Plasticity", "Quasi static fracture simulations", "Tribology", "&lt;no title&gt;", "Interatomic potentials", "Many-body potentials", "Command line interface for the electrochemistry module", "Command line interface", "&lt;no title&gt;", "matscipy.angle_distribution", "matscipy.atomic_strain", "matscipy.calculators.calculator", "matscipy.calculators.committee", "matscipy.calculators.committee.committee", "matscipy.calculators.committee.log", "matscipy.calculators.committee.utils", "matscipy.calculators.eam", "matscipy.calculators.eam.average_atom", "matscipy.calculators.eam.calculator", "matscipy.calculators.eam.io", "matscipy.calculators.ewald", "matscipy.calculators.ewald.calculator", "matscipy.calculators.fitting", "matscipy.calculators.manybody", "matscipy.calculators.manybody.calculator", "matscipy.calculators.manybody.explicit_forms", "matscipy.calculators.manybody.explicit_forms.harmonic", "matscipy.calculators.manybody.explicit_forms.kumagai", "matscipy.calculators.manybody.explicit_forms.stillinger_weber", "matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "matscipy.calculators.manybody.newmb", "matscipy.calculators.manybody.potentials", "matscipy.calculators.mcfm", "matscipy.calculators.mcfm.calculator", "matscipy.calculators.mcfm.cluster_data", "matscipy.calculators.mcfm.mcfm_parallel", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "matscipy.calculators.mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.qm_cluster", "matscipy.calculators.mcfm.qm_cluster_tools", "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "matscipy.calculators.pair_potential", "matscipy.calculators.pair_potential.calculator", "matscipy.calculators.polydisperse", "matscipy.calculators.polydisperse.calculator", "matscipy.calculators.supercell_calculator", "matscipy.deformation", "matscipy.dislocation", "matscipy.drift", "matscipy.elasticity", "matscipy.electrochemistry", "matscipy.electrochemistry.continuous2discrete", "matscipy.electrochemistry.poisson_boltzmann_distribution", "matscipy.electrochemistry.poisson_nernst_planck_solver", "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics", "matscipy.electrochemistry.steric_correction", "matscipy.fracture_mechanics", "matscipy.fracture_mechanics.clusters", "matscipy.fracture_mechanics.crack", "matscipy.fracture_mechanics.crackpathsel", "matscipy.fracture_mechanics.energy_release", "matscipy.fracture_mechanics.idealbrittlesolid", "matscipy.hessian_finite_differences", "matscipy.hydrogenate", "matscipy.io", "matscipy.io.lammpsdata", "matscipy.io.metis", "matscipy.io.opls", "matscipy.io.tbl", "matscipy.logger", "matscipy.neighbours", "matscipy.numerical", "matscipy.numpy_tricks", "matscipy.opls", "matscipy.pressurecoupling", "matscipy.rings", "matscipy.spatial_correlation_function", "Matscipy", "Angle-distribution function", "Analysis tools", "Neighbour list", "Pair-distribution function", "Ring analysis", "Structure and topology generation", "Setups for non-reactive simulations with LAMMPS", "Topology building for LAMMPS non-reactive MD simulations of amorphous carbon"], "terms": {"The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 23, 25, 29, 30, 31, 33, 36, 38, 42, 44, 45, 53, 55, 56, 57, 59, 61, 62, 64, 66, 69, 70, 71, 75, 78, 84, 87, 90, 94, 95, 97, 98, 99, 100, 101, 102], "matscipi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 95, 96, 97, 98, 99, 100, 101, 102], "provid": [1, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 19, 25, 51, 57, 64, 67, 75, 90, 94, 100, 102], "set": [1, 2, 3, 6, 9, 10, 13, 14, 16, 18, 20, 23, 25, 26, 30, 31, 33, 34, 36, 42, 44, 45, 55, 56, 57, 59, 61, 62, 64, 66, 67, 70, 72, 75, 78, 82, 85, 90, 94, 101, 102], "tool": [1, 4, 12, 14, 15, 63, 64, 87, 94, 100], "creat": [1, 2, 4, 5, 6, 8, 9, 12, 14, 19, 20, 23, 25, 26, 29, 30, 33, 36, 42, 44, 45, 56, 59, 61, 62, 64, 72, 78, 87, 90, 97, 101, 102], "atomist": [1, 2, 3, 4, 6, 7, 12, 13, 14, 59, 61, 64, 66, 75], "contain": [1, 9, 10, 12, 14, 20, 23, 25, 30, 31, 33, 36, 42, 44, 45, 56, 59, 61, 62, 64, 66, 70, 71, 75, 78, 82, 84, 87, 89, 90, 96, 97, 101, 102], "In": [1, 2, 4, 5, 8, 9, 11, 14, 15, 18, 23, 25, 30, 33, 34, 36, 42, 44, 45, 56, 59, 61, 62, 64, 78, 87, 90, 94, 101, 102], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 30, 31, 33, 36, 38, 42, 44, 45, 49, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 75, 78, 80, 84, 87, 88, 90, 92, 94, 95, 97, 98, 100, 101, 102], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 17, 23, 25, 29, 30, 33, 36, 42, 44, 45, 52, 56, 59, 61, 62, 64, 72, 75, 78, 84, 85, 87, 90, 91, 97, 101, 102], "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 23, 25, 30, 33, 36, 38, 42, 44, 45, 59, 61, 62, 64, 78, 87, 90, 94, 95, 97, 98, 101, 102], "focu": 1, "order": [1, 4, 6, 9, 10, 11, 13, 18, 20, 23, 30, 33, 36, 42, 43, 59, 61, 64, 66, 70, 71, 87, 90, 91, 94], "start": [1, 9, 11, 12, 14, 20, 23, 30, 31, 33, 36, 42, 59, 61, 64, 66, 75, 90, 101, 102], "cylind": [1, 15, 64, 75], "bulk": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 64, 66, 69, 70, 71, 75, 77, 102], "materi": [1, 2, 7, 13, 14, 29, 64, 80, 91, 94], "orient": [1, 9, 13, 64], "along": [1, 4, 8, 9, 13, 14, 30, 64, 66, 68, 89, 90, 91, 93], "vector": [1, 6, 9, 21, 23, 30, 33, 36, 38, 39, 40, 66, 70, 71, 87, 88, 90, 95, 97], "futur": [1, 23, 25, 30, 36, 61, 62, 78], "line": [1, 4, 5, 6, 9, 14, 15, 20, 31, 64, 75, 84, 91, 94, 102], "vec": [1, 38, 93, 95], "l": [1, 4, 5, 6, 18, 33, 59, 61, 64, 66, 70, 71, 72, 91], "By": [1, 9, 13, 23, 25, 30, 36, 61, 62, 78, 84, 90], "convent": [1, 70, 87, 90, 102], "assum": [1, 4, 13, 25, 66, 70, 71, 75, 87, 90], "z": [1, 4, 5, 6, 8, 9, 14, 64, 66, 68, 69, 70, 71, 72, 75, 84, 87, 90, 101, 102], "direct": [1, 2, 4, 6, 8, 9, 13, 14, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 68, 72, 75, 78, 80, 87, 90, 91], "cell": [1, 3, 6, 10, 11, 12, 13, 14, 15, 18, 23, 25, 30, 33, 36, 44, 45, 61, 62, 63, 66, 70, 71, 74, 75, 78, 84, 87, 90, 91, 98, 101], "alwai": [1, 9], "correspond": [1, 4, 8, 9, 12, 14, 23, 25, 26, 29, 30, 33, 36, 42, 59, 61, 64, 66, 70, 71, 84, 87, 90, 100], "Then": [1, 4, 75], "displac": [1, 6, 7, 11, 13, 17, 22, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 73, 75, 78, 79, 88, 90], "field": [1, 2, 7, 10, 11, 12, 29, 31, 64, 67, 72, 73, 75, 78, 84, 100, 102], "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 29, 30, 31, 33, 36, 38, 41, 42, 43, 44, 45, 51, 52, 53, 55, 56, 57, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102], "appli": [1, 3, 4, 7, 8, 9, 10, 11, 14, 18, 57, 64, 66, 68, 70, 71, 72, 75, 84, 87, 90, 91, 101], "outer": [1, 70], "radial": [1, 75], "shell": [1, 98], "fix": [1, 14, 20, 64, 71, 75, 77, 90, 91], "stabilis": 1, "so": [1, 4, 5, 6, 9, 11, 15, 20, 38, 57, 66, 90, 101], "end": [1, 14, 75, 76, 90], "up": [1, 2, 13, 14, 51, 52, 61, 64, 70, 75, 92, 94, 95, 97, 98, 101], "period": [1, 9, 11, 64, 65, 74, 80, 87, 90, 102], "boundari": [1, 3, 6, 7, 9, 10, 14, 18, 59, 61, 63, 69, 70, 71, 72, 75, 80, 87, 90, 102], "condit": [1, 3, 7, 10, 14, 18, 63, 64, 70, 71, 75, 80, 87, 90, 102], "x": [1, 4, 5, 6, 13, 20, 29, 39, 40, 42, 64, 66, 68, 69, 70, 71, 72, 75, 77, 78, 80, 84, 86, 87, 89, 90, 95, 98, 101, 102], "y": [1, 4, 6, 8, 9, 13, 14, 20, 29, 42, 64, 66, 68, 72, 75, 78, 84, 87, 90, 101], "As": [1, 5, 8, 9, 11, 97, 101], "shown": [1, 4, 5, 20, 23, 30, 61, 62, 78], "figur": [1, 4, 5, 15, 64], "abov": [1, 2, 4, 5, 6, 8, 9, 13, 38, 44, 45, 56, 87, 91, 98], "ar": [1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 15, 17, 19, 20, 23, 25, 29, 30, 31, 33, 34, 36, 38, 42, 44, 45, 52, 56, 57, 59, 61, 62, 63, 64, 66, 68, 70, 71, 72, 75, 78, 80, 84, 87, 90, 91, 93, 94, 95, 97, 100, 101, 102], "characteris": 1, "burger": [1, 64], "b": [1, 4, 6, 13, 15, 17, 20, 22, 23, 29, 30, 31, 33, 34, 36, 42, 59, 61, 64, 66, 70, 72, 75, 78, 80, 90, 92, 93, 95, 101], "parallel": [1, 9, 48, 75, 90], "while": [1, 5, 14, 57, 68, 84, 90, 93, 97], "have": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 20, 23, 25, 30, 33, 34, 36, 38, 42, 44, 45, 59, 61, 62, 64, 66, 75, 78, 87, 89, 90, 94, 101], "perpendicular": [1, 75], "us": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 20, 23, 25, 30, 31, 33, 36, 42, 44, 45, 46, 49, 51, 52, 55, 56, 57, 59, 61, 62, 64, 66, 69, 70, 71, 74, 75, 78, 79, 84, 85, 87, 88, 90, 91, 92, 94, 95, 98, 101, 102], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 20, 23, 25, 29, 30, 31, 33, 36, 39, 40, 42, 44, 45, 56, 57, 59, 61, 62, 63, 64, 65, 66, 68, 69, 75, 78, 82, 84, 87, 90, 91, 94, 97, 98, 100, 101, 102], "anisotrop": [1, 12, 64, 66, 75], "solut": [1, 3, 5, 6, 7, 10, 12, 18, 23, 30, 33, 36, 42, 59, 61, 64, 66, 69, 70, 71, 75], "within": [1, 4, 6, 12, 18, 20, 23, 30, 57, 64, 71, 72, 75, 87, 90], "stroh": [1, 12, 64], "formal": [1, 7, 12], "gener": [1, 3, 4, 7, 8, 10, 11, 12, 17, 18, 20, 23, 29, 30, 36, 42, 44, 45, 57, 59, 63, 64, 66, 68, 70, 71, 74, 87, 94, 96, 101], "implement": [1, 2, 5, 6, 7, 12, 16, 17, 23, 24, 25, 28, 30, 33, 36, 39, 40, 41, 42, 43, 44, 45, 51, 59, 61, 62, 70, 71, 72, 75, 78, 94, 97, 99], "atomman": [1, 12, 64], "packag": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 69, 94, 101, 102], "For": [1, 4, 8, 9, 11, 12, 14, 20, 23, 29, 30, 36, 38, 44, 45, 59, 61, 64, 66, 75, 82, 84, 85, 87, 90, 91, 97], "interact": [1, 2, 11, 14, 15, 17, 31, 33, 38, 42, 43, 59, 61, 82, 84, 90, 100, 101, 102], "visualis": [1, 8, 9, 11, 13, 15], "structur": [1, 2, 7, 8, 9, 11, 12, 13, 15, 17, 23, 25, 30, 31, 33, 34, 36, 42, 44, 45, 48, 55, 56, 57, 59, 61, 62, 64, 66, 78, 84, 87, 90, 94, 97, 101, 102], "nglview": [1, 11, 13, 15, 102], "which": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 20, 23, 25, 30, 33, 36, 38, 42, 44, 45, 49, 55, 56, 57, 59, 61, 62, 66, 69, 75, 78, 80, 84, 87, 89, 90, 91, 95, 96, 97, 100, 101, 102], "allow": [1, 8, 9, 11, 20, 33, 64, 72, 75, 90, 97, 102], "view": [1, 2, 8, 11, 15, 17, 83, 90, 101, 102], "ipython": [1, 2, 15, 17], "jupyt": 1, "notebook": [1, 3, 15, 20, 101], "also": [1, 2, 7, 8, 9, 11, 13, 14, 17, 20, 23, 25, 30, 33, 36, 42, 44, 45, 56, 59, 61, 62, 75, 78, 90, 94, 97, 100], "color": [1, 2, 4, 5, 6, 11, 15, 64, 75], "atom": [1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 23, 25, 28, 29, 30, 31, 33, 34, 36, 38, 42, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 59, 61, 62, 64, 65, 66, 68, 75, 77, 78, 79, 80, 82, 83, 84, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101], "accord": [1, 3, 7, 8, 14, 15, 18, 25, 57, 64, 66, 68, 70, 71, 87, 99], "crystallograph": [1, 12, 75], "identifi": [1, 8, 15, 25, 87, 97, 99], "common": [1, 8, 15, 55, 87, 90, 99], "neighbour": [1, 8, 21, 22, 23, 30, 36, 44, 45, 51, 52, 53, 55, 56, 57, 59, 61, 64, 75, 78, 83, 94, 95, 96, 98, 100, 102], "analysi": [1, 8, 12, 15, 64, 70, 71, 94, 97], "algoritm": 1, "its": [1, 4, 5, 6, 14, 17, 20, 23, 25, 30, 34, 36, 55, 56, 57, 59, 61, 62, 64, 66, 72, 78, 80, 90, 102], "extent": 1, "ovito": [1, 6, 12, 15, 64], "part": [1, 8, 12, 14, 20, 25, 31, 33, 64, 91, 102], "default": [1, 4, 9, 11, 12, 15, 18, 19, 20, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 75, 78, 84, 87, 89, 90, 93], "depend": [1, 2, 8, 9, 11, 12, 34], "requir": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 25, 64, 66, 75, 90, 94, 95, 100, 101, 102], "separ": [1, 23, 30, 33, 36, 42, 59, 61, 66, 84, 91, 102], "instal": [1, 10, 19], "keep": [1, 9, 20], "mind": [1, 2, 6, 11, 72], "run": [1, 9, 12, 13, 14, 17, 44, 45, 49, 57, 62, 64, 66, 69, 75, 90, 91, 102], "well": [1, 3, 4, 9, 12, 29], "test": [1, 2, 5, 10, 13, 17, 69, 90, 95, 98, 99], "test_disloc": [1, 12], "py": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 20, 66, 101, 102], "sinc": [1, 13, 14, 23, 25, 30, 33, 36, 42, 44, 45, 52, 59, 61, 62, 78, 94, 97, 101], "major": [1, 12], "modul": [1, 2, 3, 6, 7, 8, 12, 13, 14, 19, 20, 24, 28, 32, 35, 37, 44, 47, 50, 51, 54, 58, 60, 66, 67, 73, 79, 81, 94, 101], "thu": [1, 4, 6, 9, 11, 12, 70, 71, 90], "skip": [1, 9, 12], "found": [1, 4, 11, 59, 61, 70, 71, 75, 84, 90, 91, 94, 101, 102], "your": [1, 9, 12, 20, 90, 94, 102], "pleas": [1, 6, 23, 25, 30, 36, 61, 62, 78, 90, 102], "note": [1, 11, 14, 20, 29, 30, 38, 64, 66, 75, 82, 84, 90, 95, 101, 102], "veri": [1, 2, 8, 9, 13, 90, 101, 102], "small": [1, 2, 4, 9, 13, 14, 17, 57, 66, 87, 91], "radiu": [1, 6, 8, 11, 18, 64, 72, 87], "product": [1, 6], "calcul": [1, 2, 4, 7, 8, 9, 13, 14, 16, 17, 22, 66, 69, 73, 75, 78, 88, 90, 91, 92, 93, 94, 95, 97, 98], "one": [1, 4, 6, 9, 11, 13, 14, 23, 25, 30, 36, 43, 56, 57, 61, 62, 64, 66, 68, 70, 71, 72, 78, 84, 87, 90, 93], "should": [1, 2, 8, 9, 11, 12, 20, 23, 25, 29, 30, 33, 36, 42, 44, 45, 55, 56, 57, 59, 61, 62, 64, 66, 75, 78, 84, 90, 91, 101, 102], "do": [1, 4, 6, 9, 11, 12, 13, 20, 23, 25, 30, 36, 44, 45, 61, 62, 69, 78, 87, 90, 91], "converg": [1, 3, 4, 6, 9, 10, 13, 14, 23, 30, 33, 36, 42, 59, 61, 66, 69, 70, 71], "size": [1, 2, 4, 6, 11, 13, 14, 15, 20, 23, 30, 33, 34, 36, 42, 49, 59, 61, 64, 66, 67, 70, 71, 75, 76, 87, 88, 89, 98], "ensur": [1, 6, 13, 14, 59, 90, 102], "affect": [1, 15, 90, 102], "studi": [1, 11, 12, 14, 64], "import": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 20, 29, 72, 75, 87, 90, 95, 97, 98, 99, 101, 102], "numpi": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 18, 20, 22, 30, 71, 72, 75, 85, 87, 89, 90, 91, 94, 95, 97, 98, 99, 101, 102], "np": [1, 2, 4, 5, 6, 8, 11, 13, 14, 15, 17, 23, 30, 31, 44, 45, 46, 49, 51, 52, 56, 57, 61, 62, 64, 66, 68, 70, 72, 75, 78, 87, 89, 95, 97, 98, 99, 101, 102], "necessari": [1, 4, 11, 12, 13, 44, 45, 55, 56, 57, 66], "render": [1, 11, 20], "3d": [1, 6, 11, 64, 66], "from": [1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 25, 27, 29, 30, 31, 33, 36, 42, 43, 44, 45, 51, 52, 56, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 82, 84, 85, 87, 88, 90, 91, 94, 95, 97, 98, 99, 101, 102], "show_disloc": [1, 8, 11, 15], "defin": [1, 2, 4, 5, 8, 13, 14, 23, 25, 26, 38, 42, 43, 64, 66, 78, 84, 87, 90, 102], "dimensionless": [1, 4, 64, 66, 75], "alat": [1, 8, 9, 11, 13, 64], "frame": [1, 4, 5, 6, 13, 64, 66, 75], "each": [1, 4, 5, 9, 20, 22, 23, 30, 31, 33, 36, 42, 44, 45, 57, 59, 61, 64, 66, 68, 69, 70, 71, 75, 84, 85, 87, 90, 91, 97, 100, 101, 102], "kind": [1, 12, 29, 30, 31, 64], "ha": [1, 4, 5, 6, 7, 8, 9, 12, 14, 23, 25, 29, 30, 31, 33, 36, 42, 52, 59, 61, 62, 63, 64, 66, 75, 78, 89, 90, 95, 97, 98, 99], "sever": 1, "describ": [1, 2, 9, 17, 70, 71, 75, 78, 90, 95, 98, 102], "geometr": [1, 31, 84, 90], "layout": [1, 15], "posit": [1, 4, 6, 13, 14, 15, 17, 23, 25, 30, 36, 42, 44, 45, 56, 61, 62, 64, 66, 70, 71, 72, 75, 77, 78, 84, 87, 90, 91, 101, 102], "Such": [1, 101], "store": [1, 20, 25, 34, 46, 49, 57, 75, 78, 84, 87, 90, 97, 101], "attribut": [1, 23, 25, 30, 31, 33, 34, 36, 42, 44, 45, 59, 61, 62, 64, 70, 71, 75, 78, 87, 90, 91], "class": [1, 8, 9, 11, 12, 13, 14, 17, 20, 23, 25, 30, 31, 33, 34, 36, 38, 42, 43, 44, 45, 46, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 78, 82, 86, 87, 90, 91], "thei": [1, 2, 11, 12, 20, 23, 30, 52, 57, 61, 62, 78, 84, 87, 101], "can": [1, 2, 4, 8, 9, 11, 12, 13, 14, 17, 18, 20, 23, 25, 29, 30, 33, 36, 38, 42, 44, 45, 51, 52, 57, 59, 61, 62, 64, 66, 70, 71, 72, 75, 78, 84, 85, 87, 90, 91, 94, 95, 97, 98, 101, 102], "without": [1, 9, 17, 27, 44, 45, 72], "actual": [1, 2, 72, 75, 91, 97], "need": [1, 6, 9, 13, 14, 15, 20, 23, 25, 30, 33, 36, 38, 42, 44, 45, 55, 56, 57, 59, 61, 62, 64, 72, 75, 78, 87, 94, 95, 98, 101], "construct": [1, 9, 11, 12, 33, 42, 44, 45, 59, 64, 70, 71, 84, 87, 101], "bccmixed111disloc": [1, 64], "print": [1, 6, 8, 11, 13, 44, 45, 56, 57, 64, 66, 72, 75, 87, 90, 101, 102], "bcc": [1, 13, 34, 64, 74], "miller": [1, 8, 9, 64, 75], "indic": [1, 9, 30, 51, 52, 56, 64, 69, 72, 75, 79, 87, 88, 89, 90, 91, 97, 102], "ax": [1, 2, 4, 5, 6, 12, 13, 64, 68, 75, 90], "burgers_dimensionless": [1, 64], "core": [1, 11, 15, 44, 45, 46, 56, 64], "fraction": [1, 11], "coord": [1, 11, 72, 87, 93], "n": [1, 2, 4, 5, 6, 8, 9, 13, 23, 29, 30, 31, 33, 36, 42, 59, 61, 64, 69, 70, 71, 72, 74, 75, 76, 78, 87, 90, 95, 98], "unit_cell_core_position_dimensionless": [1, 64], "unit": [1, 4, 6, 9, 13, 14, 15, 17, 20, 23, 25, 30, 36, 61, 62, 64, 66, 69, 70, 71, 72, 75, 78, 84, 90, 91], "usr": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 101, 102], "lib": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 101, 102], "python3": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 94, 101, 102], "dist": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 101, 102], "scipi": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 23, 30, 64, 66, 70, 71, 72, 75, 87, 94, 101, 102], "__init__": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 20, 23, 25, 30, 33, 34, 36, 38, 42, 43, 44, 45, 46, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 78, 82, 86, 87, 90, 91, 101, 102], "146": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 101, 102], "userwarn": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 101, 102], "A": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 18, 20, 22, 23, 25, 29, 30, 31, 33, 36, 42, 43, 44, 45, 51, 52, 59, 61, 62, 64, 66, 69, 75, 78, 84, 87, 89, 90, 91, 99, 101, 102], "version": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 20, 64, 90, 94, 101, 102], "17": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 20, 97, 101, 102], "3": [1, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 17, 23, 30, 31, 33, 46, 52, 57, 61, 62, 64, 68, 69, 70, 71, 72, 75, 76, 78, 84, 87, 90, 93, 95, 98, 99, 101, 102], "25": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 64, 101, 102], "0": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 18, 20, 23, 25, 29, 30, 31, 33, 34, 36, 38, 42, 43, 44, 45, 52, 53, 57, 59, 61, 62, 63, 64, 66, 69, 70, 71, 72, 74, 75, 76, 78, 84, 85, 87, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102], "detect": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 64, 101, 102], "26": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 64, 101, 102], "warn": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 20, 26, 44, 45, 72, 86, 90, 101, 102], "f": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 29, 30, 31, 36, 38, 59, 61, 64, 69, 70, 71, 72, 75, 76, 90, 91, 101, 102], "np_minvers": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 101, 102], "np_maxvers": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 101, 102], "5": [1, 2, 4, 5, 6, 11, 13, 14, 15, 18, 29, 31, 46, 63, 64, 66, 72, 74, 75, 76, 77, 78, 84, 87, 90, 95, 97, 98, 99, 101, 102], "16666667": [1, 64], "disloc_mod": 1, "inspect": [1, 3, 10], "find": [1, 6, 13, 55, 56, 57, 64, 72, 75, 87, 90, 95, 98], "all": [1, 4, 6, 9, 12, 13, 14, 15, 17, 18, 19, 20, 23, 25, 30, 31, 33, 36, 42, 44, 45, 52, 55, 57, 59, 61, 62, 70, 71, 75, 77, 78, 80, 84, 87, 90, 91, 93, 97, 101, 102], "inherit": [1, 20], "abstract": [1, 36, 42, 59, 64, 87], "base": [1, 2, 8, 9, 11, 12, 13, 20, 23, 25, 30, 31, 33, 34, 36, 38, 42, 43, 44, 45, 46, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 78, 82, 86, 87, 90, 91, 95, 100, 101, 102], "cubiccrystaldisloc": [1, 8, 12, 64], "name": [1, 4, 6, 8, 9, 11, 13, 15, 20, 23, 25, 26, 30, 31, 33, 34, 36, 42, 44, 45, 57, 59, 61, 62, 64, 75, 78, 82, 83, 84, 85, 86, 90, 102], "attr": 1, "__dict__": 1, "item": [1, 90], "isclass": 1, "issubclass": 1, "cubiccrystaldissociateddisloc": [1, 8, 12, 64], "bccscrew111disloc": [1, 64], "bccedge111disloc": [1, 64], "bccedge111bardisloc": [1, 64], "bccedge100disloc": [1, 8, 64], "bccedge100110disloc": [1, 64], "diamondglide30degreeparti": [1, 64], "diamondglide90degreeparti": [1, 11, 64], "diamondglidescrew": [1, 8, 64], "diamondglide60degre": [1, 64], "fccscrewshockleyparti": [1, 64], "fccedgeshockleyparti": [1, 64], "fccscrew110disloc": [1, 64], "fccedge110disloc": [1, 8, 64], "case": [1, 4, 5, 9, 11, 15, 23, 25, 30, 33, 36, 42, 44, 45, 56, 59, 61, 62, 64, 70, 71, 75, 78, 87, 90, 102], "take": [1, 5, 11, 13, 38, 63, 64, 66, 90], "tungsten": [1, 64], "lattic": [1, 2, 7, 8, 11, 12, 13, 14, 17, 31, 64, 74, 75, 78, 84, 87, 90, 101], "paramet": [1, 2, 4, 5, 12, 13, 14, 15, 21, 23, 25, 29, 30, 31, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 53, 55, 56, 57, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 100, 101, 102], "elast": [1, 7, 10, 11, 12, 17, 23, 29, 30, 33, 36, 42, 59, 61, 64, 73, 75, 91, 94, 102], "constant": [1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 17, 23, 29, 30, 31, 33, 34, 36, 42, 59, 61, 64, 66, 69, 70, 71, 75, 78, 84, 90, 91, 94], "It": [1, 8, 13, 25, 44, 45, 66, 87, 90, 94, 95], "possibl": [1, 6, 11, 20, 23, 64, 66, 87, 90, 94], "valu": [1, 4, 5, 6, 13, 14, 20, 25, 31, 34, 39, 40, 57, 64, 66, 69, 70, 71, 72, 75, 77, 84, 87, 90, 91, 93, 95, 101], "literatur": [1, 9, 101], "howev": [1, 2, 9, 11, 12, 13, 29, 87, 101], "you": [1, 8, 9, 12, 14, 20, 90, 94, 101, 102], "plan": [1, 12], "relax": [1, 2, 9, 11, 13, 23, 30, 33, 34, 36, 42, 59, 61, 64, 66, 75, 77, 91, 101], "interatom": [1, 2, 8, 14, 25, 29, 75, 94, 96, 100, 102], "potenti": [1, 2, 4, 5, 6, 8, 9, 13, 14, 18, 23, 25, 29, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 44, 45, 48, 53, 57, 59, 61, 64, 69, 70, 71, 72, 75, 77, 84, 87, 90, 94, 96, 101, 102], "conveni": [1, 84, 102], "method": [1, 3, 4, 6, 8, 10, 12, 23, 25, 28, 30, 31, 33, 34, 36, 38, 42, 43, 44, 45, 51, 52, 53, 55, 56, 57, 59, 61, 62, 64, 66, 70, 71, 72, 75, 78, 82, 86, 87, 90, 91, 101], "get_elastic_const": [1, 8, 9, 23, 30, 33, 36, 42, 59, 61, 64], "desir": [1, 2, 5, 6, 8, 11, 33, 66, 70, 102], "embed": [1, 28, 29, 30, 31], "marinica": [1, 64], "et": [1, 9, 14, 17, 20, 25, 59, 61, 102], "al": [1, 9, 14, 17, 20, 25, 59, 61, 90, 102], "2013": [1, 64], "paper": [1, 20, 64], "eam4": 1, "forc": [1, 2, 4, 13, 17, 23, 25, 30, 33, 34, 36, 38, 42, 44, 45, 46, 59, 61, 62, 64, 66, 75, 76, 78, 79, 84, 88, 90, 91, 97, 100, 102], "energi": [1, 2, 9, 13, 17, 23, 25, 29, 30, 31, 33, 34, 36, 42, 43, 44, 45, 49, 57, 59, 61, 62, 64, 75, 76, 77, 78, 84, 85, 87, 90, 91, 97], "eam": [1, 2, 62], "eam_calc": 1, "w_eam4": 1, "function": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 48, 49, 53, 55, 56, 57, 59, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 99, 101], "accept": [1, 2, 5, 8, 23, 30, 33, 36, 42, 52, 59, 61, 66, 87, 99, 102], "ani": [1, 4, 8, 9, 20, 23, 25, 29, 30, 33, 36, 42, 44, 45, 51, 56, 59, 61, 62, 78, 90, 101], "ASE": [1, 4, 6, 8, 13, 14, 16, 23, 30, 44, 45, 49, 75, 82, 84, 87, 90, 91, 94, 101], "type": [1, 2, 8, 15, 18, 30, 31, 44, 45, 46, 51, 52, 55, 56, 57, 64, 66, 68, 69, 70, 71, 72, 75, 77, 80, 82, 84, 85, 87, 89, 90, 91, 92, 98, 100, 101], "c11": [1, 8, 9, 11, 13, 14, 34, 64, 66, 75, 91], "c12": [1, 8, 9, 11, 13, 34, 64, 66, 75], "c44": [1, 8, 9, 11, 13, 34, 64, 66, 75], "symbol": [1, 2, 4, 6, 8, 9, 11, 13, 14, 17, 29, 31, 43, 52, 64, 87, 90, 102], "w": [1, 14, 29, 33, 34, 38, 42, 43, 59, 64, 66, 75, 86, 91], "verbos": [1, 2, 8, 9, 12, 18, 23, 25, 30, 33, 36, 42, 44, 45, 53, 56, 57, 59, 61, 62, 64, 66, 75, 78], "fals": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 20, 23, 25, 30, 33, 34, 36, 42, 44, 45, 49, 57, 59, 61, 62, 64, 66, 70, 74, 75, 78, 82, 85, 86, 87, 90, 93, 98, 102], "3f": [1, 17], "angstrom": [1, 4, 6, 8, 64, 72, 90, 95, 98], "2f": [1, 2, 17], "gpa": [1, 13, 14, 17, 91], "143": 1, "538": 1, "90": [1, 4, 11, 90, 102], "219": 1, "93": [1, 29], "178": 1, "80": [1, 69], "good": [1, 5, 94], "agreement": [1, 3, 10, 64], "number": [1, 4, 5, 6, 8, 9, 13, 14, 17, 21, 23, 25, 29, 30, 31, 33, 36, 42, 44, 45, 49, 51, 52, 59, 61, 62, 64, 66, 68, 69, 70, 71, 72, 74, 75, 78, 80, 82, 84, 87, 89, 90, 92, 95, 97, 98, 99, 102], "523": 1, "202": 1, "161": 1, "notat": [1, 29, 30, 66, 88, 90], "mean": [1, 4, 8, 11, 14, 15, 17, 25, 29, 31, 33, 57, 75, 90, 94, 95], "glide": [1, 8, 64], "plane": [1, 9, 10, 12, 64, 66, 70, 75, 78, 90, 102], "geometri": [1, 11, 13, 64, 75, 90, 102], "112": [1, 8, 11], "think": 1, "about": [1, 4, 14, 20, 25, 44, 45, 64, 66, 75, 84, 90, 94, 101], "object": [1, 2, 8, 13, 14, 15, 23, 25, 30, 33, 34, 36, 42, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 70, 72, 75, 78, 80, 82, 83, 84, 86, 87, 90, 91, 94, 101], "inform": [1, 12, 14, 18, 20, 23, 25, 30, 31, 33, 36, 42, 44, 45, 57, 59, 61, 62, 64, 75, 78, 82, 84, 101], "pass": [1, 8, 9, 11, 12, 13, 23, 25, 30, 36, 61, 62, 64, 66, 75, 78, 85, 90], "a_0": 1, "c_": [1, 11, 13, 29, 66], "11": [1, 6, 8, 11, 13, 17, 64, 72, 90, 101], "12": [1, 5, 6, 11, 13, 59, 64, 69, 70, 71, 72, 75, 84, 90, 97, 101], "44": [1, 4, 11, 13, 64, 66, 92], "element": [1, 3, 10, 13, 14, 18, 29, 31, 52, 64, 84, 87, 90, 101, 102], "constructor": [1, 64, 70, 75], "w_screw": 1, "57169501": 1, "go": [1, 2], "build_cylind": [1, 8, 11, 64], "automat": [1, 14, 90, 91, 101], "onli": [1, 2, 4, 8, 9, 11, 12, 14, 21, 29, 31, 33, 36, 38, 44, 45, 52, 57, 59, 61, 64, 66, 69, 75, 77, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 97, 102], "chose": 1, "return": [1, 2, 4, 6, 9, 13, 15, 17, 23, 25, 29, 30, 31, 33, 36, 38, 42, 43, 44, 45, 51, 52, 55, 56, 57, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 101, 102], "refer": [1, 3, 9, 10, 13, 15, 20, 29, 30, 31, 42, 44, 45, 59, 61, 70, 71, 72, 75, 77, 84, 88, 90, 94], "iter": [1, 5, 23, 30, 33, 36, 42, 43, 59, 61, 63, 66, 70, 71, 90], "until": [1, 9], "achiev": [1, 6, 8, 9, 23, 30, 33, 36, 42, 59, 61, 66], "output": [1, 4, 5, 12, 20, 23, 25, 30, 31, 33, 36, 42, 44, 45, 49, 59, 61, 62, 64, 66, 75, 78, 84, 89, 100], "show": [1, 2, 4, 5, 6, 8, 9, 11, 14, 15, 20, 64, 75, 97, 101], "differ": [1, 2, 4, 6, 9, 10, 11, 12, 15, 23, 25, 30, 31, 33, 36, 42, 44, 45, 49, 59, 61, 62, 64, 69, 70, 71, 72, 75, 78, 79, 84, 87, 88, 90, 100, 101], "between": [1, 4, 6, 8, 9, 14, 15, 23, 30, 31, 34, 64, 69, 70, 75, 77, 84, 87, 90, 95, 97, 98, 101], "step": [1, 3, 10, 13, 14, 23, 30, 33, 36, 42, 44, 45, 59, 61, 66, 69, 75, 88, 91, 95, 102], "unconstrain": [1, 64], "region": [1, 8, 14, 18, 44, 45, 46, 56, 57, 64, 70, 71, 75, 77, 91, 102], "around": [1, 57, 64, 75, 90, 94], "ad": [1, 11, 12, 15, 20, 44, 45, 56, 57, 64, 90], "top": [1, 9, 17, 20, 91, 94, 97], "10": [1, 4, 5, 6, 8, 9, 11, 13, 18, 25, 34, 44, 45, 53, 56, 61, 64, 68, 70, 71, 72, 75, 84, 86, 87, 90, 91, 98, 101], "two": [1, 2, 4, 6, 8, 9, 11, 12, 14, 15, 20, 23, 29, 30, 42, 51, 56, 64, 75, 90, 95, 97, 101, 102], "time": [1, 5, 9, 13, 14, 51, 52, 64, 72, 75, 84, 85, 87, 91, 97, 101], "larger": [1, 55, 56, 57, 93], "than": [1, 2, 4, 14, 21, 22, 23, 25, 30, 36, 52, 61, 62, 64, 70, 71, 78, 87, 93, 95], "cutoff": [1, 2, 14, 21, 22, 30, 31, 33, 36, 43, 52, 59, 61, 64, 74, 75, 76, 78, 80, 84, 87, 90, 92, 93, 95, 97, 98, 99, 101, 102], "fix_mask": [1, 15], "arrai": [1, 4, 6, 11, 13, 14, 15, 23, 30, 31, 33, 36, 39, 40, 42, 44, 45, 46, 49, 51, 52, 56, 57, 59, 61, 64, 66, 68, 70, 71, 72, 74, 75, 77, 80, 85, 87, 89, 90, 91, 92, 97, 101, 102], "via": [1, 9, 18, 61, 71, 79, 90], "w_screw_dislo": 1, "get_arrai": [1, 34, 90], "w_screw_bulk": 1, "20": [1, 4, 8, 14, 20, 64, 68, 70, 71, 75, 84, 90], "ncell": 1, "nburger": 1, "lenth": 1, "linalg": [1, 6, 13, 20, 22], "norm": [1, 6, 13, 22, 23, 30, 33, 36, 39, 40, 42, 59, 61, 64, 66, 75, 93], "scf": 1, "d1": 1, "d2": 1, "_inf": 1, "0014005967613863746": 1, "6": [1, 2, 4, 5, 6, 8, 11, 13, 17, 23, 30, 31, 52, 59, 61, 62, 64, 66, 71, 72, 75, 78, 84, 87, 90, 97, 99, 101, 102], "703182437117761e": 1, "06": [1, 5, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 64, 66, 78, 101], "208065590953879e": 1, "08": [1, 6, 72], "61": 1, "59761308": 1, "62": 1, "23594737": 1, "72225562": 1, "72": 1, "now": [1, 4, 6, 11, 13, 14, 17, 44, 45, 55, 56, 57, 75, 101], "look": [1, 4, 5, 6, 9, 18, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 101], "hover": 1, "mous": 1, "over": [1, 2, 11, 25, 72, 75, 97], "chemic": [1, 8, 11, 13, 64, 90, 102], "cna": [1, 8], "algorithm": [1, 6, 12, 14, 72, 87, 88, 99], "arrow": 1, "displai": [1, 2, 15, 17, 20], "moreov": 1, "control": [1, 3, 4, 5, 8, 11, 18, 64, 70, 71, 100, 102], "translat": [1, 9, 14, 25, 90, 101], "right": [1, 4, 5, 6, 29, 30, 38, 64, 70, 71, 75, 95, 98], "click": 1, "drag": 1, "rotat": [1, 4, 9, 13, 66, 90, 102], "left": [1, 5, 29, 30, 38, 64, 70, 71, 75, 95, 98], "axi": [1, 6, 8, 13, 14, 15, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 68, 72, 78, 87, 89, 90, 91], "ctrl": 1, "zoom": [1, 8, 11, 102], "scroll": 1, "wheel": [1, 94], "d_name": [1, 8, 11, 15], "seen": [1, 8], "most": [1, 2, 4, 9, 12, 13, 90, 94, 102], "some": [1, 2, 4, 5, 8, 9, 11, 12, 18, 20, 26, 44, 45, 52, 75, 78, 85, 91, 94, 95, 97], "grei": [1, 4, 5, 6], "other": [1, 4, 5, 6, 9, 11, 13, 15, 16, 20, 29, 34, 57, 64, 72, 87, 90, 93, 95, 98, 101, 102], "These": [1, 4, 12, 19, 20, 23, 30, 33, 36, 42, 59, 61, 75], "repres": [1, 9, 13, 14, 25, 48, 55, 56, 57, 64, 75], "defect": [1, 9, 12], "where": [1, 7, 11, 12, 23, 30, 57, 61, 70, 71, 72, 75, 87, 90, 95, 98], "could": [1, 9, 11, 14, 90], "assign": [1, 2, 44, 45, 46, 93, 100], "artifici": [1, 75], "free": [1, 9, 75, 90, 91], "surfac": [1, 4, 7, 8, 10, 12, 13, 14, 64, 69, 74, 75, 102], "here": [1, 4, 5, 6, 9, 13, 20, 70, 71, 75, 83, 90, 94, 95, 98, 101, 102], "length": [1, 4, 5, 6, 8, 15, 21, 30, 64, 69, 70, 71, 75, 80, 84, 87, 89, 90, 92, 95, 97, 99], "frac": [1, 17, 30, 38, 64, 75, 95, 98], "sqrt": [1, 2, 6, 23, 30, 61, 64, 69, 70, 71, 72], "With": [1, 4, 8, 10, 11, 68, 87], "infinit": [1, 4, 7, 66], "long": [1, 33, 51, 64, 89, 90, 98, 102], "straight": [1, 12, 13, 64], "make": [1, 4, 5, 6, 8, 9, 13, 14, 18, 20, 23, 25, 51, 52, 56, 64, 70, 71, 82, 84, 90], "easier": [1, 90], "see": [1, 2, 4, 8, 9, 11, 12, 14, 20, 22, 29, 31, 64, 66, 70, 71, 75, 77, 83, 90, 92], "might": [1, 14, 90], "notic": [1, 4, 90], "outsid": [1, 52, 64, 87, 90, 94], "simul": [1, 6, 7, 10, 12, 49, 53, 55, 56, 57, 59, 65, 69, 70, 71, 72, 84, 87, 90, 91, 94, 98, 100], "box": [1, 4, 6, 23, 30, 33, 36, 42, 59, 61, 64, 68, 72, 87, 88, 97], "To": [1, 6, 8, 9, 11, 12, 13, 14, 17, 64, 75, 90, 94, 101, 102], "increas": [1, 14, 64, 69, 75, 91, 97], "reli": [1, 12], "magic": 1, "simpli": [1, 11, 13, 29, 102], "multipli": [1, 57, 70, 71], "longer_w_screw_dislo": 1, "If": [1, 6, 9, 12, 18, 20, 23, 25, 30, 33, 36, 42, 44, 45, 51, 52, 56, 57, 59, 61, 62, 64, 66, 68, 69, 70, 72, 75, 78, 80, 84, 87, 90, 91, 94, 97], "want": [1, 4, 6, 9, 23, 30, 61, 62, 78, 90, 97, 102], "save": [1, 9, 14, 44, 45, 52, 64, 83, 85, 102], "file": [1, 4, 5, 6, 13, 14, 18, 20, 23, 25, 26, 27, 30, 31, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 78, 82, 83, 84, 85, 90, 91, 100, 101], "further": [1, 20, 52], "input": [1, 8, 15, 55, 56, 57, 75, 84, 87, 100, 101], "code": [1, 9, 11, 12, 13, 14, 17, 20, 66, 90, 94, 97, 102], "write": [1, 4, 6, 13, 14, 23, 25, 27, 30, 31, 36, 38, 61, 62, 66, 78, 82, 84, 85, 90, 91, 100, 101, 102], "filenam": [1, 20, 25, 64, 84, 90, 91], "support": [1, 3, 7, 12, 17, 20, 23, 25, 30, 31, 36, 44, 45, 61, 62, 73, 78, 90], "wide": [1, 10, 96], "rang": [1, 2, 4, 33, 34, 66, 72, 87], "format": [1, 4, 6, 15, 18, 20, 23, 29, 30, 31, 33, 36, 42, 59, 61, 64, 72, 83, 84, 86, 87, 90, 97, 101], "includ": [1, 2, 7, 9, 13, 14, 20, 21, 29, 46, 56, 57, 64, 73, 75, 77, 84, 87, 90, 95, 100, 101, 102], "xyz": [1, 4, 18, 64, 84, 90, 101, 102], "lammp": [1, 4, 6, 12, 18, 31, 33, 63, 82, 84, 90, 94, 100], "data": [1, 2, 4, 6, 8, 11, 15, 18, 25, 31, 44, 45, 46, 48, 49, 57, 64, 82, 84, 85, 87, 89, 91, 97], "forget": 1, "account": [1, 2, 6, 14, 66, 87, 90], "like": [1, 8, 9, 11, 13, 18, 20, 23, 25, 29, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 78, 84, 90, 94, 97, 101], "said": 1, "befor": [1, 4, 6, 20, 66, 75, 90], "vectpr": 1, "same": [1, 4, 8, 11, 12, 13, 17, 20, 29, 64, 71, 72, 75, 84, 87, 89, 90, 91, 101, 102], "w_edg": 1, "w_edge_bulk": 1, "w_edge_dislo": 1, "15": [1, 4, 6, 11, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 69, 70, 71, 78, 84, 101, 102], "1750376715612949": 1, "030669760256875678": 1, "004376501917143061": 1, "0008807178021867923": 1, "4": [1, 2, 4, 5, 6, 9, 13, 14, 17, 31, 46, 59, 64, 72, 75, 84, 87, 90, 98, 101, 102], "00015452961340184368": 1, "6112813675371882e": 1, "05": [1, 4, 5, 6, 13, 18, 23, 30, 33, 36, 42, 59, 61, 66, 69, 70, 71, 72, 79, 88], "7488285575835185e": 1, "7": [1, 2, 5, 6, 8, 13, 18, 31, 64, 72, 84, 90, 101], "771193334948912e": 1, "07": [1, 4, 70, 71, 72], "54": 1, "44511239": 1, "53": 1, "34509774": 1, "69970164": 1, "more": [1, 2, 9, 10, 11, 12, 23, 25, 30, 36, 38, 44, 45, 52, 56, 61, 62, 64, 70, 71, 78, 84, 87, 90, 101], "scale": [1, 2, 8, 11, 14, 15, 25, 57, 61, 66, 90], "bar": [1, 4, 6, 20, 38, 64], "bar1": 1, "angl": [1, 21, 38, 43, 64, 75, 84, 87, 90, 94, 96, 100, 101], "70": [1, 12], "lead": [1, 5, 11, 18, 69, 90], "both": [1, 5, 6, 9, 14, 66, 90, 97], "compon": [1, 3, 9, 11, 15, 30, 66, 75, 90, 93, 97, 102], "w_mix": 1, "w_mixed_bulk": 1, "w_mixed_dislo": 1, "2912079415873434": 1, "04617010795789245": 1, "011433812661707288": 1, "0007697510278923819": 1, "0003591870266064223": 1, "8554970632151122e": 1, "0262827855767043e": 1, "9": [1, 2, 5, 6, 8, 13, 17, 31, 70, 71, 72, 75, 87, 90, 101], "262498320908308e": 1, "call": [1, 5, 8, 9, 13, 20, 22, 23, 25, 30, 33, 36, 42, 44, 45, 52, 53, 59, 61, 62, 64, 66, 70, 71, 75, 78, 84, 90, 91, 101], "burdger": 1, "form": [1, 5, 9, 11, 12, 17, 29, 39, 40, 41, 59, 61, 66, 75, 87, 90, 94], "reaction": [1, 4], "abund": 1, "share": [1, 11, 49, 87], "plai": [1, 2], "role": [1, 2, 20], "impur": [1, 64], "segreg": 1, "w_100110_edg": 1, "14339003": 1, "w_100110_edge_bulk": 1, "w_100110_edge_dislo": 1, "d_color": [1, 15], "25601140489118085": 1, "06016860532818502": 1, "008688196415483684": 1, "002036848525945059": 1, "00025500566381200795": 1, "8": [1, 5, 6, 9, 11, 13, 14, 20, 31, 34, 59, 69, 70, 71, 72, 75, 84, 86, 90, 93, 97, 101, 102], "302123227732494e": 1, "6579022069529437e": 1, "7272027901249487e": 1, "75386009341139e": 1, "ly": 1, "w_100_edg": 1, "w_100_edge_bulk": 1, "w_100_edge_dislo": 1, "2972382408416421": 1, "03893880170574304": 1, "01118993521430145": 1, "0014929003265811563": 1, "00046542489793766073": 1, "162098079675384e": 1, "3592857046162976e": 1, "370951242504972e": 1, "007740695381346e": 1, "fcc": [1, 2, 9, 13, 34, 64, 74, 90], "consid": [1, 2, 6, 11, 21, 57, 63, 90, 95, 97, 101], "ni": [1, 70, 71], "bonni": 1, "fecuni": 1, "alloi": [1, 2, 11, 29, 30, 31, 59], "520": 1, "244": 1, "148": 1, "85": [1, 52, 64, 84, 87, 101, 102], "125": 1, "ni_screw": 1, "76": [1, 13], "ni_screw_bulk": 1, "ni_screw_dislo": 1, "025786878331816365": 1, "0009682645189886263": 1, "0001906222678526026": 1, "2412360552323645e": 1, "107613503747995e": 1, "976666234668414e": 1, "03226306802679607": 1, "0021469740733213866": 1, "000267677052085441": 1, "7238460326234337e": 1, "5324311344599995e": 1, "938753628500823e": 1, "35542726": 1, "96818843": 1, "48901587": 1, "49": [1, 91], "due": [1, 4, 7, 11, 20, 23, 30, 33, 36, 42, 59, 61, 69], "stabl": [1, 64, 102], "intrins": 1, "stack": [1, 10, 12, 64, 87], "fault": [1, 10, 12, 64], "isf": 1, "shocklei": 1, "partial": [1, 4, 8, 9, 11, 12, 15, 30, 38, 64, 94], "bar10": 1, "rightarrow": 1, "mathrm": [1, 2, 4, 5, 6, 30], "bar21": 1, "partial_dist": [1, 8, 15, 64], "distanc": [1, 4, 5, 6, 9, 14, 15, 21, 23, 29, 30, 31, 33, 36, 38, 43, 52, 59, 63, 64, 69, 72, 75, 77, 78, 84, 87, 90, 93, 95, 97, 98, 101], "obtain": [1, 5, 7, 23, 25, 30, 33, 36, 42, 44, 45, 48, 59, 61, 66, 75, 87], "patial_dist": 1, "glide_dist": [1, 8, 64], "nexpect": 1, "1f": [1, 2, 17], "0001906222678525471": 1, "241236055083178e": 1, "107613504081062e": 1, "976666184708378e": 1, "0322630680267956": 1, "0021469740733210466": 1, "expect": [1, 4, 70, 71, 72, 90], "togeth": [1, 12, 13, 64, 90], "green": [1, 6, 75], "hcp": 1, "pink": 1, "result": [1, 4, 5, 6, 12, 15, 23, 25, 30, 33, 36, 42, 44, 45, 57, 59, 61, 62, 64, 66, 69, 75, 78, 84, 87, 88, 90], "local": [1, 4, 8, 13, 14, 23, 30, 33, 36, 42, 59, 61, 66, 79, 87, 88, 90, 94], "chang": [1, 2, 11, 14, 23, 25, 30, 33, 36, 42, 44, 45, 56, 59, 61, 62, 64, 78, 90, 94], "layer": [1, 3, 6, 9, 10, 14, 18, 70, 71], "ni_edg": 1, "ni_edge_bulk": 1, "ni_edge_dislo": 1, "07479191850173955": 1, "007990359190408622": 1, "0005818540688957152": 1, "00010046782916865726": 1, "415270105462052e": 1, "733931923827654e": 1, "05000430161332797": 1, "010198993378765508": 1, "0009607376130270073": 1, "00021904644596726364": 1, "1921567654312764e": 1, "620021235149374e": 1, "567335267883891e": 1, "64": [1, 13, 59], "71441261": 1, "31110195": 1, "007990359190407997": 1, "0005818540688956597": 1, "00010046782916806052": 1, "4152701053954386e": 1, "si": [1, 4, 6, 9, 13, 14, 17, 69, 70, 71, 72], "work": [1, 4, 8, 9, 11, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 70, 71, 75, 78, 87, 89, 90, 91, 94, 97], "d": [1, 6, 20, 22, 23, 25, 30, 33, 34, 36, 42, 43, 44, 45, 59, 61, 62, 72, 75, 76, 78, 87, 88, 90, 92, 95, 97, 98], "holland": 1, "m": [1, 4, 5, 6, 9, 13, 14, 17, 23, 30, 33, 36, 42, 59, 61, 64, 66, 69, 70, 71, 72, 76, 78, 91, 94], "marder": [1, 78], "manybodi": [1, 8, 9, 13, 14, 17], "explicit_form": [1, 8, 9, 13, 14, 17], "stillinger_web": [1, 13, 14, 17], "stillingerweb": [1, 13, 14, 17, 40], "holland_marder_prl_80_746_si": [1, 13], "calc": [1, 2, 8, 9, 13, 14, 17, 23, 34, 62, 64, 75, 90], "431": [1, 14], "201": [1, 13], "46": [1, 13], "51": [1, 4, 6, 13], "118": [1, 13], "18": [1, 4, 6, 13], "si_screw": 1, "71547494": 1, "si_screw_bulk": 1, "si_screw_dislo": 1, "diamond_structur": [1, 8, 11, 15], "true": [1, 4, 5, 6, 8, 9, 11, 13, 14, 15, 20, 23, 25, 27, 29, 30, 33, 36, 42, 44, 45, 51, 52, 56, 57, 59, 61, 62, 64, 66, 70, 71, 72, 75, 78, 80, 82, 84, 85, 87, 88, 90, 91, 93, 102], "add_bond": [1, 11, 15], "bond": [1, 15, 21, 38, 46, 55, 56, 57, 64, 75, 80, 84, 87, 90, 95, 97, 100, 101], "bit": 1, "66": 1, "51528011": 1, "75": [1, 11, 14, 64, 72], "25344899": 1, "84026149": 1, "84": [1, 8], "modif": 1, "gradual": 1, "how": [1, 9, 14, 20, 23, 30, 33, 36, 42, 59, 61, 66, 75, 95, 97, 98, 101, 102], "far": [1, 69, 75], "outcom": 1, "u": [1, 2, 6, 8, 9, 13, 17, 18, 20, 38, 64, 69, 70, 71, 72, 75], "1st": [1, 90], "2nd": [1, 64, 70, 71, 90], "neighbor": [1, 15, 23, 30, 51, 52, 80, 87, 90, 92, 95, 97, 98, 99, 102], "similar": [1, 8, 9, 12, 64, 90, 97], "mechan": [1, 6, 10, 14, 75, 94], "exist": [1, 4, 9, 11, 25, 64, 84, 90, 101], "30": [1, 4, 6, 8, 13, 90], "16": [1, 4, 5, 13, 20, 59, 64], "hexagon": [1, 90], "particular": [1, 2, 34, 64, 97], "symmetri": [1, 2, 11, 13, 66, 74], "si_60_degree_screw": 1, "si_60_degree_screw_bulk": 1, "si_60_degree_screw_dislo": 1, "solid": [2, 12, 61, 78], "respond": [2, 12], "extern": [2, 20, 25], "load": [2, 12, 14, 17, 66, 85, 91, 95, 98, 99], "through": [2, 4, 8, 9, 90], "revers": [2, 64, 87], "respons": [2, 7, 13, 53, 55, 56, 57, 64, 66, 73, 102], "strength": [2, 13, 69, 70, 71], "character": [2, 90], "moduli": [2, 17, 66], "comput": [2, 6, 13, 15, 17, 18, 21, 22, 23, 25, 30, 31, 33, 36, 38, 39, 40, 42, 44, 45, 59, 61, 64, 66, 69, 70, 71, 75, 77, 79, 82, 87, 88, 90, 92, 93, 95, 97, 98, 99], "deform": [2, 7, 12, 14, 22, 23, 30, 33, 36, 42, 59, 61, 64, 66, 75, 77, 88], "system": [2, 3, 6, 7, 9, 10, 12, 15, 17, 18, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 65, 66, 67, 70, 71, 75, 78, 84, 87, 90, 92, 94, 98, 99, 101], "underli": [2, 14], "crystal": [2, 8, 9, 11, 12, 13, 14, 31, 34, 64, 66, 75, 77, 78], "analyt": [2, 3, 5, 6, 10, 36, 64, 66], "detail": [2, 6, 64, 66, 90], "below": [2, 4, 6, 7, 9, 13, 14, 51, 84, 91], "basic": [2, 4, 5, 7, 9, 10, 23, 25, 30, 36, 61, 62, 64, 78, 90, 96, 101], "prerequisit": 2, "multi": [2, 10, 12, 89], "model": [2, 6, 8, 9, 11, 12, 14, 18, 24, 25, 59, 64], "continuum": [2, 6, 7, 11, 13, 67, 72, 73, 75], "tutori": [2, 7, 10, 13, 14, 102], "wai": [2, 8, 9, 23, 70, 87, 90, 101, 102], "configur": [2, 3, 4, 10, 12, 13, 14, 20, 23, 27, 29, 30, 33, 36, 42, 52, 59, 61, 64, 66, 72, 75, 77, 79, 80, 84, 87, 88, 90, 91, 92, 95, 98, 99, 101], "let": [2, 6, 8, 11, 14, 15], "": [2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 17, 18, 20, 23, 25, 29, 30, 39, 64, 66, 68, 70, 71, 72, 75, 84, 86, 87, 90, 91, 92, 94, 100, 101, 102], "first": [2, 4, 5, 6, 9, 13, 14, 17, 23, 30, 31, 36, 43, 51, 52, 56, 59, 61, 62, 64, 70, 71, 72, 78, 84, 87, 90, 97], "ase": [2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 23, 30, 33, 36, 42, 48, 51, 52, 55, 56, 57, 59, 61, 64, 66, 75, 77, 79, 80, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102], "cubic": [2, 4, 8, 10, 11, 12, 13, 14, 64, 66, 74, 75, 87], "facecenteredcub": [2, 13, 87], "def": [2, 4, 5, 6, 13, 15, 17, 102], "interactive_view": [2, 11, 15, 17], "visual": [2, 3, 5, 10, 11, 17, 101], "v": [2, 3, 5, 6, 10, 12, 14, 17, 18, 20, 30, 38, 64, 66, 69, 70, 71, 72, 75, 90, 91, 98], "viewer": [2, 17, 90, 101], "ngl": [2, 17, 101], "resiz": [2, 17], "widget": [2, 15, 17], "_remote_cal": [2, 15, 17], "setsiz": [2, 15, 17], "target": [2, 4, 6, 11, 14, 15, 17, 20, 34, 72], "arg": [2, 15, 17, 21, 38, 53, 59, 64, 70, 71, 72, 74, 75, 78, 90], "300px": [2, 15, 17], "center": [2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 17, 64, 65, 71, 75, 90, 97, 101], "1": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 29, 30, 31, 33, 34, 43, 44, 45, 46, 52, 57, 59, 61, 64, 66, 69, 70, 71, 72, 74, 75, 76, 78, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102], "cu": [2, 87], "pbc": [2, 4, 6, 13, 14, 23, 25, 30, 44, 45, 61, 62, 64, 78, 87, 90, 101], "ll": 2, "lennard": [2, 59, 84, 90], "jone": [2, 59, 84, 90], "lennardjonescut": [2, 59], "pair_potenti": 2, "pairpotenti": [2, 33, 59], "reference_st": 2, "atomic_numb": [2, 29, 30, 31], "cu_num": 2, "sigma": [2, 43, 59, 75, 84, 90], "2": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 17, 18, 30, 31, 38, 46, 57, 59, 64, 66, 69, 70, 71, 72, 75, 76, 78, 84, 85, 87, 90, 91, 93, 95, 97, 98, 101, 102], "map": [2, 20, 42, 64, 71, 87], "copper": 2, "pair": [2, 6, 23, 29, 30, 31, 33, 36, 38, 42, 43, 52, 59, 61, 72, 84, 87, 90, 94, 96, 97, 101], "epsilon": [2, 43, 59, 61, 76, 84, 90], "sensibl": 2, "equilibrium": [2, 13, 38, 57, 64, 77, 84, 90], "assert_allclos": 2, "latex": [2, 20], "e_": 2, "pot": 2, "get_potential_energi": [2, 13, 17, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 75, 78, 90], "neg": 2, "assert": [2, 102], "get_forc": [2, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 75, 78, 90], "atol": [2, 23, 30, 33, 36, 42, 59, 61, 66], "3e": 2, "14": [2, 5, 64, 71, 101], "889": 2, "measure_triclinic_elastic_const": [2, 66], "full": [2, 4, 6, 7, 9, 13, 20, 25, 29, 64, 66, 75, 82, 84, 90, 101], "hook": 2, "tensor": [2, 22, 23, 30, 33, 36, 42, 59, 61, 64, 66, 75, 90], "finit": [2, 3, 6, 7, 8, 10, 18, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 67, 70, 71, 78, 88, 98], "fit_elastic_const": [2, 13, 66], "least": [2, 52, 64, 75, 84, 89], "squar": [2, 33, 43, 64, 72, 75], "full_3x3x3x3_to_voigt_6x6": [2, 17, 66], "c_finite_differ": 2, "c_least_squar": 2, "_": [2, 4, 5, 6, 11, 29, 30, 38, 70, 71, 72, 95, 101], "plot": [2, 4, 5, 6, 8, 9, 15, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 75, 78, 90, 95, 98, 99], "matplotlib": [2, 4, 5, 6, 9, 13, 15, 64, 66, 75, 90, 95, 98, 99], "pyplot": [2, 4, 5, 6, 13, 15, 66, 75, 95, 98, 99], "plt": [2, 4, 5, 6, 13, 15, 64, 75, 95, 98, 99], "spy_const": 2, "imshow": 2, "cmap": 2, "rdpu": 2, "interpol": [2, 4, 6, 72], "none": [2, 4, 6, 15, 20, 22, 23, 25, 26, 30, 31, 33, 34, 36, 42, 43, 44, 45, 46, 48, 49, 53, 56, 57, 59, 61, 62, 64, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 93], "label": [2, 4, 5, 6, 15, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 84], "full_lik": 2, "dtype": [2, 72, 82, 87, 90, 97, 101], "lambda": [2, 4, 6, 18, 57, 72, 78], "arang": [2, 72, 87, 95, 102], "mu": [2, 29, 30, 78], "max_c": 2, "max": [2, 6, 23, 30, 33, 36, 42, 59, 61, 66, 72, 90, 102], "shape": [2, 4, 5, 6, 11, 15, 23, 30, 31, 36, 59, 61, 64, 72, 75, 87, 90, 93], "j": [2, 4, 5, 6, 9, 13, 17, 21, 25, 30, 41, 42, 59, 61, 64, 66, 69, 70, 71, 72, 75, 76, 77, 78, 83, 87, 90, 95, 97, 102], "white": 2, "els": [2, 13, 15, 20, 33, 36, 59, 64, 76, 90, 93, 102], "black": 2, "numer": [2, 3, 7, 10, 14, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 79, 86], "ab": [2, 5, 39, 40, 102], "1e": [2, 4, 5, 13, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 64, 66, 70, 71, 72, 78, 79, 88], "sim": 2, "annot": 2, "horizontalalign": 2, "verticalalign": 2, "set_xtick": [2, 13], "set_ytick": [2, 13], "set_xticklabel": 2, "c": [2, 4, 5, 6, 8, 11, 13, 17, 18, 20, 29, 43, 52, 59, 64, 66, 69, 70, 71, 72, 75, 78, 84, 87, 90, 97, 99, 101, 102], "set_yticklabel": 2, "fig": [2, 4, 5, 6, 13, 15], "subplot": [2, 4, 5, 6, 13, 64, 75], "figsiz": [2, 4, 5, 6], "set_titl": [2, 4, 6, 13], "therefor": [2, 11, 87, 90, 101], "directli": [2, 20, 93, 94], "get_properti": [2, 17, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 71, 78, 90], "elastic_const": [2, 23, 33, 36, 42, 59, 61], "evalu": [2, 44, 45, 49, 66, 72, 75, 90], "non": [2, 4, 6, 20, 22, 23, 30, 33, 36, 38, 42, 44, 45, 55, 56, 57, 59, 61, 64, 66, 69, 70, 71, 84, 88, 90, 91, 94, 100], "affin": [2, 17, 22, 23, 30, 33, 36, 42, 59, 61, 66, 88], "mode": [2, 12, 34, 49, 64, 75, 86, 90, 91, 93], "random": [2, 11, 29, 72, 87, 90], "our": [2, 4, 5, 6, 9, 11, 13, 15, 18, 64], "mimic": 2, "glassi": 2, "io": [2, 4, 5, 6, 13, 14, 15, 17, 20, 29, 90, 95, 98, 99, 101, 102], "read": [2, 14, 17, 20, 23, 25, 29, 30, 31, 33, 36, 42, 44, 45, 59, 61, 62, 64, 78, 82, 84, 90, 95, 98, 99, 100, 101, 102], "pathlib": 2, "path": [2, 7, 8, 9, 20, 25, 64, 82, 92, 94, 99], "data_path": 2, "cuzr_glass_460_atom": 2, "gz": 2, "zrcu": [2, 29], "onecolumn": [2, 29], "2244": 2, "minim": [2, 6, 20, 61, 64, 70, 71, 72, 75], "procedur": [2, 101], "argument": [2, 8, 9, 11, 23, 25, 30, 36, 61, 62, 64, 66, 70, 71, 75, 78, 80, 85, 90, 97, 99], "optim": [2, 5, 13, 34, 64, 66, 70, 71, 72, 75, 84], "fire": 2, "delta": [2, 29, 30, 64, 66, 72, 93, 95, 98], "increment": [2, 66, 75, 79, 88], "c_affin": 2, "c_relax": 2, "adjust": [2, 14, 90, 91], "fmax": [2, 13, 34, 64, 66], "precis": [2, 69, 70], "One": [2, 3, 10, 12, 20, 72, 75], "significantli": 2, "reduc": [2, 4, 9, 13, 74, 90], "when": [2, 8, 11, 12, 20, 23, 25, 30, 36, 61, 62, 64, 70, 71, 75, 78, 90, 94, 102], "intern": [2, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 66, 71, 78, 90], "reduct": 2, "stop": [2, 23, 25, 30, 31, 33, 36, 42, 59, 61, 62, 66, 78, 92], "criterion": [2, 9, 90, 95], "ideal": [2, 11, 12, 75, 78, 90], "lower": [2, 4, 5, 6, 9, 14, 61, 72, 91, 102], "higher": [2, 23], "demonstr": [2, 101], "purpos": [2, 4, 23, 25, 29, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 78, 90, 94, 101], "three": [3, 4, 13, 30, 33, 36, 42, 43, 59, 61, 64, 66, 75, 87, 90, 97, 102], "prepar": [3, 5, 10], "usual": [3, 5, 13, 84], "encount": [3, 14, 102], "context": [3, 8], "electrolyt": [3, 4, 6], "dimension": [3, 10, 33, 36, 59, 61], "poisson": [3, 6, 10, 17, 18, 66, 67, 69, 70, 71, 75], "nernst": [3, 10, 18, 67, 70, 71], "planck": [3, 10, 18, 67, 70, 71], "inert": [3, 5, 6, 10], "electrod": [3, 5, 6, 10], "solv": [3, 5, 6, 10, 18, 70, 71], "dirichlet": [3, 10, 70, 71], "zero": [3, 10, 14, 23, 30, 33, 36, 38, 42, 43, 59, 61, 62, 66, 70, 76, 78, 90], "flux": [3, 10, 70, 71], "valid": [3, 5, 10, 25, 36, 66], "half": [3, 5, 6, 10, 11, 90], "space": [3, 5, 6, 10, 31, 33, 68, 70, 71, 96], "interv": [3, 10, 71], "pnp": [3, 5, 10, 18, 70, 71], "electrochem": [3, 6, 10], "continu": [3, 7, 10, 14, 18, 67, 68, 72, 75, 76, 102], "doubl": [3, 6, 10, 13, 56, 64, 72, 87], "theori": [3, 6, 10, 12, 25, 64, 69], "discret": [3, 5, 6, 7, 10, 18, 67, 70, 71, 72], "coordin": [3, 10, 11, 18, 30, 64, 67, 68, 72, 75, 76, 78, 87, 90, 95, 97, 102], "stern": [3, 10, 18, 70, 71], "robin": [3, 10, 18, 70, 71], "sampl": [3, 10, 11, 18, 25, 27, 67, 68, 72, 92, 101], "distribut": [3, 5, 10, 18, 21, 61, 68, 69, 70, 71, 72, 87, 90, 93, 94, 96], "export": [3, 10], "solver": [3, 4, 10, 18, 23, 30, 33, 34, 36, 42, 59, 61, 64, 66, 67, 70, 71], "moder": [3, 10], "issu": [3, 4, 10, 94], "extrem": [3, 9, 10, 11], "nonlinear": [3, 4, 10, 59], "steric": [3, 10, 18, 67, 70, 71, 72], "correct": [3, 10, 14, 20, 23, 30, 33, 36, 42, 59, 61, 64, 66, 67, 72, 90], "concentr": [3, 4, 5, 10, 29, 69, 70, 71, 72], "enforc": [3, 10, 18, 44, 45, 70, 71, 72], "radii": [3, 4, 10, 18, 52, 72], "initi": [3, 4, 7, 10, 25, 33, 38, 44, 45, 51, 52, 53, 59, 64, 66, 70, 71, 72, 75, 82, 87, 90, 102], "thank": 3, "luka": [3, 69], "elflein": [3, 69], "develop": [3, 8, 12, 94], "christian": 3, "seidl": 3, "earli": 3, "experiment": [3, 7, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "andrea": 3, "greiner": 3, "discuss": [3, 6, 11], "inspir": 3, "transport": 3, "problem": [3, 5, 10, 66, 70, 71, 72], "volum": [3, 4, 5, 14, 18, 63, 64, 68, 70, 71, 77, 88, 90, 98], "fint": 3, "meng": 3, "yonggang": 3, "zhang": 3, "jun": 3, "pose": 3, "interest": [3, 8, 12], "tribolog": [3, 14], "spark": 3, "electrochemistri": [4, 5, 6, 10, 19, 94], "poissonnernstplancksystem": [4, 5, 70, 71], "interfac": [4, 5, 6, 12, 14, 23, 51, 53, 69, 70, 71, 94, 102], "classic": [4, 6, 44, 45, 90], "arbitrari": [4, 18, 36, 66, 84, 90], "ionic": [4, 69, 70, 71], "speci": [4, 6, 10, 12, 31, 67, 69, 70, 71, 84, 87, 101], "archetyp": 4, "open": [4, 5, 6, 14, 70, 71, 91], "govern": 4, "equat": [4, 6, 18, 69, 70, 71], "d_i": 4, "diffus": 4, "th": [4, 57, 61, 71], "c_i": [4, 69, 70, 71], "infti": [4, 98], "u_i": [4, 38, 75], "electr": [4, 90], "mobil": 4, "z_i": [4, 69, 70, 71], "charg": [4, 5, 6, 23, 30, 33, 61, 62, 69, 70, 71, 78, 84, 90, 102], "phi": [4, 5, 6, 42, 43, 69, 72, 90, 95], "electrostat": [4, 6, 69], "phi_0": 4, "compar": [4, 7, 11, 25, 64, 72], "epsilon_0": 4, "vacuum": [4, 8, 9, 13, 14, 34, 69, 70, 71, 75, 78, 80, 90, 97], "permitt": [4, 69, 70, 71], "epsilon_r": 4, "rel": [4, 5, 9, 14, 20, 69, 70, 71, 75, 90], "solvent": 4, "faradai": [4, 69, 70, 71], "follow": [4, 5, 6, 11, 12, 14, 17, 20, 23, 25, 30, 33, 36, 38, 42, 44, 45, 59, 61, 62, 64, 70, 71, 75, 78, 84, 90, 91, 97, 101, 102], "mm": [4, 5, 6, 18, 44, 45, 64], "text": [4, 11, 17, 18, 20, 29, 82, 95, 99], "nacl": [4, 18], "bia": 4, "against": [4, 9, 69], "special": [4, 9, 20, 23, 25, 30, 33, 36, 42, 44, 45, 56, 57, 59, 61, 62, 78], "binari": [4, 6, 18], "few": [4, 5, 6, 90], "sc": [4, 5, 6, 34, 74], "ion": [4, 6, 55, 56, 57, 69, 70, 71], "na": [4, 5, 6, 61], "cl": [4, 5, 6, 43], "delta_u": [4, 5, 70, 71], "log": [4, 14, 34, 66, 71, 72, 86, 91], "deriv": [4, 10, 14, 17, 23, 29, 30, 33, 34, 36, 38, 42, 43, 59, 61, 66, 75, 88, 90, 94], "grid": [4, 5, 31, 68, 70, 71, 75, 93], "use_standard_interface_bc": [4, 5, 70, 71], "total": [4, 8, 29, 30, 44, 45, 49, 70, 71, 87, 90, 93, 95, 98, 101], "electromigr": 4, "ui": [4, 13, 75], "nij": [4, 5, 70, 71], "hold": [4, 55], "point": [4, 5, 6, 9, 18, 31, 33, 64, 68, 70, 71, 72, 90, 91, 93, 101], "quickli": [4, 5, 13], "retriev": [4, 6], "deby": [4, 5, 6, 69, 70, 71], "lambda_d": [4, 69, 70, 71], "deb": [4, 5, 6], "just": [4, 5, 29, 90, 97], "possion": 4, "boltzmann": [4, 5, 6, 69], "poisson_boltzmann_distribut": [4, 5, 6], "short": [4, 20, 33], "hand": [4, 12, 70, 71], "densiti": [4, 5, 6, 9, 29, 30, 31, 69, 70, 71, 95, 98], "aris": [4, 6, 90], "charge_dens": [4, 5, 6, 69, 70, 71, 72], "linspac": [4, 5, 6, 72, 75], "100": [4, 5, 9, 10, 12, 13, 14, 15, 18, 29, 34, 44, 45, 56, 64, 68, 72, 84, 87, 91, 98], "rho": [4, 5, 6, 43, 72], "littl": [4, 9], "helper": [4, 6, 34, 82], "prettifi": 4, "make_patch_spines_invis": [4, 5, 6], "set_frame_on": [4, 5, 6], "patch": [4, 5, 6], "set_vis": [4, 5, 6], "sp": [4, 5, 6, 99, 102], "spine": [4, 5, 6], "next": [4, 6, 13, 14, 64, 101, 102], "pb": [4, 5], "limit": [4, 44, 45, 56], "convinc": 4, "ax1": [4, 5, 6, 13], "ax4": [4, 5], "nrow": [4, 5], "ncol": [4, 5], "axvlin": [4, 5, 6, 75], "nano": [4, 5, 6], "linestyl": [4, 5, 6, 75], "02": [4, 5, 6, 13, 85], "01": [4, 5, 13, 34, 64, 66, 72, 75, 78, 84, 85, 91, 102], "marker": [4, 5, 6, 71], "tomato": 4, "linewidth": [4, 5, 6, 75], "tab": [4, 5], "red": [4, 5, 6, 11, 75], "ax2": [4, 5, 6, 13], "twinx": [4, 5, 6], "ones": [4, 5, 6, 20, 34, 64, 102], "bisqu": [4, 5], "orang": [4, 5, 6, 8], "lightskyblu": [4, 5], "blue": [4, 5, 6, 75], "ax3": [4, 5, 6], "offset": [4, 5, 6, 8, 84], "tick": [4, 5, 6], "alreadi": [4, 5, 6, 14, 25, 66, 90, 91, 101], "been": [4, 5, 6, 7, 14, 23, 25, 30, 31, 33, 36, 42, 44, 45, 59, 61, 62, 66, 78, 90], "place": [4, 5, 6, 11, 20, 64, 68, 90], "set_posit": [4, 5, 6, 90], "off": [4, 5, 6, 9, 11, 46, 56, 64, 69, 75, 91, 93], "detach": [4, 5, 6], "invis": [4, 5, 6], "activ": [4, 5, 6, 9, 56], "second": [4, 5, 6, 9, 10, 15, 17, 23, 30, 33, 36, 43, 59, 61, 64, 70, 71, 72, 84, 87, 90, 94], "semilogi": [4, 5], "set_ylabel": [4, 5, 6], "r": [4, 5, 6, 14, 15, 17, 18, 31, 33, 36, 38, 42, 43, 59, 61, 66, 69, 70, 71, 72, 75, 76, 77, 84, 90, 91, 95, 97, 98, 99, 101], "set_xlabel": [4, 5, 6], "nm": [4, 5, 6, 18, 72], "legend": [4, 5, 6], "loc": [4, 5, 6], "upper": [4, 5, 6, 9, 14, 23, 30, 33, 36, 42, 59, 61, 66, 72, 91, 102], "bbox_to_anchor": [4, 5, 6], "fontsiz": [4, 5, 6], "tight_layout": [4, 5, 6], "anoth": [4, 11, 14, 20, 25, 90], "after": [4, 8, 14, 20, 23, 30, 33, 36, 42, 44, 45, 59, 61, 64, 66, 71, 75, 80, 101], "bazant": 4, "i_": 4, "farada": 4, "current": [4, 11, 14, 15, 20, 23, 25, 29, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 75, 77, 78, 90], "i_j": 4, "nu_": 4, "ij": [4, 17, 22, 30, 38, 42, 43, 64, 66, 87, 95, 97, 98, 102], "stochiometr": 4, "coeffici": [4, 13, 23, 30, 33, 36, 42, 57, 59, 61, 66, 70, 71, 84], "n_j": 4, "electron": [4, 29, 30, 31], "particip": [4, 90], "lambda_": [4, 70, 71], "width": [4, 6, 15], "compact": [4, 12, 18], "assumpt": [4, 66, 87], "strong": 4, "close": [4, 5, 6, 9, 11, 14, 15, 64, 69, 91], "mai": [4, 5, 6, 8, 9, 20, 23, 25, 30, 36, 61, 62, 64, 65, 78, 87, 102], "facilit": [4, 44, 45, 53], "again": [4, 5, 9, 14, 71, 91], "e": [4, 6, 8, 9, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 25, 29, 30, 33, 36, 42, 44, 45, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 75, 76, 78, 82, 84, 87, 90, 91, 95, 97, 100, 102], "absenc": 4, "applic": [4, 75, 91, 94, 96], "predefin": [4, 90], "use_standard_cell_bc": [4, 70, 71], "xij": [4, 70, 71], "familiar": [4, 12], "manner": [4, 8], "averag": [4, 25, 29, 31, 57, 64, 75, 98], "fill": [4, 23, 30, 33, 36, 42, 48, 59, 61, 66, 68], "gap": [4, 18], "gold": 4, "wt": 4, "aqueou": [4, 18], "box_ang": 4, "50": [4, 11, 13, 68, 75, 95, 101], "box_m": 4, "meter": 4, "vol_angcub": 4, "prod": [4, 6], "vol_mcub": 4, "solubl": 4, "water": [4, 69, 97, 102], "estim": [4, 13, 33, 66, 75], "molar": [4, 69, 70, 71], "weight_concentration_nacl": 4, "salin": [4, 6], "mass": [4, 14, 23, 29, 30, 31, 33, 36, 42, 59, 61, 65, 90, 91], "g": [4, 6, 8, 11, 13, 15, 17, 19, 20, 23, 29, 31, 36, 38, 59, 63, 64, 66, 69, 70, 71, 72, 75, 90, 91, 102], "cm\u00b3": 4, "saline_mass_density_kg_per_l": 4, "cm": 4, "kg": 4, "http": [4, 8, 11, 15, 20, 25, 31, 64, 66, 70, 71, 72, 83, 90, 94], "www": [4, 15, 94], "engineeringtoolbox": 4, "com": [4, 64, 66, 90, 94], "inorgan": 4, "sodium": 4, "salt": 4, "d_1957": 4, "html": [4, 15, 20, 31, 70, 71, 72, 90], "saline_mass_density_g_per_l": 4, "kilo": 4, "molar_mass_h2o": 4, "015": 4, "mol": [4, 69, 70, 71], "molar_mass_nacl": 4, "58": [4, 11], "cnacl_m": 4, "cnacl_mm": 4, "round": 4, "milli": 4, "n_nacl": 4, "avogadro": 4, "nearli": 4, "300": [4, 14], "\u00e5": [4, 6, 97, 98], "magnitud": 4, "0e": [4, 18], "modifi": [4, 6, 9, 13, 15, 44, 45, 72, 90, 102], "200": [4, 5, 6, 64, 70, 71], "maxit": [4, 23, 30, 33, 36, 42, 59, 61, 66, 70, 71, 72], "particularli": [4, 101], "use_stern_layer_cell_bc": [4, 70, 71], "linear": [4, 5, 7, 13, 18, 25, 66, 70, 71, 73, 75, 78, 90], "behavior": [4, 5, 84, 90], "continuous2discret": [4, 6, 18, 72], "callabl": [4, 70, 71, 72], "henc": [4, 6, 9, 13, 98], "convert": [4, 9, 13, 15, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 75, 77, 78, 101], "physic": [4, 29, 33, 56, 59, 94], "interp1d": [4, 6, 72], "normal": [4, 8, 9, 13, 14, 38, 64, 69, 75, 90, 91, 95], "na_coordinate_sampl": 4, "count": [4, 6, 31, 68, 72, 75, 80, 87, 89, 90, 92, 97, 102], "util": [4, 9, 10, 44, 45, 94, 95, 96, 97, 98], "get_histogram": [4, 6], "bin": [4, 6, 21, 87, 89, 98], "spatial": [4, 30, 70, 71, 72, 93], "dimens": [4, 23, 30, 36, 59, 61, 68, 72, 84, 89, 93], "histx": [4, 6], "histi": [4, 6], "histz": [4, 6], "n_bin": [4, 6], "get_cent": [4, 6], "astyp": [4, 6, 14, 102], "float": [4, 6, 9, 21, 23, 30, 31, 33, 36, 42, 52, 57, 59, 61, 64, 66, 69, 70, 71, 72, 75, 77, 79, 80, 84, 87, 88, 90, 91, 92, 101], "plot_dist": [4, 6], "histogram": [4, 6, 21, 87, 98], "reference_distribut": [4, 6], "option": [4, 5, 6, 13, 20, 21, 23, 25, 30, 33, 36, 42, 59, 61, 62, 64, 66, 68, 70, 71, 72, 75, 78, 80, 84, 87, 89, 90, 92, 93, 94], "hist": [4, 6], "fi": 4, "align": [4, 6, 8, 64], "empir": [4, 6, 14, 90, 91], "edgecolor": [4, 6], "ref": [4, 6, 29, 64, 75], "sum": [4, 6, 13, 17, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 69, 70, 71, 72, 76, 78, 87, 95, 97, 102], "eventu": 4, "uniform": [4, 68, 70, 71], "similarli": 4, "chlorin": 4, "cl_coordinate_sampl": 4, "standard": [4, 8, 13, 25, 29, 66, 75, 90], "speak": 4, "\u00e5ngstr\u00f6m": [4, 6], "per": [4, 15, 19, 20, 23, 30, 44, 45, 57, 64, 68, 69, 70, 71, 75, 77, 85, 87, 90, 96, 102], "sample_s": [4, 6, 68, 72], "int": [4, 11, 14, 15, 21, 23, 30, 31, 33, 36, 42, 44, 45, 49, 51, 52, 55, 56, 57, 59, 61, 64, 66, 68, 70, 71, 75, 78, 84, 87, 89, 90, 91, 95, 101, 102], "na_atom": 4, "cl_atom": 4, "nacl_c_4_m_u_0": 4, "5_v_box_5x5x5nm_lambda_s_5_ang": 4, "real": [4, 6, 33, 75, 96], "style": [4, 15, 20, 29, 31, 82], "19": [4, 72], "0b1": 4, "had": 4, "older": 4, "atom_styl": [4, 6], "plot_atom": 4, "80x": 4, "10y": 4, "10z": 4, "set_axis_off": 4, "k": [4, 14, 17, 33, 38, 42, 43, 59, 66, 69, 70, 71, 72, 75, 78, 87, 90, 91, 95, 102], "t": [4, 9, 11, 14, 23, 25, 30, 36, 61, 62, 69, 70, 71, 72, 75, 78, 87, 90, 97, 102], "chu": 4, "bayli": 4, "voltag": 4, "relat": [4, 8, 9, 63, 64], "thin": [4, 75], "film": 4, "siam": 4, "journal": [4, 59, 61], "mathemat": 4, "jul": 4, "2006": 4, "doi": [4, 6, 8, 11, 25, 64], "1137": 4, "040609938": 4, "o": [4, 14, 20, 66, 90, 97, 102], "zur": 4, "der": 4, "elektrolytischen": 4, "doppelschicht": 4, "zeitschrift": 4, "f\u00fcr": 4, "elektrochemi": 4, "und": 4, "angewandt": 4, "physikalisch": 4, "chemi": 4, "vol": [4, 6, 33], "21": [4, 13, 77], "22": [4, 11], "pp": [4, 6, 64, 66], "508": 4, "516": 4, "1924": 4, "1002": [4, 6], "bbpc": 4, "192400182": 4, "israelachvili": 4, "intermolecular": 4, "academ": 4, "press": 4, "london": [4, 97], "1991": [4, 92], "poisson_nernst_planck_solv": 5, "own": [5, 18, 20, 70, 71], "poissonnernstplancksystemfen": [5, 71], "poisson_nernst_planck_solver_fen": 5, "fenic": [5, 18, 71], "highli": 5, "latter": [5, 18, 34, 100], "offer": [5, 6, 8, 18], "improv": [5, 9, 94], "former": 5, "illustr": 5, "begin": [5, 75, 84], "necess": 5, "ionic_strength": [5, 69, 70, 71], "bolzmann": 5, "gamma": [5, 10, 12, 14, 29, 30, 64, 69, 91], "3rd": 5, "parti": [5, 18], "At": 5, "across": [5, 6, 9, 18, 70, 71, 90], "100e": [5, 70, 71], "std_interfac": 5, "hybr": 5, "xtol": 5, "uij": [5, 70, 71], "lamj": [5, 70, 71], "fenics_interfac": 5, "_root": 5, "208": 5, "runtimewarn": 5, "doe": [5, 9, 11, 13, 15, 20, 66, 90], "callback": [5, 23, 30, 33, 36, 42, 59, 61, 66, 70, 71, 75], "ffc": 5, "jit": 5, "compil": [5, 94], "No": [5, 90], "jacobian": [5, 70, 79, 88], "specifi": [5, 6, 9, 11, 14, 23, 30, 31, 33, 36, 42, 52, 56, 59, 61, 64, 66, 68, 69, 72, 75, 84, 85, 87, 90, 101, 102], "variat": [5, 64], "differenti": [5, 64], "residu": [5, 15, 23, 30, 33, 36, 42, 59, 61, 66, 70, 71, 75], "newton": [5, 70, 71], "287e": 5, "tol": [5, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 71, 78], "000e": 5, "00": [5, 6, 13, 87], "09": [5, 6, 72], "656e": 5, "161e": 5, "03": 5, "172e": 5, "262e": 5, "975e": 5, "362e": 5, "783e": 5, "04": 5, "966e": 5, "937e": 5, "345e": 5, "finish": [5, 6, 20], "fall": [5, 18], "onto": [5, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 97], "fem": [5, 71], "frameon": 5, "third": [5, 18, 90], "outperform": 5, "o\u00f6": 5, "std_interface_high_potenti": 5, "progress": 5, "measur": [5, 6, 7, 9, 22, 23, 30, 33, 36, 42, 59, 61, 66, 72, 75, 88, 99], "last": [5, 6, 14, 20, 23, 25, 30, 33, 36, 42, 44, 45, 52, 56, 59, 61, 62, 78, 90, 91], "ten": 5, "appar": 5, "fenics_interface_high_potenti": 5, "521e": 5, "062e": 5, "413e": 5, "796e": 5, "388e": 5, "177e": 5, "087e": 5, "132e": 5, "834e": 5, "154e": 5, "217e": 5, "454e": 5, "592e": 5, "724e": 5, "292e": 5, "13": [5, 6, 101], "prove": 5, "particl": [6, 15, 61, 69, 72, 84, 90], "arbitrarili": [6, 68, 102], "avoid": [6, 9, 15, 67, 75, 87], "overlap": [6, 11, 57, 67, 72, 87], "yield": [6, 29, 66, 90], "usabl": 6, "dens": [6, 23, 30, 33, 36, 42, 59, 61, 66, 72], "pack": [6, 72, 75], "steric_correct": [6, 18], "sub": [6, 25, 27, 55, 56, 57], "Its": 6, "apply_steric_correct": [6, 72], "assur": [6, 18], "re": [6, 13, 20, 72, 75], "pseudo": 6, "packmol": 6, "python": [6, 12, 71, 84, 94, 101], "involv": [6, 9, 100, 101], "previou": [6, 8, 9, 11, 14, 75], "document": [6, 15, 20, 71, 84, 90, 101], "section": [6, 9, 11, 20, 38, 64], "adjac": [6, 75], "simpl": [6, 18, 38, 59, 63, 64, 70, 71, 84, 90, 93, 95, 97, 101], "although": 6, "1d": [6, 18, 64, 67, 70, 71], "later": [6, 9, 57, 102], "xsize": [6, 72], "ysize": [6, 72], "5e": [6, 72], "zsize": [6, 72], "20e": 6, "2000": [6, 72], "fundament": 6, "par2": 6, "box3": 6, "ax_row": 6, "zip": [6, 29, 75], "expos": 6, "closest": [6, 72], "scipy_distance_based_closest_pair": [6, 72], "state": [6, 9, 11, 20, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 64, 75, 78], "xstack": 6, "vstack": [6, 72], "box6": 6, "corner": [6, 72], "mindsq": [6, 72], "p1": [6, 72], "p2": [6, 72], "pmin": [6, 72], "min": [6, 72, 102], "pmax": [6, 34, 72], "minimum": [6, 14, 72, 87, 89, 90], "wise": [6, 71, 72], "4e": [6, 72], "maximum": [6, 23, 30, 33, 36, 42, 59, 61, 64, 66, 70, 71, 72, 92, 99, 101], "352188695855715e": 6, "4566e": 6, "7113e": 6, "3501e": 6, "3269e": 6, "6958e": 6, "3537e": 6, "0000e": 6, "3292e": 6, "1885e": 6, "2696e": 6, "9992e": [6, 72], "9942e": 6, "9953e": 6, "bfg": [6, 72], "2e": 6, "x1": [6, 72, 75, 93], "disp": [6, 64, 72, 75], "tmp": [6, 8, 87], "ipykernel_8925": 6, "3409156327": 6, "deprecationwarn": [6, 8], "deprec": [6, 8, 23, 25, 30, 33, 36, 42, 59, 61, 62, 75, 78, 79, 90], "remov": [6, 9, 14, 38, 63, 65, 90, 102], "instead": [6, 8, 9, 20, 23, 25, 30, 33, 36, 38, 42, 59, 61, 62, 78, 79, 85, 90], "come": [6, 20], "enough": [6, 9, 13], "statu": [6, 14, 86], "success": 6, "nit": 6, "messag": [6, 20, 23, 25, 30, 33, 36, 42, 44, 45, 56, 57, 59, 61, 62, 72, 78, 94], "final": [6, 7, 14, 38, 44, 45, 46, 64, 72], "norm_of_projected_gradient_": 6, "_pgtol": 6, "9730e": 6, "2318e": 6, "7182e": 6, "2865e": 6, "4771e": 6, "8167e": 6, "6017e": 6, "0979e": 6, "0107e": 6, "2803e": 6, "7982e": 6, "7956e": 6, "9780e": 6, "out": [6, 20, 57, 64, 72, 75, 77, 89, 90], "400": 6, "mani": [6, 16, 36, 56, 68, 75, 94], "shift": [6, 8, 43, 59, 64, 74, 75, 87], "check": [6, 12, 20, 23, 25, 30, 33, 36, 42, 44, 45, 56, 59, 61, 62, 64, 66, 78, 82, 84, 87, 90, 102], "count_nonzero": 6, "353": 6, "euclidean": [6, 72], "96192377352509e": 6, "pick": 6, "split": [6, 7, 9, 20], "steric_sampl": 6, "101": 6, "steric_hist": 6, "entri": [6, 20, 23, 30, 33, 36, 42, 59, 61, 66, 70, 71, 72, 75, 84, 85, 90, 97], "diff_hist": 6, "h": [6, 31, 38, 64, 75, 80, 84, 87, 90, 91, 97, 101, 102], "ax_col": 6, "diag": 6, "steric_system": 6, "nacl_200_0": 6, "05v_5x5x20nm_at_interface_pb_distribut": 6, "05v_5x5x20nm_at_interface_pb_distributed_steric_correction_2ang": 6, "martinez": 6, "andrad": 6, "birgin": 6, "mart\u00ednez": 6, "build": [6, 7, 8, 9, 10, 11, 12, 20, 51, 52, 64, 71, 94, 97, 100], "molecular": [6, 14, 87, 90, 100, 102], "dynam": [6, 14, 23, 30, 33, 36, 42, 59, 61, 78, 87, 90, 100], "chem": [6, 25], "2157": 6, "2164": 6, "2009": 6, "jcc": 6, "21224": 6, "crack": [7, 10, 64, 73, 77, 78], "process": [7, 49, 66, 75, 101], "new": [7, 12, 25, 29, 56, 57, 64, 75, 90, 91, 102], "area": [7, 13, 91], "apart": [7, 9, 52], "fracture_mechan": [7, 13], "tip": [7, 13, 73, 75, 77, 78], "anisotropi": [7, 73], "quantifi": 7, "trap": 7, "pin": 7, "speed": [7, 9, 13, 14, 64, 78, 91, 92], "silicon": [7, 13, 14, 17, 99], "quasi": [7, 10], "static": [7, 10, 20, 33, 87], "link": [7, 20, 52, 64], "flexibl": [7, 12, 75], "propos": 7, "sinclair": [7, 75], "domain": [7, 18, 70, 71, 77, 94], "coupl": [7, 12, 14, 91, 102], "extens": [7, 20, 29, 59, 64, 90], "approach": [7, 9, 24, 64], "give": [7, 8, 9, 13, 14, 38, 90, 102], "scheme": [7, 9, 70, 71], "usag": [7, 8, 9, 10, 19, 90, 91, 96], "properti": [7, 10, 11, 12, 23, 25, 29, 30, 33, 36, 42, 44, 45, 57, 59, 61, 62, 64, 70, 71, 75, 78, 84, 87, 90, 91, 94, 95, 96, 98, 101], "strain": [7, 10, 17, 63, 66, 75, 85, 88, 94], "them": [8, 14, 25, 44, 45, 84, 90, 102], "challeng": [8, 12], "dissoci": [8, 10, 12, 64], "connect": [8, 12, 52, 56, 82, 87], "machin": [8, 25, 70], "learn": [8, 25], "mlip": [8, 25], "isol": [8, 94], "gammasurfac": [8, 9, 15], "stackingfault": [8, 9], "parameteris": 8, "index": [8, 9, 14, 20, 31, 36, 49, 51, 52, 55, 56, 57, 64, 87, 90, 91, 94, 97, 102], "surface_direct": [8, 9], "instanc": [8, 9, 25, 48, 66, 75, 87, 91], "subclass": [8, 12, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 101], "user": [8, 12, 23, 30, 33, 36, 42, 59, 61, 66, 90], "screw": [8, 10, 12, 64], "diamond": [8, 10, 11, 12, 13, 14, 15, 64, 74], "circ": [8, 11], "111": [8, 10, 12, 13, 34, 74], "glide_direct": [8, 9], "tersoff_brenn": [8, 9], "tersoffbrenn": [8, 9, 41], "brenner_prb_42_9458_c_i": 8, "c_screw": 8, "c_screw_bulk": 8, "c_screw_dislo": 8, "degre": [8, 10, 11, 12, 17, 23, 30, 33, 36, 42, 59, 61, 66, 75, 90, 91], "spin": [8, 90], "math": [8, 97], "pi": [8, 76, 87, 90, 95, 98], "flip": [8, 63, 64], "sf": [8, 64], "360528114483162": 8, "ipykernel_8949": 8, "2247257300": 8, "24": 8, "alia": [8, 31], "librari": [8, 64], "replac": [8, 11, 17, 20, 27, 29, 56, 64], "try": [8, 14, 72, 90, 94, 102], "made": 8, "colour": 8, "avail": [8, 10, 12, 18, 20, 25, 31, 66, 90, 102], "cna_color": [8, 11, 15], "show_html": [8, 9, 15], "generate_imag": [8, 9], "cell_mov": [8, 9], "z_rep": [8, 9], "anim": [8, 9, 15, 75], "onc": [8, 9, 12, 13, 38, 52, 56, 90, 91, 101], "loop": [8, 9], "reflect": [8, 9, 94], "sweep": 8, "nine": 8, "imag": [8, 9, 20, 64, 87, 90], "middl": [8, 13, 14], "five": 8, "perfect": [8, 9, 10, 12, 64], "exactli": [8, 90], "help": [8, 18, 20, 43, 90], "confirm": 8, "distinct": 8, "shuffl": 8, "select": [8, 16, 19, 44, 45, 56, 90], "ordin": 8, "basi": [8, 9, 33, 64], "choos": [8, 9, 11, 12, 14, 102], "cut": [8, 9, 46, 56, 59, 64, 91, 93], "becaus": [8, 11, 38, 87], "would": [8, 11, 13, 18, 90], "suggest": [8, 94], "z_offset": 8, "add": [8, 9, 11, 12, 15, 20, 44, 45, 55, 56, 57, 75, 80, 87, 90], "carbon": [8, 94, 95, 98, 100], "get": [8, 9, 11, 14, 15, 17, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 64, 70, 71, 72, 78, 90, 94, 95, 98], "suppli": [8, 23, 30, 33, 36, 42, 59, 61, 66, 90], "crystalstructur": [8, 9, 11, 64], "revisit": 8, "gaa": [8, 11], "multispeci": [8, 10, 12], "doc": [8, 9, 15, 20, 31, 70, 71, 72, 91, 102], "guarante": [8, 87], "cannot": [8, 11, 14], "themselv": 8, "disord": [8, 10, 12, 95, 98, 99], "effect": [8, 11, 18, 23, 30, 33, 36, 42, 59, 61, 64], "org": [8, 11, 15, 25, 64, 70, 71, 72, 94], "1080": [8, 11], "08927022": [8, 11], "2011": [8, 11], "602975": [8, 11], "2402": [8, 11], "zincblend": [8, 11], "generalis": 9, "slide": [9, 10, 91], "slab": [9, 13, 14, 75, 80, 102], "given": [9, 11, 20, 23, 27, 30, 33, 36, 42, 44, 45, 52, 53, 56, 57, 59, 61, 63, 64, 66, 68, 75, 80, 84, 87, 90, 93], "often": 9, "metast": 9, "grain": 9, "disloc": [9, 10, 12, 15, 94], "deal": [9, 56], "pathwai": 9, "complet": [9, 90, 91], "back": [9, 18, 90], "singl": [9, 11, 29, 44, 45, 52, 56, 57, 64, 66, 69, 87, 90, 97], "wherea": 9, "gamma_surfac": [9, 10, 12], "associ": [9, 25, 66], "There": [9, 20, 31, 90], "main": [9, 64, 69, 82], "methodologi": 9, "intuit": 9, "supercel": [9, 62], "bottom": [9, 20, 91], "fulli": 9, "leav": 9, "effici": [9, 94, 100], "less": [9, 87], "understand": 9, "vice": 9, "versa": 9, "produc": [9, 57, 64, 75], "setup": [9, 10, 13, 17, 33, 64, 94, 100], "becom": [9, 13, 87, 90], "api": [9, 36, 94], "lot": 9, "addit": [9, 10, 12, 20, 23, 25, 29, 30, 33, 36, 42, 46, 59, 61, 66, 75, 94], "featur": [9, 10, 12, 90], "spread": 9, "though": 9, "pure": [9, 29, 31, 75], "copi": [9, 11, 13, 14, 15, 20, 56, 75, 90], "recommend": [9, 11], "quick": 9, "glanc": 9, "parametis": 9, "suit": 9, "aluminium": 9, "kioseogl": 9, "perform": [9, 13, 14, 23, 25, 30, 36, 44, 45, 49, 61, 62, 64, 72, 75, 78, 89, 91, 101], "what": [9, 23, 30, 61, 62, 78, 90], "kioseoglou_pssb_245_1118_aln": 9, "initialis": [9, 12, 78], "001": [9, 10, 12, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 64, 66, 72, 75, 78, 84, 90], "equival": [9, 64, 90], "attach": [9, 14, 23, 25, 30, 36, 53, 57, 61, 62, 64, 78, 90, 91], "don": [9, 23, 25, 30, 36, 61, 62, 78, 90], "feed": 9, "nice": [9, 26], "funcanim": [9, 15], "disabl": [9, 13], "done": [9, 11, 23, 30, 33, 36, 42, 48, 59, 61, 88, 97], "toggl": 9, "thick": [9, 64, 70, 71, 75], "nx": 9, "ny": 9, "relax_imag": 9, "get_energy_dens": 9, "profil": 9, "wa": [9, 13, 51, 52, 94], "constraint": [9, 13, 14, 64, 71, 72, 75, 90, 91], "sens": [9, 14, 82], "cell_relax": 9, "e_dens": 9, "plot_energy_dens": 9, "heatmap": 9, "reus": [9, 14, 52], "plot_energi": 9, "alongsid": 9, "appear": [9, 25, 87], "low": [9, 94], "diagon": [9, 13, 23, 30, 33, 36, 42, 59, 61, 66, 75], "110": [9, 10, 12, 13, 34, 101], "attempt": [9, 12], "thought": 9, "much": [9, 11, 80], "content": [9, 13, 15, 20], "reason": [9, 12], "explicitli": [9, 13, 14, 18, 75], "aim": 9, "approxim": [9, 29, 66, 70], "surround": 9, "room": 9, "extend": [9, 12, 25, 44, 45, 64, 84, 90, 101], "purposefulli": 9, "kept": [9, 90], "eas": [9, 12], "practic": 9, "ourselv": 9, "ev": [9, 17, 61, 64, 66, 75, 84, 90], "crystallin": [10, 61], "amorph": [10, 17, 59, 94, 95, 98, 99, 100], "fit": [10, 13, 31, 64, 66, 75], "plastic": [10, 94], "cylindr": [10, 11, 12, 75], "access": [10, 12, 23, 44, 45, 64], "kei": [10, 12, 25, 34, 41, 57, 75, 85, 90], "bodi": [10, 12, 13, 16, 36, 42, 43, 94], "edg": [10, 12, 64], "mix": [10, 12, 23, 30, 31, 34, 36, 41, 59, 61, 84, 90], "junction": [10, 12], "face": [10, 12], "60": [10, 12], "move": [10, 12, 52, 57, 63, 64, 75, 90], "advanc": [10, 12, 97], "specif": [10, 12, 20, 44, 45, 52, 87, 89, 94, 95, 97, 98, 100, 101], "complex": [10, 11, 12, 38, 87, 101], "fractur": [10, 75, 94], "acknowledg": 10, "tribologi": [10, 91, 94], "pressur": [10, 91], "equilibr": [10, 91], "restart": [10, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 91], "restrict": [11, 33, 36, 59, 61, 75, 94, 95], "express": [11, 38, 43], "306": 11, "98": 11, "47": 11, "57": [11, 22], "89": [11, 64, 84], "latticeconst": [11, 13, 14], "gaas_po": 11, "get_scaled_posit": [11, 90], "dia_po": 11, "sort": [11, 20, 87], "gaas_idx": 11, "lexsort": [11, 87], "dia_idx": 11, "sai": 11, "agnost": 11, "chemistri": [11, 94], "were": [11, 56, 90], "gaas_bulk": 11, "gaas_disloc": 11, "35": 11, "additiion": 11, "those": [11, 34, 75, 87, 90], "break": [11, 52], "caus": 11, "alpha": [11, 20, 25, 31, 33, 64, 75, 90], "termin": [11, 46, 56, 84, 102], "beta": [11, 20, 31, 78], "ga": [11, 69, 70, 71, 90], "get_chemical_symbol": [11, 90, 97], "swap": 11, "new_symbol": 11, "set_chemical_symbol": [11, 90], "built": [11, 20, 70, 94], "caveat": 11, "routin": [11, 14, 34, 51, 66, 94, 100, 102], "reliabl": 11, "replic": [11, 64], "unit_cel": [11, 64], "won": 11, "known": [11, 12, 101], "distort": 11, "captur": [11, 97, 101, 102], "neq": [11, 17, 30, 42], "workflow": 11, "chemcic": 11, "match": [11, 20, 75], "composit": [11, 29], "site": [11, 75], "occupi": 11, "whilst": 11, "heavili": 11, "incorrect": 11, "120": [11, 90], "31": [11, 75], "55": [11, 15, 102], "87": 11, "mont": 11, "carlo": 11, "introduc": [11, 71], "indium": 11, "seed": [11, 90], "ga_idx": 11, "argwher": 11, "idx": [11, 64], "in_idx": 11, "choic": [11, 59], "ingaas_bulk": 11, "ingaas_disloc": 11, "ingaa": 11, "almost": 11, "better": [11, 15], "in_at": 11, "add_compon": [11, 15, 102], "asestructur": [11, 15, 102], "default_represent": [11, 15, 102], "add_spacefil": [11, 15], "larg": [12, 20, 64, 92], "irrevers": 12, "carri": [12, 75, 77], "movement": [12, 64], "kink": [12, 64, 74, 75], "rather": [12, 14, 102], "deep": 12, "knowledg": 12, "experi": 12, "peopl": 12, "friendli": 12, "enabl": [12, 13, 44, 45, 90], "ident": [12, 64, 80, 90], "assist": 12, "easili": [12, 23, 30, 33, 36, 42, 59, 61, 66], "pip": [12, 19, 94], "pytest": [12, 94], "directori": [12, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 94, 102], "repositori": 12, "ssssssssssssss": 12, "ssssssss": 12, "stand": 12, "behind": [12, 78], "abl": 12, "dure": [12, 14, 57, 63, 75, 90, 102], "idea": [12, 25], "dxa": [12, 64], "intend": 12, "safe": 12, "ignor": [12, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90, 93], "analys": [13, 64], "expcellfilt": 13, "precon": [13, 75], "preconlbfg": 13, "show_as": [13, 15, 102], "cubiccrystalcrack": [13, 75], "cluster": [13, 44, 45, 46, 48, 49, 53, 55, 56, 57, 64, 75], "set_group": [13, 74], "inadvertendli": 13, "stilling": [13, 14, 17, 40, 43], "weber": [13, 14, 17, 40, 43], "imsw": 13, "accident": 13, "brittl": [13, 75, 78], "variabl": [13, 34, 36, 44, 45, 70, 71, 97], "filter": 13, "precondit": [13, 75], "still": [13, 70, 71], "robust": 13, "calcual": 13, "forward": [13, 72], "el": [13, 34, 74], "ecf": 13, "opt": 13, "smax": [13, 64], "48": [13, 59], "34": 13, "692786": 13, "0000": 13, "0003": 13, "692800": 13, "lbfg": 13, "133": 13, "too": 13, "benefit": 13, "precondition": [13, 23, 30, 33, 36, 42, 59, 61, 66, 75], "kwarg": [13, 23, 25, 30, 33, 34, 36, 42, 44, 45, 53, 59, 61, 62, 64, 66, 70, 71, 72, 74, 78, 85, 90], "a0": [13, 34, 38, 64, 74, 90], "c_err": [13, 66], "c_11": 13, "stress": [13, 14, 23, 25, 30, 33, 34, 36, 42, 44, 45, 59, 61, 62, 66, 75, 78, 88, 90, 91], "18433656e": 13, "05309496e": 13, "32979590e": 13, "97563406e": 13, "87437477e": 13, "cij": 13, "gradient": [13, 22, 23, 30, 33, 36, 38, 42, 43, 59, 61, 64, 66, 70, 72, 75, 77], "4615167357166": 13, "error": [13, 20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 66, 75, 78, 94, 102], "647086489317546": 13, "correl": [13, 93, 94, 98], "9997411342093212": 13, "257424": 13, "016522": 13, "c_21": 13, "13682864e": 13, "40632635e": 13, "89079644e": 13, "30322868e": 13, "640152889484874": 13, "764431020075705": 13, "9982534274183545": 13, "c21": 13, "322312": 13, "011013": 13, "c_31": 13, "64015288948469": 13, "7644310200754734": 13, "998253427418355": 13, "updat": [13, 20, 23, 25, 30, 36, 44, 45, 51, 52, 56, 57, 61, 62, 75, 78, 84, 90], "c31": 13, "c_44": 13, "43911515": 13, "19994966": 13, "16236289": 13, "2885839": 13, "17710649364383": 13, "285752508674578": 13, "9998224896560226": 13, "737603": 13, "008025": 13, "65": [13, 102], "c_12": 13, "29": 13, "extract": [13, 64], "64015288948479": 13, "remain": [13, 38], "ingredi": 13, "fly": 13, "adapticecont": 13, "branch": 13, "merg": [13, 14, 31], "find_surface_energi": 13, "0001": [13, 64], "1j": 13, "builder": [13, 20], "startswith": 13, "bodycenteredcub": 13, "lattice_build": 13, "elif": [13, 102], "untest": 13, "append": [13, 14, 15, 20, 72, 90, 91, 102], "unsupport": 13, "orthogon": [13, 64, 66, 91], "endswith": 13, "get_cel": [13, 14, 90, 91], "set_cel": [13, 90], "lbfgslinesearch": 13, "opt_bulk": 13, "opt_slab": 13, "ebulk": 13, "eslab": 13, "cross": [13, 20, 61, 64, 87], "gamma_as": 13, "ase_unit": 13, "gamma_si": 13, "surface_energi": [13, 75], "diamond111": 13, "consist": [13, 14, 23, 30, 36, 59, 61, 64, 69, 71, 75, 90, 97, 100, 102], "416": 13, "313600": 13, "403": 13, "303800": 13, "proce": 13, "param": [13, 64, 69, 75], "script": [13, 14, 18, 19, 20, 66, 84, 101, 102], "quasistatic_crack": 13, "crack_surfac": [13, 74, 75], "crack_front": [13, 74, 75], "crack_tip": 13, "41": 13, "56": [13, 84], "skin_x": [13, 74], "skin_i": [13, 74], "cryst": [13, 74, 75], "cfg": [13, 17, 95, 98, 99], "r0": [13, 34, 38, 43, 59, 75], "get_posit": [13, 14, 90, 102], "len": [13, 14, 17, 23, 30, 61, 62, 64, 75, 77, 78, 87, 90, 97, 98, 102], "tip_x0": 13, "tip_y0": 13, "tip_z0": 13, "651528178589903": 13, "406681360668651": 13, "either": [13, 18, 20, 23, 30, 33, 36, 63, 66, 70, 87, 90], "6x6": [13, 66, 75], "stiff": [13, 38, 66], "matrix": [13, 22, 23, 30, 33, 36, 42, 59, 61, 64, 66, 72, 75, 79, 87, 88, 90], "specimen": 13, "crk": [13, 75], "griffith": [13, 75], "critic": [13, 14, 75, 91], "intens": [13, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 75, 78], "factor": [13, 14, 23, 25, 30, 33, 36, 42, 59, 61, 64, 66, 75, 90, 91], "thermodynam": 13, "favour": 13, "k1g": [13, 75], "137": 13, "7212872906663": 13, "everyth": 13, "centr": [13, 75], "tip_x": [13, 77], "tip_i": [13, 77], "set_pbc": [13, 14, 90], "k1": [13, 75], "ux": [13, 75], "notch": 13, "oldr": 13, "scatter": [13, 75], "group": [13, 20, 56, 90, 91, 102], "quiver": 13, "set_aspect": 13, "equal": [13, 87], "set_xlim": 13, "set_ylim": 13, "45": 13, "friction": 14, "adhes": 14, "gain": 14, "insight": 14, "wear": 14, "pressurecoupl": 14, "under": [14, 66, 90, 91], "veloc": [14, 84, 90], "fast": [14, 91], "prior": [14, 66], "afterward": [14, 44, 45], "pastewka": [14, 20, 59, 61, 91], "inertia": [14, 90], "exemplari": 14, "slab1": 14, "slab2": 14, "lowest": 14, "mask": [14, 15, 64, 75, 77, 80, 87, 90, 91], "bottom_mask": [14, 91], "topmost": 14, "treat": [14, 44, 45], "rigidli": [14, 75], "top_mask": [14, 91], "rigid": [14, 90, 91], "adapt": [14, 66], "subsequ": [14, 75], "savetxt": 14, "txt": [14, 18, 20, 64], "md": [14, 75, 90, 91, 94, 100], "langevin": [14, 91], "thermostat": [14, 91], "neither": 14, "nor": 14, "motion": [14, 65], "simplic": 14, "thermal": [14, 91], "dedic": 14, "dt": [14, 72, 75, 78], "166": 14, "m_factor": [14, 91], "lid": [14, 91], "expens": [14, 52], "pdir": [14, 91], "p": [14, 34, 38, 41, 64, 72, 75, 76, 91], "yet": 14, "vdir": [14, 91], "happen": 14, "temperatur": [14, 23, 30, 33, 36, 42, 59, 61, 69, 70, 71, 90, 91], "t_langevin": 14, "gamma_langevin": 14, "t_integr": 14, "steps_integr": [14, 91], "damp": [14, 91], "typic": [14, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90, 100, 101], "twice": [14, 70, 97], "stillinger_weber_prb_31_5262_si": [14, 17], "pc": 14, "velocitydistribut": 14, "maxwellboltzmanndistribut": 14, "fixedmasscriticaldamp": [14, 91], "slider": [14, 91], "slidewithnormalpressurecuboidcel": [14, 91], "set_constraint": [14, 78, 90], "temperature_k": 14, "clear": [14, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "momenta": [14, 90, 91], "otherwis": [14, 18, 66, 70, 90, 102], "awai": [14, 69], "set_calcul": [14, 34, 90], "integr": [14, 77, 91], "trajectori": [14, 63, 75], "track": 14, "term": [14, 23, 30, 31, 33, 36, 42, 59, 61, 64, 69, 100], "height": [14, 15, 75], "shear": [14, 63, 66, 75, 78, 91], "etc": [14, 20, 88], "slidelog": [14, 91], "temp": 14, "middle_mask": [14, 91], "tdir": [14, 91], "fixcm": 14, "equilibrate_pressure_01": 14, "traj": [14, 63, 65], "logger": [14, 26, 72, 91], "log_handl": [14, 91], "log_equilibrate_01": 14, "encod": [14, 20, 34, 86], "utf": [14, 20, 34, 86], "buffer": [14, 44, 45, 46, 56, 91], "slidelogg": [14, 91], "write_head": [14, 91], "header": [14, 31, 85, 86, 91], "loadtxt": [14, 85], "bool": [14, 23, 25, 30, 33, 36, 44, 45, 49, 51, 52, 56, 57, 59, 61, 62, 64, 66, 70, 71, 72, 75, 78, 80, 84, 85, 88, 90], "written": [14, 84, 91, 101], "equilibrate_pressure_02": 14, "step_offset": [14, 91], "log_equilibrate_02": 14, "p_c": [14, 91], "high": [14, 69, 74], "frequenc": 14, "oscil": 14, "reset": [14, 23, 25, 30, 33, 36, 42, 44, 45, 53, 59, 61, 62, 78], "get_veloc": [14, 90], "set_veloc": [14, 90], "analogi": 14, "autodamp": [14, 91], "slide_01": 14, "log_slide_01": 14, "docstr": [14, 69], "slide_02": 14, "log_slide_02": 14, "tmp_file": [14, 102], "except": [14, 72, 89, 90, 102], "filenotfounderror": [14, 102], "viewabl": 15, "sphinx": [15, 20, 94], "insid": [15, 64, 71, 90, 94], "to_jshtml": 15, "page": [15, 20, 94], "output_html": 15, "div": 15, "flex": 15, "justifi": 15, "gcf": 15, "pipelin": [15, 18], "common_neighbor_analysi": 15, "identify_diamond": 15, "get_structure_typ": 15, "atom_label": 15, "structure_nam": 15, "list": [15, 20, 21, 22, 23, 25, 30, 33, 34, 36, 42, 44, 45, 46, 48, 49, 51, 52, 53, 55, 56, 57, 59, 61, 62, 64, 66, 68, 72, 75, 78, 80, 83, 84, 85, 87, 90, 94, 96, 98, 100, 101, 102], "string": [15, 20, 23, 30, 31, 33, 36, 42, 59, 61, 64, 66, 70, 85, 86, 87, 90, 97], "hex": 15, "ase_to_ovito": 15, "commonneighboranalysismodifi": 15, "identifydiamondmodifi": 15, "staticsourc": 15, "ovito_structur": 15, "del": 15, "sourc": [15, 20, 29, 31, 94], "hex_color": 15, "02x": 15, "255": 15, "custom": [15, 20, 23, 30, 33, 36, 42, 59, 61, 66, 90], "tooltip": 15, "molecul": [15, 56, 82, 84, 87, 90, 97, 101, 102], "relev": [15, 75, 100], "tooltip_j": 15, "stage": [15, 102], "mousecontrol": 15, "hoverpick": 15, "pickingproxi": 15, "innertext": 15, "atomnam": 15, "atom1": 15, "atom2": 15, "unitcel": 15, "add_disloc": 15, "x_shift": 15, "cone": 15, "hollow": 15, "shifter": 15, "accordingli": [15, 72], "add_cylind": 15, "add_con": 15, "hide": 15, "add_ball_and_stick": [15, 102], "cylinderonli": [15, 102], "radiustyp": [15, 102], "coval": [15, 102], "radiusscal": [15, 102], "aspectratio": [15, 102], "structure_typ": 15, "uniqu": [15, 87, 90], "everi": [15, 20, 64, 75, 87, 90], "str": [15, 23, 25, 29, 30, 33, 36, 42, 44, 45, 56, 57, 59, 61, 62, 64, 66, 71, 72, 75, 78, 82, 83, 84, 85, 87, 90], "add_unitcel": 15, "camera": 15, "orthograph": 15, "clipdist": 15, "400px": 15, "_j": [15, 38], "_remove_represent": 15, "update_spacefil": 15, "kumagai": [16, 43], "sum_": [17, 29, 30, 42, 72, 95, 98], "substack": [17, 30], "u_2": [17, 64], "2_": 17, "u_": [17, 29, 30, 66], "xi_": 17, "xi": [17, 36, 38, 43, 72], "ik": [17, 38, 43, 87, 95], "jk": [17, 43, 87], "m\u00fcser": 17, "grie\u00dfer": 17, "On": [17, 75], "respect": [17, 30, 36, 68, 75, 88, 90, 97], "freedom": [17, 66, 75, 90, 91], "explicit": [17, 100], "represent": [17, 23, 30, 66, 90], "asi": [17, 99], "parametr": 17, "kumagai_comp_mat_sci_39_si": 17, "markdown": 17, "cohes": [17, 77], "42": [17, 101], "born": [17, 23, 30, 33, 36, 42, 43, 59, 61], "elastic_moduli": [17, 66], "nonaffin": [17, 88], "born_const": [17, 23, 33, 36, 42, 59, 61], "isotrop": [17, 75], "nu": [17, 29, 30, 66, 75], "young": [17, 66, 75], "modulu": [17, 66, 75], "ey": [17, 87], "170": 17, "212": 17, "tersoff": [17, 41, 43], "brenner": [17, 41, 43], "lookup": 17, "tabl": [17, 29, 102], "erhart": 17, "alb": 17, "posson_nernst_planck_solv": 18, "posson_nernst_planck_solver_fen": 18, "stericifi": 18, "execut": [18, 20, 89], "drop": [18, 23, 30, 33, 36, 42, 59, 61, 66, 70, 71], "bc": [18, 70, 71, 75], "plain": 18, "npz": 18, "stream": [18, 82], "regim": [18, 70], "implicitli": 18, "exclud": [18, 80], "impos": 18, "stericnacl": 18, "cli": 19, "extra": [19, 20, 23, 52, 57], "overview": 19, "quickstart": 20, "sun": 20, "40": [20, 64], "2015": 20, "execfil": 20, "dir": [20, 94], "present": [20, 31, 75, 80, 84, 90, 101], "autogener": 20, "comment": [20, 31, 84], "serv": 20, "sy": [20, 31, 102], "readthedoc": 20, "mock": 20, "mock_modul": 20, "mod_nam": 20, "autodoc": 20, "root": [20, 33, 94], "abspath": 20, "absolut": [20, 36, 39, 40, 66, 70, 71, 87, 94], "insert": [20, 23, 30, 61, 62, 78, 90], "needs_sphinx": 20, "ext": 20, "napoleon": 20, "autosummari": 20, "mathjax": 20, "myst_nb": 20, "numpydoc": 20, "sphinx_copybutton": 20, "sphinxcontrib": 20, "spell": 20, "templat": 20, "templates_path": 20, "_templat": 20, "suffix": 20, "source_suffix": 20, "rst": 20, "source_encod": 20, "sig": 20, "master": 20, "toctre": 20, "master_doc": 20, "project": [20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 94], "copyright": [20, 69, 70, 71, 72], "2023": 20, "jame": 20, "kermod": 20, "lar": 20, "info": [20, 72, 75], "act": [20, 30, 90], "releas": [20, 75, 77], "variou": 20, "throughout": [20, 44, 45], "devel": 20, "rc": [20, 33, 59, 78], "tag": [20, 90], "languag": 20, "todai": 20, "today_fmt": 20, "strftime": 20, "pattern": [20, 66], "exclude_pattern": 20, "_build": 20, "rest": [20, 56], "markup": 20, "default_rol": 20, "func": [20, 34, 68, 70, 71, 72, 82], "add_function_parenthes": 20, "prepend": 20, "descript": [20, 64, 70, 71, 84, 86, 101], "titl": 20, "add_module_nam": 20, "sectionauthor": 20, "moduleauthor": 20, "show_author": 20, "pygment": 20, "syntax": 20, "highlight": 20, "pygments_styl": 20, "prefix": [20, 23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 84], "modindex_common_prefix": 20, "paragraph": 20, "keep_warn": 20, "theme": 20, "builtin": 20, "html_theme": 20, "sphinx_rtd_them": 20, "feel": 20, "html_theme_opt": 20, "html_theme_path": 20, "html_titl": 20, "shorter": [20, 21, 93], "navig": 20, "html_short_titl": 20, "sidebar": 20, "html_logo": 20, "favicon": 20, "window": [20, 94], "icon": 20, "ico": 20, "being": [20, 48, 91], "16x16": 20, "32x32": 20, "pixel": 20, "html_favicon": 20, "sheet": 20, "css": 20, "overwrit": [20, 90], "html_static_path": 20, "_static": 20, "robot": 20, "htaccess": 20, "html_extra_path": 20, "timestamp": 20, "html_last_updated_fmt": 20, "smartyp": 20, "quot": 20, "dash": [20, 75], "typograph": 20, "entiti": 20, "html_use_smartyp": 20, "html_sidebar": 20, "html_additional_pag": 20, "html_domain_indic": 20, "html_use_index": 20, "individu": [20, 25, 57, 87, 90], "letter": 20, "html_split_index": 20, "html_show_sourcelink": 20, "footer": 20, "html_show_sphinx": 20, "html_show_copyright": 20, "opensearch": 20, "must": [20, 23, 25, 30, 33, 36, 42, 44, 45, 52, 59, 61, 62, 64, 70, 72, 78, 80, 82, 84, 87, 89, 90], "url": 20, "html_use_opensearch": 20, "xhtml": 20, "html_file_suffix": 20, "htmlhelp_basenam": 20, "matscipydoc": 20, "latex_el": 20, "letterpap": 20, "a4pap": 20, "papers": 20, "font": 20, "10pt": 20, "11pt": 20, "12pt": 20, "pointsiz": 20, "stuff": [20, 69], "preambl": 20, "tree": [20, 94], "tupl": [20, 64, 72, 85, 87, 90, 97], "author": [20, 69, 70, 71, 72], "documentclass": 20, "howto": 20, "manual": [20, 70, 101], "latex_docu": 20, "tex": 20, "latex_logo": 20, "toplevel": 20, "head": 20, "chapter": [20, 64], "latex_use_part": 20, "latex_show_pageref": 20, "address": 20, "latex_show_url": 20, "appendix": 20, "latex_appendic": 20, "latex_domain_indic": 20, "man_pag": 20, "man_show_url": 20, "texinfo": 20, "menu": 20, "categori": 20, "texinfo_docu": 20, "miscellan": 20, "texinfo_appendic": 20, "texinfo_domain_indic": 20, "footnot": 20, "inlin": [20, 95, 98, 99], "texinfo_show_url": 20, "detailmenu": 20, "node": 20, "texinfo_no_detailmenu": 20, "rais": [20, 23, 25, 30, 31, 33, 36, 42, 44, 45, 52, 59, 61, 62, 64, 78, 84, 90, 91, 102], "fail": [20, 72], "timeout": 20, "nb_execution_raise_on_error": 20, "autodoc_default_opt": 20, "member": [20, 25, 97], "bysourc": 20, "undoc": 20, "myst_enable_extens": 20, "dollarmath": 20, "colon_f": 20, "mystnb": 20, "jupytext": 20, "properli": [20, 25], "percent": 20, "en": 20, "latest": [20, 94], "ipynb": [20, 91], "myst": 20, "nb": [20, 31], "nb_custom_format": 20, "fmt": 20, "spelling_lang": 20, "en_u": 20, "spelling_show_suggest": 20, "dr": [21, 87], "nbin": [21, 95], "array_lik": [21, 23, 29, 30, 31, 33, 36, 42, 59, 61, 66, 75, 77, 80, 83, 87, 89], "2_min": 22, "falk": 22, "langer": 22, "phy": [22, 31, 59, 61, 64, 66, 92], "rev": [22, 31, 59, 92], "7192": 22, "1998": 22, "get_xij": 22, "nat": [22, 87], "i_now": 22, "dr_now": 22, "dr_old": 22, "x_": 22, "get_yij": 22, "y_": 22, "array_invers": 22, "invers": [22, 23, 30, 33, 36, 42, 59, 61, 66], "matric": [22, 97], "faster": [22, 85], "inv": [22, 66], "get_delta_plus_epsilon_dgesv": 22, "delta_ij": 22, "epsilon_ij": 22, "get_delta_plus_epsilon": 22, "get_d_square_min": 22, "atoms_now": 22, "atoms_old": 22, "j_now": 22, "delta_plus_epsilon": 22, "matscipycalcul": [23, 30, 36, 42, 59, 61], "ignore_bad_restart_fil": [23, 25, 30, 36, 61, 62, 78], "daughter": 23, "hessian": [23, 30, 33, 36, 38, 42, 43, 59, 61, 66, 79, 88], "dynamical_matrix": [23, 33, 36, 42, 59, 61], "nonaffine_forc": [23, 33, 36, 42, 59, 61], "stress_elastic_contribut": [23, 33, 59, 61], "birch_coeffici": [23, 33, 36, 42, 59, 61], "nonaffine_elastic_contribut": [23, 30, 33, 36, 42, 59, 61, 66], "perspect": 23, "sumcalcul": 23, "calculation_requir": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "export_properti": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "get_atom": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "get_charg": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90, 102], "get_default_paramet": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "get_dipole_mo": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "get_magnetic_mo": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "get_stress": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 75, 78, 90], "read_atom": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "todict": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "system_chang": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "combin": [23, 25, 30, 44, 45, 61, 62, 72, 78, 84, 90, 101], "dipol": [23, 30, 61, 62, 64, 78, 90], "magmom": [23, 30, 61, 62, 78, 90], "six": [23, 30, 61, 62, 78, 90], "initial_charg": [23, 25, 30, 61, 62, 78, 90], "initial_magmom": [23, 25, 30, 61, 62, 78, 90], "dictionari": [23, 25, 30, 33, 34, 36, 42, 44, 45, 52, 57, 59, 61, 62, 66, 75, 78, 84, 85, 87, 90], "dummi": [23, 30, 61, 62, 78], "self": [23, 25, 30, 33, 36, 42, 44, 45, 53, 55, 56, 57, 59, 61, 62, 64, 71, 75, 78, 90], "miss": [23, 25, 30, 36, 61, 62, 64, 75, 78, 102], "get_dynamical_matrix": [23, 30, 33, 36, 42, 59, 61], "weight": [23, 29, 30, 31, 33, 36, 42, 59, 61, 87, 89], "get_hessian": [23, 30, 33, 36, 42, 59, 61], "spars": [23, 30, 33, 36, 42, 59, 61, 66, 87, 97], "divide_by_mass": [23, 30, 33, 36, 42, 59, 61], "symmetr": [23, 30, 36, 59, 61, 90], "hermitian": [23, 30, 36, 59, 61], "block": [23, 30, 36, 59, 61, 84, 87], "global": [23, 26, 30, 33, 36, 42, 52, 59, 61, 64, 66, 79, 84, 87, 88, 90], "minima": [23, 30, 33, 36, 42, 59, 61, 66, 79, 88], "divid": [23, 30, 61, 75, 90], "m_i": [23, 30], "m_j": [23, 30], "bsr_matrix": [23, 30, 36, 87], "hessian_ncc": [23, 30], "ndarrai": [23, 30, 68, 69, 70, 71, 72, 87, 89, 90, 91], "distances_nc": [23, 30], "get_born_elastic_const": [23, 30, 33, 36, 42, 59, 61], "get_stress_contribution_to_elastic_const": [23, 30, 33, 36, 42, 59, 61], "cauchi": [23, 30, 33, 36, 42, 59, 61], "get_birch_coeffici": [23, 30, 33, 36, 42, 59, 61], "birch": [23, 30, 33, 36, 42, 59, 61], "get_nonaffine_forc": [23, 30, 33, 36, 42, 59, 61], "cg_paramet": [23, 30, 33, 36, 42, 59, 61, 66], "x0": [23, 30, 33, 36, 42, 59, 61, 64, 66, 70, 71, 72, 75], "contribut": [23, 29, 30, 33, 36, 42, 59, 61, 66, 75, 90, 97], "dict": [23, 25, 30, 33, 34, 36, 42, 44, 45, 52, 59, 61, 62, 66, 72, 75, 78, 84, 85, 87, 90], "dictonari": [23, 30, 33, 36, 42, 59, 61, 66], "conjug": [23, 30, 33, 36, 42, 59, 61, 66], "guess": [23, 30, 33, 36, 42, 59, 61, 64, 66, 75], "toler": [23, 30, 33, 36, 42, 57, 59, 61, 64, 66, 70, 71], "even": [23, 30, 33, 36, 42, 59, 61, 64, 66, 90], "linearoper": [23, 30, 33, 36, 42, 59, 61, 66], "get_non_affine_contribution_to_elastic_const": [23, 30, 33, 36, 42, 59, 61], "eigenvalu": [23, 30, 33, 36, 42, 59, 61, 66, 90], "eigenvector": [23, 30, 33, 36, 42, 59, 61, 66], "pc_paramet": [23, 30, 33, 36, 42, 59, 61, 66], "occur": [23, 30, 33, 36, 42, 59, 61, 65, 66, 97], "bypass": [23, 30, 33, 36, 42, 59, 61, 66], "cg": [23, 30, 33, 36, 42, 59, 61, 66, 72, 102], "ascend": [23, 30, 33, 36, 42, 59, 61, 66, 87], "incomplet": [23, 30, 33, 36, 42, 59, 61, 66], "lu": [23, 30, 33, 36, 42, 59, 61, 66], "decomposit": [23, 30, 33, 36, 42, 59, 61, 66], "drop_tol": [23, 30, 33, 36, 42, 59, 61, 66], "fill_factor": [23, 30, 33, 36, 42, 59, 61, 66], "ratio": [23, 30, 33, 36, 42, 59, 61, 66, 75], "bound": [23, 30, 33, 36, 42, 59, 61, 66, 72], "drop_rul": [23, 30, 33, 36, 42, 59, 61, 66], "comma": [23, 30, 33, 36, 42, 59, 61, 66], "rule": [23, 30, 33, 36, 41, 42, 59, 61, 66], "permc_spec": [23, 30, 33, 36, 42, 59, 61, 66], "permut": [23, 30, 33, 36, 42, 59, 61, 66, 90], "column": [23, 30, 33, 36, 42, 57, 59, 61, 66, 70, 82, 84, 85, 101], "sparsiti": [23, 30, 33, 36, 42, 59, 61, 66], "diag_pivot_thresh": [23, 30, 33, 36, 42, 59, 61, 66], "threshold": [23, 30, 33, 36, 42, 44, 45, 56, 57, 59, 61, 66], "pivot": [23, 30, 33, 36, 42, 59, 61, 66], "expert": [23, 30, 33, 36, 42, 59, 61, 66], "supernod": [23, 30, 33, 36, 42, 59, 61, 66], "panel_s": [23, 30, 33, 36, 42, 59, 61, 66], "panel": [23, 30, 33, 36, 42, 59, 61, 66], "superlu": [23, 30, 33, 36, 42, 59, 61, 66], "get_numerical_non_affine_forc": [23, 30, 33, 36, 42, 59, 61], "numerical_nonaffine_forc": [23, 30, 33, 36, 42, 59, 61, 88], "central": [23, 30, 33, 36, 42, 59, 61, 79, 88], "rescal": [23, 30, 33, 36, 42, 59, 61, 75, 88], "broken": [23, 25, 30, 36, 61, 62, 75, 78], "purepath": [23, 25, 30, 36, 61, 62, 78], "Not": [23, 25, 30, 36, 61, 62, 78], "band_structur": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "band": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "calculate_numerical_forc": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "calculate_numerical_stress": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "voigt": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 66, 78, 88, 90], "calculate_properti": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "check_stat": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "default_paramet": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "discard_results_on_any_chang": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "whether": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 75, 78, 90], "purg": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "magnet": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "moment": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "force_consist": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "allow_calcul": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "ignored_chang": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "cach": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 78], "implemented_properti": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "handl": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 72, 78, 90, 91, 97], "readerror": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "corrupt": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "succ": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "fileiocalcul": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "read_result": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "classmethod": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 90], "old": [23, 25, 30, 33, 36, 42, 44, 45, 57, 59, 61, 62, 78], "key1": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "value1": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "key2": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "value2": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "chaneg": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "decid": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "harmless": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "keyword": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 64, 78, 85, 90], "set_label": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "abc": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78, 87], "dir1": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "skip_default": [23, 25, 30, 33, 36, 42, 44, 45, 59, 61, 62, 78], "committeeuncertainti": 25, "train": 25, "uncertainti": 25, "deviat": [25, 90], "public": 25, "musil": 25, "906": 25, "915": 25, "2019": [25, 69, 70, 71], "pub": 25, "ac": [25, 95, 98], "1021": 25, "jctc": 25, "8b00959": 25, "varianc": [25, 93], "committeememb": 25, "calibr": 25, "calibrated_for": 25, "id_count": 25, "counter": 25, "id_to_atom": 25, "id": [25, 79, 82, 84, 87, 88, 101, 102], "validation_set": 25, "add_memb": 25, "set_internal_validation_set": 25, "appearance_threshold": 25, "prop": [25, 33], "locat": [25, 26, 78, 94], "is_calibrated_for": 25, "scale_uncertainti": 25, "training_data": 25, "lightweight": 25, "set_training_data": 25, "is_sample_in_atom": 25, "create_logg": 26, "level": [26, 44, 45, 56, 94], "log_fil": 26, "formatt": 26, "handler": 26, "set_log": 26, "subsampl": 27, "output_fil": 27, "num_subset": 27, "num_subset_sampl": 27, "keep_isolated_atom": 27, "draw": [27, 68], "average_potenti": 29, "rep": [29, 30, 31, 90], "avg_atom": 29, "999": 29, "crystal_structur": [29, 31], "unknown": [29, 102], "lattice_const": [29, 31], "fictiou": 29, "reproduc": 29, "tabul": [29, 31, 85], "phi_": [29, 30], "aa": [29, 84, 90], "r_": [29, 30, 38, 43, 95, 98], "n_t": 29, "xy": [29, 75, 90], "quad": 29, "rho_": [29, 30], "g_a": 29, "c_x": 29, "g_x": 29, "m_a": 29, "m_x": 29, "straightforward": 29, "eamparamet": [29, 31], "new_f": 29, "new_rep": 29, "read_eam": [29, 31], "new_paramet": 29, "join": [29, 57], "rstrip": 29, "write_eam": [29, 31], "equicomposit": 29, "varvenn": 29, "luqu": 29, "n\u00f6hring": 29, "curtin": 29, "review": 29, "104201": 29, "2016": 29, "rho_nu": [29, 30], "g_": [29, 30], "equiv": [29, 30], "m_": [29, 30], "fn": [30, 83, 85], "free_energi": [30, 33, 36, 42, 59, 61, 78], "energy_virial_and_forc": 30, "atomic_numbers_i": 30, "i_n": [30, 87], "j_n": [30, 87], "dr_nc": [30, 87], "abs_dr_n": [30, 87], "virial": [30, 77], "abd_dr_n": 30, "epot": [30, 77], "virial_v": 30, "forces_": 30, "calculate_hessian_matrix": 30, "mathcal": 30, "emb": 30, "delta_": [30, 38], "eight": 30, "t_1": 30, "t_2": 30, "t_3": 30, "t_4": 30, "t_5": 30, "t_6": 30, "t_7": 30, "t_8": 30, "row": [30, 70, 87, 91], "nonzero": 30, "atomic_mass": 31, "number_of_density_grid_point": 31, "number_of_distance_grid_point": 31, "density_grid_spac": 31, "distance_grid_spac": 31, "cover": 31, "empti": [31, 48, 70, 84, 87, 90], "metal": [31, 69, 84, 90], "occurr": 31, "maxsiz": [31, 61], "valueerror": [31, 52, 64], "eam_fil": 31, "differnt": 31, "flavor": 31, "storag": 31, "subset": [31, 77], "sandia": 31, "gov": 31, "pair_eam": 31, "dynamo": 31, "funcfl": 31, "setfl": 31, "mix_eam": 31, "rep_ab": 31, "interspeci": 31, "kinf": 31, "arithmet": 31, "ponder": 31, "fb": 31, "fa": 31, "rep_a": 31, "rep_b": 31, "previous": 31, "pars": 31, "karg": 31, "fine": 31, "tune": 31, "alpha_a": 31, "alpha_b": 31, "f_ab": 31, "beta_00": 31, "beta_01": 31, "f_ba": 31, "beta_10": 31, "beta_11": 31, "parameters_mix": 31, "f_": [31, 95], "rep_": 31, "zhou": 31, "johnson": 31, "wadlei": 31, "69": 31, "144113": 31, "2004": [31, 78], "out_fil": 31, "summat": 33, "ewaldshortrang": 33, "cutoffinteract": [33, 59], "first_deriv": [33, 59, 61], "qi": [33, 59], "qj": [33, 59], "second_deriv": [33, 59, 61], "get_cutoff": [33, 36, 59, 61], "ewal": 33, "short_rang": 33, "accuraci": [33, 66], "kspace": 33, "determine_alpha": 33, "acc": 33, "determin": [33, 66, 75, 87, 95], "adopt": 33, "determine_nk": 33, "natom": [33, 46, 49, 57], "maxim": [33, 61], "reciproc": [33, 90], "determine_kc": 33, "nk": 33, "wave": [33, 78, 88], "integ": [33, 64, 75, 90], "triplet": [33, 36, 38, 42, 87], "rms_kspace": 33, "km": 33, "q2": 33, "rms_rspace": 33, "allowed_wave_vector": 33, "prefactor": [33, 97], "self_energi": 33, "kspace_energi": 33, "po": [33, 64, 76, 84, 101], "first_derivative_kspac": 33, "stress_kspac": 33, "coulomb": [33, 84, 90], "reset_kspac": 33, "kspace_properti": 33, "recirproc": 33, "contributiom": 33, "naforc": 33, "hidden": 34, "distinguish": 34, "range_map": 34, "get_const": 34, "get_deriv": 34, "get_dict": 34, "get_lower_bound": 34, "get_upper_bound": 34, "get_vari": 34, "in_rang": 34, "set_arrai": [34, 90, 102], "set_const": 34, "set_deriv": 34, "set_dict": 34, "set_range_deriv": 34, "set_vari": 34, "par": 34, "cost_histori": 34, "minimal_cost": 34, "par_at_minimal_cost": 34, "residuals_histori": 34, "get_cohesive_energi": 34, "get_cost_funct": 34, "get_cost_histori": 34, "get_parameters_at_minimal_cost": 34, "get_residuals_histori": 34, "get_square_residu": 34, "optimize_ann": 34, "optimize_brut": 34, "optimize_leastsq": 34, "optimize_openopt": 34, "set_calculator_class": 34, "set_paramet": 34, "set_parameters_from_arrai": 34, "store_histori": 34, "_io": [34, 86], "textiowrapp": [34, 86], "stdout": [34, 86, 90], "interalg": 34, "combinedfit": 34, "get_residu": 34, "rotatingfit": 34, "penalti": [34, 72], "fitsinglepoint": 34, "w_energi": 34, "w_forc": 34, "w_stress": 34, "fitdim": 34, "d0": 34, "w_d0": 34, "w_r0": 34, "get_dist": [34, 90], "new_dim": 34, "ground": 34, "fitcubiccryst": 34, "ec": 34, "cp": 34, "sfe": 34, "w_ec": 34, "w_a0": 34, "w_b": 34, "w_c11": 34, "w_c12": 34, "w_c44": 34, "w_cp": 34, "w_sfe": 34, "ep": [34, 69, 70, 71, 72, 76, 90, 94], "ecoh_ref": 34, "get_c11": 34, "get_c44": 34, "get_cp": 34, "get_sf": 34, "get_lattice_const": [34, 64], "new_bulk": 34, "fittetragonalcryst": 34, "c0": [34, 71, 90], "c_a": 34, "c13": 34, "c33": 34, "c66": 34, "w_c0": 34, "w_c_a": 34, "w_c13": 34, "w_c33": 34, "w_c66": 34, "get_c33": 34, "get_c66": 34, "get_d1": 34, "get_d2": 34, "get_d4": 34, "fithexagonalcryst": 34, "fitsurfac": 34, "esurf": 34, "w_esurf": 34, "get_surface_energi": 34, "fitsc": 34, "crystalstr": 34, "fitbcc": 34, "fitfcc": 34, "fitb2": 34, "b2": 34, "fitl1_0": 34, "l1_0": 34, "fitl1_2": 34, "l1_2": 34, "fitdiamond": 34, "dia": 34, "fitgraphit": 34, "gra": 34, "fitgraphen": 34, "grp": 34, "fitdiamond100": 34, "new_surfac": 34, "surfstr": 34, "fitdiamond110": 34, "fitdiamond111": 34, "atom_typ": [36, 87], "pair_typ": [36, 87], "d1f": 36, "d2f": 36, "d11f": 36, "d22f": 36, "d12f": 36, "d1g": 36, "d11g": 36, "d2g": 36, "d22g": 36, "d12g": 36, "neighbourhood": [36, 42, 87], "get_second_deriv": 36, "drda_pc": 36, "drdb_pc": 36, "i_p": [36, 87], "j_p": [36, 87], "r_p": [36, 43, 87], "r_pc": 36, "get_hessian_from_second_deriv": 36, "get_non_affine_forces_from_second_deriv": 36, "nicemanybodi": 36, "nicer": 36, "r_ij": [36, 76], "r_ik": 36, "ij_typ": 36, "ik_typ": 36, "init": [36, 70, 71], "zeropair": [38, 43], "zerotriplet": 38, "harmonicbond": 38, "atyp": 38, "ptype": 38, "spring": [38, 59, 84, 90], "harmonicangl": [38, 43], "mic": [38, 87, 90], "redefin": 38, "r_ij_c": 38, "r_ik_c": 38, "v_i": 38, "_i": 38, "w_i": 38, "scalar": 38, "reader": [38, 91], "u_j": 38, "v_j": 38, "care": [38, 63, 87], "treatment": [38, 44, 45], "pair_index": 41, "maxval": 41, "triplet_index": 41, "mix_arithmet": 41, "mix_geometr": 41, "abel": 41, "definit": [42, 43, 84, 90, 101], "theta": [42, 43, 75, 90, 95], "sum_xx_sum_ijk_tau_xx_mn": 42, "sum_xy_sum_ijk_tau_xy_mn": 42, "sum_x_sum_ijk_tau_ijx_mn": 42, "sum_x_sum_ijk_tau_ij_xor_x_mn": 42, "sum_ijk_tau_xy_mn": 42, "\u0278": 42, "r\u1d62\u2c7c\u00b2": [42, 43], "\u03be\u1d62\u2c7c": [42, 43], "rsq_p": [42, 43], "xi_p": [42, 43], "\u2081\u0278": [42, 43], "\u2082\u0278": [42, 43], "\u2081\u2081\u0278": [42, 43], "\u2082\u2082\u0278": [42, 43], "\u2081\u2082\u0278": [42, 43], "\u03b8": 42, "r\u1d62\u2096\u00b2": [42, 43], "r\u2c7c\u2096\u00b2": [42, 43], "r1_p": 42, "r2_p": 42, "r3_p": 42, "\u2081\u03b8": [42, 43], "\u2082\u03b8": [42, 43], "\u2083\u03b8": [42, 43], "\u2081\u2081\u03b8": [42, 43], "\u2082\u2082\u03b8": [42, 43], "\u2083\u2083\u03b8": [42, 43], "\u2082\u2083\u03b8": [42, 43], "\u2081\u2083\u03b8": [42, 43], "\u2081\u2082\u03b8": [42, 43], "sum_ij_pi_ij_n": 42, "values_p": 42, "pi_": 42, "chi_": 42, "sum_ij_sum_x_pi_x_n": 42, "values_tq": 42, "chi_x": 42, "tr_p": 42, "values_t": 42, "values_txi": 42, "values_tx": 42, "distance_defin": 43, "decor": 43, "transform": [43, 90, 93], "angle_distance_defin": 43, "zeroangl": 43, "r1": [43, 77], "r2": [43, 77], "r3": 43, "harmonicpair": 43, "harmon": [43, 84, 90], "k0": 43, "theta0": 43, "5707963267948966": 43, "rij": 43, "rik": [43, 72], "rjk": 43, "lennardjon": 43, "inf": [43, 75], "bornmayercut": 43, "mayer": 43, "stillingerweberpair": 43, "stillingerweberangl": 43, "kumagaipair": 43, "kumagaiangl": 43, "tersoffbrennerpair": 43, "tersoffbrennerangl": 43, "symphi": 43, "energy_express": 43, "expr": 43, "sympi": 43, "symtheta": 43, "r1_t": 43, "r2_t": 43, "r3_t": 43, "multiclusterforcemixingpotenti": [44, 45], "classical_calcul": [44, 45], "qm_calcul": [44, 45], "qm_cluster": [44, 45], "forced_qm_list": [44, 45], "change_bond": [44, 45], "calculate_error": [44, 45], "calculation_always_requir": [44, 45], "buffer_hop": [44, 45, 53, 56], "enable_check_st": [44, 45], "multipl": [44, 45, 64, 75, 91], "qm": [44, 45, 46, 53, 55, 56, 57, 64], "instac": [44, 45], "forcemixingpotenti": [44, 45], "potential_energi": [44, 45, 53, 57], "all_chang": [44, 45], "power": [44, 45, 61, 75], "mm_pot": [44, 45], "ae": [44, 45], "flag": [44, 45, 57, 64, 71, 72, 82, 90], "carv": [44, 45, 56, 57], "topologi": [44, 45, 87, 94], "hop": [44, 45, 56, 57], "noth": [44, 45], "meth": [44, 45], "emploi": [44, 45], "analyz": [44, 45], "independ": [44, 45, 90], "send": [44, 45], "qmmm": [44, 45, 48, 64], "accur": [44, 45], "produce_classical_result": [44, 45], "ot": [44, 45, 46, 49, 56, 57], "produce_qm_clust": [44, 45], "evaluate_qm_cluster_seri": [44, 45], "clusternumb": [44, 45], "qm_atom": [44, 45], "mark": [44, 45, 46, 71, 72, 75], "cluster_data": [44, 45], "combine_qm_mm_forc": [44, 45], "cluster_data_list": [44, 45], "clusterdata": [44, 45, 46, 48], "attach_hybrid_data": [44, 45], "full_qm_atoms_mask": [44, 45], "quantm": [44, 45], "mmechan": [44, 45], "comprehens": [44, 45], "ooutput": [44, 45], "evaluate_error": [44, 45], "heavy_onli": [44, 45], "r_forc": [44, 45], "hybrid": [44, 45], "hydrogen": [44, 45, 46, 55, 56, 57, 64, 97, 101], "set_qm_atom": [44, 45], "qm_list": [44, 45, 46], "certian": [44, 45], "compute_stress": [44, 45], "viral": [44, 45], "theorem": [44, 45], "print_messag": [44, 45, 56], "inner": [46, 56], "get_cluster_data": 48, "mcfm_pot": 48, "multiclusterforcemix": 48, "worker_populate_cluster_data": 49, "rank": 49, "nprocloc": 49, "atomic_clust": [49, 56], "clusterindex": 49, "qmcalcul": 49, "sharedlist": 49, "debug_qm_calcul": 49, "calcuat": 49, "tb": 49, "cpu": 49, "stuctur": 49, "mp": 49, "debug": [49, 90], "neighbourlistbas": [51, 52], "sure": [51, 52, 70, 71, 84], "date": [51, 52, 94], "clled": [51, 52], "sucesful": [51, 52], "get_neighbour": [51, 52], "neighbourlistmcfm": 52, "skin": 52, "hysteretic_break_factor": 52, "wrapper": 52, "aroud": 52, "neighbour_list": [52, 53, 55, 56, 57, 64, 75, 87, 95, 97, 98, 102], "search": [52, 75, 84, 87, 92, 94, 99, 101], "rebuild": [52, 90], "do_upd": 52, "pairwis": [52, 61, 72, 90], "runtimeerror": [52, 84, 90], "qmcluster": [53, 55, 56, 57], "special_atoms_list": [53, 57], "manag": [53, 55, 56, 57], "attach_neighbour_list": 53, "attach_flagging_modul": 53, "qmflaggingtool": [53, 57], "attach_clustering_modul": 53, "qmclusteringtool": [53, 56], "reset_energized_list": 53, "old_energized_atom": 53, "flaggingmodul": 53, "warmup": 53, "update_qm_region": [53, 57], "flagging_modul": 53, "carve_clust": [53, 56], "clustering_modul": 53, "core_qm_list": [53, 56], "baseqmclustertool": [55, 56, 57], "mediat": [55, 56, 57], "find_neighbour": [55, 56, 57], "heavy_neighbour": [55, 56, 57], "hydrogen_neighbour": [55, 56, 57], "hydrogenate_clust": [55, 56, 57], "neigobur": [55, 56, 57], "compos": [55, 56, 57], "heavi": [55, 56, 57], "oper": [55, 56, 57], "struct": [55, 56, 57, 102], "dangl": [55, 56, 57], "origin": [55, 56, 57, 64, 66, 75, 90], "double_bonded_atoms_list": 56, "doubli": 56, "create_buffer_region": 56, "qm_atoms_list": 56, "whole": [56, 57], "expand": 56, "buffer_list": 56, "terminal_atom": 56, "verg": 56, "cutoff_atoms_list": 56, "hydrogenate_dangling_bond": 56, "terminal_atoms_list": 56, "replace_single_bond": 56, "terminal_atom_index": 56, "cutoff_atom_index": 56, "atomic_posit": 56, "replace_double_bond": 56, "include_special_atom": 56, "specialatomindex": 56, "regio": [56, 57], "complete_aromatic_r": 56, "total_supplementary_terminal_atom": 56, "aromat": 56, "ring": [56, 94, 96], "aromnat": 56, "create_cluster_from_mark": 56, "select_list": 56, "mesag": 56, "qm_flag_potential_energi": 57, "small_cluster_hop": 57, "only_heavi": 57, "ema_paramet": 57, "energy_cap": 57, "energy_increas": 57, "threshhold": 57, "indivu": 57, "diension": 57, "enter": 57, "stai": 57, "expans": 57, "exponenti": 57, "cap": 57, "convininec": 57, "get_energized_list": 57, "data_arrai": 57, "property_str": 57, "hysteretic_toler": 57, "create_cluster_around_atom": 57, "atom_id": 57, "join_clust": 57, "expand_clust": 57, "exponential_moving_averag": 57, "oldset": 57, "newset": 57, "update_avg_property_per_atom": 57, "avarag": 57, "hard": [59, 64], "lennardjonesquadrat": 59, "soft": [59, 64], "lennardjoneslinear": 59, "feneljcut": 59, "fene": 59, "bead": 59, "polym": 59, "lj": [59, 84, 90, 102], "contin": 59, "lennardjones84": 59, "c1": [59, 84, 90, 101, 102], "c2": [59, 90, 102], "c3": [59, 90, 102], "c4": [59, 102], "cuzr": 59, "kobayashi": 59, "shinji": 59, "cu57zr43": 59, "societi": 59, "japan": 59, "1980": 59, "1147": 59, "1152": 59, "beestkramersanten": 59, "beest": 59, "kramer": 59, "van": 59, "santen": 59, "bk": 59, "buckingham": 59, "lett": [59, 91], "1990": 59, "seamless": [59, 61], "86": [59, 61], "075459": [59, 61], "2012": [59, 61], "inversepowerlawpotenti": 61, "q": [61, 77], "minsiz": 61, "smooth": 61, "law": [61, 75], "ipl": 61, "repuls": 61, "expon": 61, "distribtuion": 61, "paramt": 61, "lerner": 61, "522": 61, "119570": 61, "mix_siz": 61, "isiz": 61, "jsize": 61, "nonaddit": 61, "get_coeff": 61, "get_maxs": 61, "get_mins": 61, "ijsiz": 61, "m_l": 61, "m_m": 61, "supercellcalcul": 62, "homogen": 63, "get_shear_dist": 63, "lee": 63, "edward": 63, "removesimplesheardeform": 63, "proper": [63, 82], "instantan": 63, "make_screw_cyl": 64, "cylinder_r": 64, "hard_cor": 64, "l_extend": 64, "fixatom": 64, "creation": 64, "simplecubicfactori": 64, "disk": 64, "make_edge_cyl": 64, "plot_vitek": 64, "dislo": 64, "plot_ax": 64, "xyscal": 64, "vitek": 64, "graph": [64, 83], "show_neb_configur": 64, "core_posit": 64, "neb": 64, "show_configur": 64, "fixed_mask": 64, "pot_path": 64, "make_barrier_configur": 64, "elastic_param": 64, "fixedatom": 64, "constrain": [64, 75, 90], "chosen": [64, 66], "disloc_ini": 64, "disloc_fin": 64, "make_screw_cyl_kink": 64, "kink_length": 64, "quadrupol": 64, "reference_straight_disloc": 64, "large_bulk": 64, "slice_long_dislo": 64, "kink_bulk": 64, "slice": 64, "sliced_kink": 64, "sliced_bulk": 64, "disloc_z_posit": 64, "compare_configur": 64, "dislo_ref": 64, "bulk_ref": 64, "print_info": 64, "remap": 64, "bulk_neighbour": 64, "neghbour": 64, "comparison": [64, 66, 75], "coreself": 64, "switch": 64, "statement": 64, "swtich": 64, "bulk_i": 64, "bulk_j": 64, "y0": [64, 75], "du": 64, "cost_funct": 64, "cost": 64, "minimis": 64, "config": [64, 66], "optimis": [64, 66, 102], "fit_core_posit": 64, "dislo_imag": 64, "core_radiu": 64, "current_po": 64, "powel": [64, 72, 75], "core_x": 64, "core_i": 64, "neigbbour": 64, "calcualt": 64, "core_po": 64, "fit_core_position_imag": 64, "screw_cyl_tetrahedr": 64, "scan_r": 64, "imp_symbol": 64, "tetrahedr": 64, "lattuc": 64, "elemnt": 64, "dislocatino": 64, "sign": 64, "predict": 64, "screw_cyl_octahedr": 64, "octahedr": 64, "bodycenteredcubictetrahedralfactori": 64, "factori": 64, "element_basi": 64, "calc_num_atom": 64, "xtal_nam": 64, "bcc_tetrahedr": 64, "bravais_basi": 64, "sequenc": [64, 66, 75, 90], "atoms_in_unit_cel": 64, "basis_factor": 64, "check_basis_volum": 64, "chop_toler": 64, "convert_to_natural_basi": 64, "natur": 64, "find_direct": 64, "find_ortho": 64, "ortho": 64, "int_basi": 64, "inverse_basi": 64, "inverse_basis_factor": 64, "make_crystal_basi": 64, "make_list_of_atom": 64, "repeat": [64, 90], "make_unit_cel": 64, "print_directions_and_mil": 64, "process_el": 64, "put_atom": 64, "bodycenteredcubicoctahedralfactori": 64, "bcc_octahedr": 64, "dipole_displacement_angl": 64, "w_bulk": 64, "dislo_coord_left": 64, "dislo_coord_right": 64, "ud": 64, "voltera": 64, "get_u_img": 64, "n_img": 64, "n1_shift": 64, "n2_shift": 64, "displacemnt": 64, "make_screw_quadrupol": 64, "left_shift": 64, "right_shift": 64, "n1u": 64, "arrang": 64, "dsitanc": 64, "disoc": 64, "odd": 64, "disloc_quadrupol": 64, "coodrin": 64, "c_1": 64, "u_1": 64, "v_1": 64, "z_1": 64, "c_2": 64, "v_2": 64, "z_2": 64, "c_3": 64, "135": 64, "approx": 64, "tilt": 64, "compomemt": 64, "cz1": 64, "cz2": 64, "3n": 64, "easi": 64, "typo": 64, "ventelon": 64, "willaim": 64, "peierl": 64, "fe": 64, "principl": 64, "versu": 64, "aid": 64, "mater": 64, "de": [64, 69, 70, 71, 72, 75, 87], "2007": 64, "suppl": 64, "1007": 64, "s10820": 64, "007": 64, "9064": 64, "cai": 64, "2005": [64, 66, 77], "yip": 64, "ed": 64, "handbook": 64, "springer": [64, 70, 71], "dordrecht": 64, "978": 64, "4020": 64, "3286": 64, "8_42": 64, "make_screw_quadrupole_kink": 64, "1016": 64, "jnucmat": 64, "2008": 64, "053": 64, "make_edge_cyl_001_100": 64, "determenit": 64, "read_dislo_qmmm": 64, "qm_mask": 64, "dislo_qmmm": 64, "plot_bulk": 64, "n_plane": 64, "ovito_dxa_straight_dislo_info": 64, "replicate_z": 64, "1b": 64, "3b": 64, "get_centering_mask": 64, "check_dupl": 64, "closer": 64, "anisotropicdisloc": 64, "slip_plan": 64, "disloc_lin": 64, "media": 64, "467": 64, "hirth": 64, "loth": 64, "catersian": 64, "3x3": [64, 66, 77, 87, 90], "eg": 64, "slip": 64, "bulk_posit": 64, "2d": [64, 75, 91], "3x1": 64, "deformation_gradi": [64, 75, 77], "return_2d": 64, "du_dx": [64, 75], "du_di": [64, 75], "dz": 64, "dv_dx": [64, 75], "dv_dy": [64, 75], "dv": [64, 75], "dw": 64, "dx": [64, 70, 75, 76, 79], "dy": [64, 75], "adstroh": 64, "glide_distance_dimensionless": 64, "unit_cell_core_posit": 64, "build_glide_configur": 64, "build_impurity_cylind": 64, "init_anisotropic_disloc": 64, "init_stroh": 64, "plot_unit_cel": 64, "self_consistent_displac": 64, "set_burg": 64, "self_consist": 64, "pariti": 64, "OR": 64, "250": 64, "max_it": 64, "use_atomman": 64, "fix_width": 64, "average_posit": 64, "extra_bulk_at_cor": 64, "left_disloc": 64, "new_left_burg": 64, "new_right_burg": 64, "right_disloc": 64, "b_left": 64, "b_right": 64, "righ": 64, "overload": [64, 71], "33333333": 64, "fixedlineatom": 64, "adjust_forc": [64, 75, 91], "adjust_posit": [64, 75, 91], "newposit": [64, 90], "gamma_lin": 64, "shift_dir": 64, "n_dot": 64, "return_imag": 64, "gsf": 64, "quantiti": [64, 70, 71, 87], "landscap": 64, "preserv": 64, "conden": 64, "matter": 64, "395502": 64, "15pp": 64, "iopscienc": 64, "iop": 64, "0953": 64, "8984": 64, "39": [64, 91], "toten": 64, "removedrift": 65, "full_3x3_to_voigt_6_index": 66, "voigt_6_to_full_3x3_strain": 66, "strain_vector": 66, "voigt_6_to_full_3x3_stress": 66, "stress_vector": 66, "full_3x3_to_voigt_6_strain": 66, "strain_matrix": 66, "full_3x3_to_voigt_6_stress": 66, "stress_matrix": 66, "voigt_6x6_to_full_3x3x3x3": 66, "3x3x3x3": 66, "check_symmetri": 66, "voigt_6x6_to_cub": 66, "cubic_to_voigt_6x6": 66, "invari": 66, "syi": 66, "szz": 66, "syz": 66, "sxz": 66, "sxy": 66, "full_3x3_to_voigt_6": 66, "rotate_cubic_elastic_const": 66, "rotate_elastic_const": 66, "cubicelasticmoduli": 66, "complianc": 66, "logfil": [66, 86], "brute": [66, 72], "triclin": 66, "generate_strained_config": 66, "at0": 66, "n_step": 66, "triclininc": 66, "conifugur": 66, "c_ij": 66, "graphic": 66, "stress_err": 66, "grad_scal": 66, "6241509125883258": 66, "intercept_scal": 66, "03120754562941629": 66, "regress": 66, "infom": 66, "qualiti": 66, "summaris": 66, "curv": 66, "suppress": 66, "100gpa": 66, "intercept": 66, "5gpa": 66, "stat": [66, 72], "github": [66, 94], "djw": 66, "youngs_modulu": 66, "e_l": 66, "exact": 66, "answer": 66, "anisotropui": 66, "cr": 66, "e_x": 66, "pull": [66, 75, 94], "e_i": 66, "e_z": 66, "formula": [66, 90], "brantlei": 66, "semiconductor": [66, 70, 71], "devic": [66, 70, 71], "appl": 66, "534": 66, "1973": 66, "poisson_ratio": 66, "lm": 66, "muduli": 66, "mudulu": 66, "gm": 66, "rand": [66, 72, 87], "rovenski": 66, "birkh": 66, "auser": 66, "71": 66, "n_gridpoint": 68, "nan": [68, 70], "drawn": [68, 90], "uniformli": 68, "evenli": 68, "2020": [69, 72], "imtek": [69, 70, 71, 72], "univers": [69, 70, 71, 72], "freiburg": [69, 70, 71, 72], "johann": [69, 70, 71, 72], "hoermann": [69, 70, 71, 72], "uni": [69, 70, 71, 72], "elfleinl": 69, "298": [69, 70, 71], "relative_permitt": [69, 70, 71], "79": [69, 70, 71], "vacuum_permitt": [69, 70, 71], "8541878128e": [69, 70, 71], "314462618": [69, 70, 71], "96485": [69, 70, 71], "33212": [69, 70, 71], "screen": [69, 86], "854187817620389e": [69, 70, 71], "3144598": [69, 70, 71], "33289": [69, 70, 71], "epsr": [69, 70, 71], "goui": 69, "chapmann": 69, "volt": 69, "kelvin": [69, 90], "decim": 69, "unphys": [69, 102], "substrat": 69, "neutral": [69, 102], "liquid": 69, "unittest": 69, "bernoulli": 70, "naiv": 70, "jacobin": 70, "fij": 70, "nxn": 70, "f_ij": [70, 76], "dfidxj": 70, "x1_scale": [70, 71], "left_potential_dirichlet_bc": [70, 71], "left_potential_robin_bc": [70, 71], "right_dirichlet_bc": [70, 71], "right_potential_dirichlet_bc": [70, 71], "right_potential_robin_bc": [70, 71], "solver_callback": [70, 71], "initial_valu": [70, 71], "decoupl": [70, 71], "evok": [70, 71], "lagrang": [70, 71], "side": [70, 71, 90], "implicit": 70, "prescrib": 70, "helmholtz": 70, "ohp": 70, "attent": [70, 72], "crop": 70, "use_standard_dirichlet_bc": [70, 71], "left_finite_difference_scheme_flux_bc": [70, 71], "j0": [70, 71], "right_finite_difference_scheme_flux_bc": [70, 71], "left_controlled_volume_scheme_flux_bc": [70, 71], "right_controlled_volume_scheme_flux_bc": [70, 71], "u0": [70, 71], "left_dirichlet_bc": [70, 71], "lam": [70, 71, 78], "left_robin_bc": [70, 71], "dudx": [70, 71], "constitut": [70, 71, 97], "beyond": [70, 71], "right_robin_bc": [70, 71], "number_conservation_constraint": [70, 71], "n0": [70, 71], "amount": [70, 71, 75, 90], "poisson_pd": [70, 71], "fd": [70, 71, 82], "nernst_planck_pd": [70, 71], "selbherr": [70, 71], "1984": [70, 71], "potential0": [70, 71], "concentration0": [70, 71], "kwarsg": [70, 71], "segment": [70, 71], "subdomain": 71, "dolfin": 71, "cpp": 71, "mesh": 71, "map_tol": 71, "on_boundari": 71, "arg0": 71, "float64": [71, 76], "arg1": 71, "writeabl": 71, "meshfunct": 71, "meshfunctionsizet": 71, "check_midpoint": 71, "meshfunctiondoubl": 71, "meshfunctionbool": 71, "mark_cel": 71, "sub_domain": 71, "mark_facet": 71, "set_properti": 71, "snap": 71, "apply_right_potential_robin_bc": 71, "boundary_l": 71, "boundary_r": 71, "boundary_c": 71, "apply_left_potential_dirichlet_bc": 71, "apply_right_potential_dirichlet_bc": 71, "apply_left_concentration_dirichlet_bc": 71, "apply_right_concentration_dirichlet_bc": 71, "apply_central_reference_concentration_constraint": 71, "apply_left_potential_robin_bc": 71, "lam0": 71, "apply_number_conservation_constraint": 71, "conserv": 71, "fenicsproject": 71, "demo": 71, "neumann": 71, "apply_potential_dirichlet_bc": 71, "u1": 71, "apply_potential_robin_bc": 71, "lam1": 71, "use_central_reference_concentration_based_cell_bc": 71, "distribtut": 72, "benchmark": 72, "10e": 72, "dim": [72, 93], "t0": 72, "perf_count": 72, "t1": 72, "runtim": 72, "stats_df": 72, "pd": 72, "datafram": 72, "enumer": [72, 75, 76, 102], "to_str": 72, "float_format": 72, "6g": 72, "p10": 72, "p11": 72, "p12": 72, "p20": 72, "p21": 72, "p22": 72, "pmin0": 72, "pmin1": 72, "pmin2": 72, "pmax0": 72, "pmax1": 72, "pmax2": 72, "15674e": 72, "02188e": 72, "87564e": 72, "21835e": 72, "03505e": 72, "72691e": 72, "22171e": 72, "17135e": 72, "49124e": 72, "34126e": 72, "98407e": 72, "99037e": 72, "86069e": 72, "2704": 72, "02318e": 72, "23954e": 72, "36242e": 72, "80092e": 72, "31183e": 72, "56345e": 72, "81278e": 72, "01789e": 72, "0081e": 72, "2045e": 72, "59284e": 72, "54413e": 72, "5924e": 72, "27": 72, "0756": 72, "39218e": 72, "00079e": 72, "27255e": 72, "86337e": 72, "27807e": 72, "68863e": 72, "00018e": 72, "00146e": 72, "00565e": 72, "59941e": 72, "59989e": 72, "59931e": 72, "0255": 72, "99527e": 72, "82802e": 72, "54397e": 72, "69736e": 72, "41411e": 72, "936e": 72, "34664e": 72, "00514e": 72, "01874e": 72, "0002e": 72, "59695e": 72, "59998e": 72, "58155e": 72, "7869": 72, "99675e": 72, "34395e": 72, "94096e": 72, "28996e": 72, "44064e": 72, "15999e": 72, "14778e": 72, "12146e": 72, "01506e": 72, "03583e": 72, "6e": 72, "59898e": 72, "5982e": 72, "deferredmessag": 72, "msg": 72, "lazi": 72, "brute_force_closest_pair": 72, "xj": 72, "coodin": 72, "steric_distribut": 72, "scipy_distance_based_target_funct": 72, "numpy_only_target_funct": 72, "brute_force_target_funct": 72, "itertool": 72, "panda": 72, "timeit": 72, "planar_closest_pair": 72, "func_nam": 72, "planar": 72, "1000": 72, "ret": 72, "val": [72, 86], "diff": 72, "pdist": 72, "atleast_2d": 72, "metric": 72, "func_name_tupl": 72, "diff_nam": 72, "d_": 72, "f1": 72, "f2": 72, "perf_nam": 72, "t_": 72, "coord_nam": 72, "float_field": 72, "f4": 72, "labeled_stat": 72, "24089e": 72, "61002e": 72, "51047e": 72, "48424e": 72, "37235e": 72, "d_brute_scipi": 72, "d_brute_planar": 72, "d_scipy_planar": 72, "t_brute": 72, "02697": 72, "85543": 72, "1414": 72, "90338": 72, "86993": 72, "t_scipi": 72, "00708364": 72, "00698962": 72, "00762594": 72, "00703242": 72, "00703579": 72, "t_planar": 72, "38302": 72, "39462": 72, "434342": 72, "407233": 72, "420773": 72, "p1x_brute": 72, "132014": 72, "331441": 72, "553405": 72, "534633": 72, "977582": 72, "p1y_brut": 72, "599688": 72, "186959": 72, "90897": 72, "575864": 72, "636278": 72, "p1z_brute": 72, "49631": 72, "993856": 72, "246418": 72, "853567": 72, "411793": 72, "p2x_brute": 72, "134631": 72, "333526": 72, "55322": 72, "534493": 72, "977561": 72, "p2y_brut": 72, "603598": 72, "179771": 72, "915063": 72, "576894": 72, "629313": 72, "p2z_brute": 72, "496833": 72, "994145": 72, "239493": 72, "859377": 72, "409509": 72, "p1x_scipi": 72, "p1y_scipi": 72, "p1z_scipi": 72, "p2x_scipi": 72, "p2y_scipi": 72, "p2z_scipi": 72, "p1x_planar": 72, "p1y_planar": 72, "p1z_planar": 72, "p2x_planar": 72, "p2y_planar": 72, "p2z_planar": 72, "recursive_closest_pair": 72, "tackl": 72, "condens": 72, "squareform": 72, "tril_indic": 72, "triu_indic": 72, "penal": 72, "ri": [72, 75], "rj": 72, "exp": 72, "d_brute_numpi": 72, "d_numpy_scipi": 72, "t_numpi": 72, "1984e": 72, "58794e": 72, "70552e": 72, "11759e": 72, "212432": 72, "168858": 72, "0734278": 72, "19829e": 72, "31323e": 72, "82311e": 72, "49012e": 72, "212263": 72, "16846": 72, "0791856": 72, "18763e": 72, "45058e": 72, "86265e": 72, "201706": 72, "164867": 72, "0711544": 72, "27418e": 72, "72529e": 72, "84288e": 72, "20762": 72, "166005": 72, "0724238": 72, "199751": 72, "16415e": 72, "91038e": 72, "73115e": 72, "202635": 72, "161932": 72, "0772684": 72, "252": 72, "548": 72, "28555e": 72, "202512": 72, "161217": 72, "0726705": 72, "neigh_list_based_target_funct": 72, "dij": 72, "overrid": [72, 75], "sum_i": 72, "r_i": [72, 74], "r_j": 72, "df": [72, 76], "sj": 72, "xik": 72, "xjk": 72, "kdi": 72, "subscrib": 72, "kd": 72, "kroneck": 72, "box_constraint": 72, "confin": 72, "box_constraint_with_gradi": 72, "lik": 72, "sum_k": 72, "dg": 72, "dgdxik": 72, "gtol": 72, "target_funct": 72, "returns_gradi": 72, "closest_pair_funct": 72, "minimz": 72, "submodul": 72, "signatur": 72, "meet": 72, "optimizeresult": 72, "raw": [72, 90], "get_alpha_period": 74, "generate_3d_structur": 74, "cryst_2d": 74, "nzlayer": 74, "cb": [74, 102], "switch_sublattic": 74, "generate_3d_cubic_111": 74, "central_x": 74, "central_i": 74, "invert_centr": 74, "set_region": 74, "r_iii": 74, "extended_far_field": [74, 75], "extended_region_i": 74, "exclude_surfac": 74, "sort_typ": 74, "r_theta_z": 74, "rectilinearanisotropiccrack": 75, "Near": 75, "rectilinear": 75, "medium": 75, "sih": 75, "pari": 75, "irwin": 75, "mech": [75, 77], "189": 75, "1965": 75, "k1gsqg": 75, "set_plane_strain": 75, "set_plane_stress": 75, "a11": 75, "a22": 75, "a12": 75, "a16": 75, "a26": 75, "a66": 75, "b11": 75, "b22": 75, "b33": 75, "b12": 75, "b13": 75, "b23": 75, "b16": 75, "b26": 75, "b36": 75, "b66": 75, "ki": 75, "kii": 75, "ii": 75, "cyclind": 75, "sig_x": 75, "sig_i": 75, "sig_xi": 75, "rtheta": 75, "invert": 75, "displacement_residu": 75, "ref_x": 75, "ref_i": 75, "minu": 75, "deformation_gradient_residu": 75, "cur": 75, "stress_stat": 75, "crot": 75, "cauchy_born": 75, "displacements_from_cylinder_coordin": 75, "displacements_from_cartesian_coordin": 75, "cartesian": [75, 80, 90], "deformation_gradient_from_cylinder_coordin": 75, "deformation_gradient_from_cartesian_coordin": 75, "crack_tip_posit": 75, "residual_func": 75, "return_residu": 75, "addition": [75, 97], "leastsq": 75, "invok": 75, "crack_tip_position_i": 75, "scale_displac": 75, "old_k": 75, "new_k": 75, "extrapol": [75, 90], "stresses_from_cylinder_coordin": 75, "stresses_from_cartesian_coordin": 75, "xx": [75, 90], "yy": [75, 90], "sinclaircrack": 75, "variable_alpha": 75, "variable_k": 75, "alpha_scal": 75, "k_scale": 75, "riii": 75, "incl_ri_f_alpha": 75, "is_3d": 75, "theta_3d": 75, "cont_k": 75, "precon_recompute_interv": 75, "influenc": 75, "propag": 75, "philo": 75, "mag": 75, "647": 75, "671": 75, "1975": 75, "arc_length_continu": 75, "convergence_line_plot": 75, "dfk_dk_approx": 75, "fit_cl": 75, "get_crack_tip_forc": 75, "get_deformation_gradi": 75, "get_dof": 75, "get_k_forc": 75, "get_precon": 75, "get_xdot": 75, "load_cb_model": 75, "rescale_k": 75, "save_cb_model": 75, "set_atom": 75, "set_dof": 75, "set_shiftmask": 75, "unpack": 75, "update_precon": 75, "write_atoms_to_fil": 75, "undeform": 75, "compat": [75, 90], "vari": 75, "arc": 75, "contrib": 75, "iii": 75, "f_alpha": 75, "reshap": [75, 87], "u_cl": 75, "cle": 75, "pre": [75, 90], "r_fit": 75, "radial_dist": 75, "update_atom": 75, "use_alpha_3d": 75, "full_array_output": 75, "x2": [75, 93], "xdot1": 75, "ftol": 75, "dump": [75, 84], "krylov": 75, "check_grad": 75, "dump_interv": 75, "new_ki": 75, "max_step": 75, "traj_fil": 75, "x_traj": 75, "h5": [75, 102], "traj_interv": 75, "otf_traj": 75, "ds_max": 75, "ds_min": 75, "ds_aggress": 75, "opt_method": 75, "cos_alpha_min": 75, "pipe_output": 75, "data_queu": 75, "kill_confirm_queu": 75, "allow_alpha_backtrack": 75, "follow_g_contour": 75, "1234": 75, "rzoom": 75, "regions_styl": 75, "atoms_arg": 75, "bonds_arg": 75, "tip_arg": 75, "plot_tip": 75, "strain_err": 75, "seperate_surfac": 75, "corrector": 75, "seper": 75, "num": 75, "isotropic_modei_crack_tip_stress_field": 75, "xy_onli": 75, "singular": 75, "multidimension": [75, 97], "horzont": 75, "ahead": 75, "anticlockwis": 75, "yx": 75, "zz": [75, 90], "xyz_onli": 75, "isotropic_modei_crack_tip_displacement_field": 75, "horizont": 75, "isotropic_modeii_crack_tip_displacement_field": 75, "isotropicstressfield": 75, "sxx0": 75, "syy0": 75, "sxy0": 75, "strain_to_g": 75, "orig_height": 75, "rate": [75, 77], "strip": 75, "current_height": 75, "sigma_yi": 75, "eps_yi": 75, "poission": 75, "eps_xx": 75, "unstrain": 75, "g_to_strain": 75, "get_strain": 75, "origheight": 75, "get_energy_release_r": 75, "get_stress_intensity_factor": 75, "k_i": 75, "youngsmodulu": 75, "poissionratio_yz": 75, "fit_crack_stress_field": 75, "r_rang": 75, "initial_param": 75, "fix_param": 75, "avg_sigma": 75, "avg_decai": 75, "005": 75, "possionratio_yx": 75, "crackpo": 75, "sigma0": 75, "poissonratio_yx": 75, "exit": 75, "annular": 75, "accumul": [75, 87], "attenu": 75, "tau": 75, "characterist": 75, "get_calcul": [75, 90], "resolv": 75, "atomresolvedstressfield": 75, "suitabl": 75, "find_tip_coordin": 75, "bondlength": 75, "bulk_nn": 75, "find_tip_broken_bond": 75, "boundary_thick": 75, "nearest": [75, 78, 93, 95], "boundary_buff": 75, "tip_posit": 75, "midpoint": 75, "depth": [75, 102], "find_tip_stress_field": 75, "plot_stress_field": 75, "firstli": 75, "sigma_": 75, "thin_strip_displacement_i": 75, "vertic": 75, "ramp": 75, "down": 75, "meshgrid": 75, "axhlin": 75, "print_crack_system": 75, "pretti": 75, "crack_direct": 75, "cleavage_plan": 75, "constantstrainr": 75, "delta_strain": 75, "epsilon_yi": 75, "newpo": 75, "apply_strain": 75, "rigid_constraint": 75, "boolean": [75, 80, 91], "transition_width": 76, "elseif": 76, "co": 76, "sin": 76, "dcoordin": 76, "neighb_j": 76, "neighb_rij": 76, "printf": 76, "sum_b_ij": 76, "b_ij": 76, "eb_i": 76, "local_e_p": 76, "n_p": 76, "2dx": 76, "em": 76, "local_e_m": 76, "n_m": 76, "j_integr": 77, "e0": 77, "contour": 77, "li": [77, 90], "shih": 77, "needleman": 77, "eng": 77, "fract": [77, 78], "405": 77, "1985": 77, "jin": 77, "yuan": 77, "nanosci": 77, "nanotech": 77, "2099": 77, "triangular_lattice_slab": 78, "find_triangles_2d": 78, "minangl": 78, "5235987755982988": 78, "maxangl": 78, "0943951023931953": 78, "xdim": 78, "ydim": 78, "triangl": [78, 95], "triangular": 78, "sit": 78, "130": 78, "517": 78, "555": 78, "get_poisson_ratio": 78, "get_youngs_modulu": 78, "set_reference_cryst": 78, "get_wave_spe": 78, "longitudin": 78, "rayleigh": 78, "get_elastic_moduli": 78, "find_crack_tip": 78, "rightmost": 78, "whose": 78, "set_initial_veloc": 78, "kick": 78, "extend_strip": 78, "fd_hessian": 79, "numerical_hessian": [79, 88], "bond_length": 80, "turn": 80, "nonperiod": [80, 87], "read_molecules_from_lammps_data": 82, "pathlik": 82, "textiobas": 82, "descriptor": 82, "sort_by_id": 82, "check_legal_nam": 82, "dataset": 82, "column_s": 82, "image_flag": 82, "save_meti": 83, "glaro": 83, "dtc": 83, "umn": 83, "edu": 83, "gkhome": 83, "read_extended_xyz": [84, 101, 102], "fileobj": 84, "charact": [84, 87, 90, 101], "h2": [84, 101, 102], "molid": [84, 101, 102], "h1": [84, 101, 102], "oplsstructur": [84, 90, 101], "read_block": 84, "reactiv": [84, 90, 94, 100], "parameterfil": 84, "read_cutoff": [84, 101], "23": 84, "cutofflist": [84, 90], "read_parameter_fil": [84, 101, 102], "command": [84, 90, 94], "bond_styl": [84, 90], "angle_styl": [84, 90], "dihedral_styl": [84, 90], "overridden": 84, "002": 84, "dihedr": [84, 90, 100, 101, 102], "ljq": 84, "ljqdata": [84, 90], "bonddata": [84, 90], "anglesdata": [84, 90], "dihedralsdata": [84, 90], "write_lammp": [84, 101, 102], "write_lammps_in": 84, "write_lammps_atom": 84, "write_lammps_definit": 84, "read_lammps_definit": 84, "bond_coeff": 84, "bb": [84, 90], "bond_type_index": 84, "ljq_data": 84, "bond_data": [84, 101, 102], "ang_data": 84, "dih_data": [84, 101], "particle_type_index": 84, "indice": [84, 90], "ang_type_index": 84, "dih_type_index": 84, "read_lammps_data": 84, "filename_lammps_param": 84, "restor": 84, "preced": 84, "update_from_lammps_dump": 84, "savetbl": 85, "dat": 85, "loadtbl": 85, "usecol": 85, "fromfil": 85, "283": 85, "398": 85, "circumst": 85, "colum": 85, "hdr_str": 86, "hdrfmt_str": 86, "datatyp": 86, "numfmt_str": 86, "flatten": [86, 89], "outeveri": 86, "sepeveri": 86, "flush": 86, "get_logfil": 86, "has_logfil": 86, "iteration_finish": 86, "pr": 86, "set_logfil": 86, "set_outeveri": 86, "st": 86, "caller": 86, "hdr": 86, "force_print": 86, "connected_triplet": 87, "triplet_to_numb": 87, "get_pair": 87, "request": [87, 94], "get_triplet": 87, "full_connect": 87, "pair_dist": 87, "make_result": 87, "accepted_quant": 87, "compute_dist": 87, "pair_list": 87, "triplet_list": 87, "nb_pair": 87, "find_triplet_typ": 87, "double_neighbourhood": 87, "reverse_pair_indic": 87, "cutoffneighbourhood": 87, "triplet_typ": 87, "proxim": 87, "arraylik": 87, "sphere": 87, "neighborhood": 87, "molecularneighbourhood": 87, "double_cutoff": 87, "initialz": 87, "double_connect": 87, "complete_connect": 87, "typeoffset": 87, "wrap": [87, 90], "cell_origin": 87, "dot": 87, "shrink": 87, "bincount": [87, 89, 97], "bin_edg": 87, "pdf": 87, "get_volum": [87, 90, 98], "ijdd": [87, 97], "pair_forc": [87, 97], "forces_x": 87, "minlength": [87, 89], "forces_i": 87, "forces_z": 87, "abs_dr": 87, "dynmat": 87, "dde": 87, "dynmat_bsr": 87, "first_i": 87, "dynmat_diag": 87, "e_nc": 87, "d_ncc": 87, "dde_n": 87, "de_n": 87, "ddiag_icc": 87, "first_neighbour": 87, "abs_dr_p": 87, "tripl": [87, 90, 95], "adress": 87, "occour": 87, "neighour": 87, "ij_t": 87, "ik_t": 87, "jk_t": 87, "ijd": [87, 95, 97], "int32": [87, 97], "first_ij": 87, "find_ij": 87, "slower": 87, "get_jump_indici": 87, "find_indices_of_reversed_pair": 87, "taken": [87, 90], "fact": 87, "overhead": 87, "find_common_neighbour": 87, "i1": 87, "j1": 87, "i2": 87, "itself": 87, "cnl_i1_i2": 87, "cnl_j1": 87, "nl_index_i1_j1": 87, "nl_index_i2_j1": 87, "256": 87, "22016": 87, "1893376": 87, "unique_pairs_i1_i2": 87, "bincount_bin": 87, "return_invers": 87, "65536": 87, "my_sum": 87, "numerical_forc": 88, "minumum": 88, "numerical_stress": 88, "coo_matrix": 88, "numerical_nonaffine_forces_refer": 88, "get_derivative_volum": 88, "get_derivative_wave_vector": 88, "mabincount": [89, 97], "onlin": 89, "twochar": 90, "simplest": 90, "lj_pair": 90, "lj_cutoff": 90, "c_cutoff": 90, "shallow": 90, "fromkei": 90, "pop": 90, "unrepresent": 90, "keyerror": 90, "popitem": 90, "lifo": 90, "setdefault": 90, "lack": 90, "name_value_hash": 90, "cc": 90, "set_nam": 90, "get_nam": 90, "anam": 90, "bname": 90, "name_valu": 90, "get_valu": 90, "add_nam": 90, "cname": 90, "dd": 90, "dname": 90, "fourth": 90, "four": [90, 97], "manipul": [90, 101], "number_of_lattice_vector": 90, "iterimag": 90, "default_map": 90, "br": 90, "Be": 90, "ca": [90, 102], "mg": 90, "set_typ": [90, 101], "get_typ": 90, "set_cutoff": [90, 101, 102], "get_neighbor": 90, "set_atom_data": [90, 101, 102], "atom_data": [90, 101, 102], "pair_modifi": 90, "get_bond": [90, 101, 102], "elsewher": 90, "bond_typ": [90, 101], "a1": [90, 101], "a2": [90, 101], "bond_list": 90, "get_angl": [90, 101, 102], "ang_typ": 90, "conceiv": 90, "ang_list": 90, "ase_objtyp": 90, "interpret": 90, "edit": 90, "gui": 90, "conflict": 90, "undesir": 90, "behaviour": 90, "certain": 90, "incompat": 90, "backend": 90, "circumv": 90, "gtk": 90, "euler_rot": 90, "psi": 90, "euler": 90, "mathworld": 90, "wolfram": 90, "eulerangl": 90, "explan": 90, "cop": 90, "cou": 90, "fromdict": 90, "dct": 90, "get_all_dist": 90, "a3": 90, "get_angular_momentum": 90, "angular": 90, "momentum": 90, "unless": 90, "get_atomic_numb": 90, "resembl": 90, "jth": 90, "ith": 90, "get_cell_lengths_and_angl": 90, "get_celldisp": 90, "get_center_of_mass": 90, "get_chemical_formula": 90, "hill": 90, "contract": 90, "chhhoh": 90, "chhhochhh": 90, "ch3och3": 90, "alphabet": 90, "c2h6o": 90, "soohoho": 90, "h2o4": 90, "greatest": 90, "divisor": 90, "get_dihedr": [90, 101, 102], "full_output": 90, "sometim": 90, "dih_typ": [90, 101], "benzen": 90, "dih_list": 90, "apply_constraint": 90, "ask": [90, 94], "holonom": 90, "triatom": 90, "redistribut": 90, "get_global_number_of_atom": 90, "NOT": 90, "know": 90, "asap": 90, "maintain": 90, "situat": [90, 102], "get_initial_charg": 90, "get_initial_magnetic_mo": 90, "get_kinetic_energi": 90, "kinet": 90, "get_mass": 90, "get_momenta": 90, "get_moments_of_inertia": 90, "princip": 90, "inerti": 90, "amu": 90, "get_number_of_atom": 90, "probabl": [90, 95, 98], "Or": 90, "get_pbc": 90, "wrap_kw": 90, "pretty_transl": 90, "wrap_posit": 90, "get_reciprocal_cel": 90, "commonli": 90, "fourier": [90, 93, 96], "span": 90, "include_ideal_ga": 90, "tradit": 90, "yz": 90, "xz": 90, "get_tag": 90, "get_temperatur": 90, "get_total_energi": 90, "plu": 90, "new_arrai": 90, "rattl": 90, "stdev": 90, "rng": 90, "randomli": 90, "processor": 90, "rotate_cel": 90, "rotate_dihedr": 90, "a4": 90, "set_dihedr": 90, "set_angl": 90, "delet": 90, "set_atomic_numb": 90, "scale_atom": 90, "orthorhomb": 90, "lie": 90, "subspac": 90, "he": 90, "rhombohedr": 90, "77": 90, "set_celldisp": 90, "celldisp": 90, "set_center_of_mass": 90, "entir": 90, "subgroup": 90, "altern": [90, 101], "crude": 90, "ethan": [90, 101], "twist": 90, "hhcchh": 90, "210": 90, "set_dist": 90, "set_initial_charg": 90, "set_initial_magnetic_mo": 90, "collinear": 90, "set_mass": 90, "set_momenta": 90, "honor": 90, "set_scaled_posit": 90, "set_tag": 90, "json": 90, "databas": 90, "nx3": 90, "moser": 91, "mosel": 91, "tribol": 91, "2010": 91, "get_m_gamma": 91, "dissip": 91, "fixeddamp": 91, "get_a": 91, "notimplementederror": [91, 102], "adjust_momenta": 91, "adjust_potential_energi": 91, "job": 91, "filehandl": 91, "logfn": 91, "t_thermostat": 91, "instantantan": 91, "p_top": 91, "p_bottom": 91, "ang": 91, "acceler": 91, "tau_top": 91, "tau_bottom": 91, "ring_statist": [92, 99], "maxlength": [92, 99], "shortest": [92, 99], "franzblau": [92, 99], "4925": 92, "ringstat": 92, "n_atom": 93, "cell_vector": 93, "y1": 93, "z1": 93, "y2": 93, "z2": 93, "x3": 93, "y3": 93, "z3": 93, "fft": [93, 98], "proport": 93, "nomalis": 93, "betrag": 93, "max_rad": 93, "length_cutoff": 93, "output_grids": 93, "fft_cutoff": 93, "approx_fft_grids": [93, 98], "spatial_correlation_function_near": 93, "gridsiz": 93, "scienc": 94, "toolbox": 94, "environ": [94, 102], "electro": 94, "linux": 94, "x86": 94, "maco": 94, "git": 94, "libatom": 94, "complement": 94, "question": 94, "bug": 94, "report": 94, "welcom": 94, "cd": [94, 102], "meson": 94, "tri": 94, "virtual": 94, "wiki": 94, "fysik": 94, "dtu": 94, "dk": 94, "quippi": 94, "quip": 94, "atomistica": 94, "chemview": 94, "gabrielelanaro": 94, "deutsch": 94, "forschungsgemeinschaft": 94, "258153560": 94, "engin": 94, "research": 94, "council": 94, "grant": 94, "p002188": 94, "r012474": 94, "r043612": 94, "smaller": 95, "textrm": 95, "n_i": 95, "arcco": 95, "cdot": [95, 98], "heavisid": 95, "sum_j": 95, "angle_distribut": 95, "max_bond_dist": 95, "capit": 95, "bin_spac": 95, "nb_angl": 95, "xlabel": [95, 98, 99], "radian": 95, "ylabel": [95, 98, 99], "xlim": [95, 98], "141592653589793": 95, "coo": 97, "h2o": [97, 102], "oxygen": 97, "96856502": 97, "526478": 97, "ship": 97, "attract": 97, "propto": 97, "dispers": 97, "numpy_trick": 97, "33444449": 97, "54138009": 97, "66722225": 97, "g_2": 98, "langl": 98, "rangl": 98, "overal": 98, "ensembl": 98, "straightforwardli": 98, "instruct": 98, "broaden": 98, "mean_dist": 98, "mean_dens": 98, "shell_volum": 98, "ylim": 98, "tail": 98, "spatial_correlation_funct": 98, "topolog": 99, "statist": 99, "backtrack": 99, "opl": [101, 102], "c2h6": 101, "appropri": 101, "tediou": 101, "task": 101, "greatli": 101, "simplifi": 101, "angle_typ": 101, "0028": 101, "0013": 101, "115": 101, "016": 101, "angle_data": [101, 102], "consum": 101, "especi": 101, "human": 101, "readabl": [101, 102], "extxyz": [101, 102], "lubric": 102, "reichenbach": 102, "ac_h2o": 102, "oh": 102, "serpar": 102, "facili": 102, "parameters_reichenbach2023": 102, "strict": 102, "soon": 102, "hybridis": 102, "passiv": 102, "regard": 102, "sp2": 102, "contact": 102, "h_surface_region": 102, "zmid_c": 102, "mask_c": 102, "mask_c_lower_slab": 102, "logical_and": 102, "mask_c_upper_slab": 102, "zmax_c_lower_slab": 102, "zmin_c_upper_slab": 102, "ca_region_lower_slab": 102, "ca_region_upper_slab": 102, "atom_in_ca_region": 102, "zpo": 102, "neigh": 102, "nc": 102, "nO": 102, "nh": 102, "sp3": 102, "c6": 102, "c5": 102, "n_sp3neigh": 102, "neighs2": 102, "cy": 102, "cz": 102, "cx": 102, "o2": 102, "o1": 102, "ow": 102, "h4": 102, "hw": 102, "molid1": 102, "63": 102, "molid2": 102, "67": 102, "molid_h2o": 102, "180": 102, "pair_styl": 102, "parameter_fil": 102, "parameter_data": 102, "dihed_data": 102}, "objects": {"matscipy": [[21, 0, 0, "-", "angle_distribution"], [22, 0, 0, "-", "atomic_strain"], [63, 0, 0, "-", "deformation"], [64, 0, 0, "-", "dislocation"], [65, 0, 0, "-", "drift"], [66, 0, 0, "-", "elasticity"], [67, 0, 0, "-", "electrochemistry"], [73, 0, 0, "-", "fracture_mechanics"], [79, 0, 0, "-", "hessian_finite_differences"], [80, 0, 0, "-", "hydrogenate"], [81, 0, 0, "-", "io"], [86, 0, 0, "-", "logger"], [87, 0, 0, "-", "neighbours"], [88, 0, 0, "-", "numerical"], [89, 0, 0, "-", "numpy_tricks"], [90, 0, 0, "-", "opls"], [91, 0, 0, "-", "pressurecoupling"], [92, 0, 0, "-", "rings"], [93, 0, 0, "-", "spatial_correlation_function"]], "matscipy.angle_distribution": [[21, 1, 1, "", "angle_distribution"]], "matscipy.atomic_strain": [[22, 1, 1, "", "array_inverse"], [22, 1, 1, "", "atomic_strain"], [22, 1, 1, "", "get_D_square_min"], [22, 1, 1, "", "get_XIJ"], [22, 1, 1, "", "get_YIJ"], [22, 1, 1, "", "get_delta_plus_epsilon"], [22, 1, 1, "", "get_delta_plus_epsilon_dgesv"]], "matscipy.calculators": [[23, 0, 0, "-", "calculator"], [24, 0, 0, "-", "committee"], [28, 0, 0, "-", "eam"], [32, 0, 0, "-", "ewald"], [34, 0, 0, "-", "fitting"], [35, 0, 0, "-", "manybody"], [44, 0, 0, "-", "mcfm"], [58, 0, 0, "-", "pair_potential"], [60, 0, 0, "-", "polydisperse"], [62, 0, 0, "-", "supercell_calculator"]], "matscipy.calculators.calculator": [[23, 2, 1, "", "MatscipyCalculator"]], "matscipy.calculators.calculator.MatscipyCalculator": [[23, 3, 1, "", "__init__"], [23, 3, 1, "", "band_structure"], [23, 3, 1, "", "calculate"], [23, 3, 1, "", "calculate_numerical_forces"], [23, 3, 1, "", "calculate_numerical_stress"], [23, 3, 1, "", "calculate_properties"], [23, 3, 1, "", "calculation_required"], [23, 3, 1, "", "check_state"], [23, 4, 1, "", "default_parameters"], [23, 5, 1, "", "directory"], [23, 4, 1, "", "discard_results_on_any_change"], [23, 3, 1, "", "export_properties"], [23, 3, 1, "", "get_atoms"], [23, 3, 1, "", "get_birch_coefficients"], [23, 3, 1, "", "get_born_elastic_constants"], [23, 3, 1, "", "get_charges"], [23, 3, 1, "", "get_default_parameters"], [23, 3, 1, "", "get_dipole_moment"], [23, 3, 1, "", "get_dynamical_matrix"], [23, 3, 1, "", "get_elastic_constants"], [23, 3, 1, "", "get_forces"], [23, 3, 1, "", "get_hessian"], [23, 3, 1, "", "get_magnetic_moment"], [23, 3, 1, "", "get_magnetic_moments"], [23, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [23, 3, 1, "", "get_nonaffine_forces"], [23, 3, 1, "", "get_numerical_non_affine_forces"], [23, 3, 1, "", "get_potential_energies"], [23, 3, 1, "", "get_potential_energy"], [23, 3, 1, "", "get_property"], [23, 3, 1, "", "get_stress"], [23, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [23, 3, 1, "", "get_stresses"], [23, 4, 1, "", "ignored_changes"], [23, 4, 1, "", "implemented_properties"], [23, 5, 1, "", "label"], [23, 3, 1, "", "read"], [23, 3, 1, "", "read_atoms"], [23, 3, 1, "", "reset"], [23, 3, 1, "", "set"], [23, 3, 1, "", "set_label"], [23, 3, 1, "", "todict"]], "matscipy.calculators.committee": [[25, 0, 0, "-", "committee"], [26, 0, 0, "-", "log"], [27, 0, 0, "-", "utils"]], "matscipy.calculators.committee.committee": [[25, 2, 1, "", "Committee"], [25, 2, 1, "", "CommitteeMember"], [25, 2, 1, "", "CommitteeUncertainty"]], "matscipy.calculators.committee.committee.Committee": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "add_member"], [25, 5, 1, "", "alphas"], [25, 5, 1, "", "atoms"], [25, 3, 1, "", "calibrate"], [25, 5, 1, "", "calibrated_for"], [25, 5, 1, "", "id_counter"], [25, 5, 1, "", "id_to_atoms"], [25, 5, 1, "", "ids"], [25, 3, 1, "", "is_calibrated_for"], [25, 5, 1, "", "members"], [25, 5, 1, "", "number"], [25, 3, 1, "", "scale_uncertainty"], [25, 3, 1, "", "set_internal_validation_set"], [25, 5, 1, "", "validation_set"]], "matscipy.calculators.committee.committee.CommitteeMember": [[25, 3, 1, "", "__init__"], [25, 5, 1, "", "atoms"], [25, 5, 1, "", "calculator"], [25, 5, 1, "", "filename"], [25, 5, 1, "", "ids"], [25, 3, 1, "", "is_sample_in_atoms"], [25, 3, 1, "", "set_training_data"]], "matscipy.calculators.committee.committee.CommitteeUncertainty": [[25, 3, 1, "", "__init__"], [25, 3, 1, "", "band_structure"], [25, 3, 1, "", "calculate"], [25, 3, 1, "", "calculate_numerical_forces"], [25, 3, 1, "", "calculate_numerical_stress"], [25, 3, 1, "", "calculate_properties"], [25, 3, 1, "", "calculation_required"], [25, 3, 1, "", "check_state"], [25, 4, 1, "", "default_parameters"], [25, 5, 1, "", "directory"], [25, 4, 1, "", "discard_results_on_any_change"], [25, 3, 1, "", "export_properties"], [25, 3, 1, "", "get_atoms"], [25, 3, 1, "", "get_charges"], [25, 3, 1, "", "get_default_parameters"], [25, 3, 1, "", "get_dipole_moment"], [25, 3, 1, "", "get_forces"], [25, 3, 1, "", "get_magnetic_moment"], [25, 3, 1, "", "get_magnetic_moments"], [25, 3, 1, "", "get_potential_energies"], [25, 3, 1, "", "get_potential_energy"], [25, 3, 1, "", "get_property"], [25, 3, 1, "", "get_stress"], [25, 3, 1, "", "get_stresses"], [25, 4, 1, "", "ignored_changes"], [25, 4, 1, "", "implemented_properties"], [25, 5, 1, "", "label"], [25, 3, 1, "", "read"], [25, 3, 1, "", "read_atoms"], [25, 3, 1, "", "reset"], [25, 3, 1, "", "set"], [25, 3, 1, "", "set_label"], [25, 3, 1, "", "todict"]], "matscipy.calculators.committee.log": [[26, 1, 1, "", "create_logger"], [26, 1, 1, "", "set_logging"]], "matscipy.calculators.committee.utils": [[27, 1, 1, "", "subsample"]], "matscipy.calculators.eam": [[29, 0, 0, "-", "average_atom"], [30, 0, 0, "-", "calculator"], [31, 0, 0, "-", "io"]], "matscipy.calculators.eam.average_atom": [[29, 1, 1, "", "average_potential"]], "matscipy.calculators.eam.calculator": [[30, 2, 1, "", "EAM"]], "matscipy.calculators.eam.calculator.EAM": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "band_structure"], [30, 3, 1, "", "calculate"], [30, 3, 1, "", "calculate_hessian_matrix"], [30, 3, 1, "", "calculate_numerical_forces"], [30, 3, 1, "", "calculate_numerical_stress"], [30, 3, 1, "", "calculate_properties"], [30, 3, 1, "", "calculation_required"], [30, 3, 1, "", "check_state"], [30, 5, 1, "", "cutoff"], [30, 4, 1, "", "default_parameters"], [30, 5, 1, "", "directory"], [30, 4, 1, "", "discard_results_on_any_change"], [30, 3, 1, "", "energy_virial_and_forces"], [30, 3, 1, "", "export_properties"], [30, 3, 1, "", "get_atoms"], [30, 3, 1, "", "get_birch_coefficients"], [30, 3, 1, "", "get_born_elastic_constants"], [30, 3, 1, "", "get_charges"], [30, 3, 1, "", "get_default_parameters"], [30, 3, 1, "", "get_dipole_moment"], [30, 3, 1, "", "get_dynamical_matrix"], [30, 3, 1, "", "get_elastic_constants"], [30, 3, 1, "", "get_forces"], [30, 3, 1, "", "get_hessian"], [30, 3, 1, "", "get_magnetic_moment"], [30, 3, 1, "", "get_magnetic_moments"], [30, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [30, 3, 1, "", "get_nonaffine_forces"], [30, 3, 1, "", "get_numerical_non_affine_forces"], [30, 3, 1, "", "get_potential_energies"], [30, 3, 1, "", "get_potential_energy"], [30, 3, 1, "", "get_property"], [30, 3, 1, "", "get_stress"], [30, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [30, 3, 1, "", "get_stresses"], [30, 4, 1, "", "ignored_changes"], [30, 4, 1, "", "implemented_properties"], [30, 5, 1, "", "label"], [30, 4, 1, "", "name"], [30, 3, 1, "", "read"], [30, 3, 1, "", "read_atoms"], [30, 3, 1, "", "reset"], [30, 3, 1, "", "set"], [30, 3, 1, "", "set_label"], [30, 3, 1, "", "todict"]], "matscipy.calculators.eam.io": [[31, 2, 1, "", "EAMParameters"], [31, 1, 1, "", "mix_eam"], [31, 1, 1, "", "read_eam"], [31, 1, 1, "", "write_eam"]], "matscipy.calculators.eam.io.EAMParameters": [[31, 4, 1, "", "atomic_masses"], [31, 4, 1, "", "atomic_numbers"], [31, 3, 1, "", "count"], [31, 4, 1, "", "crystal_structures"], [31, 4, 1, "", "cutoff"], [31, 4, 1, "", "density_grid_spacing"], [31, 4, 1, "", "distance_grid_spacing"], [31, 3, 1, "", "index"], [31, 4, 1, "", "lattice_constants"], [31, 4, 1, "", "number_of_density_grid_points"], [31, 4, 1, "", "number_of_distance_grid_points"], [31, 4, 1, "", "symbols"]], "matscipy.calculators.ewald": [[33, 0, 0, "-", "calculator"]], "matscipy.calculators.ewald.calculator": [[33, 2, 1, "", "Ewald"], [33, 2, 1, "", "EwaldShortRange"]], "matscipy.calculators.ewald.calculator.Ewald": [[33, 3, 1, "", "__init__"], [33, 3, 1, "", "allowed_wave_vectors"], [33, 5, 1, "", "alpha"], [33, 3, 1, "", "band_structure"], [33, 3, 1, "", "calculate"], [33, 3, 1, "", "calculate_numerical_forces"], [33, 3, 1, "", "calculate_numerical_stress"], [33, 3, 1, "", "calculate_properties"], [33, 3, 1, "", "calculation_required"], [33, 3, 1, "", "check_state"], [33, 4, 1, "", "default_parameters"], [33, 3, 1, "", "determine_alpha"], [33, 3, 1, "", "determine_kc"], [33, 3, 1, "", "determine_nk"], [33, 5, 1, "", "directory"], [33, 4, 1, "", "discard_results_on_any_change"], [33, 3, 1, "", "export_properties"], [33, 3, 1, "", "first_derivative_kspace"], [33, 3, 1, "", "get_atoms"], [33, 3, 1, "", "get_birch_coefficients"], [33, 3, 1, "", "get_born_elastic_constants"], [33, 3, 1, "", "get_charges"], [33, 3, 1, "", "get_default_parameters"], [33, 3, 1, "", "get_dipole_moment"], [33, 3, 1, "", "get_dynamical_matrix"], [33, 3, 1, "", "get_elastic_constants"], [33, 3, 1, "", "get_forces"], [33, 3, 1, "", "get_hessian"], [33, 3, 1, "", "get_magnetic_moment"], [33, 3, 1, "", "get_magnetic_moments"], [33, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [33, 3, 1, "", "get_nonaffine_forces"], [33, 3, 1, "", "get_numerical_non_affine_forces"], [33, 3, 1, "", "get_potential_energies"], [33, 3, 1, "", "get_potential_energy"], [33, 3, 1, "", "get_property"], [33, 3, 1, "", "get_stress"], [33, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [33, 3, 1, "", "get_stresses"], [33, 4, 1, "", "ignored_changes"], [33, 4, 1, "", "implemented_properties"], [33, 3, 1, "", "kspace_energy"], [33, 3, 1, "", "kspace_properties"], [33, 5, 1, "", "label"], [33, 4, 1, "", "name"], [33, 3, 1, "", "read"], [33, 3, 1, "", "read_atoms"], [33, 3, 1, "", "reset"], [33, 3, 1, "", "reset_kspace"], [33, 3, 1, "", "rms_kspace"], [33, 3, 1, "", "rms_rspace"], [33, 3, 1, "", "self_energy"], [33, 3, 1, "", "set"], [33, 3, 1, "", "set_label"], [33, 5, 1, "", "short_range"], [33, 3, 1, "", "stress_kspace"], [33, 3, 1, "", "todict"]], "matscipy.calculators.ewald.calculator.EwaldShortRange": [[33, 3, 1, "", "__init__"], [33, 5, 1, "", "cutoff"], [33, 3, 1, "", "derivative"], [33, 3, 1, "", "first_derivative"], [33, 3, 1, "", "get_cutoff"], [33, 3, 1, "", "second_derivative"]], "matscipy.calculators.fitting": [[34, 2, 1, "", "CombinedFit"], [34, 2, 1, "", "Fit"], [34, 2, 1, "", "FitB2"], [34, 2, 1, "", "FitBCC"], [34, 2, 1, "", "FitCubicCrystal"], [34, 2, 1, "", "FitDiamond"], [34, 2, 1, "", "FitDiamond100"], [34, 2, 1, "", "FitDiamond110"], [34, 2, 1, "", "FitDiamond111"], [34, 2, 1, "", "FitDimer"], [34, 2, 1, "", "FitFCC"], [34, 2, 1, "", "FitGraphene"], [34, 2, 1, "", "FitGraphite"], [34, 2, 1, "", "FitHexagonalCrystal"], [34, 2, 1, "", "FitL1_0"], [34, 2, 1, "", "FitL1_2"], [34, 2, 1, "", "FitSC"], [34, 2, 1, "", "FitSinglePoint"], [34, 2, 1, "", "FitSurface"], [34, 2, 1, "", "FitTetragonalCrystal"], [34, 2, 1, "", "Parameters"], [34, 2, 1, "", "Penalty"], [34, 2, 1, "", "RotatingFit"]], "matscipy.calculators.fitting.CombinedFit": [[34, 3, 1, "", "__init__"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "targets"]], "matscipy.calculators.fitting.Fit": [[34, 3, 1, "", "__init__"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.FitB2": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C11"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_Cp"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitBCC": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C11"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_Cp"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitCubicCrystal": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C11"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_Cp"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C11"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_Cp"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond100": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 3, 1, "", "get_surface_energy"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_surface"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "surfstr"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond110": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 3, 1, "", "get_surface_energy"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_surface"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "surfstr"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond111": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 3, 1, "", "get_surface_energy"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_surface"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "surfstr"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDimer": [[34, 4, 1, "", "D0"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_distance"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_dimer"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "r0"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_D0"], [34, 4, 1, "", "w_r0"]], "matscipy.calculators.fitting.FitFCC": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C11"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_Cp"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphene": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "c0"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphite": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "c0"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitHexagonalCrystal": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "c0"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitL1_0": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "c0"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C33"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_C66"], [34, 3, 1, "", "get_D1"], [34, 3, 1, "", "get_D2"], [34, 3, 1, "", "get_D4"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"], [34, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.FitL1_2": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C11"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_Cp"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSC": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "crystalstr"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C11"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_Cp"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSinglePoint": [[34, 3, 1, "", "__init__"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "energy"], [34, 4, 1, "", "forces"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "stress"], [34, 4, 1, "", "w_energy"], [34, 4, 1, "", "w_forces"], [34, 4, 1, "", "w_stress"]], "matscipy.calculators.fitting.FitSurface": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 3, 1, "", "get_surface_energy"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitTetragonalCrystal": [[34, 4, 1, "", "Ec"], [34, 3, 1, "", "__init__"], [34, 4, 1, "", "a0"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "c0"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "crystal"], [34, 4, 1, "", "fmax"], [34, 3, 1, "", "get_C33"], [34, 3, 1, "", "get_C44"], [34, 3, 1, "", "get_C66"], [34, 3, 1, "", "get_D1"], [34, 3, 1, "", "get_D2"], [34, 3, 1, "", "get_D4"], [34, 3, 1, "", "get_SFE"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_lattice_constant"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "new_bulk"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"], [34, 4, 1, "", "w_Ec"], [34, 4, 1, "", "w_a0"], [34, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.Parameters": [[34, 3, 1, "", "__init__"], [34, 4, 1, "", "constant"], [34, 4, 1, "", "default"], [34, 4, 1, "", "derived"], [34, 3, 1, "", "get"], [34, 3, 1, "", "get_array"], [34, 3, 1, "", "get_constant"], [34, 3, 1, "", "get_derived"], [34, 3, 1, "", "get_dict"], [34, 3, 1, "", "get_lower_bounds"], [34, 3, 1, "", "get_upper_bounds"], [34, 3, 1, "", "get_variable"], [34, 4, 1, "", "hidden"], [34, 3, 1, "", "in_range"], [34, 4, 1, "", "parameters"], [34, 4, 1, "", "range_mapping"], [34, 4, 1, "", "ranges"], [34, 3, 1, "", "set"], [34, 3, 1, "", "set_array"], [34, 3, 1, "", "set_constant"], [34, 3, 1, "", "set_derived"], [34, 3, 1, "", "set_dict"], [34, 3, 1, "", "set_range_derived"], [34, 3, 1, "", "set_variable"], [34, 4, 1, "", "variable"]], "matscipy.calculators.fitting.Penalty": [[34, 3, 1, "", "__init__"], [34, 4, 1, "", "atoms"], [34, 4, 1, "", "calc"], [34, 4, 1, "", "cost_history"], [34, 4, 1, "", "func"], [34, 3, 1, "", "get_cohesive_energy"], [34, 3, 1, "", "get_cost_function"], [34, 3, 1, "", "get_cost_history"], [34, 3, 1, "", "get_parameters_at_minimal_cost"], [34, 3, 1, "", "get_potential_energy"], [34, 3, 1, "", "get_residuals"], [34, 3, 1, "", "get_residuals_history"], [34, 3, 1, "", "get_square_residuals"], [34, 4, 1, "", "minimal_cost"], [34, 3, 1, "", "optimize"], [34, 3, 1, "", "optimize_anneal"], [34, 3, 1, "", "optimize_brute"], [34, 3, 1, "", "optimize_leastsq"], [34, 3, 1, "", "optimize_openopt"], [34, 4, 1, "", "par"], [34, 4, 1, "", "par_at_minimal_cost"], [34, 4, 1, "", "residuals_history"], [34, 3, 1, "", "set_calculator"], [34, 3, 1, "", "set_calculator_class"], [34, 3, 1, "", "set_parameters"], [34, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.RotatingFit": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "optimize"], [34, 4, 1, "", "par"], [34, 4, 1, "", "targets"]], "matscipy.calculators.manybody": [[36, 0, 0, "-", "calculator"], [37, 0, 0, "-", "explicit_forms"], [42, 0, 0, "-", "newmb"], [43, 0, 0, "-", "potentials"]], "matscipy.calculators.manybody.calculator": [[36, 2, 1, "", "Manybody"], [36, 2, 1, "", "NiceManybody"]], "matscipy.calculators.manybody.calculator.Manybody": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "band_structure"], [36, 3, 1, "", "calculate"], [36, 3, 1, "", "calculate_numerical_forces"], [36, 3, 1, "", "calculate_numerical_stress"], [36, 3, 1, "", "calculate_properties"], [36, 3, 1, "", "calculation_required"], [36, 3, 1, "", "check_state"], [36, 4, 1, "", "default_parameters"], [36, 5, 1, "", "directory"], [36, 4, 1, "", "discard_results_on_any_change"], [36, 3, 1, "", "export_properties"], [36, 3, 1, "", "get_atoms"], [36, 3, 1, "", "get_birch_coefficients"], [36, 3, 1, "", "get_born_elastic_constants"], [36, 3, 1, "", "get_charges"], [36, 3, 1, "", "get_cutoff"], [36, 3, 1, "", "get_default_parameters"], [36, 3, 1, "", "get_dipole_moment"], [36, 3, 1, "", "get_dynamical_matrix"], [36, 3, 1, "", "get_elastic_constants"], [36, 3, 1, "", "get_forces"], [36, 3, 1, "", "get_hessian"], [36, 3, 1, "", "get_hessian_from_second_derivative"], [36, 3, 1, "", "get_magnetic_moment"], [36, 3, 1, "", "get_magnetic_moments"], [36, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [36, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [36, 3, 1, "", "get_nonaffine_forces"], [36, 3, 1, "", "get_numerical_non_affine_forces"], [36, 3, 1, "", "get_potential_energies"], [36, 3, 1, "", "get_potential_energy"], [36, 3, 1, "", "get_property"], [36, 3, 1, "", "get_second_derivative"], [36, 3, 1, "", "get_stress"], [36, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [36, 3, 1, "", "get_stresses"], [36, 4, 1, "", "ignored_changes"], [36, 4, 1, "", "implemented_properties"], [36, 5, 1, "", "label"], [36, 4, 1, "", "name"], [36, 3, 1, "", "read"], [36, 3, 1, "", "read_atoms"], [36, 3, 1, "", "reset"], [36, 3, 1, "", "set"], [36, 3, 1, "", "set_label"], [36, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody": [[36, 2, 1, "", "F"], [36, 2, 1, "", "G"], [36, 3, 1, "", "__init__"], [36, 3, 1, "", "band_structure"], [36, 3, 1, "", "calculate"], [36, 3, 1, "", "calculate_numerical_forces"], [36, 3, 1, "", "calculate_numerical_stress"], [36, 3, 1, "", "calculate_properties"], [36, 3, 1, "", "calculation_required"], [36, 3, 1, "", "check_state"], [36, 4, 1, "", "default_parameters"], [36, 5, 1, "", "directory"], [36, 4, 1, "", "discard_results_on_any_change"], [36, 3, 1, "", "export_properties"], [36, 3, 1, "", "get_atoms"], [36, 3, 1, "", "get_birch_coefficients"], [36, 3, 1, "", "get_born_elastic_constants"], [36, 3, 1, "", "get_charges"], [36, 3, 1, "", "get_cutoff"], [36, 3, 1, "", "get_default_parameters"], [36, 3, 1, "", "get_dipole_moment"], [36, 3, 1, "", "get_dynamical_matrix"], [36, 3, 1, "", "get_elastic_constants"], [36, 3, 1, "", "get_forces"], [36, 3, 1, "", "get_hessian"], [36, 3, 1, "", "get_hessian_from_second_derivative"], [36, 3, 1, "", "get_magnetic_moment"], [36, 3, 1, "", "get_magnetic_moments"], [36, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [36, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [36, 3, 1, "", "get_nonaffine_forces"], [36, 3, 1, "", "get_numerical_non_affine_forces"], [36, 3, 1, "", "get_potential_energies"], [36, 3, 1, "", "get_potential_energy"], [36, 3, 1, "", "get_property"], [36, 3, 1, "", "get_second_derivative"], [36, 3, 1, "", "get_stress"], [36, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [36, 3, 1, "", "get_stresses"], [36, 4, 1, "", "ignored_changes"], [36, 4, 1, "", "implemented_properties"], [36, 5, 1, "", "label"], [36, 4, 1, "", "name"], [36, 3, 1, "", "read"], [36, 3, 1, "", "read_atoms"], [36, 3, 1, "", "reset"], [36, 3, 1, "", "set"], [36, 3, 1, "", "set_label"], [36, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody.F": [[36, 3, 1, "", "gradient"], [36, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.calculator.NiceManybody.G": [[36, 3, 1, "", "gradient"], [36, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms": [[38, 0, 0, "-", "harmonic"], [39, 0, 0, "-", "kumagai"], [40, 0, 0, "-", "stillinger_weber"], [41, 0, 0, "-", "tersoff_brenner"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[38, 2, 1, "", "HarmonicAngle"], [38, 2, 1, "", "HarmonicBond"], [38, 2, 1, "", "ZeroPair"], [38, 2, 1, "", "ZeroTriplet"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "gradient"], [38, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "gradient"], [38, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair": [[38, 3, 1, "", "gradient"], [38, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet": [[38, 3, 1, "", "gradient"], [38, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[39, 1, 1, "", "Kumagai"], [39, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[40, 1, 1, "", "StillingerWeber"], [40, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[41, 1, 1, "", "TersoffBrenner"], [41, 1, 1, "", "mix"], [41, 1, 1, "", "mix_arithmetic"], [41, 1, 1, "", "mix_geometric"], [41, 1, 1, "", "pair_index"], [41, 1, 1, "", "triplet_index"]], "matscipy.calculators.manybody.newmb": [[42, 2, 1, "", "Manybody"]], "matscipy.calculators.manybody.newmb.Manybody": [[42, 2, 1, "", "Phi"], [42, 2, 1, "", "Theta"], [42, 3, 1, "", "__init__"], [42, 3, 1, "", "band_structure"], [42, 3, 1, "", "calculate"], [42, 3, 1, "", "calculate_numerical_forces"], [42, 3, 1, "", "calculate_numerical_stress"], [42, 3, 1, "", "calculate_properties"], [42, 3, 1, "", "calculation_required"], [42, 3, 1, "", "check_state"], [42, 4, 1, "", "default_parameters"], [42, 5, 1, "", "directory"], [42, 4, 1, "", "discard_results_on_any_change"], [42, 3, 1, "", "export_properties"], [42, 3, 1, "", "get_atoms"], [42, 3, 1, "", "get_birch_coefficients"], [42, 3, 1, "", "get_born_elastic_constants"], [42, 3, 1, "", "get_charges"], [42, 3, 1, "", "get_default_parameters"], [42, 3, 1, "", "get_dipole_moment"], [42, 3, 1, "", "get_dynamical_matrix"], [42, 3, 1, "", "get_elastic_constants"], [42, 3, 1, "", "get_forces"], [42, 3, 1, "", "get_hessian"], [42, 3, 1, "", "get_magnetic_moment"], [42, 3, 1, "", "get_magnetic_moments"], [42, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [42, 3, 1, "", "get_nonaffine_forces"], [42, 3, 1, "", "get_numerical_non_affine_forces"], [42, 3, 1, "", "get_potential_energies"], [42, 3, 1, "", "get_potential_energy"], [42, 3, 1, "", "get_property"], [42, 3, 1, "", "get_stress"], [42, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [42, 3, 1, "", "get_stresses"], [42, 4, 1, "", "ignored_changes"], [42, 4, 1, "", "implemented_properties"], [42, 5, 1, "", "label"], [42, 3, 1, "", "read"], [42, 3, 1, "", "read_atoms"], [42, 3, 1, "", "reset"], [42, 3, 1, "", "set"], [42, 3, 1, "", "set_label"], [42, 3, 1, "", "sum_XX_sum_ijk_tau_XX_mn"], [42, 3, 1, "", "sum_XY_sum_ijk_tau_XY_mn"], [42, 3, 1, "", "sum_X_sum_ijk_tau_ijX_mn"], [42, 3, 1, "", "sum_X_sum_ijk_tau_ij_XOR_X_mn"], [42, 3, 1, "", "sum_ij_pi_ij_n"], [42, 3, 1, "", "sum_ij_sum_X_pi_X_n"], [42, 3, 1, "", "sum_ijk_tau_XY_mn"], [42, 3, 1, "", "todict"]], "matscipy.calculators.manybody.newmb.Manybody.Phi": [[42, 3, 1, "", "gradient"], [42, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.newmb.Manybody.Theta": [[42, 3, 1, "", "gradient"], [42, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials": [[43, 2, 1, "", "BornMayerCut"], [43, 2, 1, "", "HarmonicAngle"], [43, 2, 1, "", "HarmonicPair"], [43, 2, 1, "", "KumagaiAngle"], [43, 2, 1, "", "KumagaiPair"], [43, 2, 1, "", "LennardJones"], [43, 2, 1, "", "StillingerWeberAngle"], [43, 2, 1, "", "StillingerWeberPair"], [43, 2, 1, "", "SymPhi"], [43, 2, 1, "", "SymTheta"], [43, 2, 1, "", "TersoffBrennerAngle"], [43, 2, 1, "", "TersoffBrennerPair"], [43, 2, 1, "", "ZeroAngle"], [43, 2, 1, "", "ZeroPair"], [43, 1, 1, "", "angle_distance_defined"], [43, 1, 1, "", "distance_defined"]], "matscipy.calculators.manybody.potentials.BornMayerCut": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicAngle": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicPair": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiAngle": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiPair": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.LennardJones": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberAngle": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberPair": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.SymPhi": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.SymTheta": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerAngle": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerPair": [[43, 3, 1, "", "__init__"], [43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroAngle": [[43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroPair": [[43, 3, 1, "", "gradient"], [43, 3, 1, "", "hessian"]], "matscipy.calculators.mcfm": [[44, 2, 1, "", "MultiClusterForceMixingPotential"], [45, 0, 0, "-", "calculator"], [46, 0, 0, "-", "cluster_data"], [47, 0, 0, "-", "mcfm_parallel"], [50, 0, 0, "-", "neighbour_list_mcfm"], [53, 0, 0, "-", "qm_cluster"], [54, 0, 0, "-", "qm_cluster_tools"]], "matscipy.calculators.mcfm.MultiClusterForceMixingPotential": [[44, 3, 1, "", "__init__"], [44, 4, 1, "", "all_changes"], [44, 3, 1, "", "attach_hybrid_data"], [44, 3, 1, "", "band_structure"], [44, 3, 1, "", "calculate"], [44, 3, 1, "", "calculate_numerical_forces"], [44, 3, 1, "", "calculate_numerical_stress"], [44, 3, 1, "", "calculate_properties"], [44, 3, 1, "", "calculation_required"], [44, 3, 1, "", "check_state"], [44, 3, 1, "", "combine_qm_mm_forces"], [44, 3, 1, "", "compute_stress"], [44, 4, 1, "", "default_parameters"], [44, 5, 1, "", "directory"], [44, 4, 1, "", "discard_results_on_any_change"], [44, 3, 1, "", "evaluate_errors"], [44, 3, 1, "", "evaluate_qm_cluster_serial"], [44, 3, 1, "", "export_properties"], [44, 3, 1, "", "get_atoms"], [44, 3, 1, "", "get_charges"], [44, 3, 1, "", "get_default_parameters"], [44, 3, 1, "", "get_dipole_moment"], [44, 3, 1, "", "get_forces"], [44, 3, 1, "", "get_magnetic_moment"], [44, 3, 1, "", "get_magnetic_moments"], [44, 3, 1, "", "get_potential_energies"], [44, 3, 1, "", "get_potential_energy"], [44, 3, 1, "", "get_property"], [44, 3, 1, "", "get_stress"], [44, 3, 1, "", "get_stresses"], [44, 4, 1, "", "ignored_changes"], [44, 4, 1, "", "implemented_properties"], [44, 5, 1, "", "label"], [44, 3, 1, "", "print_message"], [44, 3, 1, "", "produce_classical_results"], [44, 3, 1, "", "produce_qm_clusters"], [44, 3, 1, "", "read"], [44, 3, 1, "", "read_atoms"], [44, 3, 1, "", "reset"], [44, 3, 1, "", "set"], [44, 3, 1, "", "set_label"], [44, 3, 1, "", "set_qm_atoms"], [44, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.calculator": [[45, 2, 1, "", "MultiClusterForceMixingPotential"]], "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential": [[45, 3, 1, "", "__init__"], [45, 4, 1, "", "all_changes"], [45, 3, 1, "", "attach_hybrid_data"], [45, 3, 1, "", "band_structure"], [45, 3, 1, "", "calculate"], [45, 3, 1, "", "calculate_numerical_forces"], [45, 3, 1, "", "calculate_numerical_stress"], [45, 3, 1, "", "calculate_properties"], [45, 3, 1, "", "calculation_required"], [45, 3, 1, "", "check_state"], [45, 3, 1, "", "combine_qm_mm_forces"], [45, 3, 1, "", "compute_stress"], [45, 4, 1, "", "default_parameters"], [45, 5, 1, "", "directory"], [45, 4, 1, "", "discard_results_on_any_change"], [45, 3, 1, "", "evaluate_errors"], [45, 3, 1, "", "evaluate_qm_cluster_serial"], [45, 3, 1, "", "export_properties"], [45, 3, 1, "", "get_atoms"], [45, 3, 1, "", "get_charges"], [45, 3, 1, "", "get_default_parameters"], [45, 3, 1, "", "get_dipole_moment"], [45, 3, 1, "", "get_forces"], [45, 3, 1, "", "get_magnetic_moment"], [45, 3, 1, "", "get_magnetic_moments"], [45, 3, 1, "", "get_potential_energies"], [45, 3, 1, "", "get_potential_energy"], [45, 3, 1, "", "get_property"], [45, 3, 1, "", "get_stress"], [45, 3, 1, "", "get_stresses"], [45, 4, 1, "", "ignored_changes"], [45, 4, 1, "", "implemented_properties"], [45, 5, 1, "", "label"], [45, 3, 1, "", "print_message"], [45, 3, 1, "", "produce_classical_results"], [45, 3, 1, "", "produce_qm_clusters"], [45, 3, 1, "", "read"], [45, 3, 1, "", "read_atoms"], [45, 3, 1, "", "reset"], [45, 3, 1, "", "set"], [45, 3, 1, "", "set_label"], [45, 3, 1, "", "set_qm_atoms"], [45, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.cluster_data": [[46, 2, 1, "", "ClusterData"]], "matscipy.calculators.mcfm.cluster_data.ClusterData": [[46, 3, 1, "", "__init__"], [46, 4, 1, "", "forces"], [46, 4, 1, "", "mark"], [46, 4, 1, "", "qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[48, 0, 0, "-", "mcfm_parallel_control"], [49, 0, 0, "-", "mcfm_parallel_worker"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[48, 1, 1, "", "get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[49, 1, 1, "", "worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[51, 0, 0, "-", "neighbour_list_base"], [52, 0, 0, "-", "neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[51, 2, 1, "", "NeighbourListBase"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase": [[51, 3, 1, "", "get_neighbours"], [51, 3, 1, "", "update"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[52, 2, 1, "", "NeighbourListMCFM"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM": [[52, 3, 1, "", "__init__"], [52, 3, 1, "", "do_update"], [52, 3, 1, "", "get_neighbours"], [52, 3, 1, "", "update"]], "matscipy.calculators.mcfm.qm_cluster": [[53, 2, 1, "", "QMCluster"]], "matscipy.calculators.mcfm.qm_cluster.QMCluster": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "attach_clustering_module"], [53, 3, 1, "", "attach_flagging_module"], [53, 3, 1, "", "attach_neighbour_list"], [53, 3, 1, "", "carve_cluster"], [53, 3, 1, "", "reset_energized_list"], [53, 3, 1, "", "update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[55, 0, 0, "-", "base_qm_cluster_tool"], [56, 0, 0, "-", "qm_clustering_tool"], [57, 0, 0, "-", "qm_flagging_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[55, 2, 1, "", "BaseQMClusterTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool": [[55, 3, 1, "", "__init__"], [55, 3, 1, "", "find_neighbours"], [55, 3, 1, "", "hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[56, 2, 1, "", "QMClusteringTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "carve_cluster"], [56, 3, 1, "", "complete_aromatic_rings"], [56, 3, 1, "", "create_buffer_region"], [56, 3, 1, "", "create_cluster_from_marks"], [56, 3, 1, "", "find_neighbours"], [56, 3, 1, "", "hydrogenate_cluster"], [56, 3, 1, "", "hydrogenate_dangling_bonds"], [56, 3, 1, "", "include_special_atom"], [56, 3, 1, "", "print_message"], [56, 3, 1, "", "replace_double_bond"], [56, 3, 1, "", "replace_single_bond"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[57, 2, 1, "", "QMFlaggingTool"], [57, 1, 1, "", "exponential_moving_average"], [57, 1, 1, "", "update_avg_property_per_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool": [[57, 3, 1, "", "__init__"], [57, 3, 1, "", "create_cluster_around_atom"], [57, 3, 1, "", "expand_cluster"], [57, 3, 1, "", "find_neighbours"], [57, 3, 1, "", "get_energized_list"], [57, 3, 1, "", "hydrogenate_cluster"], [57, 3, 1, "", "join_clusters"], [57, 3, 1, "", "update_qm_region"]], "matscipy.calculators.pair_potential": [[59, 0, 0, "-", "calculator"]], "matscipy.calculators.pair_potential.calculator": [[59, 2, 1, "", "BeestKramerSanten"], [59, 2, 1, "", "CutoffInteraction"], [59, 2, 1, "", "FeneLJCut"], [59, 2, 1, "", "LennardJones84"], [59, 2, 1, "", "LennardJonesCut"], [59, 2, 1, "", "LennardJonesLinear"], [59, 2, 1, "", "LennardJonesQuadratic"], [59, 2, 1, "", "PairPotential"]], "matscipy.calculators.pair_potential.calculator.BeestKramerSanten": [[59, 3, 1, "", "__init__"], [59, 5, 1, "", "cutoff"], [59, 3, 1, "", "derivative"], [59, 3, 1, "", "first_derivative"], [59, 3, 1, "", "get_cutoff"], [59, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.CutoffInteraction": [[59, 3, 1, "", "__init__"], [59, 5, 1, "", "cutoff"], [59, 3, 1, "", "derivative"], [59, 3, 1, "", "first_derivative"], [59, 3, 1, "", "get_cutoff"], [59, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.FeneLJCut": [[59, 3, 1, "", "__init__"], [59, 5, 1, "", "cutoff"], [59, 3, 1, "", "derivative"], [59, 3, 1, "", "first_derivative"], [59, 3, 1, "", "get_cutoff"], [59, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJones84": [[59, 3, 1, "", "__init__"], [59, 5, 1, "", "cutoff"], [59, 3, 1, "", "derivative"], [59, 3, 1, "", "first_derivative"], [59, 3, 1, "", "get_cutoff"], [59, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesCut": [[59, 3, 1, "", "__init__"], [59, 5, 1, "", "cutoff"], [59, 3, 1, "", "derivative"], [59, 3, 1, "", "first_derivative"], [59, 3, 1, "", "get_cutoff"], [59, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesLinear": [[59, 3, 1, "", "__init__"], [59, 5, 1, "", "cutoff"], [59, 3, 1, "", "derivative"], [59, 3, 1, "", "first_derivative"], [59, 3, 1, "", "get_cutoff"], [59, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic": [[59, 3, 1, "", "__init__"], [59, 5, 1, "", "cutoff"], [59, 3, 1, "", "derivative"], [59, 3, 1, "", "first_derivative"], [59, 3, 1, "", "get_cutoff"], [59, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.PairPotential": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "band_structure"], [59, 3, 1, "", "calculate"], [59, 3, 1, "", "calculate_numerical_forces"], [59, 3, 1, "", "calculate_numerical_stress"], [59, 3, 1, "", "calculate_properties"], [59, 3, 1, "", "calculation_required"], [59, 3, 1, "", "check_state"], [59, 4, 1, "", "default_parameters"], [59, 5, 1, "", "directory"], [59, 4, 1, "", "discard_results_on_any_change"], [59, 3, 1, "", "export_properties"], [59, 3, 1, "", "get_atoms"], [59, 3, 1, "", "get_birch_coefficients"], [59, 3, 1, "", "get_born_elastic_constants"], [59, 3, 1, "", "get_charges"], [59, 3, 1, "", "get_default_parameters"], [59, 3, 1, "", "get_dipole_moment"], [59, 3, 1, "", "get_dynamical_matrix"], [59, 3, 1, "", "get_elastic_constants"], [59, 3, 1, "", "get_forces"], [59, 3, 1, "", "get_hessian"], [59, 3, 1, "", "get_magnetic_moment"], [59, 3, 1, "", "get_magnetic_moments"], [59, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [59, 3, 1, "", "get_nonaffine_forces"], [59, 3, 1, "", "get_numerical_non_affine_forces"], [59, 3, 1, "", "get_potential_energies"], [59, 3, 1, "", "get_potential_energy"], [59, 3, 1, "", "get_property"], [59, 3, 1, "", "get_stress"], [59, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [59, 3, 1, "", "get_stresses"], [59, 4, 1, "", "ignored_changes"], [59, 4, 1, "", "implemented_properties"], [59, 5, 1, "", "label"], [59, 4, 1, "", "name"], [59, 3, 1, "", "read"], [59, 3, 1, "", "read_atoms"], [59, 3, 1, "", "reset"], [59, 3, 1, "", "set"], [59, 3, 1, "", "set_label"], [59, 3, 1, "", "todict"]], "matscipy.calculators.polydisperse": [[61, 0, 0, "-", "calculator"]], "matscipy.calculators.polydisperse.calculator": [[61, 2, 1, "", "InversePowerLawPotential"], [61, 2, 1, "", "Polydisperse"]], "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "derivative"], [61, 3, 1, "", "first_derivative"], [61, 3, 1, "", "get_coeffs"], [61, 3, 1, "", "get_cutoff"], [61, 3, 1, "", "get_maxSize"], [61, 3, 1, "", "get_minSize"], [61, 3, 1, "", "mix_sizes"], [61, 3, 1, "", "second_derivative"]], "matscipy.calculators.polydisperse.calculator.Polydisperse": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "band_structure"], [61, 3, 1, "", "calculate"], [61, 3, 1, "", "calculate_numerical_forces"], [61, 3, 1, "", "calculate_numerical_stress"], [61, 3, 1, "", "calculate_properties"], [61, 3, 1, "", "calculation_required"], [61, 3, 1, "", "check_state"], [61, 4, 1, "", "default_parameters"], [61, 5, 1, "", "directory"], [61, 4, 1, "", "discard_results_on_any_change"], [61, 3, 1, "", "export_properties"], [61, 3, 1, "", "get_atoms"], [61, 3, 1, "", "get_birch_coefficients"], [61, 3, 1, "", "get_born_elastic_constants"], [61, 3, 1, "", "get_charges"], [61, 3, 1, "", "get_default_parameters"], [61, 3, 1, "", "get_dipole_moment"], [61, 3, 1, "", "get_dynamical_matrix"], [61, 3, 1, "", "get_elastic_constants"], [61, 3, 1, "", "get_forces"], [61, 3, 1, "", "get_hessian"], [61, 3, 1, "", "get_magnetic_moment"], [61, 3, 1, "", "get_magnetic_moments"], [61, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [61, 3, 1, "", "get_nonaffine_forces"], [61, 3, 1, "", "get_numerical_non_affine_forces"], [61, 3, 1, "", "get_potential_energies"], [61, 3, 1, "", "get_potential_energy"], [61, 3, 1, "", "get_property"], [61, 3, 1, "", "get_stress"], [61, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [61, 3, 1, "", "get_stresses"], [61, 4, 1, "", "ignored_changes"], [61, 4, 1, "", "implemented_properties"], [61, 5, 1, "", "label"], [61, 4, 1, "", "name"], [61, 3, 1, "", "read"], [61, 3, 1, "", "read_atoms"], [61, 3, 1, "", "reset"], [61, 3, 1, "", "set"], [61, 3, 1, "", "set_label"], [61, 3, 1, "", "todict"]], "matscipy.calculators.supercell_calculator": [[62, 2, 1, "", "SupercellCalculator"]], "matscipy.calculators.supercell_calculator.SupercellCalculator": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "band_structure"], [62, 3, 1, "", "calculate"], [62, 3, 1, "", "calculate_numerical_forces"], [62, 3, 1, "", "calculate_numerical_stress"], [62, 3, 1, "", "calculate_properties"], [62, 3, 1, "", "calculation_required"], [62, 3, 1, "", "check_state"], [62, 4, 1, "", "default_parameters"], [62, 5, 1, "", "directory"], [62, 4, 1, "", "discard_results_on_any_change"], [62, 3, 1, "", "export_properties"], [62, 3, 1, "", "get_atoms"], [62, 3, 1, "", "get_charges"], [62, 3, 1, "", "get_default_parameters"], [62, 3, 1, "", "get_dipole_moment"], [62, 3, 1, "", "get_forces"], [62, 3, 1, "", "get_magnetic_moment"], [62, 3, 1, "", "get_magnetic_moments"], [62, 3, 1, "", "get_potential_energies"], [62, 3, 1, "", "get_potential_energy"], [62, 3, 1, "", "get_property"], [62, 3, 1, "", "get_stress"], [62, 3, 1, "", "get_stresses"], [62, 4, 1, "", "ignored_changes"], [62, 4, 1, "", "implemented_properties"], [62, 5, 1, "", "label"], [62, 4, 1, "", "name"], [62, 3, 1, "", "read"], [62, 3, 1, "", "read_atoms"], [62, 3, 1, "", "reset"], [62, 3, 1, "", "set"], [62, 3, 1, "", "set_label"], [62, 3, 1, "", "todict"]], "matscipy.deformation": [[63, 2, 1, "", "RemoveSimpleShearDeformation"], [63, 1, 1, "", "get_shear_distance"]], "matscipy.deformation.RemoveSimpleShearDeformation": [[63, 3, 1, "", "__init__"]], "matscipy.dislocation": [[64, 2, 1, "", "AnisotropicDislocation"], [64, 2, 1, "", "BCCEdge100110Dislocation"], [64, 2, 1, "", "BCCEdge100Dislocation"], [64, 2, 1, "", "BCCEdge111Dislocation"], [64, 2, 1, "", "BCCEdge111barDislocation"], [64, 2, 1, "", "BCCMixed111Dislocation"], [64, 2, 1, "", "BCCScrew111Dislocation"], [64, 2, 1, "", "BodyCenteredCubicOctahedralFactory"], [64, 2, 1, "", "BodyCenteredCubicTetrahedralFactory"], [64, 2, 1, "", "CubicCrystalDislocation"], [64, 2, 1, "", "CubicCrystalDissociatedDislocation"], [64, 2, 1, "", "DiamondGlide30degreePartial"], [64, 2, 1, "", "DiamondGlide60Degree"], [64, 2, 1, "", "DiamondGlide90degreePartial"], [64, 2, 1, "", "DiamondGlideScrew"], [64, 2, 1, "", "FCCEdge110Dislocation"], [64, 2, 1, "", "FCCEdgeShockleyPartial"], [64, 2, 1, "", "FCCScrew110Dislocation"], [64, 2, 1, "", "FCCScrewShockleyPartial"], [64, 2, 1, "", "FixedLineAtoms"], [64, 1, 1, "", "check_duplicates"], [64, 1, 1, "", "compare_configurations"], [64, 1, 1, "", "cost_function"], [64, 1, 1, "", "dipole_displacement_angle"], [64, 1, 1, "", "fit_core_position"], [64, 1, 1, "", "fit_core_position_images"], [64, 1, 1, "", "gamma_line"], [64, 1, 1, "", "get_centering_mask"], [64, 1, 1, "", "get_elastic_constants"], [64, 1, 1, "", "get_u_img"], [64, 1, 1, "", "make_barrier_configurations"], [64, 1, 1, "", "make_edge_cyl"], [64, 1, 1, "", "make_edge_cyl_001_100"], [64, 1, 1, "", "make_screw_cyl"], [64, 1, 1, "", "make_screw_cyl_kink"], [64, 1, 1, "", "make_screw_quadrupole"], [64, 1, 1, "", "make_screw_quadrupole_kink"], [64, 1, 1, "", "ovito_dxa_straight_dislo_info"], [64, 1, 1, "", "plot_bulk"], [64, 1, 1, "", "plot_vitek"], [64, 1, 1, "", "read_dislo_QMMM"], [64, 1, 1, "", "screw_cyl_octahedral"], [64, 1, 1, "", "screw_cyl_tetrahedral"], [64, 1, 1, "", "show_NEB_configurations"], [64, 1, 1, "", "show_configuration"], [64, 1, 1, "", "slice_long_dislo"]], "matscipy.dislocation.AnisotropicDislocation": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "deformation_gradient"], [64, 3, 1, "", "displacement"]], "matscipy.dislocation.BCCEdge100110Dislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id68", "alat"], [64, 4, 1, "id70", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id74", "burgers"], [64, 4, 1, "id71", "burgers_dimensionless"], [64, 4, 1, "id73", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id75", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id72", "n_planes"], [64, 4, 1, "id76", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id77", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id69", "unit_cell"], [64, 5, 1, "id78", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCEdge100Dislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id57", "alat"], [64, 4, 1, "id59", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id63", "burgers"], [64, 4, 1, "id60", "burgers_dimensionless"], [64, 4, 1, "id62", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id64", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id61", "n_planes"], [64, 4, 1, "id65", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id66", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id58", "unit_cell"], [64, 5, 1, "id67", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCEdge111Dislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id24", "alat"], [64, 4, 1, "id26", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id30", "burgers"], [64, 4, 1, "id27", "burgers_dimensionless"], [64, 4, 1, "id29", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id31", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id28", "n_planes"], [64, 4, 1, "id32", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id33", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id25", "unit_cell"], [64, 5, 1, "id34", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCEdge111barDislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id35", "alat"], [64, 4, 1, "id37", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id41", "burgers"], [64, 4, 1, "id38", "burgers_dimensionless"], [64, 4, 1, "id40", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id42", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id39", "n_planes"], [64, 4, 1, "id43", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id44", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id36", "unit_cell"], [64, 5, 1, "id45", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCMixed111Dislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id46", "alat"], [64, 4, 1, "id48", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id51", "burgers"], [64, 4, 1, "id49", "burgers_dimensionless"], [64, 4, 1, "id50", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id52", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id53", "n_planes"], [64, 4, 1, "id54", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id55", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id47", "unit_cell"], [64, 5, 1, "id56", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCScrew111Dislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id13", "alat"], [64, 4, 1, "id15", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id18", "burgers"], [64, 4, 1, "id16", "burgers_dimensionless"], [64, 4, 1, "id17", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id19", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id20", "n_planes"], [64, 4, 1, "id21", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id22", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id14", "unit_cell"], [64, 5, 1, "id23", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BodyCenteredCubicOctahedralFactory": [[64, 3, 1, "", "align"], [64, 4, 1, "", "atoms_in_unit_cell"], [64, 4, 1, "", "basis_factor"], [64, 4, 1, "", "bravais_basis"], [64, 3, 1, "", "calc_num_atoms"], [64, 3, 1, "", "check_basis_volume"], [64, 4, 1, "", "chop_tolerance"], [64, 3, 1, "", "convert_to_natural_basis"], [64, 4, 1, "", "element_basis"], [64, 3, 1, "", "find_directions"], [64, 3, 1, "", "find_ortho"], [64, 3, 1, "", "get_lattice_constant"], [64, 3, 1, "", "inside"], [64, 4, 1, "", "int_basis"], [64, 4, 1, "", "inverse_basis"], [64, 4, 1, "", "inverse_basis_factor"], [64, 3, 1, "", "make_crystal_basis"], [64, 3, 1, "", "make_list_of_atoms"], [64, 3, 1, "", "make_unit_cell"], [64, 4, 1, "", "other"], [64, 3, 1, "", "print_directions_and_miller"], [64, 3, 1, "", "process_element"], [64, 3, 1, "", "put_atom"], [64, 4, 1, "", "xtal_name"]], "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory": [[64, 3, 1, "", "align"], [64, 4, 1, "", "atoms_in_unit_cell"], [64, 4, 1, "", "basis_factor"], [64, 4, 1, "", "bravais_basis"], [64, 3, 1, "", "calc_num_atoms"], [64, 3, 1, "", "check_basis_volume"], [64, 4, 1, "", "chop_tolerance"], [64, 3, 1, "", "convert_to_natural_basis"], [64, 4, 1, "", "element_basis"], [64, 3, 1, "", "find_directions"], [64, 3, 1, "", "find_ortho"], [64, 3, 1, "", "get_lattice_constant"], [64, 3, 1, "", "inside"], [64, 4, 1, "", "int_basis"], [64, 4, 1, "", "inverse_basis"], [64, 4, 1, "", "inverse_basis_factor"], [64, 3, 1, "", "make_crystal_basis"], [64, 3, 1, "", "make_list_of_atoms"], [64, 3, 1, "", "make_unit_cell"], [64, 4, 1, "", "other"], [64, 3, 1, "", "print_directions_and_miller"], [64, 3, 1, "", "process_element"], [64, 3, 1, "", "put_atom"], [64, 4, 1, "", "xtal_name"]], "matscipy.dislocation.CubicCrystalDislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id7", "alat"], [64, 4, 1, "id4", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id9", "burgers"], [64, 4, 1, "id5", "burgers_dimensionless"], [64, 4, 1, "id12", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id11", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id0", "n_planes"], [64, 4, 1, "id6", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id3", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id8", "unit_cell"], [64, 5, 1, "id10", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.CubicCrystalDissociatedDislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "", "alat"], [64, 4, 1, "", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "", "burgers"], [64, 4, 1, "", "burgers_dimensionless"], [64, 4, 1, "", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "", "left_dislocation"], [64, 4, 1, "", "n_planes"], [64, 4, 1, "", "new_left_burgers"], [64, 4, 1, "", "new_right_burgers"], [64, 4, 1, "", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "", "right_dislocation"], [64, 4, 1, "", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "", "unit_cell"], [64, 5, 1, "", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlide30degreePartial": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id79", "alat"], [64, 4, 1, "id81", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id86", "burgers"], [64, 4, 1, "id82", "burgers_dimensionless"], [64, 4, 1, "id85", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id87", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id83", "n_planes"], [64, 4, 1, "id88", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id84", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id80", "unit_cell"], [64, 5, 1, "id89", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlide60Degree": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "", "alat"], [64, 4, 1, "", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "", "burgers"], [64, 4, 1, "", "burgers_dimensionless"], [64, 4, 1, "", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "", "left_dislocation"], [64, 4, 1, "", "n_planes"], [64, 4, 1, "", "new_left_burgers"], [64, 4, 1, "", "new_right_burgers"], [64, 4, 1, "", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "", "right_dislocation"], [64, 4, 1, "", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "", "unit_cell"], [64, 5, 1, "", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlide90degreePartial": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id90", "alat"], [64, 4, 1, "id92", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id97", "burgers"], [64, 4, 1, "id93", "burgers_dimensionless"], [64, 4, 1, "id96", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id98", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id94", "n_planes"], [64, 4, 1, "id99", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id95", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id91", "unit_cell"], [64, 5, 1, "id100", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlideScrew": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "", "alat"], [64, 4, 1, "", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "", "burgers"], [64, 4, 1, "", "burgers_dimensionless"], [64, 4, 1, "", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "", "left_dislocation"], [64, 4, 1, "", "n_planes"], [64, 4, 1, "", "new_left_burgers"], [64, 4, 1, "", "new_right_burgers"], [64, 4, 1, "", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "", "right_dislocation"], [64, 4, 1, "", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "", "unit_cell"], [64, 5, 1, "", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCEdge110Dislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "", "alat"], [64, 4, 1, "", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "", "burgers"], [64, 4, 1, "", "burgers_dimensionless"], [64, 4, 1, "", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "", "left_dislocation"], [64, 4, 1, "", "n_planes"], [64, 4, 1, "", "new_left_burgers"], [64, 4, 1, "", "new_right_burgers"], [64, 4, 1, "", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "", "right_dislocation"], [64, 4, 1, "", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "", "unit_cell"], [64, 5, 1, "", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCEdgeShockleyPartial": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id112", "alat"], [64, 4, 1, "id114", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id118", "burgers"], [64, 4, 1, "id115", "burgers_dimensionless"], [64, 4, 1, "id117", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id119", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id116", "n_planes"], [64, 4, 1, "id120", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id121", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id113", "unit_cell"], [64, 5, 1, "id122", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCScrew110Dislocation": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "", "alat"], [64, 4, 1, "", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "", "burgers"], [64, 4, 1, "", "burgers_dimensionless"], [64, 4, 1, "", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "", "left_dislocation"], [64, 4, 1, "", "n_planes"], [64, 4, 1, "", "new_left_burgers"], [64, 4, 1, "", "new_right_burgers"], [64, 4, 1, "", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "", "right_dislocation"], [64, 4, 1, "", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "", "unit_cell"], [64, 5, 1, "", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCScrewShockleyPartial": [[64, 4, 1, "", "ADstroh"], [64, 4, 1, "", "C11"], [64, 4, 1, "", "C12"], [64, 4, 1, "", "C44"], [64, 3, 1, "", "__init__"], [64, 4, 1, "id101", "alat"], [64, 4, 1, "id103", "axes"], [64, 3, 1, "", "build_cylinder"], [64, 3, 1, "", "build_glide_configurations"], [64, 3, 1, "", "build_impurity_cylinder"], [64, 5, 1, "id107", "burgers"], [64, 4, 1, "id104", "burgers_dimensionless"], [64, 4, 1, "id106", "crystalstructure"], [64, 3, 1, "", "displacements"], [64, 5, 1, "id108", "glide_distance"], [64, 4, 1, "", "glide_distance_dimensionless"], [64, 3, 1, "", "init_anisotropic_dislocation"], [64, 3, 1, "", "init_stroh"], [64, 4, 1, "id105", "n_planes"], [64, 4, 1, "id109", "parity"], [64, 4, 1, "", "pbc"], [64, 3, 1, "", "plot_unit_cell"], [64, 4, 1, "id110", "self_consistent"], [64, 3, 1, "", "self_consistent_displacements"], [64, 3, 1, "", "set_burgers"], [64, 4, 1, "", "stroh"], [64, 4, 1, "id102", "unit_cell"], [64, 5, 1, "id111", "unit_cell_core_position"], [64, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FixedLineAtoms": [[64, 3, 1, "", "__init__"], [64, 3, 1, "", "adjust_forces"], [64, 3, 1, "", "adjust_positions"]], "matscipy.drift": [[65, 2, 1, "", "RemoveDrift"]], "matscipy.drift.RemoveDrift": [[65, 3, 1, "", "__init__"]], "matscipy.elasticity": [[66, 2, 1, "", "CubicElasticModuli"], [66, 1, 1, "", "Voigt_6_to_full_3x3_strain"], [66, 1, 1, "", "Voigt_6_to_full_3x3_stress"], [66, 1, 1, "", "Voigt_6x6_to_cubic"], [66, 1, 1, "", "Voigt_6x6_to_full_3x3x3x3"], [66, 1, 1, "", "cubic_to_Voigt_6x6"], [66, 1, 1, "", "elastic_moduli"], [66, 1, 1, "", "fit_elastic_constants"], [66, 1, 1, "", "full_3x3_to_Voigt_6_index"], [66, 1, 1, "", "full_3x3_to_Voigt_6_strain"], [66, 1, 1, "", "full_3x3_to_Voigt_6_stress"], [66, 1, 1, "", "full_3x3x3x3_to_Voigt_6x6"], [66, 1, 1, "", "generate_strained_configs"], [66, 1, 1, "", "invariants"], [66, 1, 1, "", "measure_triclinic_elastic_constants"], [66, 1, 1, "", "nonaffine_elastic_contribution"], [66, 1, 1, "", "poisson_ratio"], [66, 1, 1, "", "rotate_cubic_elastic_constants"], [66, 1, 1, "", "rotate_elastic_constants"], [66, 1, 1, "", "youngs_modulus"]], "matscipy.elasticity.CubicElasticModuli": [[66, 3, 1, "", "__init__"], [66, 3, 1, "", "compliance"], [66, 3, 1, "", "rotate"], [66, 3, 1, "", "stiffness"], [66, 4, 1, "", "tol"]], "matscipy.electrochemistry": [[68, 1, 1, "", "continuous2discrete"], [69, 0, 0, "-", "poisson_boltzmann_distribution"], [70, 0, 0, "-", "poisson_nernst_planck_solver"], [71, 0, 0, "-", "poisson_nernst_planck_solver_fenics"], [72, 0, 0, "-", "steric_correction"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[69, 1, 1, "", "charge_density"], [69, 1, 1, "", "concentration"], [69, 1, 1, "", "debye"], [69, 1, 1, "", "gamma"], [69, 1, 1, "", "ionic_strength"], [69, 1, 1, "", "main"], [69, 1, 1, "", "potential"], [69, 1, 1, "", "test"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[70, 1, 1, "", "B"], [70, 2, 1, "", "PoissonNernstPlanckSystem"], [70, 1, 1, "", "jacobian"]], "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem": [[70, 3, 1, "", "G"], [70, 3, 1, "", "__init__"], [70, 5, 1, "", "charge_density"], [70, 5, 1, "", "concentration"], [70, 3, 1, "", "discretize"], [70, 5, 1, "", "grid"], [70, 3, 1, "", "init"], [70, 3, 1, "", "initial_values"], [70, 5, 1, "", "ionic_strength"], [70, 5, 1, "", "lambda_D"], [70, 3, 1, "", "left_controlled_volume_scheme_flux_bc"], [70, 3, 1, "", "left_dirichlet_bc"], [70, 3, 1, "", "left_finite_difference_scheme_flux_bc"], [70, 3, 1, "", "left_potential_dirichlet_bc"], [70, 3, 1, "", "left_potential_robin_bc"], [70, 3, 1, "", "left_robin_bc"], [70, 3, 1, "", "nernst_planck_pde"], [70, 3, 1, "", "newton"], [70, 3, 1, "", "number_conservation_constraint"], [70, 3, 1, "", "poisson_pde"], [70, 5, 1, "", "potential"], [70, 3, 1, "", "right_controlled_volume_scheme_flux_bc"], [70, 3, 1, "", "right_dirichlet_bc"], [70, 3, 1, "", "right_finite_difference_scheme_flux_bc"], [70, 3, 1, "", "right_potential_dirichlet_bc"], [70, 3, 1, "", "right_potential_robin_bc"], [70, 3, 1, "", "right_robin_bc"], [70, 3, 1, "", "solve"], [70, 3, 1, "", "solver_callback"], [70, 3, 1, "", "use_standard_cell_bc"], [70, 3, 1, "", "use_standard_dirichlet_bc"], [70, 3, 1, "", "use_standard_interface_bc"], [70, 3, 1, "", "use_stern_layer_cell_bc"], [70, 5, 1, "", "x1_scaled"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[71, 2, 1, "", "Boundary"], [71, 2, 1, "", "PoissonNernstPlanckSystemFEniCS"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "get_property"], [71, 3, 1, "", "inside"], [71, 3, 1, "", "map"], [71, 3, 1, "", "mark"], [71, 3, 1, "", "mark_cells"], [71, 3, 1, "", "mark_facets"], [71, 3, 1, "", "set_property"], [71, 3, 1, "", "snap"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS": [[71, 3, 1, "", "G"], [71, 5, 1, "", "X"], [71, 3, 1, "", "__init__"], [71, 3, 1, "", "apply_central_reference_concentration_constraint"], [71, 3, 1, "", "apply_left_concentration_dirichlet_bc"], [71, 3, 1, "", "apply_left_potential_dirichlet_bc"], [71, 3, 1, "", "apply_left_potential_robin_bc"], [71, 3, 1, "", "apply_number_conservation_constraint"], [71, 3, 1, "", "apply_potential_dirichlet_bc"], [71, 3, 1, "", "apply_potential_robin_bc"], [71, 3, 1, "", "apply_right_concentration_dirichlet_bc"], [71, 3, 1, "", "apply_right_potential_dirichlet_bc"], [71, 3, 1, "", "apply_right_potential_robin_bc"], [71, 3, 1, "", "boundary_C"], [71, 3, 1, "", "boundary_L"], [71, 3, 1, "", "boundary_R"], [71, 5, 1, "", "charge_density"], [71, 5, 1, "", "concentration"], [71, 3, 1, "", "discretize"], [71, 5, 1, "", "grid"], [71, 3, 1, "", "init"], [71, 3, 1, "", "initial_values"], [71, 5, 1, "", "ionic_strength"], [71, 5, 1, "", "lambda_D"], [71, 3, 1, "", "left_controlled_volume_scheme_flux_bc"], [71, 3, 1, "", "left_dirichlet_bc"], [71, 3, 1, "", "left_finite_difference_scheme_flux_bc"], [71, 3, 1, "", "left_potential_dirichlet_bc"], [71, 3, 1, "", "left_potential_robin_bc"], [71, 3, 1, "", "left_robin_bc"], [71, 3, 1, "", "nernst_planck_pde"], [71, 3, 1, "", "newton"], [71, 3, 1, "", "number_conservation_constraint"], [71, 3, 1, "", "poisson_pde"], [71, 5, 1, "", "potential"], [71, 3, 1, "", "right_controlled_volume_scheme_flux_bc"], [71, 3, 1, "", "right_dirichlet_bc"], [71, 3, 1, "", "right_finite_difference_scheme_flux_bc"], [71, 3, 1, "", "right_potential_dirichlet_bc"], [71, 3, 1, "", "right_potential_robin_bc"], [71, 3, 1, "", "right_robin_bc"], [71, 3, 1, "", "solve"], [71, 3, 1, "", "solver_callback"], [71, 3, 1, "", "use_central_reference_concentration_based_cell_bc"], [71, 3, 1, "", "use_standard_cell_bc"], [71, 3, 1, "", "use_standard_dirichlet_bc"], [71, 3, 1, "", "use_standard_interface_bc"], [71, 3, 1, "", "use_stern_layer_cell_bc"], [71, 5, 1, "", "x1_scaled"]], "matscipy.electrochemistry.steric_correction": [[72, 2, 1, "", "DeferredMessage"], [72, 1, 1, "", "apply_steric_correction"], [72, 1, 1, "", "box_constraint"], [72, 1, 1, "", "box_constraint_with_gradient"], [72, 1, 1, "", "brute_force_closest_pair"], [72, 1, 1, "", "brute_force_target_function"], [72, 1, 1, "", "neigh_list_based_target_function"], [72, 1, 1, "", "numpy_only_target_function"], [72, 1, 1, "", "planar_closest_pair"], [72, 1, 1, "", "recursive_closest_pair"], [72, 1, 1, "", "scipy_distance_based_closest_pair"], [72, 1, 1, "", "scipy_distance_based_target_function"]], "matscipy.electrochemistry.steric_correction.DeferredMessage": [[72, 3, 1, "", "__init__"]], "matscipy.fracture_mechanics": [[74, 0, 0, "-", "clusters"], [75, 0, 0, "-", "crack"], [76, 0, 0, "-", "crackpathsel"], [77, 0, 0, "-", "energy_release"], [78, 0, 0, "-", "idealbrittlesolid"]], "matscipy.fracture_mechanics.clusters": [[74, 1, 1, "", "bcc"], [74, 1, 1, "", "cluster"], [74, 1, 1, "", "diamond"], [74, 1, 1, "", "fcc"], [74, 1, 1, "", "generate_3D_cubic_111"], [74, 1, 1, "", "generate_3D_structure"], [74, 1, 1, "", "get_alpha_period"], [74, 1, 1, "", "sc"], [74, 1, 1, "", "set_groups"], [74, 1, 1, "", "set_regions"]], "matscipy.fracture_mechanics.crack": [[75, 2, 1, "", "ConstantStrainRate"], [75, 2, 1, "", "CubicCrystalCrack"], [75, 1, 1, "", "G_to_strain"], [75, 2, 1, "", "IsotropicStressField"], [75, 2, 1, "", "RectilinearAnisotropicCrack"], [75, 2, 1, "", "SinclairCrack"], [75, 1, 1, "", "counted"], [75, 1, 1, "", "deformation_gradient_residual"], [75, 1, 1, "", "deformation_gradient_residuals"], [75, 1, 1, "", "displacement_residual"], [75, 1, 1, "", "displacement_residuals"], [75, 1, 1, "", "find_tip_broken_bonds"], [75, 1, 1, "", "find_tip_coordination"], [75, 1, 1, "", "find_tip_stress_field"], [75, 1, 1, "", "fit_crack_stress_field"], [75, 1, 1, "", "get_energy_release_rate"], [75, 1, 1, "", "get_strain"], [75, 1, 1, "", "get_stress_intensity_factor"], [75, 1, 1, "", "isotropic_modeII_crack_tip_displacement_field"], [75, 1, 1, "", "isotropic_modeI_crack_tip_displacement_field"], [75, 1, 1, "", "isotropic_modeI_crack_tip_stress_field"], [75, 1, 1, "", "plot_stress_fields"], [75, 1, 1, "", "print_crack_system"], [75, 1, 1, "", "strain_to_G"], [75, 1, 1, "", "thin_strip_displacement_y"]], "matscipy.fracture_mechanics.crack.ConstantStrainRate": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "adjust_forces"], [75, 3, 1, "", "adjust_positions"], [75, 3, 1, "", "apply_strain"], [75, 3, 1, "", "copy"]], "matscipy.fracture_mechanics.crack.CubicCrystalCrack": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "crack_tip_position"], [75, 3, 1, "", "crack_tip_position_y"], [75, 3, 1, "", "deformation_gradient"], [75, 3, 1, "", "deformation_gradient_from_cartesian_coordinates"], [75, 3, 1, "", "deformation_gradient_from_cylinder_coordinates"], [75, 3, 1, "", "displacements"], [75, 3, 1, "", "displacements_from_cartesian_coordinates"], [75, 3, 1, "", "displacements_from_cylinder_coordinates"], [75, 3, 1, "", "k1g"], [75, 3, 1, "", "k1gsqG"], [75, 3, 1, "", "scale_displacements"], [75, 3, 1, "", "stresses"], [75, 3, 1, "", "stresses_from_cartesian_coordinates"], [75, 3, 1, "", "stresses_from_cylinder_coordinates"]], "matscipy.fracture_mechanics.crack.IsotropicStressField": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "get_stresses"]], "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "deformation_gradient"], [75, 3, 1, "", "displacements"], [75, 3, 1, "", "k1g"], [75, 3, 1, "", "k1gsqG"], [75, 3, 1, "", "rtheta"], [75, 3, 1, "", "set_plane_strain"], [75, 3, 1, "", "set_plane_stress"], [75, 3, 1, "", "stresses"]], "matscipy.fracture_mechanics.crack.SinclairCrack": [[75, 3, 1, "", "__init__"], [75, 3, 1, "", "animate"], [75, 3, 1, "", "arc_length_continuation"], [75, 3, 1, "", "convergence_line_plot"], [75, 3, 1, "", "dfk_dk_approx"], [75, 3, 1, "", "fit_cle"], [75, 3, 1, "", "get_crack_tip_force"], [75, 3, 1, "", "get_deformation_gradient"], [75, 3, 1, "", "get_dofs"], [75, 3, 1, "", "get_forces"], [75, 3, 1, "", "get_k_force"], [75, 3, 1, "", "get_potential_energy"], [75, 3, 1, "", "get_precon"], [75, 3, 1, "", "get_xdot"], [75, 5, 1, "", "k"], [75, 3, 1, "", "load_cb_model"], [75, 3, 1, "", "optimize"], [75, 3, 1, "", "pack"], [75, 3, 1, "", "plot"], [75, 3, 1, "", "rescale_k"], [75, 3, 1, "", "save_cb_model"], [75, 3, 1, "", "set_atoms"], [75, 3, 1, "", "set_dofs"], [75, 3, 1, "", "set_shiftmask"], [75, 3, 1, "", "strain_err"], [75, 3, 1, "", "u_cle"], [75, 3, 1, "", "unpack"], [75, 3, 1, "", "update_atoms"], [75, 3, 1, "", "update_precon"], [75, 3, 1, "", "write_atoms_to_file"]], "matscipy.fracture_mechanics.energy_release": [[77, 1, 1, "", "J_integral"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[78, 2, 1, "", "IdealBrittleSolid"], [78, 1, 1, "", "extend_strip"], [78, 1, 1, "", "find_crack_tip"], [78, 1, 1, "", "find_triangles_2d"], [78, 1, 1, "", "set_constraints"], [78, 1, 1, "", "set_initial_velocities"], [78, 1, 1, "", "triangular_lattice_slab"]], "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid": [[78, 3, 1, "", "__init__"], [78, 3, 1, "", "band_structure"], [78, 3, 1, "", "calculate"], [78, 3, 1, "", "calculate_numerical_forces"], [78, 3, 1, "", "calculate_numerical_stress"], [78, 3, 1, "", "calculate_properties"], [78, 3, 1, "", "calculation_required"], [78, 3, 1, "", "check_state"], [78, 4, 1, "", "default_parameters"], [78, 5, 1, "", "directory"], [78, 4, 1, "", "discard_results_on_any_change"], [78, 3, 1, "", "export_properties"], [78, 3, 1, "", "get_atoms"], [78, 3, 1, "", "get_charges"], [78, 3, 1, "", "get_default_parameters"], [78, 3, 1, "", "get_dipole_moment"], [78, 3, 1, "", "get_elastic_moduli"], [78, 3, 1, "", "get_forces"], [78, 3, 1, "", "get_magnetic_moment"], [78, 3, 1, "", "get_magnetic_moments"], [78, 3, 1, "", "get_poisson_ratio"], [78, 3, 1, "", "get_potential_energies"], [78, 3, 1, "", "get_potential_energy"], [78, 3, 1, "", "get_property"], [78, 3, 1, "", "get_stress"], [78, 3, 1, "", "get_stresses"], [78, 3, 1, "", "get_wave_speeds"], [78, 3, 1, "", "get_youngs_modulus"], [78, 4, 1, "", "ignored_changes"], [78, 4, 1, "", "implemented_properties"], [78, 5, 1, "", "label"], [78, 3, 1, "", "read"], [78, 3, 1, "", "read_atoms"], [78, 3, 1, "", "reset"], [78, 3, 1, "", "set"], [78, 3, 1, "", "set_label"], [78, 3, 1, "", "set_reference_crystal"], [78, 3, 1, "", "todict"]], "matscipy.hessian_finite_differences": [[79, 1, 1, "", "fd_hessian"]], "matscipy.hydrogenate": [[80, 1, 1, "", "hydrogenate"]], "matscipy.io": [[82, 0, 0, "-", "lammpsdata"], [83, 0, 0, "-", "metis"], [84, 0, 0, "-", "opls"], [85, 0, 0, "-", "tbl"]], "matscipy.io.lammpsdata": [[82, 2, 1, "", "LAMMPSData"], [82, 1, 1, "", "check_legal_name"], [82, 1, 1, "", "column_size"], [82, 1, 1, "", "read_molecules_from_lammps_data"]], "matscipy.io.lammpsdata.LAMMPSData": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "read"], [82, 3, 1, "", "write"]], "matscipy.io.metis": [[83, 1, 1, "", "save_metis"]], "matscipy.io.opls": [[84, 1, 1, "", "read_block"], [84, 1, 1, "", "read_cutoffs"], [84, 1, 1, "", "read_extended_xyz"], [84, 1, 1, "", "read_lammps_data"], [84, 1, 1, "", "read_lammps_definitions"], [84, 1, 1, "", "read_parameter_file"], [84, 1, 1, "", "update_from_lammps_dump"], [84, 1, 1, "", "write_lammps"], [84, 1, 1, "", "write_lammps_atoms"], [84, 1, 1, "", "write_lammps_definitions"], [84, 1, 1, "", "write_lammps_in"]], "matscipy.io.tbl": [[85, 1, 1, "", "loadtbl"], [85, 1, 1, "", "savetbl"]], "matscipy.logger": [[86, 2, 1, "", "Logger"], [86, 1, 1, "", "flatten"], [86, 1, 1, "", "hdr_str"], [86, 1, 1, "", "hdrfmt_str"], [86, 1, 1, "", "numfmt_str"]], "matscipy.logger.Logger": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "flush"], [86, 3, 1, "", "get_logfile"], [86, 3, 1, "", "has_logfile"], [86, 3, 1, "", "iteration_finished"], [86, 3, 1, "", "pr"], [86, 3, 1, "", "set_logfile"], [86, 3, 1, "", "set_outevery"], [86, 3, 1, "", "st"], [86, 3, 1, "", "warn"]], "matscipy.neighbours": [[87, 2, 1, "", "CutoffNeighbourhood"], [87, 2, 1, "", "MolecularNeighbourhood"], [87, 2, 1, "", "Neighbourhood"], [87, 1, 1, "", "find_common_neighbours"], [87, 1, 1, "", "find_indices_of_reversed_pairs"], [87, 1, 1, "", "mic"], [87, 1, 1, "", "neighbour_list"], [87, 1, 1, "", "triplet_list"]], "matscipy.neighbours.CutoffNeighbourhood": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "compute_distances"], [87, 3, 1, "", "connected_triplets"], [87, 3, 1, "", "double_neighbourhood"], [87, 3, 1, "", "find_triplet_types"], [87, 3, 1, "", "get_pairs"], [87, 3, 1, "", "get_triplets"], [87, 3, 1, "", "lexsort"], [87, 3, 1, "", "make_result"], [87, 3, 1, "", "mask"], [87, 3, 1, "", "reverse_pair_indices"], [87, 3, 1, "", "triplet_to_numbers"]], "matscipy.neighbours.MolecularNeighbourhood": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "complete_connectivity"], [87, 3, 1, "", "compute_distances"], [87, 3, 1, "", "connected_triplets"], [87, 3, 1, "", "double_connectivity"], [87, 3, 1, "", "double_neighbourhood"], [87, 3, 1, "", "find_triplet_types"], [87, 3, 1, "", "get_pairs"], [87, 3, 1, "", "get_triplets"], [87, 3, 1, "", "lexsort"], [87, 3, 1, "", "make_result"], [87, 3, 1, "", "mask"], [87, 5, 1, "", "molecules"], [87, 5, 1, "", "pair_type"], [87, 3, 1, "", "reverse_pair_indices"], [87, 3, 1, "", "triplet_to_numbers"], [87, 5, 1, "", "triplet_type"]], "matscipy.neighbours.Neighbourhood": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "compute_distances"], [87, 3, 1, "", "connected_triplets"], [87, 3, 1, "", "double_neighbourhood"], [87, 3, 1, "", "find_triplet_types"], [87, 3, 1, "", "get_pairs"], [87, 3, 1, "", "get_triplets"], [87, 3, 1, "", "lexsort"], [87, 3, 1, "", "make_result"], [87, 3, 1, "", "mask"], [87, 3, 1, "", "reverse_pair_indices"], [87, 3, 1, "", "triplet_to_numbers"]], "matscipy.numerical": [[88, 1, 1, "", "get_derivative_volume"], [88, 1, 1, "", "get_derivative_wave_vector"], [88, 1, 1, "", "numerical_forces"], [88, 1, 1, "", "numerical_hessian"], [88, 1, 1, "", "numerical_nonaffine_forces"], [88, 1, 1, "", "numerical_nonaffine_forces_reference"], [88, 1, 1, "", "numerical_stress"]], "matscipy.numpy_tricks": [[89, 1, 1, "", "mabincount"]], "matscipy.opls": [[90, 2, 1, "", "AnglesData"], [90, 2, 1, "", "BondData"], [90, 2, 1, "", "CutoffList"], [90, 2, 1, "", "DihedralsData"], [90, 2, 1, "", "LJQData"], [90, 2, 1, "", "OPLSStructure"], [90, 1, 1, "", "twochar"]], "matscipy.opls.AnglesData": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "add_name"], [90, 3, 1, "", "get_name"], [90, 3, 1, "", "name_value"], [90, 3, 1, "", "set_names"]], "matscipy.opls.BondData": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "get_name"], [90, 3, 1, "", "get_value"], [90, 3, 1, "", "name_value"], [90, 3, 1, "", "set_names"]], "matscipy.opls.CutoffList": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "get_name"], [90, 3, 1, "", "get_value"], [90, 3, 1, "", "max"], [90, 3, 1, "", "name_value"], [90, 3, 1, "", "set_names"]], "matscipy.opls.DihedralsData": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "add_name"], [90, 3, 1, "", "get_name"], [90, 3, 1, "", "name_value"], [90, 3, 1, "", "set_names"]], "matscipy.opls.LJQData": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "clear"], [90, 3, 1, "", "copy"], [90, 3, 1, "", "fromkeys"], [90, 3, 1, "", "get"], [90, 3, 1, "", "items"], [90, 3, 1, "", "keys"], [90, 3, 1, "", "pop"], [90, 3, 1, "", "popitem"], [90, 3, 1, "", "setdefault"], [90, 3, 1, "", "update"], [90, 3, 1, "", "values"]], "matscipy.opls.OPLSStructure": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "append"], [90, 4, 1, "", "ase_objtype"], [90, 5, 1, "", "calc"], [90, 5, 1, "", "cell"], [90, 3, 1, "", "center"], [90, 5, 1, "", "constraints"], [90, 3, 1, "", "copy"], [90, 4, 1, "", "default_map"], [90, 3, 1, "", "edit"], [90, 3, 1, "", "euler_rotate"], [90, 3, 1, "", "extend"], [90, 3, 1, "", "fromdict"], [90, 3, 1, "", "get_all_distances"], [90, 3, 1, "", "get_angle"], [90, 3, 1, "", "get_angles"], [90, 3, 1, "", "get_angular_momentum"], [90, 3, 1, "", "get_array"], [90, 3, 1, "", "get_atomic_numbers"], [90, 3, 1, "", "get_bonds"], [90, 3, 1, "", "get_calculator"], [90, 3, 1, "", "get_cell"], [90, 3, 1, "", "get_cell_lengths_and_angles"], [90, 3, 1, "", "get_celldisp"], [90, 3, 1, "", "get_center_of_mass"], [90, 3, 1, "", "get_charges"], [90, 3, 1, "", "get_chemical_formula"], [90, 3, 1, "", "get_chemical_symbols"], [90, 3, 1, "", "get_dihedral"], [90, 3, 1, "", "get_dihedrals"], [90, 3, 1, "", "get_dipole_moment"], [90, 3, 1, "", "get_distance"], [90, 3, 1, "", "get_distances"], [90, 3, 1, "", "get_forces"], [90, 3, 1, "", "get_global_number_of_atoms"], [90, 3, 1, "", "get_initial_charges"], [90, 3, 1, "", "get_initial_magnetic_moments"], [90, 3, 1, "", "get_kinetic_energy"], [90, 3, 1, "", "get_magnetic_moment"], [90, 3, 1, "", "get_magnetic_moments"], [90, 3, 1, "", "get_masses"], [90, 3, 1, "", "get_momenta"], [90, 3, 1, "", "get_moments_of_inertia"], [90, 3, 1, "", "get_neighbors"], [90, 3, 1, "", "get_number_of_atoms"], [90, 3, 1, "", "get_pbc"], [90, 3, 1, "", "get_positions"], [90, 3, 1, "", "get_potential_energies"], [90, 3, 1, "", "get_potential_energy"], [90, 3, 1, "", "get_properties"], [90, 3, 1, "", "get_reciprocal_cell"], [90, 3, 1, "", "get_scaled_positions"], [90, 3, 1, "", "get_stress"], [90, 3, 1, "", "get_stresses"], [90, 3, 1, "", "get_tags"], [90, 3, 1, "", "get_temperature"], [90, 3, 1, "", "get_total_energy"], [90, 3, 1, "", "get_types"], [90, 3, 1, "", "get_velocities"], [90, 3, 1, "", "get_volume"], [90, 3, 1, "", "has"], [90, 3, 1, "", "iterimages"], [90, 3, 1, "", "new_array"], [90, 5, 1, "", "number_of_lattice_vectors"], [90, 5, 1, "", "numbers"], [90, 5, 1, "", "pbc"], [90, 3, 1, "", "pop"], [90, 5, 1, "", "positions"], [90, 3, 1, "", "rattle"], [90, 3, 1, "", "repeat"], [90, 3, 1, "", "rotate"], [90, 3, 1, "", "rotate_dihedral"], [90, 3, 1, "", "set_angle"], [90, 3, 1, "", "set_array"], [90, 3, 1, "", "set_atom_data"], [90, 3, 1, "", "set_atomic_numbers"], [90, 3, 1, "", "set_calculator"], [90, 3, 1, "", "set_cell"], [90, 3, 1, "", "set_celldisp"], [90, 3, 1, "", "set_center_of_mass"], [90, 3, 1, "", "set_chemical_symbols"], [90, 3, 1, "", "set_constraint"], [90, 3, 1, "", "set_cutoffs"], [90, 3, 1, "", "set_dihedral"], [90, 3, 1, "", "set_distance"], [90, 3, 1, "", "set_initial_charges"], [90, 3, 1, "", "set_initial_magnetic_moments"], [90, 3, 1, "", "set_masses"], [90, 3, 1, "", "set_momenta"], [90, 3, 1, "", "set_pbc"], [90, 3, 1, "", "set_positions"], [90, 3, 1, "", "set_scaled_positions"], [90, 3, 1, "", "set_tags"], [90, 3, 1, "", "set_types"], [90, 3, 1, "", "set_velocities"], [90, 5, 1, "", "symbols"], [90, 3, 1, "", "todict"], [90, 3, 1, "", "translate"], [90, 3, 1, "", "wrap"], [90, 3, 1, "", "write"]], "matscipy.pressurecoupling": [[91, 2, 1, "", "AutoDamping"], [91, 2, 1, "", "FixedDamping"], [91, 2, 1, "", "FixedMassCriticalDamping"], [91, 2, 1, "", "SlideLog"], [91, 2, 1, "", "SlideLogger"], [91, 2, 1, "", "SlideWithNormalPressureCuboidCell"]], "matscipy.pressurecoupling.AutoDamping": [[91, 3, 1, "", "__init__"], [91, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedDamping": [[91, 3, 1, "", "__init__"], [91, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedMassCriticalDamping": [[91, 3, 1, "", "__init__"], [91, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.SlideLog": [[91, 4, 1, "", "P_bottom"], [91, 4, 1, "", "P_top"], [91, 4, 1, "", "T_thermostat"], [91, 3, 1, "", "__init__"], [91, 4, 1, "", "a"], [91, 4, 1, "", "h"], [91, 4, 1, "", "rows"], [91, 4, 1, "", "step"], [91, 4, 1, "", "tau_bottom"], [91, 4, 1, "", "tau_top"], [91, 4, 1, "", "time"], [91, 4, 1, "", "v"]], "matscipy.pressurecoupling.SlideLogger": [[91, 3, 1, "", "__init__"], [91, 3, 1, "", "write_header"]], "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell": [[91, 5, 1, "", "Tdir"], [91, 3, 1, "", "__init__"], [91, 3, 1, "", "adjust_forces"], [91, 3, 1, "", "adjust_momenta"], [91, 3, 1, "", "adjust_positions"], [91, 3, 1, "", "adjust_potential_energy"], [91, 3, 1, "", "get_A"], [91, 5, 1, "", "middle_mask"]], "matscipy.rings": [[92, 1, 1, "", "ring_statistics"]], "matscipy.spatial_correlation_function": [[93, 1, 1, "", "betrag"], [93, 1, 1, "", "max_rad"], [93, 1, 1, "", "spatial_correlation_function"], [93, 1, 1, "", "spatial_correlation_function_near"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": [0, 4, 6, 64], "applic": [0, 10], "domain": [0, 10], "structur": [0, 100], "topologi": [0, 100, 102], "gener": [0, 6, 9, 100, 102], "analysi": [0, 96, 99], "tool": [0, 96], "interatom": [0, 16, 97], "potenti": [0, 16, 17, 43, 97], "util": [0, 27], "function": [0, 95, 98], "build": [1, 13, 102], "cylindr": 1, "configur": [1, 6], "disloc": [1, 8, 11, 64], "access": [1, 8], "kei": 1, "properti": [1, 13, 97], "avail": 1, "system": [1, 4, 5, 8, 11, 13, 14], "bodi": [1, 17], "center": 1, "cubic": 1, "1": [1, 6, 9], "2": [1, 6, 9], "111": 1, "110": 1, "screw": 1, "edg": 1, "mix": 1, "100": 1, "junction": 1, "001": 1, "face": 1, "perfect": 1, "dissoci": 1, "diamond": 1, "60": 1, "degre": 1, "elast": [2, 13, 66], "constant": 2, "problem": 2, "setup": [2, 14, 101], "crystallin": 2, "With": 2, "second": 2, "order": 2, "deriv": 2, "amorph": [2, 102], "fit": [2, 34], "electrochemistri": [3, 18, 67, 68, 69, 70, 71, 72], "acknowledg": 3, "One": 4, "dimension": 4, "poisson": [4, 5], "nernst": [4, 5], "planck": [4, 5], "The": 4, "inert": 4, "electrod": 4, "prepar": 4, "solv": 4, "dirichlet": 4, "zero": 4, "flux": 4, "boundari": [4, 5], "condit": [4, 5], "valid": 4, "analyt": 4, "half": 4, "space": [4, 98], "solut": 4, "v": 4, "numer": [4, 88], "finit": [4, 5], "interv": 4, "pnp": 4, "electrochem": 4, "cell": [4, 9, 64], "visual": [4, 6], "from": [4, 6], "continu": [4, 6], "doubl": 4, "layer": 4, "theori": 4, "discret": 4, "coordin": [4, 6], "set": 4, "stern": 4, "robin": 4, "sampl": [4, 6], "distribut": [4, 6, 95, 98], "export": [4, 6], "element": 5, "method": [5, 9], "agreement": 5, "solver": 5, "moder": 5, "converg": 5, "issu": 5, "extrem": 5, "nonlinear": 5, "steric": 6, "correct": 6, "step": 6, "concentr": 6, "3": 6, "enforc": 6, "radii": 6, "inspect": 6, "initi": [6, 13, 14], "appli": [6, 13], "fractur": [7, 13], "mechan": 7, "advanc": 8, "featur": 8, "gamma_surfac": 8, "py": 8, "stack": [8, 9], "fault": [8, 9], "specif": 8, "differ": [8, 102], "plane": 8, "more": 8, "complex": 8, "gamma": 9, "surfac": 9, "atom": [9, 97, 102], "move": 9, "exampl": 9, "us": 9, "multi": 11, "speci": 11, "addit": 11, "multispeci": 11, "disord": 11, "plastic": 12, "instal": [12, 94], "test": [12, 94], "tutori": 12, "quasi": 13, "static": 13, "simul": [13, 14, 101, 102], "basic": [13, 97], "usag": [13, 18, 97], "bulk": 13, "crack": [13, 75], "strain": 13, "field": 13, "tribologi": 14, "pressur": 14, "equilibr": 14, "restart": 14, "slide": 14, "mani": 17, "kumagai": [17, 39], "other": 17, "command": [18, 19], "line": [18, 19], "interfac": [18, 19], "modul": 18, "overview": 18, "matscipi": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "angle_distribut": 21, "atomic_strain": 22, "calcul": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64], "committe": [24, 25, 26, 27], "log": 26, "eam": [28, 29, 30, 31], "average_atom": 29, "io": [31, 81, 82, 83, 84, 85], "ewald": [32, 33], "manybodi": [35, 36, 37, 38, 39, 40, 41, 42, 43], "explicit_form": [37, 38, 39, 40, 41], "harmon": 38, "stillinger_web": 40, "tersoff_brenn": 41, "newmb": 42, "mcfm": [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "cluster_data": 46, "mcfm_parallel": [47, 48, 49], "mcfm_parallel_control": 48, "mcfm_parallel_work": 49, "neighbour_list_mcfm": [50, 51, 52], "neighbour_list_bas": 51, "qm_cluster": 53, "qm_cluster_tool": [54, 55, 56, 57], "base_qm_cluster_tool": 55, "qm_clustering_tool": 56, "qm_flagging_tool": 57, "pair_potenti": [58, 59], "polydispers": [60, 61], "supercell_calcul": 62, "deform": 63, "vector": 64, "drift": 65, "continuous2discret": 68, "poisson_boltzmann_distribut": 69, "poisson_nernst_planck_solv": 70, "poisson_nernst_planck_solver_fen": 71, "steric_correct": 72, "fracture_mechan": [73, 74, 75, 76, 77, 78], "cluster": 74, "crackpathsel": 76, "energy_releas": 77, "idealbrittlesolid": 78, "hessian_finite_differ": 79, "hydrogen": 80, "lammpsdata": 82, "meti": 83, "opl": [84, 90], "tbl": 85, "logger": 86, "neighbour": [87, 97], "numpy_trick": 89, "pressurecoupl": 91, "ring": [92, 99], "spatial_correlation_funct": 93, "quick": 94, "start": 94, "document": 94, "seek": 94, "help": 94, "contribut": 94, "run": 94, "edit": 94, "depend": 94, "fund": 94, "tabl": 94, "content": 94, "indic": 94, "angl": 95, "list": 97, "per": 97, "pair": 98, "real": 98, "fourier": 98, "non": [101, 102], "reactiv": [101, 102], "lammp": [101, 102], "md": 102, "carbon": 102, "assign": 102, "type": 102, "bond": 102, "input": 102, "file": 102}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"matscipy.deformation": [[63, "module-matscipy.deformation"]], "matscipy.calculators.mcfm.qm_cluster": [[53, "module-matscipy.calculators.mcfm.qm_cluster"]], "matscipy.calculators.pair_potential.calculator": [[59, "module-matscipy.calculators.pair_potential.calculator"]], "matscipy.calculators.pair_potential": [[58, "module-matscipy.calculators.pair_potential"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[48, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[52, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[55, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[54, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[49, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[57, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "matscipy.calculators.supercell_calculator": [[62, "module-matscipy.calculators.supercell_calculator"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[50, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[51, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "matscipy.calculators.polydisperse": [[60, "module-matscipy.calculators.polydisperse"]], "matscipy.calculators.polydisperse.calculator": [[61, "module-matscipy.calculators.polydisperse.calculator"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[56, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "Analysis tools": [[96, "analysis-tools"], [0, "analysis-tools"]], "Topology building for LAMMPS non-reactive MD simulations of amorphous carbon": [[102, "topology-building-for-lammps-non-reactive-md-simulations-of-amorphous-carbon"]], "Assignment of the different atom types": [[102, "assignment-of-the-different-atom-types"]], "Generation of the bonding topology and LAMMPS input files": [[102, "generation-of-the-bonding-topology-and-lammps-input-files"]], "Ring analysis": [[99, "ring-analysis"]], "Neighbour list": [[97, "neighbour-list"]], "Basic usage": [[97, "basic-usage"], [13, "basic-usage"]], "Per-atom properties": [[97, "per-atom-properties"]], "Interatomic potential": [[97, "interatomic-potential"]], "Pair-distribution function": [[98, "pair-distribution-function"]], "Real-space": [[98, "real-space"]], "Fourier space": [[98, "fourier-space"]], "Setups for non-reactive simulations with LAMMPS": [[101, "setups-for-non-reactive-simulations-with-lammps"]], "Structure and topology generation": [[100, "structure-and-topology-generation"], [0, "structure-and-topology-generation"]], "matscipy.calculators.committee.utils": [[27, "module-matscipy.calculators.committee.utils"]], "matscipy.calculators.eam.io": [[31, "module-matscipy.calculators.eam.io"]], "matscipy.calculators.committee.log": [[26, "module-matscipy.calculators.committee.log"]], "matscipy.calculators.eam.average_atom": [[29, "module-matscipy.calculators.eam.average_atom"]], "matscipy.angle_distribution": [[21, "module-matscipy.angle_distribution"]], "Interatomic potentials": [[16, "interatomic-potentials"], [0, "interatomic-potentials"]], "matscipy.atomic_strain": [[22, "module-matscipy.atomic_strain"]], "Command line interface": [[19, "command-line-interface"]], "matscipy.calculators.eam": [[28, "module-matscipy.calculators.eam"]], "matscipy.calculators.eam.calculator": [[30, "module-matscipy.calculators.eam.calculator"]], "matscipy.calculators.committee.committee": [[25, "module-matscipy.calculators.committee.committee"]], "Command line interface for the electrochemistry module": [[18, "command-line-interface-for-the-electrochemistry-module"]], "Overview of commands": [[18, "overview-of-commands"]], "Usage": [[18, "usage"]], "matscipy.calculators.calculator": [[23, "module-matscipy.calculators.calculator"]], "matscipy.calculators.committee": [[24, "module-matscipy.calculators.committee"]], "Many-body potentials": [[17, "many-body-potentials"]], "Kumagai potential": [[17, "kumagai-potential"]], "Other many-body potentials": [[17, "other-many-body-potentials"]], "matscipy.io": [[81, "module-matscipy.io"]], "matscipy.neighbours": [[87, "module-matscipy.neighbours"]], "matscipy.rings": [[92, "module-matscipy.rings"]], "matscipy.opls": [[90, "module-matscipy.opls"]], "Matscipy": [[94, "matscipy"]], "Quick start": [[94, "quick-start"]], "Documentation": [[94, "documentation"]], "Seeking help": [[94, "seeking-help"]], "Contributing": [[94, "contributing"]], "Running tests": [[94, "running-tests"]], "Editable installs": [[94, "editable-installs"]], "Dependencies": [[94, "dependencies"]], "Funding": [[94, "funding"]], "Table of Contents:": [[94, null]], "Indices and tables": [[94, "indices-and-tables"]], "matscipy.spatial_correlation_function": [[93, "module-matscipy.spatial_correlation_function"]], "Angle-distribution function": [[95, "angle-distribution-function"]], "matscipy.io.opls": [[84, "module-matscipy.io.opls"]], "matscipy.numerical": [[88, "module-matscipy.numerical"]], "matscipy.logger": [[86, "module-matscipy.logger"]], "matscipy.numpy_tricks": [[89, "module-matscipy.numpy_tricks"]], "matscipy.hydrogenate": [[80, "module-matscipy.hydrogenate"]], "matscipy.io.tbl": [[85, "module-matscipy.io.tbl"]], "matscipy.pressurecoupling": [[91, "module-matscipy.pressurecoupling"]], "matscipy.io.metis": [[83, "module-matscipy.io.metis"]], "matscipy.io.lammpsdata": [[82, "module-matscipy.io.lammpsdata"]], "matscipy.calculators.manybody.newmb": [[42, "module-matscipy.calculators.manybody.newmb"]], "matscipy.calculators.manybody.potentials": [[43, "module-matscipy.calculators.manybody.potentials"]], "matscipy.calculators.manybody": [[35, "module-matscipy.calculators.manybody"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[38, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "matscipy.calculators.mcfm": [[44, "module-matscipy.calculators.mcfm"]], "matscipy.calculators.ewald": [[32, "module-matscipy.calculators.ewald"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[40, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[41, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "matscipy.calculators.ewald.calculator": [[33, "module-matscipy.calculators.ewald.calculator"]], "matscipy.calculators.manybody.calculator": [[36, "module-matscipy.calculators.manybody.calculator"]], "matscipy.calculators.fitting": [[34, "module-matscipy.calculators.fitting"]], "matscipy.calculators.mcfm.cluster_data": [[46, "module-matscipy.calculators.mcfm.cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel": [[47, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "matscipy.calculators.mcfm.calculator": [[45, "module-matscipy.calculators.mcfm.calculator"]], "matscipy.calculators.manybody.explicit_forms": [[37, "module-matscipy.calculators.manybody.explicit_forms"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[39, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "matscipy.electrochemistry": [[67, "module-matscipy.electrochemistry"]], "matscipy.fracture_mechanics.clusters": [[74, "module-matscipy.fracture_mechanics.clusters"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[71, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"]], "matscipy.electrochemistry.steric_correction": [[72, "module-matscipy.electrochemistry.steric_correction"]], "matscipy.fracture_mechanics.crack": [[75, "module-matscipy.fracture_mechanics.crack"]], "matscipy.fracture_mechanics.energy_release": [[77, "module-matscipy.fracture_mechanics.energy_release"]], "matscipy.drift": [[65, "module-matscipy.drift"]], "matscipy.hessian_finite_differences": [[79, "module-matscipy.hessian_finite_differences"]], "matscipy.fracture_mechanics.crackpathsel": [[76, "module-matscipy.fracture_mechanics.crackpathsel"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[69, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "matscipy.dislocation": [[64, "module-matscipy.dislocation"]], "Calculation of cell vectors": [[64, "calculation-of-cell-vectors"]], "References:": [[64, "references"]], "matscipy.elasticity": [[66, "module-matscipy.elasticity"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[78, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "matscipy.electrochemistry.continuous2discrete": [[68, "matscipy-electrochemistry-continuous2discrete"]], "matscipy.fracture_mechanics": [[73, "module-matscipy.fracture_mechanics"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[70, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "Steric correction": [[6, "steric-correction"]], "Step 1: generating continuous concentration distributions": [[6, "step-1-generating-continuous-concentration-distributions"]], "Step 2: sampling from distributions": [[6, "step-2-sampling-from-distributions"]], "Step 3: enforcing steric radii": [[6, "step-3-enforcing-steric-radii"]], "Inspect the initial coordinate sample": [[6, "inspect-the-initial-coordinate-sample"]], "Apply the steric correction": [[6, "apply-the-steric-correction"]], "Visualize the applied corrections": [[6, "visualize-the-applied-corrections"]], "Export initial and steric configurations": [[6, "export-initial-and-steric-configurations"]], "References": [[6, "references"], [4, "references"]], "Quasi static fracture simulations": [[13, "quasi-static-fracture-simulations"]], "Bulk and Elastic properties": [[13, "bulk-and-elastic-properties"]], "Build crack system": [[13, "build-crack-system"]], "Apply initial strain field": [[13, "apply-initial-strain-field"]], "Electrochemistry": [[3, "electrochemistry"]], "Acknowledgements": [[3, "acknowledgements"]], "Application domains": [[10, "application-domains"], [0, "application-domains"]], "Generating Gamma Surfaces & Stacking Faults": [[9, "generating-gamma-surfaces-stacking-faults"]], "Method 1 - \u201cAtom Move\u201d Method": [[9, "method-1-atom-move-method"]], "Method 2 - \u201cCell Move\u201d Method": [[9, "method-2-cell-move-method"]], "Gamma Surface Example using Method 1": [[9, "gamma-surface-example-using-method-1"]], "Stacking Fault Example using Method 2": [[9, "stacking-fault-example-using-method-2"]], "Tribology": [[14, "tribology"]], "System setup": [[14, "system-setup"]], "Initial pressure equilibration": [[14, "initial-pressure-equilibration"]], "Restarting a pressure equilibration": [[14, "restarting-a-pressure-equilibration"]], "Sliding simulation": [[14, "sliding-simulation"]], "Restarting a sliding simulation": [[14, "restarting-a-sliding-simulation"]], "Poisson-Nernst-Planck systems by finite element method": [[5, "poisson-nernst-planck-systems-by-finite-element-method"]], "Agreement of solvers for moderate boundary conditions": [[5, "agreement-of-solvers-for-moderate-boundary-conditions"]], "Convergence issues for extreme nonlinearities": [[5, "convergence-issues-for-extreme-nonlinearities"]], "Fracture Mechanics": [[7, "fracture-mechanics"]], "Plasticity": [[12, "plasticity"]], "Installation and tests": [[12, "installation-and-tests"]], "Tutorials:": [[12, "tutorials"]], "Building cylindrical configurations with dislocations": [[1, "building-cylindrical-configurations-with-dislocations"]], "Accessing Key Dislocation Properties": [[1, "accessing-key-dislocation-properties"]], "Available Dislocation Systems": [[1, "available-dislocation-systems"]], "Body Centered Cubic": [[1, "body-centered-cubic"]], "1/2<111>{110} screw dislocation": [[1, "screw-dislocation"]], "1/2<111>{110} edge dislocation": [[1, "edge-dislocation"]], "1/2<111>{110} mixed dislocation": [[1, "mixed-dislocation"]], "<100>{110} edge \u2018junction\u2019 dislocation": [[1, "edge-junction-dislocation"]], "<100>{001} edge dislocation": [[1, "id1"]], "Face Centered Cubic": [[1, "face-centered-cubic"]], "1/2<110>{111} screw dislocation (perfect and dissociated)": [[1, "screw-dislocation-perfect-and-dissociated"], [1, "id2"]], "1/2<110>{111} edge dislocation (perfect and dissociated)": [[1, "edge-dislocation-perfect-and-dissociated"]], "Diamond Cubic": [[1, "diamond-cubic"]], "1/2<110>{111} 60 degree screw dislocation (perfect and dissociated)": [[1, "degree-screw-dislocation-perfect-and-dissociated"]], "API Reference": [[0, "api-reference"]], "Utility functions": [[0, "utility-functions"]], "Advanced Features of gamma_surface.py": [[8, "advanced-features-of-gamma-surface-py"]], "Stacking Faults of Specific Dislocations": [[8, "stacking-faults-of-specific-dislocations"]], "Accessing Different Stacking Fault Planes": [[8, "accessing-different-stacking-fault-planes"]], "Stacking Faults in more complex systems": [[8, "stacking-faults-in-more-complex-systems"]], "Elastic Constants": [[2, "elastic-constants"]], "Problem setup": [[2, "problem-setup"], [2, "id1"]], "Crystalline elastic constants": [[2, "crystalline-elastic-constants"]], "With second-order derivatives": [[2, "with-second-order-derivatives"]], "Amorphous elastic constants": [[2, "amorphous-elastic-constants"]], "Fitting elastic constants": [[2, "fitting-elastic-constants"]], "One-dimensional Poisson-Nernst-Planck systems": [[4, "one-dimensional-poisson-nernst-planck-systems"]], "The inert electrode": [[4, "the-inert-electrode"]], "Preparations": [[4, "preparations"]], "Solving with Dirichlet and zero flux boundary conditions": [[4, "solving-with-dirichlet-and-zero-flux-boundary-conditions"], [4, "id1"]], "Validation: Analytical half-space solution vs. numerical finite-interval PNP system": [[4, "validation-analytical-half-space-solution-vs-numerical-finite-interval-pnp-system"]], "The electrochemical cell": [[4, "the-electrochemical-cell"]], "Visualization": [[4, "visualization"], [4, "id2"]], "From continuous double layer theory to discrete coordinate sets": [[4, "from-continuous-double-layer-theory-to-discrete-coordinate-sets"]], "Poisson-Nernst-Planck-System with Stern layer boundary conditions": [[4, "poisson-nernst-planck-system-with-stern-layer-boundary-conditions"]], "Solving with Robin and zero flux boundary conditions": [[4, "solving-with-robin-and-zero-flux-boundary-conditions"]], "Sampling from continuous distributions": [[4, "sampling-from-continuous-distributions"]], "Coordinates export": [[4, "coordinates-export"]], "Multi-species Dislocation Systems": [[11, "multi-species-dislocation-systems"]], "Additional Dislocations in Multispecies Systems": [[11, "additional-dislocations-in-multispecies-systems"]], "Dislocations in Disordered Systems": [[11, "dislocations-in-disordered-systems"]]}, "indexentries": {"angle_distribution() (in module matscipy.angle_distribution)": [[21, "matscipy.angle_distribution.angle_distribution"]], "matscipy.angle_distribution": [[21, "module-matscipy.angle_distribution"]], "module": [[21, "module-matscipy.angle_distribution"], [22, "module-matscipy.atomic_strain"], [23, "module-matscipy.calculators.calculator"], [24, "module-matscipy.calculators.committee"], [25, "module-matscipy.calculators.committee.committee"], [26, "module-matscipy.calculators.committee.log"], [27, "module-matscipy.calculators.committee.utils"], [28, "module-matscipy.calculators.eam"], [29, "module-matscipy.calculators.eam.average_atom"], [30, "module-matscipy.calculators.eam.calculator"], [31, "module-matscipy.calculators.eam.io"], [32, "module-matscipy.calculators.ewald"], [33, "module-matscipy.calculators.ewald.calculator"], [34, "module-matscipy.calculators.fitting"], [35, "module-matscipy.calculators.manybody"], [36, "module-matscipy.calculators.manybody.calculator"], [37, "module-matscipy.calculators.manybody.explicit_forms"], [38, "module-matscipy.calculators.manybody.explicit_forms.harmonic"], [39, "module-matscipy.calculators.manybody.explicit_forms.kumagai"], [40, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"], [41, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"], [42, "module-matscipy.calculators.manybody.newmb"], [43, "module-matscipy.calculators.manybody.potentials"], [44, "module-matscipy.calculators.mcfm"], [45, "module-matscipy.calculators.mcfm.calculator"], [46, "module-matscipy.calculators.mcfm.cluster_data"], [47, "module-matscipy.calculators.mcfm.mcfm_parallel"], [48, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"], [49, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"], [50, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"], [51, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"], [52, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"], [53, "module-matscipy.calculators.mcfm.qm_cluster"], [54, "module-matscipy.calculators.mcfm.qm_cluster_tools"], [55, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"], [56, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"], [57, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"], [58, "module-matscipy.calculators.pair_potential"], [59, "module-matscipy.calculators.pair_potential.calculator"], [60, "module-matscipy.calculators.polydisperse"], [61, "module-matscipy.calculators.polydisperse.calculator"], [62, "module-matscipy.calculators.supercell_calculator"], [63, "module-matscipy.deformation"], [64, "module-matscipy.dislocation"], [65, "module-matscipy.drift"], [66, "module-matscipy.elasticity"], [67, "module-matscipy.electrochemistry"], [69, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"], [70, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"], [71, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"], [72, "module-matscipy.electrochemistry.steric_correction"], [73, "module-matscipy.fracture_mechanics"], [74, "module-matscipy.fracture_mechanics.clusters"], [75, "module-matscipy.fracture_mechanics.crack"], [76, "module-matscipy.fracture_mechanics.crackpathsel"], [77, "module-matscipy.fracture_mechanics.energy_release"], [78, "module-matscipy.fracture_mechanics.idealbrittlesolid"], [79, "module-matscipy.hessian_finite_differences"], [80, "module-matscipy.hydrogenate"], [81, "module-matscipy.io"], [82, "module-matscipy.io.lammpsdata"], [83, "module-matscipy.io.metis"], [84, "module-matscipy.io.opls"], [85, "module-matscipy.io.tbl"], [86, "module-matscipy.logger"], [87, "module-matscipy.neighbours"], [88, "module-matscipy.numerical"], [89, "module-matscipy.numpy_tricks"], [90, "module-matscipy.opls"], [91, "module-matscipy.pressurecoupling"], [92, "module-matscipy.rings"], [93, "module-matscipy.spatial_correlation_function"]], "array_inverse() (in module matscipy.atomic_strain)": [[22, "matscipy.atomic_strain.array_inverse"]], "atomic_strain() (in module matscipy.atomic_strain)": [[22, "matscipy.atomic_strain.atomic_strain"]], "get_d_square_min() (in module matscipy.atomic_strain)": [[22, "matscipy.atomic_strain.get_D_square_min"]], "get_xij() (in module matscipy.atomic_strain)": [[22, "matscipy.atomic_strain.get_XIJ"]], "get_yij() (in module matscipy.atomic_strain)": [[22, "matscipy.atomic_strain.get_YIJ"]], "get_delta_plus_epsilon() (in module matscipy.atomic_strain)": [[22, "matscipy.atomic_strain.get_delta_plus_epsilon"]], "get_delta_plus_epsilon_dgesv() (in module matscipy.atomic_strain)": [[22, "matscipy.atomic_strain.get_delta_plus_epsilon_dgesv"]], "matscipy.atomic_strain": [[22, "module-matscipy.atomic_strain"]], "matscipycalculator (class in matscipy.calculators.calculator)": [[23, "matscipy.calculators.calculator.MatscipyCalculator"]], "__init__() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.__init__"]], "band_structure() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.band_structure"]], "calculate() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.calculation_required"]], "check_state() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.check_state"]], "default_parameters (matscipy.calculators.calculator.matscipycalculator attribute)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.default_parameters"]], "directory (matscipy.calculators.calculator.matscipycalculator property)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.calculator.matscipycalculator attribute)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.export_properties"]], "get_atoms() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_elastic_constants"]], "get_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_forces"]], "get_hessian() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_property"]], "get_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.calculator.matscipycalculator attribute)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.calculator.matscipycalculator attribute)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.implemented_properties"]], "label (matscipy.calculators.calculator.matscipycalculator property)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.label"]], "matscipy.calculators.calculator": [[23, "module-matscipy.calculators.calculator"]], "read() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.read"]], "read_atoms() (matscipy.calculators.calculator.matscipycalculator class method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.read_atoms"]], "reset() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.reset"]], "set() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.set"]], "set_label() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.set_label"]], "todict() (matscipy.calculators.calculator.matscipycalculator method)": [[23, "matscipy.calculators.calculator.MatscipyCalculator.todict"]], "matscipy.calculators.committee": [[24, "module-matscipy.calculators.committee"]], "committee (class in matscipy.calculators.committee.committee)": [[25, "matscipy.calculators.committee.committee.Committee"]], "committeemember (class in matscipy.calculators.committee.committee)": [[25, "matscipy.calculators.committee.committee.CommitteeMember"]], "committeeuncertainty (class in matscipy.calculators.committee.committee)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty"]], "__init__() (matscipy.calculators.committee.committee.committee method)": [[25, "matscipy.calculators.committee.committee.Committee.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeemember method)": [[25, "matscipy.calculators.committee.committee.CommitteeMember.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.__init__"]], "add_member() (matscipy.calculators.committee.committee.committee method)": [[25, "matscipy.calculators.committee.committee.Committee.add_member"]], "alphas (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.alphas"]], "atoms (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.atoms"]], "atoms (matscipy.calculators.committee.committee.committeemember property)": [[25, "matscipy.calculators.committee.committee.CommitteeMember.atoms"]], "band_structure() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.band_structure"]], "calculate() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate"]], "calculate_numerical_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_properties"]], "calculation_required() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculation_required"]], "calculator (matscipy.calculators.committee.committee.committeemember property)": [[25, "matscipy.calculators.committee.committee.CommitteeMember.calculator"]], "calibrate() (matscipy.calculators.committee.committee.committee method)": [[25, "matscipy.calculators.committee.committee.Committee.calibrate"]], "calibrated_for (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.calibrated_for"]], "check_state() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.check_state"]], "default_parameters (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.default_parameters"]], "directory (matscipy.calculators.committee.committee.committeeuncertainty property)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.directory"]], "discard_results_on_any_change (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.export_properties"]], "filename (matscipy.calculators.committee.committee.committeemember property)": [[25, "matscipy.calculators.committee.committee.CommitteeMember.filename"]], "get_atoms() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_atoms"]], "get_charges() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_charges"]], "get_default_parameters() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_dipole_moment"]], "get_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_forces"]], "get_magnetic_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energy"]], "get_property() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_property"]], "get_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stress"]], "get_stresses() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stresses"]], "id_counter (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.id_counter"]], "id_to_atoms (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.id_to_atoms"]], "ids (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.ids"]], "ids (matscipy.calculators.committee.committee.committeemember property)": [[25, "matscipy.calculators.committee.committee.CommitteeMember.ids"]], "ignored_changes (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.ignored_changes"]], "implemented_properties (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.implemented_properties"]], "is_calibrated_for() (matscipy.calculators.committee.committee.committee method)": [[25, "matscipy.calculators.committee.committee.Committee.is_calibrated_for"]], "is_sample_in_atoms() (matscipy.calculators.committee.committee.committeemember method)": [[25, "matscipy.calculators.committee.committee.CommitteeMember.is_sample_in_atoms"]], "label (matscipy.calculators.committee.committee.committeeuncertainty property)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.label"]], "matscipy.calculators.committee.committee": [[25, "module-matscipy.calculators.committee.committee"]], "members (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.members"]], "number (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.number"]], "read() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.read"]], "read_atoms() (matscipy.calculators.committee.committee.committeeuncertainty class method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.read_atoms"]], "reset() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.reset"]], "scale_uncertainty() (matscipy.calculators.committee.committee.committee method)": [[25, "matscipy.calculators.committee.committee.Committee.scale_uncertainty"]], "set() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.set"]], "set_internal_validation_set() (matscipy.calculators.committee.committee.committee method)": [[25, "matscipy.calculators.committee.committee.Committee.set_internal_validation_set"]], "set_label() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.set_label"]], "set_training_data() (matscipy.calculators.committee.committee.committeemember method)": [[25, "matscipy.calculators.committee.committee.CommitteeMember.set_training_data"]], "todict() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[25, "matscipy.calculators.committee.committee.CommitteeUncertainty.todict"]], "validation_set (matscipy.calculators.committee.committee.committee property)": [[25, "matscipy.calculators.committee.committee.Committee.validation_set"]], "create_logger() (in module matscipy.calculators.committee.log)": [[26, "matscipy.calculators.committee.log.create_logger"]], "matscipy.calculators.committee.log": [[26, "module-matscipy.calculators.committee.log"]], "set_logging() (in module matscipy.calculators.committee.log)": [[26, "matscipy.calculators.committee.log.set_logging"]], "matscipy.calculators.committee.utils": [[27, "module-matscipy.calculators.committee.utils"]], "subsample() (in module matscipy.calculators.committee.utils)": [[27, "matscipy.calculators.committee.utils.subsample"]], "matscipy.calculators.eam": [[28, "module-matscipy.calculators.eam"]], "average_potential() (in module matscipy.calculators.eam.average_atom)": [[29, "matscipy.calculators.eam.average_atom.average_potential"]], "matscipy.calculators.eam.average_atom": [[29, "module-matscipy.calculators.eam.average_atom"]], "eam (class in matscipy.calculators.eam.calculator)": [[30, "matscipy.calculators.eam.calculator.EAM"]], "__init__() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.__init__"]], "band_structure() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.band_structure"]], "calculate() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.calculate"]], "calculate_hessian_matrix() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.calculate_hessian_matrix"]], "calculate_numerical_forces() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.calculate_properties"]], "calculation_required() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.calculation_required"]], "check_state() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.check_state"]], "cutoff (matscipy.calculators.eam.calculator.eam property)": [[30, "matscipy.calculators.eam.calculator.EAM.cutoff"]], "default_parameters (matscipy.calculators.eam.calculator.eam attribute)": [[30, "matscipy.calculators.eam.calculator.EAM.default_parameters"]], "directory (matscipy.calculators.eam.calculator.eam property)": [[30, "matscipy.calculators.eam.calculator.EAM.directory"]], "discard_results_on_any_change (matscipy.calculators.eam.calculator.eam attribute)": [[30, "matscipy.calculators.eam.calculator.EAM.discard_results_on_any_change"]], "energy_virial_and_forces() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.energy_virial_and_forces"]], "export_properties() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.export_properties"]], "get_atoms() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_charges"]], "get_default_parameters() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_elastic_constants"]], "get_forces() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_forces"]], "get_hessian() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_potential_energy"]], "get_property() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_property"]], "get_stress() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.get_stresses"]], "ignored_changes (matscipy.calculators.eam.calculator.eam attribute)": [[30, "matscipy.calculators.eam.calculator.EAM.ignored_changes"]], "implemented_properties (matscipy.calculators.eam.calculator.eam attribute)": [[30, "matscipy.calculators.eam.calculator.EAM.implemented_properties"]], "label (matscipy.calculators.eam.calculator.eam property)": [[30, "matscipy.calculators.eam.calculator.EAM.label"]], "matscipy.calculators.eam.calculator": [[30, "module-matscipy.calculators.eam.calculator"]], "name (matscipy.calculators.eam.calculator.eam attribute)": [[30, "matscipy.calculators.eam.calculator.EAM.name"]], "read() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.read"]], "read_atoms() (matscipy.calculators.eam.calculator.eam class method)": [[30, "matscipy.calculators.eam.calculator.EAM.read_atoms"]], "reset() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.reset"]], "set() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.set"]], "set_label() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.set_label"]], "todict() (matscipy.calculators.eam.calculator.eam method)": [[30, "matscipy.calculators.eam.calculator.EAM.todict"]], "eamparameters (class in matscipy.calculators.eam.io)": [[31, "matscipy.calculators.eam.io.EAMParameters"]], "atomic_masses (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.atomic_masses"]], "atomic_numbers (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.atomic_numbers"]], "count() (matscipy.calculators.eam.io.eamparameters method)": [[31, "matscipy.calculators.eam.io.EAMParameters.count"]], "crystal_structures (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.crystal_structures"]], "cutoff (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.cutoff"]], "density_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.density_grid_spacing"]], "distance_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.distance_grid_spacing"]], "index() (matscipy.calculators.eam.io.eamparameters method)": [[31, "matscipy.calculators.eam.io.EAMParameters.index"]], "lattice_constants (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.lattice_constants"]], "matscipy.calculators.eam.io": [[31, "module-matscipy.calculators.eam.io"]], "mix_eam() (in module matscipy.calculators.eam.io)": [[31, "matscipy.calculators.eam.io.mix_eam"]], "number_of_density_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.number_of_density_grid_points"]], "number_of_distance_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.number_of_distance_grid_points"]], "read_eam() (in module matscipy.calculators.eam.io)": [[31, "matscipy.calculators.eam.io.read_eam"]], "symbols (matscipy.calculators.eam.io.eamparameters attribute)": [[31, "matscipy.calculators.eam.io.EAMParameters.symbols"]], "write_eam() (in module matscipy.calculators.eam.io)": [[31, "matscipy.calculators.eam.io.write_eam"]], "matscipy.calculators.ewald": [[32, "module-matscipy.calculators.ewald"]], "ewald (class in matscipy.calculators.ewald.calculator)": [[33, "matscipy.calculators.ewald.calculator.Ewald"]], "ewaldshortrange (class in matscipy.calculators.ewald.calculator)": [[33, "matscipy.calculators.ewald.calculator.EwaldShortRange"]], "__init__() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.__init__"]], "__init__() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[33, "matscipy.calculators.ewald.calculator.EwaldShortRange.__init__"]], "allowed_wave_vectors() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.allowed_wave_vectors"]], "alpha (matscipy.calculators.ewald.calculator.ewald property)": [[33, "matscipy.calculators.ewald.calculator.Ewald.alpha"]], "band_structure() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.band_structure"]], "calculate() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.calculate"]], "calculate_numerical_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.calculate_properties"]], "calculation_required() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.calculation_required"]], "check_state() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.check_state"]], "cutoff (matscipy.calculators.ewald.calculator.ewaldshortrange property)": [[33, "matscipy.calculators.ewald.calculator.EwaldShortRange.cutoff"]], "default_parameters (matscipy.calculators.ewald.calculator.ewald attribute)": [[33, "matscipy.calculators.ewald.calculator.Ewald.default_parameters"]], "derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[33, "matscipy.calculators.ewald.calculator.EwaldShortRange.derivative"]], "determine_alpha() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.determine_alpha"]], "determine_kc() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.determine_kc"]], "determine_nk() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.determine_nk"]], "directory (matscipy.calculators.ewald.calculator.ewald property)": [[33, "matscipy.calculators.ewald.calculator.Ewald.directory"]], "discard_results_on_any_change (matscipy.calculators.ewald.calculator.ewald attribute)": [[33, "matscipy.calculators.ewald.calculator.Ewald.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.export_properties"]], "first_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[33, "matscipy.calculators.ewald.calculator.EwaldShortRange.first_derivative"]], "first_derivative_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.first_derivative_kspace"]], "get_atoms() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_charges"]], "get_cutoff() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[33, "matscipy.calculators.ewald.calculator.EwaldShortRange.get_cutoff"]], "get_default_parameters() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_elastic_constants"]], "get_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_forces"]], "get_hessian() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energy"]], "get_property() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_property"]], "get_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.get_stresses"]], "ignored_changes (matscipy.calculators.ewald.calculator.ewald attribute)": [[33, "matscipy.calculators.ewald.calculator.Ewald.ignored_changes"]], "implemented_properties (matscipy.calculators.ewald.calculator.ewald attribute)": [[33, "matscipy.calculators.ewald.calculator.Ewald.implemented_properties"]], "kspace_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.kspace_energy"]], "kspace_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.kspace_properties"]], "label (matscipy.calculators.ewald.calculator.ewald property)": [[33, "matscipy.calculators.ewald.calculator.Ewald.label"]], "matscipy.calculators.ewald.calculator": [[33, "module-matscipy.calculators.ewald.calculator"]], "name (matscipy.calculators.ewald.calculator.ewald attribute)": [[33, "matscipy.calculators.ewald.calculator.Ewald.name"]], "read() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.read"]], "read_atoms() (matscipy.calculators.ewald.calculator.ewald class method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.read_atoms"]], "reset() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.reset"]], "reset_kspace() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.reset_kspace"]], "rms_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.rms_kspace"]], "rms_rspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.rms_rspace"]], "second_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[33, "matscipy.calculators.ewald.calculator.EwaldShortRange.second_derivative"]], "self_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.self_energy"]], "set() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.set"]], "set_label() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.set_label"]], "short_range (matscipy.calculators.ewald.calculator.ewald property)": [[33, "matscipy.calculators.ewald.calculator.Ewald.short_range"]], "stress_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.stress_kspace"]], "todict() (matscipy.calculators.ewald.calculator.ewald method)": [[33, "matscipy.calculators.ewald.calculator.Ewald.todict"]], "combinedfit (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.CombinedFit"]], "d0 (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.D0"]], "ec (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.Ec"]], "ec (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.Ec"]], "ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.Ec"]], "ec (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.Ec"]], "ec (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.Ec"]], "ec (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.Ec"]], "ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.Ec"]], "ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.Ec"]], "ec (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.Ec"]], "ec (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.Ec"]], "ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.Ec"]], "fit (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.Fit"]], "fitb2 (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitB2"]], "fitbcc (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitBCC"]], "fitcubiccrystal (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitCubicCrystal"]], "fitdiamond (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitDiamond"]], "fitdiamond100 (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitDiamond100"]], "fitdiamond110 (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitDiamond110"]], "fitdiamond111 (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitDiamond111"]], "fitdimer (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitDimer"]], "fitfcc (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitFCC"]], "fitgraphene (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitGraphene"]], "fitgraphite (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitGraphite"]], "fithexagonalcrystal (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal"]], "fitl1_0 (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitL1_0"]], "fitl1_2 (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitL1_2"]], "fitsc (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitSC"]], "fitsinglepoint (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitSinglePoint"]], "fitsurface (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitSurface"]], "fittetragonalcrystal (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal"]], "parameters (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.Parameters"]], "penalty (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.Penalty"]], "rotatingfit (class in matscipy.calculators.fitting)": [[34, "matscipy.calculators.fitting.RotatingFit"]], "__init__() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.__init__"]], "__init__() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.__init__"]], "__init__() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.__init__"]], "__init__() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.__init__"]], "__init__() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.__init__"]], "__init__() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.__init__"]], "__init__() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.__init__"]], "__init__() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.__init__"]], "__init__() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.__init__"]], "__init__() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.__init__"]], "__init__() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.__init__"]], "__init__() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.__init__"]], "__init__() (matscipy.calculators.fitting.rotatingfit method)": [[34, "matscipy.calculators.fitting.RotatingFit.__init__"]], "a0 (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.a0"]], "a0 (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.a0"]], "a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.a0"]], "a0 (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.a0"]], "a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.a0"]], "a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.a0"]], "a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.a0"]], "a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.a0"]], "a0 (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.a0"]], "a0 (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.a0"]], "a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.a0"]], "atoms (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.atoms"]], "atoms (matscipy.calculators.fitting.fit attribute)": [[34, "matscipy.calculators.fitting.Fit.atoms"]], "atoms (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.atoms"]], "atoms (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.atoms"]], "atoms (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.atoms"]], "atoms (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.atoms"]], "atoms (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.atoms"]], "atoms (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.atoms"]], "atoms (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.atoms"]], "atoms (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.atoms"]], "atoms (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.atoms"]], "atoms (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.atoms"]], "c0 (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.c0"]], "c0 (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.c0"]], "c0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.c0"]], "c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.c0"]], "c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.c0"]], "calc (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.calc"]], "calc (matscipy.calculators.fitting.fit attribute)": [[34, "matscipy.calculators.fitting.Fit.calc"]], "calc (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.calc"]], "calc (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.calc"]], "calc (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.calc"]], "calc (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.calc"]], "calc (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.calc"]], "calc (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.calc"]], "calc (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.calc"]], "calc (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.calc"]], "calc (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.calc"]], "calc (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.calc"]], "calc (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.calc"]], "calc (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.calc"]], "calc (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.calc"]], "calc (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.calc"]], "calc (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.calc"]], "calc (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.calc"]], "calc (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.calc"]], "calc (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.calc"]], "calc (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.calc"]], "constant (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.constant"]], "cost_history (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.cost_history"]], "cost_history (matscipy.calculators.fitting.fit attribute)": [[34, "matscipy.calculators.fitting.Fit.cost_history"]], "cost_history (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.cost_history"]], "cost_history (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.cost_history"]], "cost_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.cost_history"]], "cost_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.cost_history"]], "crystal (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.crystal"]], "crystal (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.crystal"]], "crystal (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.crystal"]], "crystal (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.crystal"]], "crystal (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.crystal"]], "crystal (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.crystal"]], "crystal (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.crystal"]], "crystal (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.crystal"]], "crystalstr (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.crystalstr"]], "default (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.default"]], "derived (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.derived"]], "energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.energy"]], "fmax (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.fmax"]], "fmax (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.fmax"]], "fmax (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.fmax"]], "fmax (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.fmax"]], "fmax (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.fmax"]], "fmax (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.fmax"]], "fmax (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.fmax"]], "fmax (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.fmax"]], "fmax (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.fmax"]], "forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.forces"]], "func (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.func"]], "get() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get"]], "get_c11() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_C11"]], "get_c33() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_C33"]], "get_c33() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C33"]], "get_c44() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C44"]], "get_c66() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_C66"]], "get_c66() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C66"]], "get_cp() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_Cp"]], "get_d1() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_D1"]], "get_d1() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D1"]], "get_d2() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_D2"]], "get_d2() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D2"]], "get_d4() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_D4"]], "get_d4() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D4"]], "get_sfe() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_SFE"]], "get_array() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get_array"]], "get_cohesive_energy() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_cohesive_energy"]], "get_constant() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get_constant"]], "get_cost_function() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_cost_function"]], "get_cost_history() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_cost_history"]], "get_derived() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get_derived"]], "get_dict() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get_dict"]], "get_distance() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_distance"]], "get_lattice_constant() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_lattice_constant"]], "get_lower_bounds() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get_lower_bounds"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_parameters_at_minimal_cost"]], "get_potential_energy() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_potential_energy"]], "get_residuals() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_residuals"]], "get_residuals_history() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_residuals_history"]], "get_square_residuals() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.get_square_residuals"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.get_surface_energy"]], "get_upper_bounds() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get_upper_bounds"]], "get_variable() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.get_variable"]], "hidden (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.hidden"]], "in_range() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.in_range"]], "matscipy.calculators.fitting": [[34, "module-matscipy.calculators.fitting"]], "minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fit attribute)": [[34, "matscipy.calculators.fitting.Fit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.minimal_cost"]], "new_bulk() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.new_bulk"]], "new_dimer() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.new_dimer"]], "new_surface() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.new_surface"]], "optimize() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.optimize"]], "optimize() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.optimize"]], "optimize() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.optimize"]], "optimize() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.optimize"]], "optimize() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.optimize"]], "optimize() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.optimize"]], "optimize() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.optimize"]], "optimize() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.optimize"]], "optimize() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.optimize"]], "optimize() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.optimize"]], "optimize() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.optimize"]], "optimize() (matscipy.calculators.fitting.rotatingfit method)": [[34, "matscipy.calculators.fitting.RotatingFit.optimize"]], "optimize_anneal() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.optimize_anneal"]], "optimize_brute() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.optimize_brute"]], "optimize_leastsq() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.optimize_leastsq"]], "optimize_openopt() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.optimize_openopt"]], "par (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.par"]], "par (matscipy.calculators.fitting.fit attribute)": [[34, "matscipy.calculators.fitting.Fit.par"]], "par (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.par"]], "par (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.par"]], "par (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.par"]], "par (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.par"]], "par (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.par"]], "par (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.par"]], "par (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.par"]], "par (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.par"]], "par (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.par"]], "par (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.par"]], "par (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.par"]], "par (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.par"]], "par (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.par"]], "par (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.par"]], "par (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.par"]], "par (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.par"]], "par (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.par"]], "par (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.par"]], "par (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.par"]], "par (matscipy.calculators.fitting.rotatingfit attribute)": [[34, "matscipy.calculators.fitting.RotatingFit.par"]], "par_at_minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fit attribute)": [[34, "matscipy.calculators.fitting.Fit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.par_at_minimal_cost"]], "parameters (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.parameters"]], "r0 (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.r0"]], "range_mapping (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.range_mapping"]], "ranges (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.ranges"]], "residuals_history (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fit attribute)": [[34, "matscipy.calculators.fitting.Fit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.penalty attribute)": [[34, "matscipy.calculators.fitting.Penalty.residuals_history"]], "set() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.set"]], "set_array() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.set_array"]], "set_calculator() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.set_calculator"]], "set_calculator_class() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.set_calculator_class"]], "set_constant() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.set_constant"]], "set_derived() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.set_derived"]], "set_dict() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.set_dict"]], "set_parameters() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.set_parameters"]], "set_parameters_from_array() (matscipy.calculators.fitting.combinedfit method)": [[34, "matscipy.calculators.fitting.CombinedFit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fit method)": [[34, "matscipy.calculators.fitting.Fit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitb2 method)": [[34, "matscipy.calculators.fitting.FitB2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitbcc method)": [[34, "matscipy.calculators.fitting.FitBCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitcubiccrystal method)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond method)": [[34, "matscipy.calculators.fitting.FitDiamond.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond100 method)": [[34, "matscipy.calculators.fitting.FitDiamond100.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond110 method)": [[34, "matscipy.calculators.fitting.FitDiamond110.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond111 method)": [[34, "matscipy.calculators.fitting.FitDiamond111.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdimer method)": [[34, "matscipy.calculators.fitting.FitDimer.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitfcc method)": [[34, "matscipy.calculators.fitting.FitFCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphene method)": [[34, "matscipy.calculators.fitting.FitGraphene.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphite method)": [[34, "matscipy.calculators.fitting.FitGraphite.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_0 method)": [[34, "matscipy.calculators.fitting.FitL1_0.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_2 method)": [[34, "matscipy.calculators.fitting.FitL1_2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsc method)": [[34, "matscipy.calculators.fitting.FitSC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsinglepoint method)": [[34, "matscipy.calculators.fitting.FitSinglePoint.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsurface method)": [[34, "matscipy.calculators.fitting.FitSurface.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.penalty method)": [[34, "matscipy.calculators.fitting.Penalty.set_parameters_from_array"]], "set_range_derived() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.set_range_derived"]], "set_variable() (matscipy.calculators.fitting.parameters method)": [[34, "matscipy.calculators.fitting.Parameters.set_variable"]], "stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.stress"]], "surfstr (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.surfstr"]], "targets (matscipy.calculators.fitting.combinedfit attribute)": [[34, "matscipy.calculators.fitting.CombinedFit.targets"]], "targets (matscipy.calculators.fitting.rotatingfit attribute)": [[34, "matscipy.calculators.fitting.RotatingFit.targets"]], "variable (matscipy.calculators.fitting.parameters attribute)": [[34, "matscipy.calculators.fitting.Parameters.variable"]], "w_d0 (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.w_D0"]], "w_ec (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.w_Ec"]], "w_ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.w_Ec"]], "w_ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.w_Ec"]], "w_a0 (matscipy.calculators.fitting.fitb2 attribute)": [[34, "matscipy.calculators.fitting.FitB2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitbcc attribute)": [[34, "matscipy.calculators.fitting.FitBCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[34, "matscipy.calculators.fitting.FitCubicCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[34, "matscipy.calculators.fitting.FitDiamond.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond100.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond110.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[34, "matscipy.calculators.fitting.FitDiamond111.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitfcc attribute)": [[34, "matscipy.calculators.fitting.FitFCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[34, "matscipy.calculators.fitting.FitGraphene.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[34, "matscipy.calculators.fitting.FitGraphite.w_a0"]], "w_a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitHexagonalCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[34, "matscipy.calculators.fitting.FitL1_2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsc attribute)": [[34, "matscipy.calculators.fitting.FitSC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsurface attribute)": [[34, "matscipy.calculators.fitting.FitSurface.w_a0"]], "w_a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.w_a0"]], "w_c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[34, "matscipy.calculators.fitting.FitL1_0.w_c0"]], "w_c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[34, "matscipy.calculators.fitting.FitTetragonalCrystal.w_c0"]], "w_energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.w_energy"]], "w_forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.w_forces"]], "w_r0 (matscipy.calculators.fitting.fitdimer attribute)": [[34, "matscipy.calculators.fitting.FitDimer.w_r0"]], "w_stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[34, "matscipy.calculators.fitting.FitSinglePoint.w_stress"]], "matscipy.calculators.manybody": [[35, "module-matscipy.calculators.manybody"]], "manybody (class in matscipy.calculators.manybody.calculator)": [[36, "matscipy.calculators.manybody.calculator.Manybody"]], "nicemanybody (class in matscipy.calculators.manybody.calculator)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody"]], "nicemanybody.f (class in matscipy.calculators.manybody.calculator)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.F"]], "nicemanybody.g (class in matscipy.calculators.manybody.calculator)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.G"]], "__init__() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.__init__"]], "__init__() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.__init__"]], "band_structure() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.band_structure"]], "band_structure() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.band_structure"]], "calculate() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.calculate"]], "calculate() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_forces"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_stress"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.calculate_properties"]], "calculate_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.calculation_required"]], "calculation_required() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.check_state"]], "check_state() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.check_state"]], "default_parameters (matscipy.calculators.manybody.calculator.manybody attribute)": [[36, "matscipy.calculators.manybody.calculator.Manybody.default_parameters"]], "default_parameters (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.default_parameters"]], "directory (matscipy.calculators.manybody.calculator.manybody property)": [[36, "matscipy.calculators.manybody.calculator.Manybody.directory"]], "directory (matscipy.calculators.manybody.calculator.nicemanybody property)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.manybody attribute)": [[36, "matscipy.calculators.manybody.calculator.Manybody.discard_results_on_any_change"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.export_properties"]], "export_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_atoms"]], "get_atoms() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_birch_coefficients"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_born_elastic_constants"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_charges"]], "get_charges() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_charges"]], "get_cutoff() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_cutoff"]], "get_cutoff() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_cutoff"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_default_parameters"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_dipole_moment"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_dynamical_matrix"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_elastic_constants"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_forces"]], "get_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_hessian"]], "get_hessian() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_hessian_from_second_derivative"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian_from_second_derivative"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moment"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moments"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_forces_from_second_derivative"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_forces_from_second_derivative"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_nonaffine_forces"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_numerical_non_affine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energies"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_property"]], "get_property() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_property"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_second_derivative"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_second_derivative"]], "get_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_stress"]], "get_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.get_stresses"]], "get_stresses() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.F.gradient"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.G.gradient"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.F.hessian"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.G.hessian"]], "ignored_changes (matscipy.calculators.manybody.calculator.manybody attribute)": [[36, "matscipy.calculators.manybody.calculator.Manybody.ignored_changes"]], "ignored_changes (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.calculator.manybody attribute)": [[36, "matscipy.calculators.manybody.calculator.Manybody.implemented_properties"]], "implemented_properties (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.implemented_properties"]], "label (matscipy.calculators.manybody.calculator.manybody property)": [[36, "matscipy.calculators.manybody.calculator.Manybody.label"]], "label (matscipy.calculators.manybody.calculator.nicemanybody property)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.label"]], "matscipy.calculators.manybody.calculator": [[36, "module-matscipy.calculators.manybody.calculator"]], "name (matscipy.calculators.manybody.calculator.manybody attribute)": [[36, "matscipy.calculators.manybody.calculator.Manybody.name"]], "name (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.name"]], "read() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.read"]], "read() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.read"]], "read_atoms() (matscipy.calculators.manybody.calculator.manybody class method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.read_atoms"]], "read_atoms() (matscipy.calculators.manybody.calculator.nicemanybody class method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.read_atoms"]], "reset() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.reset"]], "reset() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.reset"]], "set() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.set"]], "set() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.set"]], "set_label() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.set_label"]], "set_label() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.set_label"]], "todict() (matscipy.calculators.manybody.calculator.manybody method)": [[36, "matscipy.calculators.manybody.calculator.Manybody.todict"]], "todict() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[36, "matscipy.calculators.manybody.calculator.NiceManybody.todict"]], "matscipy.calculators.manybody.explicit_forms": [[37, "module-matscipy.calculators.manybody.explicit_forms"]], "harmonicangle (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle"]], "harmonicbond (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond"]], "zeropair (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair"]], "zerotriplet (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__init__"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.gradient"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[38, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[38, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "kumagai() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[39, "matscipy.calculators.manybody.explicit_forms.kumagai.Kumagai"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[39, "matscipy.calculators.manybody.explicit_forms.kumagai.ab"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[39, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "stillingerweber() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[40, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.StillingerWeber"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[40, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[40, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "tersoffbrenner() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[41, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.TersoffBrenner"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[41, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "mix() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[41, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix"]], "mix_arithmetic() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[41, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_arithmetic"]], "mix_geometric() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[41, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_geometric"]], "pair_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[41, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.pair_index"]], "triplet_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[41, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.triplet_index"]], "manybody (class in matscipy.calculators.manybody.newmb)": [[42, "matscipy.calculators.manybody.newmb.Manybody"]], "manybody.phi (class in matscipy.calculators.manybody.newmb)": [[42, "matscipy.calculators.manybody.newmb.Manybody.Phi"]], "manybody.theta (class in matscipy.calculators.manybody.newmb)": [[42, "matscipy.calculators.manybody.newmb.Manybody.Theta"]], "__init__() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.__init__"]], "band_structure() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.band_structure"]], "calculate() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.check_state"]], "default_parameters (matscipy.calculators.manybody.newmb.manybody attribute)": [[42, "matscipy.calculators.manybody.newmb.Manybody.default_parameters"]], "directory (matscipy.calculators.manybody.newmb.manybody property)": [[42, "matscipy.calculators.manybody.newmb.Manybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.newmb.manybody attribute)": [[42, "matscipy.calculators.manybody.newmb.Manybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_charges"]], "get_default_parameters() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_property"]], "get_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.Phi.gradient"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.Theta.gradient"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.Phi.hessian"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.Theta.hessian"]], "ignored_changes (matscipy.calculators.manybody.newmb.manybody attribute)": [[42, "matscipy.calculators.manybody.newmb.Manybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.newmb.manybody attribute)": [[42, "matscipy.calculators.manybody.newmb.Manybody.implemented_properties"]], "label (matscipy.calculators.manybody.newmb.manybody property)": [[42, "matscipy.calculators.manybody.newmb.Manybody.label"]], "matscipy.calculators.manybody.newmb": [[42, "module-matscipy.calculators.manybody.newmb"]], "read() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.read"]], "read_atoms() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.read_atoms"]], "reset() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.reset"]], "set() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.set"]], "set_label() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.set_label"]], "sum_xx_sum_ijk_tau_xx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.sum_XX_sum_ijk_tau_XX_mn"]], "sum_xy_sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.sum_XY_sum_ijk_tau_XY_mn"]], "sum_x_sum_ijk_tau_ijx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ijX_mn"]], "sum_x_sum_ijk_tau_ij_xor_x_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ij_XOR_X_mn"]], "sum_ij_pi_ij_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_pi_ij_n"]], "sum_ij_sum_x_pi_x_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_sum_X_pi_X_n"]], "sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.sum_ijk_tau_XY_mn"]], "todict() (matscipy.calculators.manybody.newmb.manybody method)": [[42, "matscipy.calculators.manybody.newmb.Manybody.todict"]], "bornmayercut (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.BornMayerCut"]], "harmonicangle (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.HarmonicAngle"]], "harmonicpair (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.HarmonicPair"]], "kumagaiangle (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.KumagaiAngle"]], "kumagaipair (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.KumagaiPair"]], "lennardjones (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.LennardJones"]], "stillingerweberangle (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberAngle"]], "stillingerweberpair (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberPair"]], "symphi (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.SymPhi"]], "symtheta (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.SymTheta"]], "tersoffbrennerangle (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle"]], "tersoffbrennerpair (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerPair"]], "zeroangle (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.ZeroAngle"]], "zeropair (class in matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.ZeroPair"]], "__init__() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[43, "matscipy.calculators.manybody.potentials.BornMayerCut.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[43, "matscipy.calculators.manybody.potentials.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[43, "matscipy.calculators.manybody.potentials.HarmonicPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[43, "matscipy.calculators.manybody.potentials.KumagaiAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[43, "matscipy.calculators.manybody.potentials.KumagaiPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.lennardjones method)": [[43, "matscipy.calculators.manybody.potentials.LennardJones.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.symphi method)": [[43, "matscipy.calculators.manybody.potentials.SymPhi.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.symtheta method)": [[43, "matscipy.calculators.manybody.potentials.SymTheta.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.__init__"]], "angle_distance_defined() (in module matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.angle_distance_defined"]], "distance_defined() (in module matscipy.calculators.manybody.potentials)": [[43, "matscipy.calculators.manybody.potentials.distance_defined"]], "gradient() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[43, "matscipy.calculators.manybody.potentials.BornMayerCut.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[43, "matscipy.calculators.manybody.potentials.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[43, "matscipy.calculators.manybody.potentials.HarmonicPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[43, "matscipy.calculators.manybody.potentials.KumagaiAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[43, "matscipy.calculators.manybody.potentials.KumagaiPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.lennardjones method)": [[43, "matscipy.calculators.manybody.potentials.LennardJones.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.symphi method)": [[43, "matscipy.calculators.manybody.potentials.SymPhi.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.symtheta method)": [[43, "matscipy.calculators.manybody.potentials.SymTheta.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeroangle method)": [[43, "matscipy.calculators.manybody.potentials.ZeroAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeropair method)": [[43, "matscipy.calculators.manybody.potentials.ZeroPair.gradient"]], "hessian() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[43, "matscipy.calculators.manybody.potentials.BornMayerCut.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[43, "matscipy.calculators.manybody.potentials.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[43, "matscipy.calculators.manybody.potentials.HarmonicPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[43, "matscipy.calculators.manybody.potentials.KumagaiAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[43, "matscipy.calculators.manybody.potentials.KumagaiPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.lennardjones method)": [[43, "matscipy.calculators.manybody.potentials.LennardJones.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[43, "matscipy.calculators.manybody.potentials.StillingerWeberPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.symphi method)": [[43, "matscipy.calculators.manybody.potentials.SymPhi.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.symtheta method)": [[43, "matscipy.calculators.manybody.potentials.SymTheta.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[43, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeroangle method)": [[43, "matscipy.calculators.manybody.potentials.ZeroAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeropair method)": [[43, "matscipy.calculators.manybody.potentials.ZeroPair.hessian"]], "matscipy.calculators.manybody.potentials": [[43, "module-matscipy.calculators.manybody.potentials"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm": [[44, "module-matscipy.calculators.mcfm"]], "print_message() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential class method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[44, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.todict"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm.calculator)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm.calculator": [[45, "module-matscipy.calculators.mcfm.calculator"]], "print_message() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential class method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[45, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.todict"]], "clusterdata (class in matscipy.calculators.mcfm.cluster_data)": [[46, "matscipy.calculators.mcfm.cluster_data.ClusterData"]], "__init__() (matscipy.calculators.mcfm.cluster_data.clusterdata method)": [[46, "matscipy.calculators.mcfm.cluster_data.ClusterData.__init__"]], "forces (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[46, "matscipy.calculators.mcfm.cluster_data.ClusterData.forces"]], "mark (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[46, "matscipy.calculators.mcfm.cluster_data.ClusterData.mark"]], "matscipy.calculators.mcfm.cluster_data": [[46, "module-matscipy.calculators.mcfm.cluster_data"]], "qm_list (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[46, "matscipy.calculators.mcfm.cluster_data.ClusterData.qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[47, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "get_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control)": [[48, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[48, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[49, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "worker_populate_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker)": [[49, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[50, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "neighbourlistbase (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base)": [[51, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[51, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[51, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[51, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.update"]], "neighbourlistmcfm (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm)": [[52, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM"]], "__init__() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[52, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.__init__"]], "do_update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[52, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.do_update"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[52, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[52, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[52, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.update"]], "qmcluster (class in matscipy.calculators.mcfm.qm_cluster)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster"]], "__init__() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster.__init__"]], "attach_clustering_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_clustering_module"]], "attach_flagging_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_flagging_module"]], "attach_neighbour_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_neighbour_list"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster.carve_cluster"]], "matscipy.calculators.mcfm.qm_cluster": [[53, "module-matscipy.calculators.mcfm.qm_cluster"]], "reset_energized_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster.reset_energized_list"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[53, "matscipy.calculators.mcfm.qm_cluster.QMCluster.update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[54, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "baseqmclustertool (class in matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool)": [[55, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[55, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.__init__"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[55, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[55, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[55, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "qmclusteringtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.__init__"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.carve_cluster"]], "complete_aromatic_rings() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.complete_aromatic_rings"]], "create_buffer_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_buffer_region"]], "create_cluster_from_marks() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_cluster_from_marks"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_cluster"]], "hydrogenate_dangling_bonds() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_dangling_bonds"]], "include_special_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.include_special_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[56, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "print_message() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.print_message"]], "replace_double_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_double_bond"]], "replace_single_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[56, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_single_bond"]], "qmflaggingtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.__init__"]], "create_cluster_around_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.create_cluster_around_atom"]], "expand_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.expand_cluster"]], "exponential_moving_average() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.exponential_moving_average"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.find_neighbours"]], "get_energized_list() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.get_energized_list"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.hydrogenate_cluster"]], "join_clusters() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.join_clusters"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[57, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "update_avg_property_per_atom() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.update_avg_property_per_atom"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[57, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.update_qm_region"]], "matscipy.calculators.pair_potential": [[58, "module-matscipy.calculators.pair_potential"]], "beestkramersanten (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten"]], "cutoffinteraction (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.CutoffInteraction"]], "feneljcut (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.FeneLJCut"]], "lennardjones84 (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJones84"]], "lennardjonescut (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesCut"]], "lennardjoneslinear (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear"]], "lennardjonesquadratic (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic"]], "pairpotential (class in matscipy.calculators.pair_potential.calculator)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential"]], "__init__() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[59, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[59, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[59, "matscipy.calculators.pair_potential.calculator.FeneLJCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJones84.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.__init__"]], "band_structure() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.band_structure"]], "calculate() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.calculation_required"]], "check_state() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.check_state"]], "cutoff (matscipy.calculators.pair_potential.calculator.beestkramersanten property)": [[59, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.cutoffinteraction property)": [[59, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.feneljcut property)": [[59, "matscipy.calculators.pair_potential.calculator.FeneLJCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjones84 property)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJones84.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonescut property)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjoneslinear property)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic property)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.cutoff"]], "default_parameters (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.default_parameters"]], "derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[59, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[59, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[59, "matscipy.calculators.pair_potential.calculator.FeneLJCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJones84.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.derivative"]], "directory (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.export_properties"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[59, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[59, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[59, "matscipy.calculators.pair_potential.calculator.FeneLJCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJones84.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.first_derivative"]], "get_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_charges"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[59, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[59, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[59, "matscipy.calculators.pair_potential.calculator.FeneLJCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJones84.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.get_cutoff"]], "get_default_parameters() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_elastic_constants"]], "get_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_forces"]], "get_hessian() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energy"]], "get_property() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_property"]], "get_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stresses"]], "ignored_changes (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.implemented_properties"]], "label (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.label"]], "matscipy.calculators.pair_potential.calculator": [[59, "module-matscipy.calculators.pair_potential.calculator"]], "name (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.name"]], "read() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.read"]], "read_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential class method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.read_atoms"]], "reset() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.reset"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[59, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[59, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[59, "matscipy.calculators.pair_potential.calculator.FeneLJCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJones84.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[59, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.second_derivative"]], "set() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.set"]], "set_label() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.set_label"]], "todict() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[59, "matscipy.calculators.pair_potential.calculator.PairPotential.todict"]], "matscipy.calculators.polydisperse": [[60, "module-matscipy.calculators.polydisperse"]], "inversepowerlawpotential (class in matscipy.calculators.polydisperse.calculator)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential"]], "polydisperse (class in matscipy.calculators.polydisperse.calculator)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse"]], "__init__() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.__init__"]], "__init__() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.__init__"]], "band_structure() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.band_structure"]], "calculate() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate"]], "calculate_numerical_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_properties"]], "calculation_required() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculation_required"]], "check_state() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.check_state"]], "default_parameters (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.default_parameters"]], "derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.derivative"]], "directory (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.directory"]], "discard_results_on_any_change (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.export_properties"]], "first_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.first_derivative"]], "get_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_charges"]], "get_coeffs() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_coeffs"]], "get_cutoff() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_cutoff"]], "get_default_parameters() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_elastic_constants"]], "get_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_forces"]], "get_hessian() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moments"]], "get_maxsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_maxSize"]], "get_minsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_minSize"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energy"]], "get_property() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_property"]], "get_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stresses"]], "ignored_changes (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.ignored_changes"]], "implemented_properties (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.implemented_properties"]], "label (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.label"]], "matscipy.calculators.polydisperse.calculator": [[61, "module-matscipy.calculators.polydisperse.calculator"]], "mix_sizes() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.mix_sizes"]], "name (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.name"]], "read() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.read"]], "read_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse class method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.read_atoms"]], "reset() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.reset"]], "second_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[61, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.second_derivative"]], "set() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.set"]], "set_label() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.set_label"]], "todict() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[61, "matscipy.calculators.polydisperse.calculator.Polydisperse.todict"]], "supercellcalculator (class in matscipy.calculators.supercell_calculator)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator"]], "__init__() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.__init__"]], "band_structure() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.band_structure"]], "calculate() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculation_required"]], "check_state() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.check_state"]], "default_parameters (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.default_parameters"]], "directory (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.export_properties"]], "get_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_atoms"]], "get_charges() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_dipole_moment"]], "get_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_forces"]], "get_magnetic_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_property"]], "get_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stress"]], "get_stresses() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.implemented_properties"]], "label (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.label"]], "matscipy.calculators.supercell_calculator": [[62, "module-matscipy.calculators.supercell_calculator"]], "name (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.name"]], "read() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.read"]], "read_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator class method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.read_atoms"]], "reset() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.reset"]], "set() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.set"]], "set_label() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.set_label"]], "todict() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[62, "matscipy.calculators.supercell_calculator.SupercellCalculator.todict"]], "removesimplesheardeformation (class in matscipy.deformation)": [[63, "matscipy.deformation.RemoveSimpleShearDeformation"]], "__init__() (matscipy.deformation.removesimplesheardeformation method)": [[63, "matscipy.deformation.RemoveSimpleShearDeformation.__init__"]], "get_shear_distance() (in module matscipy.deformation)": [[63, "matscipy.deformation.get_shear_distance"]], "matscipy.deformation": [[63, "module-matscipy.deformation"]], "adstroh (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.ADstroh"]], "adstroh (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.ADstroh"]], "adstroh (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.ADstroh"]], "adstroh (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.ADstroh"]], "adstroh (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.ADstroh"]], "anisotropicdislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.AnisotropicDislocation"]], "bccedge100110dislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation"]], "bccedge100dislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BCCEdge100Dislocation"]], "bccedge111dislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BCCEdge111Dislocation"]], "bccedge111bardislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BCCEdge111barDislocation"]], "bccmixed111dislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BCCMixed111Dislocation"]], "bccscrew111dislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BCCScrew111Dislocation"]], "bodycenteredcubicoctahedralfactory (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory"]], "bodycenteredcubictetrahedralfactory (class in matscipy.dislocation)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory"]], "c11 (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.C11"]], "c11 (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.C11"]], "c11 (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.C11"]], "c11 (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.C11"]], "c11 (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.C11"]], "c11 (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.C11"]], "c11 (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.C11"]], "c11 (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.C11"]], "c11 (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.C11"]], "c11 (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.C11"]], "c11 (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.C11"]], "c11 (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.C11"]], "c11 (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.C11"]], "c11 (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.C11"]], "c11 (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.C11"]], "c11 (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.C11"]], "c12 (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.C12"]], "c12 (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.C12"]], "c12 (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.C12"]], "c12 (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.C12"]], "c12 (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.C12"]], "c12 (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.C12"]], "c12 (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.C12"]], "c12 (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.C12"]], "c12 (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.C12"]], "c12 (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.C12"]], "c12 (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.C12"]], "c12 (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.C12"]], "c12 (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.C12"]], "c12 (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.C12"]], "c12 (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.C12"]], "c12 (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.C12"]], "c44 (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.C44"]], "c44 (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.C44"]], "c44 (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.C44"]], "c44 (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.C44"]], "c44 (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.C44"]], "c44 (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.C44"]], "c44 (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.C44"]], "c44 (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.C44"]], "c44 (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.C44"]], "c44 (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.C44"]], "c44 (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.C44"]], "c44 (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.C44"]], "c44 (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.C44"]], "c44 (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.C44"]], "c44 (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.C44"]], "c44 (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.C44"]], "cubiccrystaldislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.CubicCrystalDislocation"]], "cubiccrystaldissociateddislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation"]], "diamondglide30degreepartial (class in matscipy.dislocation)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial"]], "diamondglide60degree (class in matscipy.dislocation)": [[64, "matscipy.dislocation.DiamondGlide60Degree"]], "diamondglide90degreepartial (class in matscipy.dislocation)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial"]], "diamondglidescrew (class in matscipy.dislocation)": [[64, "matscipy.dislocation.DiamondGlideScrew"]], "fccedge110dislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.FCCEdge110Dislocation"]], "fccedgeshockleypartial (class in matscipy.dislocation)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial"]], "fccscrew110dislocation (class in matscipy.dislocation)": [[64, "matscipy.dislocation.FCCScrew110Dislocation"]], "fccscrewshockleypartial (class in matscipy.dislocation)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial"]], "fixedlineatoms (class in matscipy.dislocation)": [[64, "matscipy.dislocation.FixedLineAtoms"]], "__init__() (matscipy.dislocation.anisotropicdislocation method)": [[64, "matscipy.dislocation.AnisotropicDislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.__init__"]], "__init__() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.__init__"]], "__init__() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.__init__"]], "__init__() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.__init__"]], "__init__() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fixedlineatoms method)": [[64, "matscipy.dislocation.FixedLineAtoms.__init__"]], "adjust_forces() (matscipy.dislocation.fixedlineatoms method)": [[64, "matscipy.dislocation.FixedLineAtoms.adjust_forces"]], "adjust_positions() (matscipy.dislocation.fixedlineatoms method)": [[64, "matscipy.dislocation.FixedLineAtoms.adjust_positions"]], "alat (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id68"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.alat"]], "alat (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id57"], [64, "matscipy.dislocation.BCCEdge100Dislocation.alat"]], "alat (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id24"], [64, "matscipy.dislocation.BCCEdge111Dislocation.alat"]], "alat (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id35"], [64, "matscipy.dislocation.BCCEdge111barDislocation.alat"]], "alat (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id46"], [64, "matscipy.dislocation.BCCMixed111Dislocation.alat"]], "alat (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id13"], [64, "matscipy.dislocation.BCCScrew111Dislocation.alat"]], "alat (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id7"], [64, "matscipy.dislocation.CubicCrystalDislocation.alat"]], "alat (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.alat"]], "alat (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id79"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.alat"]], "alat (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.alat"]], "alat (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id90"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.alat"]], "alat (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.alat"]], "alat (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.alat"]], "alat (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id112"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.alat"]], "alat (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.alat"]], "alat (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id101"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.alat"]], "align() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.align"]], "align() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.align"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.atoms_in_unit_cell"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.atoms_in_unit_cell"]], "axes (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id70"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.axes"]], "axes (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id59"], [64, "matscipy.dislocation.BCCEdge100Dislocation.axes"]], "axes (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id26"], [64, "matscipy.dislocation.BCCEdge111Dislocation.axes"]], "axes (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id37"], [64, "matscipy.dislocation.BCCEdge111barDislocation.axes"]], "axes (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id48"], [64, "matscipy.dislocation.BCCMixed111Dislocation.axes"]], "axes (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id15"], [64, "matscipy.dislocation.BCCScrew111Dislocation.axes"]], "axes (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id4"], [64, "matscipy.dislocation.CubicCrystalDislocation.axes"]], "axes (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.axes"]], "axes (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id81"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.axes"]], "axes (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.axes"]], "axes (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id92"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.axes"]], "axes (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.axes"]], "axes (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.axes"]], "axes (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id114"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.axes"]], "axes (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.axes"]], "axes (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id103"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.axes"]], "basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.basis_factor"]], "basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.basis_factor"]], "bravais_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.bravais_basis"]], "bravais_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.bravais_basis"]], "build_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.build_cylinder"]], "build_glide_configurations() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.build_glide_configurations"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.build_impurity_cylinder"]], "burgers (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge100110dislocation property)": [[64, "id74"]], "burgers (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge100dislocation property)": [[64, "id63"]], "burgers (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge111dislocation property)": [[64, "id30"]], "burgers (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.burgers"]], "burgers (matscipy.dislocation.bccedge111bardislocation property)": [[64, "id41"]], "burgers (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccmixed111dislocation property)": [[64, "id51"]], "burgers (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccscrew111dislocation property)": [[64, "id18"]], "burgers (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.burgers"]], "burgers (matscipy.dislocation.cubiccrystaldislocation property)": [[64, "id9"]], "burgers (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.burgers"]], "burgers (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.burgers"]], "burgers (matscipy.dislocation.diamondglide30degreepartial property)": [[64, "id86"]], "burgers (matscipy.dislocation.diamondglide60degree property)": [[64, "matscipy.dislocation.DiamondGlide60Degree.burgers"]], "burgers (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.burgers"]], "burgers (matscipy.dislocation.diamondglide90degreepartial property)": [[64, "id97"]], "burgers (matscipy.dislocation.diamondglidescrew property)": [[64, "matscipy.dislocation.DiamondGlideScrew.burgers"]], "burgers (matscipy.dislocation.fccedge110dislocation property)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.burgers"]], "burgers (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.burgers"]], "burgers (matscipy.dislocation.fccedgeshockleypartial property)": [[64, "id118"]], "burgers (matscipy.dislocation.fccscrew110dislocation property)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.burgers"]], "burgers (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.burgers"]], "burgers (matscipy.dislocation.fccscrewshockleypartial property)": [[64, "id107"]], "burgers_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id71"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id60"], [64, "matscipy.dislocation.BCCEdge100Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id27"], [64, "matscipy.dislocation.BCCEdge111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id38"], [64, "matscipy.dislocation.BCCEdge111barDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id49"], [64, "matscipy.dislocation.BCCMixed111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id16"], [64, "matscipy.dislocation.BCCScrew111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id5"], [64, "matscipy.dislocation.CubicCrystalDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id82"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id93"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id115"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id104"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.burgers_dimensionless"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.calc_num_atoms"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.calc_num_atoms"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.check_basis_volume"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.check_basis_volume"]], "check_duplicates() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.check_duplicates"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.chop_tolerance"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.chop_tolerance"]], "compare_configurations() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.compare_configurations"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.convert_to_natural_basis"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.convert_to_natural_basis"]], "cost_function() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.cost_function"]], "crystalstructure (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id73"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id62"], [64, "matscipy.dislocation.BCCEdge100Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id29"], [64, "matscipy.dislocation.BCCEdge111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id40"], [64, "matscipy.dislocation.BCCEdge111barDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id50"], [64, "matscipy.dislocation.BCCMixed111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id17"], [64, "matscipy.dislocation.BCCScrew111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id12"], [64, "matscipy.dislocation.CubicCrystalDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id85"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id96"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id117"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id106"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.crystalstructure"]], "deformation_gradient() (matscipy.dislocation.anisotropicdislocation method)": [[64, "matscipy.dislocation.AnisotropicDislocation.deformation_gradient"]], "dipole_displacement_angle() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.dipole_displacement_angle"]], "displacement() (matscipy.dislocation.anisotropicdislocation method)": [[64, "matscipy.dislocation.AnisotropicDislocation.displacement"]], "displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.displacements"]], "displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.displacements"]], "displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.displacements"]], "displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.displacements"]], "displacements() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.displacements"]], "displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.displacements"]], "element_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.element_basis"]], "element_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.element_basis"]], "find_directions() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_directions"]], "find_directions() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_directions"]], "find_ortho() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_ortho"]], "find_ortho() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_ortho"]], "fit_core_position() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.fit_core_position"]], "fit_core_position_images() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.fit_core_position_images"]], "gamma_line() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.gamma_line"]], "get_centering_mask() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.get_centering_mask"]], "get_elastic_constants() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.get_elastic_constants"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.get_lattice_constant"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.get_lattice_constant"]], "get_u_img() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.get_u_img"]], "glide_distance (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge100110dislocation property)": [[64, "id75"]], "glide_distance (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge100dislocation property)": [[64, "id64"]], "glide_distance (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge111dislocation property)": [[64, "id31"]], "glide_distance (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge111bardislocation property)": [[64, "id42"]], "glide_distance (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccmixed111dislocation property)": [[64, "id52"]], "glide_distance (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccscrew111dislocation property)": [[64, "id19"]], "glide_distance (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.cubiccrystaldislocation property)": [[64, "id11"]], "glide_distance (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide30degreepartial property)": [[64, "id87"]], "glide_distance (matscipy.dislocation.diamondglide60degree property)": [[64, "matscipy.dislocation.DiamondGlide60Degree.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide90degreepartial property)": [[64, "id98"]], "glide_distance (matscipy.dislocation.diamondglidescrew property)": [[64, "matscipy.dislocation.DiamondGlideScrew.glide_distance"]], "glide_distance (matscipy.dislocation.fccedge110dislocation property)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.glide_distance"]], "glide_distance (matscipy.dislocation.fccedgeshockleypartial property)": [[64, "id119"]], "glide_distance (matscipy.dislocation.fccscrew110dislocation property)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.glide_distance"]], "glide_distance (matscipy.dislocation.fccscrewshockleypartial property)": [[64, "id108"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.glide_distance_dimensionless"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.init_anisotropic_dislocation"]], "init_stroh() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.init_stroh"]], "inside() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inside"]], "inside() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inside"]], "int_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.int_basis"]], "int_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.int_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis_factor"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis_factor"]], "left_dislocation (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.left_dislocation"]], "left_dislocation (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.left_dislocation"]], "left_dislocation (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.left_dislocation"]], "left_dislocation (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.left_dislocation"]], "left_dislocation (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.left_dislocation"]], "make_barrier_configurations() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.make_barrier_configurations"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_crystal_basis"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_crystal_basis"]], "make_edge_cyl() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.make_edge_cyl"]], "make_edge_cyl_001_100() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.make_edge_cyl_001_100"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_list_of_atoms"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_list_of_atoms"]], "make_screw_cyl() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.make_screw_cyl"]], "make_screw_cyl_kink() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.make_screw_cyl_kink"]], "make_screw_quadrupole() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.make_screw_quadrupole"]], "make_screw_quadrupole_kink() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.make_screw_quadrupole_kink"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_unit_cell"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_unit_cell"]], "matscipy.dislocation": [[64, "module-matscipy.dislocation"]], "n_planes (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id72"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id61"], [64, "matscipy.dislocation.BCCEdge100Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id28"], [64, "matscipy.dislocation.BCCEdge111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id39"], [64, "matscipy.dislocation.BCCEdge111barDislocation.n_planes"]], "n_planes (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id53"], [64, "matscipy.dislocation.BCCMixed111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id20"], [64, "matscipy.dislocation.BCCScrew111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id0"], [64, "matscipy.dislocation.CubicCrystalDislocation.n_planes"]], "n_planes (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.n_planes"]], "n_planes (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id83"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.n_planes"]], "n_planes (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.n_planes"]], "n_planes (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id94"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.n_planes"]], "n_planes (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.n_planes"]], "n_planes (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id116"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.n_planes"]], "n_planes (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id105"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.n_planes"]], "new_left_burgers (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.new_left_burgers"]], "new_right_burgers (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.new_right_burgers"]], "other (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.other"]], "other (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.other"]], "ovito_dxa_straight_dislo_info() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.ovito_dxa_straight_dislo_info"]], "parity (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id76"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.parity"]], "parity (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id65"], [64, "matscipy.dislocation.BCCEdge100Dislocation.parity"]], "parity (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id32"], [64, "matscipy.dislocation.BCCEdge111Dislocation.parity"]], "parity (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id43"], [64, "matscipy.dislocation.BCCEdge111barDislocation.parity"]], "parity (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id54"], [64, "matscipy.dislocation.BCCMixed111Dislocation.parity"]], "parity (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id21"], [64, "matscipy.dislocation.BCCScrew111Dislocation.parity"]], "parity (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id6"], [64, "matscipy.dislocation.CubicCrystalDislocation.parity"]], "parity (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.parity"]], "parity (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id88"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.parity"]], "parity (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.parity"]], "parity (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id99"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.parity"]], "parity (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.parity"]], "parity (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.parity"]], "parity (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id120"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.parity"]], "parity (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.parity"]], "parity (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id109"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.parity"]], "pbc (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.pbc"]], "pbc (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.pbc"]], "pbc (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.pbc"]], "pbc (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.pbc"]], "pbc (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.pbc"]], "pbc (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.pbc"]], "pbc (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.pbc"]], "pbc (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.pbc"]], "pbc (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.pbc"]], "pbc (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.pbc"]], "pbc (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.pbc"]], "pbc (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.pbc"]], "pbc (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.pbc"]], "plot_bulk() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.plot_bulk"]], "plot_unit_cell() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.plot_unit_cell"]], "plot_vitek() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.plot_vitek"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.print_directions_and_miller"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.print_directions_and_miller"]], "process_element() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.process_element"]], "process_element() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.process_element"]], "put_atom() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.put_atom"]], "put_atom() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.put_atom"]], "read_dislo_qmmm() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.read_dislo_QMMM"]], "right_dislocation (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.right_dislocation"]], "right_dislocation (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.right_dislocation"]], "right_dislocation (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.right_dislocation"]], "right_dislocation (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.right_dislocation"]], "right_dislocation (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.right_dislocation"]], "screw_cyl_octahedral() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.screw_cyl_octahedral"]], "screw_cyl_tetrahedral() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.screw_cyl_tetrahedral"]], "self_consistent (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id77"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id66"], [64, "matscipy.dislocation.BCCEdge100Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id33"], [64, "matscipy.dislocation.BCCEdge111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id44"], [64, "matscipy.dislocation.BCCEdge111barDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id55"], [64, "matscipy.dislocation.BCCMixed111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id22"], [64, "matscipy.dislocation.BCCScrew111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id3"], [64, "matscipy.dislocation.CubicCrystalDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id84"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id95"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.self_consistent"]], "self_consistent (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id121"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.self_consistent"]], "self_consistent (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id110"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.self_consistent"]], "self_consistent_displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.self_consistent_displacements"]], "set_burgers() (matscipy.dislocation.bccedge100110dislocation method)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge100dislocation method)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111dislocation method)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111bardislocation method)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccmixed111dislocation method)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccscrew111dislocation method)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldislocation method)": [[64, "matscipy.dislocation.CubicCrystalDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide30degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide60degree method)": [[64, "matscipy.dislocation.DiamondGlide60Degree.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide90degreepartial method)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglidescrew method)": [[64, "matscipy.dislocation.DiamondGlideScrew.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedge110dislocation method)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedgeshockleypartial method)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrew110dislocation method)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrewshockleypartial method)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.set_burgers"]], "show_neb_configurations() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.show_NEB_configurations"]], "show_configuration() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.show_configuration"]], "slice_long_dislo() (in module matscipy.dislocation)": [[64, "matscipy.dislocation.slice_long_dislo"]], "stroh (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.stroh"]], "stroh (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.stroh"]], "stroh (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.stroh"]], "stroh (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.stroh"]], "stroh (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.stroh"]], "stroh (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.stroh"]], "stroh (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.stroh"]], "stroh (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.stroh"]], "stroh (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.stroh"]], "stroh (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.stroh"]], "stroh (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.stroh"]], "stroh (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.stroh"]], "stroh (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.stroh"]], "unit_cell (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "id69"], [64, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "id58"], [64, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "id25"], [64, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "id36"], [64, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "id47"], [64, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "id14"], [64, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "id8"], [64, "matscipy.dislocation.CubicCrystalDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "id80"], [64, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "id91"], [64, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.unit_cell"]], "unit_cell (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "id113"], [64, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell"]], "unit_cell (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "id102"], [64, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell"]], "unit_cell_core_position (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge100110dislocation property)": [[64, "id78"]], "unit_cell_core_position (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge100dislocation property)": [[64, "id67"]], "unit_cell_core_position (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge111dislocation property)": [[64, "id34"]], "unit_cell_core_position (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge111bardislocation property)": [[64, "id45"]], "unit_cell_core_position (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccmixed111dislocation property)": [[64, "id56"]], "unit_cell_core_position (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccscrew111dislocation property)": [[64, "id23"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldislocation property)": [[64, "id10"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide30degreepartial property)": [[64, "id89"]], "unit_cell_core_position (matscipy.dislocation.diamondglide60degree property)": [[64, "matscipy.dislocation.DiamondGlide60Degree.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide90degreepartial property)": [[64, "id100"]], "unit_cell_core_position (matscipy.dislocation.diamondglidescrew property)": [[64, "matscipy.dislocation.DiamondGlideScrew.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedge110dislocation property)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedgeshockleypartial property)": [[64, "id122"]], "unit_cell_core_position (matscipy.dislocation.fccscrew110dislocation property)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccscrewshockleypartial property)": [[64, "id111"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[64, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[64, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[64, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[64, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[64, "matscipy.dislocation.DiamondGlide60Degree.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[64, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[64, "matscipy.dislocation.DiamondGlideScrew.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[64, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[64, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[64, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[64, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell_core_position_dimensionless"]], "xtal_name (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.xtal_name"]], "xtal_name (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[64, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.xtal_name"]], "removedrift (class in matscipy.drift)": [[65, "matscipy.drift.RemoveDrift"]], "__init__() (matscipy.drift.removedrift method)": [[65, "matscipy.drift.RemoveDrift.__init__"]], "matscipy.drift": [[65, "module-matscipy.drift"]], "cubicelasticmoduli (class in matscipy.elasticity)": [[66, "matscipy.elasticity.CubicElasticModuli"]], "voigt_6_to_full_3x3_strain() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.Voigt_6_to_full_3x3_strain"]], "voigt_6_to_full_3x3_stress() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.Voigt_6_to_full_3x3_stress"]], "voigt_6x6_to_cubic() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.Voigt_6x6_to_cubic"]], "voigt_6x6_to_full_3x3x3x3() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.Voigt_6x6_to_full_3x3x3x3"]], "__init__() (matscipy.elasticity.cubicelasticmoduli method)": [[66, "matscipy.elasticity.CubicElasticModuli.__init__"]], "compliance() (matscipy.elasticity.cubicelasticmoduli method)": [[66, "matscipy.elasticity.CubicElasticModuli.compliance"]], "cubic_to_voigt_6x6() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.cubic_to_Voigt_6x6"]], "elastic_moduli() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.elastic_moduli"]], "fit_elastic_constants() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.fit_elastic_constants"]], "full_3x3_to_voigt_6_index() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.full_3x3_to_Voigt_6_index"]], "full_3x3_to_voigt_6_strain() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.full_3x3_to_Voigt_6_strain"]], "full_3x3_to_voigt_6_stress() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.full_3x3_to_Voigt_6_stress"]], "full_3x3x3x3_to_voigt_6x6() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.full_3x3x3x3_to_Voigt_6x6"]], "generate_strained_configs() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.generate_strained_configs"]], "invariants() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.invariants"]], "matscipy.elasticity": [[66, "module-matscipy.elasticity"]], "measure_triclinic_elastic_constants() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.measure_triclinic_elastic_constants"]], "nonaffine_elastic_contribution() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.nonaffine_elastic_contribution"]], "poisson_ratio() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.poisson_ratio"]], "rotate() (matscipy.elasticity.cubicelasticmoduli method)": [[66, "matscipy.elasticity.CubicElasticModuli.rotate"]], "rotate_cubic_elastic_constants() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.rotate_cubic_elastic_constants"]], "rotate_elastic_constants() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.rotate_elastic_constants"]], "stiffness() (matscipy.elasticity.cubicelasticmoduli method)": [[66, "matscipy.elasticity.CubicElasticModuli.stiffness"]], "tol (matscipy.elasticity.cubicelasticmoduli attribute)": [[66, "matscipy.elasticity.CubicElasticModuli.tol"]], "youngs_modulus() (in module matscipy.elasticity)": [[66, "matscipy.elasticity.youngs_modulus"]], "matscipy.electrochemistry": [[67, "module-matscipy.electrochemistry"]], "continuous2discrete() (in module matscipy.electrochemistry)": [[68, "matscipy.electrochemistry.continuous2discrete"]], "charge_density() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.charge_density"]], "concentration() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.concentration"]], "debye() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.debye"]], "gamma() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.gamma"]], "ionic_strength() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.ionic_strength"]], "main() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.main"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[69, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "potential() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.potential"]], "test() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[69, "matscipy.electrochemistry.poisson_boltzmann_distribution.test"]], "b() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.B"]], "g() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.G"]], "poissonnernstplancksystem (class in matscipy.electrochemistry.poisson_nernst_planck_solver)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.__init__"]], "charge_density (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.charge_density"]], "concentration (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.concentration"]], "discretize() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.discretize"]], "grid (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.grid"]], "init() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.init"]], "initial_values() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.initial_values"]], "ionic_strength (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.ionic_strength"]], "jacobian() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.jacobian"]], "lambda_d (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.lambda_D"]], "left_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_controlled_volume_scheme_flux_bc"]], "left_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_dirichlet_bc"]], "left_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_finite_difference_scheme_flux_bc"]], "left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_potential_dirichlet_bc"]], "left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_potential_robin_bc"]], "left_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_robin_bc"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[70, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "nernst_planck_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.nernst_planck_pde"]], "newton() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.newton"]], "number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.number_conservation_constraint"]], "poisson_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.poisson_pde"]], "potential (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.potential"]], "right_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_controlled_volume_scheme_flux_bc"]], "right_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_dirichlet_bc"]], "right_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_finite_difference_scheme_flux_bc"]], "right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_potential_dirichlet_bc"]], "right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_potential_robin_bc"]], "right_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_robin_bc"]], "solve() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solve"]], "solver_callback() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solver_callback"]], "use_standard_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_cell_bc"]], "use_standard_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_dirichlet_bc"]], "use_standard_interface_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_interface_bc"]], "use_stern_layer_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_stern_layer_cell_bc"]], "x1_scaled (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[70, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.x1_scaled"]], "boundary (class in matscipy.electrochemistry.poisson_nernst_planck_solver_fenics)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary"]], "g() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.G"]], "poissonnernstplancksystemfenics (class in matscipy.electrochemistry.poisson_nernst_planck_solver_fenics)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS"]], "x (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.X"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.__init__"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.__init__"]], "apply_central_reference_concentration_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_central_reference_concentration_constraint"]], "apply_left_concentration_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_concentration_dirichlet_bc"]], "apply_left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_potential_dirichlet_bc"]], "apply_left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_potential_robin_bc"]], "apply_number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_number_conservation_constraint"]], "apply_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_potential_dirichlet_bc"]], "apply_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_potential_robin_bc"]], "apply_right_concentration_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_concentration_dirichlet_bc"]], "apply_right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_potential_dirichlet_bc"]], "apply_right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_potential_robin_bc"]], "boundary_c() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_C"]], "boundary_l() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_L"]], "boundary_r() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_R"]], "charge_density (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.charge_density"]], "concentration (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.concentration"]], "discretize() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.discretize"]], "get_property() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.get_property"]], "grid (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.grid"]], "init() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.init"]], "initial_values() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.initial_values"]], "inside() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.inside"]], "ionic_strength (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.ionic_strength"]], "lambda_d (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.lambda_D"]], "left_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_controlled_volume_scheme_flux_bc"]], "left_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_dirichlet_bc"]], "left_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_finite_difference_scheme_flux_bc"]], "left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_potential_dirichlet_bc"]], "left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_potential_robin_bc"]], "left_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_robin_bc"]], "map() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.map"]], "mark() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark"]], "mark_cells() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark_cells"]], "mark_facets() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark_facets"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[71, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"]], "nernst_planck_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.nernst_planck_pde"]], "newton() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.newton"]], "number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.number_conservation_constraint"]], "poisson_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.poisson_pde"]], "potential (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.potential"]], "right_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_controlled_volume_scheme_flux_bc"]], "right_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_dirichlet_bc"]], "right_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_finite_difference_scheme_flux_bc"]], "right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_potential_dirichlet_bc"]], "right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_potential_robin_bc"]], "right_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_robin_bc"]], "set_property() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.set_property"]], "snap() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.snap"]], "solve() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.solve"]], "solver_callback() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.solver_callback"]], "use_central_reference_concentration_based_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_central_reference_concentration_based_cell_bc"]], "use_standard_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_cell_bc"]], "use_standard_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_dirichlet_bc"]], "use_standard_interface_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_interface_bc"]], "use_stern_layer_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_stern_layer_cell_bc"]], "x1_scaled (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[71, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.x1_scaled"]], "deferredmessage (class in matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.DeferredMessage"]], "__init__() (matscipy.electrochemistry.steric_correction.deferredmessage method)": [[72, "matscipy.electrochemistry.steric_correction.DeferredMessage.__init__"]], "apply_steric_correction() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.apply_steric_correction"]], "box_constraint() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.box_constraint"]], "box_constraint_with_gradient() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.box_constraint_with_gradient"]], "brute_force_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.brute_force_closest_pair"]], "brute_force_target_function() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.brute_force_target_function"]], "matscipy.electrochemistry.steric_correction": [[72, "module-matscipy.electrochemistry.steric_correction"]], "neigh_list_based_target_function() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.neigh_list_based_target_function"]], "numpy_only_target_function() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.numpy_only_target_function"]], "planar_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.planar_closest_pair"]], "recursive_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.recursive_closest_pair"]], "scipy_distance_based_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.scipy_distance_based_closest_pair"]], "scipy_distance_based_target_function() (in module matscipy.electrochemistry.steric_correction)": [[72, "matscipy.electrochemistry.steric_correction.scipy_distance_based_target_function"]], "matscipy.fracture_mechanics": [[73, "module-matscipy.fracture_mechanics"]], "bcc() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.bcc"]], "cluster() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.cluster"]], "diamond() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.diamond"]], "fcc() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.fcc"]], "generate_3d_cubic_111() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.generate_3D_cubic_111"]], "generate_3d_structure() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.generate_3D_structure"]], "get_alpha_period() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.get_alpha_period"]], "matscipy.fracture_mechanics.clusters": [[74, "module-matscipy.fracture_mechanics.clusters"]], "sc() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.sc"]], "set_groups() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.set_groups"]], "set_regions() (in module matscipy.fracture_mechanics.clusters)": [[74, "matscipy.fracture_mechanics.clusters.set_regions"]], "constantstrainrate (class in matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.ConstantStrainRate"]], "cubiccrystalcrack (class in matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack"]], "g_to_strain() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.G_to_strain"]], "isotropicstressfield (class in matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.IsotropicStressField"]], "rectilinearanisotropiccrack (class in matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack"]], "sinclaircrack (class in matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack"]], "__init__() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[75, "matscipy.fracture_mechanics.crack.ConstantStrainRate.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[75, "matscipy.fracture_mechanics.crack.IsotropicStressField.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.__init__"]], "adjust_forces() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[75, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_forces"]], "adjust_positions() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[75, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_positions"]], "animate() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.animate"]], "apply_strain() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[75, "matscipy.fracture_mechanics.crack.ConstantStrainRate.apply_strain"]], "arc_length_continuation() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.arc_length_continuation"]], "convergence_line_plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.convergence_line_plot"]], "copy() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[75, "matscipy.fracture_mechanics.crack.ConstantStrainRate.copy"]], "counted() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.counted"]], "crack_tip_position() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position"]], "crack_tip_position_y() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position_y"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.deformation_gradient"]], "deformation_gradient_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cartesian_coordinates"]], "deformation_gradient_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cylinder_coordinates"]], "deformation_gradient_residual() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.deformation_gradient_residual"]], "deformation_gradient_residuals() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.deformation_gradient_residuals"]], "dfk_dk_approx() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.dfk_dk_approx"]], "displacement_residual() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.displacement_residual"]], "displacement_residuals() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.displacement_residuals"]], "displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements"]], "displacements() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.displacements"]], "displacements_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cartesian_coordinates"]], "displacements_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cylinder_coordinates"]], "find_tip_broken_bonds() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.find_tip_broken_bonds"]], "find_tip_coordination() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.find_tip_coordination"]], "find_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.find_tip_stress_field"]], "fit_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.fit_cle"]], "fit_crack_stress_field() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.fit_crack_stress_field"]], "get_crack_tip_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_crack_tip_force"]], "get_deformation_gradient() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_deformation_gradient"]], "get_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_dofs"]], "get_energy_release_rate() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.get_energy_release_rate"]], "get_forces() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_forces"]], "get_k_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_k_force"]], "get_potential_energy() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_potential_energy"]], "get_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_precon"]], "get_strain() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.get_strain"]], "get_stress_intensity_factor() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.get_stress_intensity_factor"]], "get_stresses() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[75, "matscipy.fracture_mechanics.crack.IsotropicStressField.get_stresses"]], "get_xdot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.get_xdot"]], "isotropic_modeii_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.isotropic_modeII_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_stress_field"]], "k (matscipy.fracture_mechanics.crack.sinclaircrack property)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.k"]], "k1g() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1g"]], "k1g() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1g"]], "k1gsqg() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1gsqG"]], "k1gsqg() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1gsqG"]], "load_cb_model() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.load_cb_model"]], "matscipy.fracture_mechanics.crack": [[75, "module-matscipy.fracture_mechanics.crack"]], "optimize() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.optimize"]], "pack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.pack"]], "plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.plot"]], "plot_stress_fields() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.plot_stress_fields"]], "print_crack_system() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.print_crack_system"]], "rescale_k() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.rescale_k"]], "rtheta() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.rtheta"]], "save_cb_model() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.save_cb_model"]], "scale_displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.scale_displacements"]], "set_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.set_atoms"]], "set_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.set_dofs"]], "set_plane_strain() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_strain"]], "set_plane_stress() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_stress"]], "set_shiftmask() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.set_shiftmask"]], "strain_err() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.strain_err"]], "strain_to_g() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.strain_to_G"]], "stresses() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses"]], "stresses() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[75, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.stresses"]], "stresses_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cartesian_coordinates"]], "stresses_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[75, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cylinder_coordinates"]], "thin_strip_displacement_y() (in module matscipy.fracture_mechanics.crack)": [[75, "matscipy.fracture_mechanics.crack.thin_strip_displacement_y"]], "u_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.u_cle"]], "unpack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.unpack"]], "update_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.update_atoms"]], "update_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.update_precon"]], "write_atoms_to_file() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[75, "matscipy.fracture_mechanics.crack.SinclairCrack.write_atoms_to_file"]], "matscipy.fracture_mechanics.crackpathsel": [[76, "module-matscipy.fracture_mechanics.crackpathsel"]], "j_integral() (in module matscipy.fracture_mechanics.energy_release)": [[77, "matscipy.fracture_mechanics.energy_release.J_integral"]], "matscipy.fracture_mechanics.energy_release": [[77, "module-matscipy.fracture_mechanics.energy_release"]], "idealbrittlesolid (class in matscipy.fracture_mechanics.idealbrittlesolid)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid"]], "__init__() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.__init__"]], "band_structure() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.band_structure"]], "calculate() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate"]], "calculate_numerical_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_stress"]], "calculate_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_properties"]], "calculation_required() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculation_required"]], "check_state() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.check_state"]], "default_parameters (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.default_parameters"]], "directory (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.directory"]], "discard_results_on_any_change (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.discard_results_on_any_change"]], "export_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.export_properties"]], "extend_strip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.extend_strip"]], "find_crack_tip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.find_crack_tip"]], "find_triangles_2d() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.find_triangles_2d"]], "get_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_atoms"]], "get_charges() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_charges"]], "get_default_parameters() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_default_parameters"]], "get_dipole_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_dipole_moment"]], "get_elastic_moduli() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_elastic_moduli"]], "get_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_forces"]], "get_magnetic_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moments"]], "get_poisson_ratio() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_poisson_ratio"]], "get_potential_energies() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energies"]], "get_potential_energy() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energy"]], "get_property() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_property"]], "get_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stress"]], "get_stresses() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stresses"]], "get_wave_speeds() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_wave_speeds"]], "get_youngs_modulus() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_youngs_modulus"]], "ignored_changes (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.ignored_changes"]], "implemented_properties (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.implemented_properties"]], "label (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.label"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[78, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "read() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read"]], "read_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid class method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read_atoms"]], "reset() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.reset"]], "set() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set"]], "set_constraints() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.set_constraints"]], "set_initial_velocities() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.set_initial_velocities"]], "set_label() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_label"]], "set_reference_crystal() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_reference_crystal"]], "todict() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.todict"]], "triangular_lattice_slab() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[78, "matscipy.fracture_mechanics.idealbrittlesolid.triangular_lattice_slab"]], "fd_hessian() (in module matscipy.hessian_finite_differences)": [[79, "matscipy.hessian_finite_differences.fd_hessian"]], "matscipy.hessian_finite_differences": [[79, "module-matscipy.hessian_finite_differences"]], "hydrogenate() (in module matscipy.hydrogenate)": [[80, "matscipy.hydrogenate.hydrogenate"]], "matscipy.hydrogenate": [[80, "module-matscipy.hydrogenate"]], "matscipy.io": [[81, "module-matscipy.io"]], "lammpsdata (class in matscipy.io.lammpsdata)": [[82, "matscipy.io.lammpsdata.LAMMPSData"]], "__init__() (matscipy.io.lammpsdata.lammpsdata method)": [[82, "matscipy.io.lammpsdata.LAMMPSData.__init__"]], "check_legal_name() (in module matscipy.io.lammpsdata)": [[82, "matscipy.io.lammpsdata.check_legal_name"]], "column_size() (in module matscipy.io.lammpsdata)": [[82, "matscipy.io.lammpsdata.column_size"]], "matscipy.io.lammpsdata": [[82, "module-matscipy.io.lammpsdata"]], "read() (matscipy.io.lammpsdata.lammpsdata method)": [[82, "matscipy.io.lammpsdata.LAMMPSData.read"]], "read_molecules_from_lammps_data() (in module matscipy.io.lammpsdata)": [[82, "matscipy.io.lammpsdata.read_molecules_from_lammps_data"]], "write() (matscipy.io.lammpsdata.lammpsdata method)": [[82, "matscipy.io.lammpsdata.LAMMPSData.write"]], "matscipy.io.metis": [[83, "module-matscipy.io.metis"]], "save_metis() (in module matscipy.io.metis)": [[83, "matscipy.io.metis.save_metis"]], "matscipy.io.opls": [[84, "module-matscipy.io.opls"]], "read_block() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.read_block"]], "read_cutoffs() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.read_cutoffs"]], "read_extended_xyz() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.read_extended_xyz"]], "read_lammps_data() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.read_lammps_data"]], "read_lammps_definitions() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.read_lammps_definitions"]], "read_parameter_file() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.read_parameter_file"]], "update_from_lammps_dump() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.update_from_lammps_dump"]], "write_lammps() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.write_lammps"]], "write_lammps_atoms() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.write_lammps_atoms"]], "write_lammps_definitions() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.write_lammps_definitions"]], "write_lammps_in() (in module matscipy.io.opls)": [[84, "matscipy.io.opls.write_lammps_in"]], "loadtbl() (in module matscipy.io.tbl)": [[85, "matscipy.io.tbl.loadtbl"]], "matscipy.io.tbl": [[85, "module-matscipy.io.tbl"]], "savetbl() (in module matscipy.io.tbl)": [[85, "matscipy.io.tbl.savetbl"]], "logger (class in matscipy.logger)": [[86, "matscipy.logger.Logger"]], "__init__() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.__init__"]], "flatten() (in module matscipy.logger)": [[86, "matscipy.logger.flatten"]], "flush() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.flush"]], "get_logfile() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.get_logfile"]], "has_logfile() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.has_logfile"]], "hdr_str() (in module matscipy.logger)": [[86, "matscipy.logger.hdr_str"]], "hdrfmt_str() (in module matscipy.logger)": [[86, "matscipy.logger.hdrfmt_str"]], "iteration_finished() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.iteration_finished"]], "matscipy.logger": [[86, "module-matscipy.logger"]], "numfmt_str() (in module matscipy.logger)": [[86, "matscipy.logger.numfmt_str"]], "pr() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.pr"]], "set_logfile() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.set_logfile"]], "set_outevery() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.set_outevery"]], "st() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.st"]], "warn() (matscipy.logger.logger method)": [[86, "matscipy.logger.Logger.warn"]], "cutoffneighbourhood (class in matscipy.neighbours)": [[87, "matscipy.neighbours.CutoffNeighbourhood"]], "molecularneighbourhood (class in matscipy.neighbours)": [[87, "matscipy.neighbours.MolecularNeighbourhood"]], "neighbourhood (class in matscipy.neighbours)": [[87, "matscipy.neighbours.Neighbourhood"]], "__init__() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.__init__"]], "complete_connectivity() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.complete_connectivity"]], "compute_distances() (matscipy.neighbours.cutoffneighbourhood static method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.molecularneighbourhood static method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.neighbourhood static method)": [[87, "matscipy.neighbours.Neighbourhood.compute_distances"]], "connected_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.connected_triplets"]], "double_connectivity() (matscipy.neighbours.molecularneighbourhood static method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.double_connectivity"]], "double_neighbourhood() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.double_neighbourhood"]], "find_common_neighbours() (in module matscipy.neighbours)": [[87, "matscipy.neighbours.find_common_neighbours"]], "find_indices_of_reversed_pairs() (in module matscipy.neighbours)": [[87, "matscipy.neighbours.find_indices_of_reversed_pairs"]], "find_triplet_types() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.find_triplet_types"]], "get_pairs() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.get_pairs"]], "get_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.get_triplets"]], "lexsort() (matscipy.neighbours.cutoffneighbourhood static method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.molecularneighbourhood static method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.neighbourhood static method)": [[87, "matscipy.neighbours.Neighbourhood.lexsort"]], "make_result() (matscipy.neighbours.cutoffneighbourhood static method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.molecularneighbourhood static method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.neighbourhood static method)": [[87, "matscipy.neighbours.Neighbourhood.make_result"]], "mask() (matscipy.neighbours.cutoffneighbourhood static method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.mask"]], "mask() (matscipy.neighbours.molecularneighbourhood static method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.mask"]], "mask() (matscipy.neighbours.neighbourhood static method)": [[87, "matscipy.neighbours.Neighbourhood.mask"]], "matscipy.neighbours": [[87, "module-matscipy.neighbours"]], "mic() (in module matscipy.neighbours)": [[87, "matscipy.neighbours.mic"]], "molecules (matscipy.neighbours.molecularneighbourhood property)": [[87, "matscipy.neighbours.MolecularNeighbourhood.molecules"]], "neighbour_list() (in module matscipy.neighbours)": [[87, "matscipy.neighbours.neighbour_list"]], "pair_type (matscipy.neighbours.molecularneighbourhood property)": [[87, "matscipy.neighbours.MolecularNeighbourhood.pair_type"]], "reverse_pair_indices() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.reverse_pair_indices"]], "triplet_list() (in module matscipy.neighbours)": [[87, "matscipy.neighbours.triplet_list"]], "triplet_to_numbers() (matscipy.neighbours.cutoffneighbourhood method)": [[87, "matscipy.neighbours.CutoffNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.molecularneighbourhood method)": [[87, "matscipy.neighbours.MolecularNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.neighbourhood method)": [[87, "matscipy.neighbours.Neighbourhood.triplet_to_numbers"]], "triplet_type (matscipy.neighbours.molecularneighbourhood property)": [[87, "matscipy.neighbours.MolecularNeighbourhood.triplet_type"]], "get_derivative_volume() (in module matscipy.numerical)": [[88, "matscipy.numerical.get_derivative_volume"]], "get_derivative_wave_vector() (in module matscipy.numerical)": [[88, "matscipy.numerical.get_derivative_wave_vector"]], "matscipy.numerical": [[88, "module-matscipy.numerical"]], "numerical_forces() (in module matscipy.numerical)": [[88, "matscipy.numerical.numerical_forces"]], "numerical_hessian() (in module matscipy.numerical)": [[88, "matscipy.numerical.numerical_hessian"]], "numerical_nonaffine_forces() (in module matscipy.numerical)": [[88, "matscipy.numerical.numerical_nonaffine_forces"]], "numerical_nonaffine_forces_reference() (in module matscipy.numerical)": [[88, "matscipy.numerical.numerical_nonaffine_forces_reference"]], "numerical_stress() (in module matscipy.numerical)": [[88, "matscipy.numerical.numerical_stress"]], "mabincount() (in module matscipy.numpy_tricks)": [[89, "matscipy.numpy_tricks.mabincount"]], "matscipy.numpy_tricks": [[89, "module-matscipy.numpy_tricks"]], "anglesdata (class in matscipy.opls)": [[90, "matscipy.opls.AnglesData"]], "bonddata (class in matscipy.opls)": [[90, "matscipy.opls.BondData"]], "cutofflist (class in matscipy.opls)": [[90, "matscipy.opls.CutoffList"]], "dihedralsdata (class in matscipy.opls)": [[90, "matscipy.opls.DihedralsData"]], "ljqdata (class in matscipy.opls)": [[90, "matscipy.opls.LJQData"]], "oplsstructure (class in matscipy.opls)": [[90, "matscipy.opls.OPLSStructure"]], "__init__() (matscipy.opls.anglesdata method)": [[90, "matscipy.opls.AnglesData.__init__"]], "__init__() (matscipy.opls.bonddata method)": [[90, "matscipy.opls.BondData.__init__"]], "__init__() (matscipy.opls.cutofflist method)": [[90, "matscipy.opls.CutoffList.__init__"]], "__init__() (matscipy.opls.dihedralsdata method)": [[90, "matscipy.opls.DihedralsData.__init__"]], "__init__() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.__init__"]], "__init__() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.__init__"]], "add_name() (matscipy.opls.anglesdata method)": [[90, "matscipy.opls.AnglesData.add_name"]], "add_name() (matscipy.opls.dihedralsdata method)": [[90, "matscipy.opls.DihedralsData.add_name"]], "append() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.append"]], "ase_objtype (matscipy.opls.oplsstructure attribute)": [[90, "matscipy.opls.OPLSStructure.ase_objtype"]], "calc (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.calc"]], "cell (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.cell"]], "center() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.center"]], "clear() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.clear"]], "constraints (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.constraints"]], "copy() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.copy"]], "copy() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.copy"]], "default_map (matscipy.opls.oplsstructure attribute)": [[90, "matscipy.opls.OPLSStructure.default_map"]], "edit() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.edit"]], "euler_rotate() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.euler_rotate"]], "extend() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.extend"]], "fromdict() (matscipy.opls.oplsstructure class method)": [[90, "matscipy.opls.OPLSStructure.fromdict"]], "fromkeys() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.fromkeys"]], "get() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.get"]], "get_all_distances() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_all_distances"]], "get_angle() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_angle"]], "get_angles() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_angles"]], "get_angular_momentum() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_angular_momentum"]], "get_array() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_array"]], "get_atomic_numbers() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_atomic_numbers"]], "get_bonds() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_bonds"]], "get_calculator() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_calculator"]], "get_cell() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_cell"]], "get_cell_lengths_and_angles() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_cell_lengths_and_angles"]], "get_celldisp() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_celldisp"]], "get_center_of_mass() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_center_of_mass"]], "get_charges() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_charges"]], "get_chemical_formula() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_chemical_formula"]], "get_chemical_symbols() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_chemical_symbols"]], "get_dihedral() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_dihedral"]], "get_dihedrals() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_dihedrals"]], "get_dipole_moment() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_dipole_moment"]], "get_distance() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_distance"]], "get_distances() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_distances"]], "get_forces() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_forces"]], "get_global_number_of_atoms() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_global_number_of_atoms"]], "get_initial_charges() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_initial_charges"]], "get_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_initial_magnetic_moments"]], "get_kinetic_energy() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_kinetic_energy"]], "get_magnetic_moment() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_magnetic_moments"]], "get_masses() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_masses"]], "get_momenta() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_momenta"]], "get_moments_of_inertia() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_moments_of_inertia"]], "get_name() (matscipy.opls.anglesdata method)": [[90, "matscipy.opls.AnglesData.get_name"]], "get_name() (matscipy.opls.bonddata method)": [[90, "matscipy.opls.BondData.get_name"]], "get_name() (matscipy.opls.cutofflist method)": [[90, "matscipy.opls.CutoffList.get_name"]], "get_name() (matscipy.opls.dihedralsdata method)": [[90, "matscipy.opls.DihedralsData.get_name"]], "get_neighbors() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_neighbors"]], "get_number_of_atoms() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_number_of_atoms"]], "get_pbc() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_pbc"]], "get_positions() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_positions"]], "get_potential_energies() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_potential_energies"]], "get_potential_energy() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_potential_energy"]], "get_properties() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_properties"]], "get_reciprocal_cell() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_reciprocal_cell"]], "get_scaled_positions() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_scaled_positions"]], "get_stress() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_stress"]], "get_stresses() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_stresses"]], "get_tags() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_tags"]], "get_temperature() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_temperature"]], "get_total_energy() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_total_energy"]], "get_types() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_types"]], "get_value() (matscipy.opls.bonddata method)": [[90, "matscipy.opls.BondData.get_value"]], "get_value() (matscipy.opls.cutofflist method)": [[90, "matscipy.opls.CutoffList.get_value"]], "get_velocities() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_velocities"]], "get_volume() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.get_volume"]], "has() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.has"]], "items() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.items"]], "iterimages() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.iterimages"]], "keys() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.keys"]], "matscipy.opls": [[90, "module-matscipy.opls"]], "max() (matscipy.opls.cutofflist method)": [[90, "matscipy.opls.CutoffList.max"]], "name_value() (matscipy.opls.anglesdata method)": [[90, "matscipy.opls.AnglesData.name_value"]], "name_value() (matscipy.opls.bonddata method)": [[90, "matscipy.opls.BondData.name_value"]], "name_value() (matscipy.opls.cutofflist method)": [[90, "matscipy.opls.CutoffList.name_value"]], "name_value() (matscipy.opls.dihedralsdata method)": [[90, "matscipy.opls.DihedralsData.name_value"]], "new_array() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.new_array"]], "number_of_lattice_vectors (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.number_of_lattice_vectors"]], "numbers (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.numbers"]], "pbc (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.pbc"]], "pop() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.pop"]], "pop() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.pop"]], "popitem() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.popitem"]], "positions (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.positions"]], "rattle() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.rattle"]], "repeat() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.repeat"]], "rotate() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.rotate"]], "rotate_dihedral() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.rotate_dihedral"]], "set_angle() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_angle"]], "set_array() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_array"]], "set_atom_data() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_atom_data"]], "set_atomic_numbers() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_atomic_numbers"]], "set_calculator() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_calculator"]], "set_cell() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_cell"]], "set_celldisp() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_celldisp"]], "set_center_of_mass() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_center_of_mass"]], "set_chemical_symbols() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_chemical_symbols"]], "set_constraint() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_constraint"]], "set_cutoffs() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_cutoffs"]], "set_dihedral() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_dihedral"]], "set_distance() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_distance"]], "set_initial_charges() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_initial_charges"]], "set_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_initial_magnetic_moments"]], "set_masses() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_masses"]], "set_momenta() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_momenta"]], "set_names() (matscipy.opls.anglesdata method)": [[90, "matscipy.opls.AnglesData.set_names"]], "set_names() (matscipy.opls.bonddata method)": [[90, "matscipy.opls.BondData.set_names"]], "set_names() (matscipy.opls.cutofflist method)": [[90, "matscipy.opls.CutoffList.set_names"]], "set_names() (matscipy.opls.dihedralsdata method)": [[90, "matscipy.opls.DihedralsData.set_names"]], "set_pbc() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_pbc"]], "set_positions() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_positions"]], "set_scaled_positions() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_scaled_positions"]], "set_tags() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_tags"]], "set_types() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_types"]], "set_velocities() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.set_velocities"]], "setdefault() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.setdefault"]], "symbols (matscipy.opls.oplsstructure property)": [[90, "matscipy.opls.OPLSStructure.symbols"]], "todict() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.todict"]], "translate() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.translate"]], "twochar() (in module matscipy.opls)": [[90, "matscipy.opls.twochar"]], "update() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.update"]], "values() (matscipy.opls.ljqdata method)": [[90, "matscipy.opls.LJQData.values"]], "wrap() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.wrap"]], "write() (matscipy.opls.oplsstructure method)": [[90, "matscipy.opls.OPLSStructure.write"]], "autodamping (class in matscipy.pressurecoupling)": [[91, "matscipy.pressurecoupling.AutoDamping"]], "fixeddamping (class in matscipy.pressurecoupling)": [[91, "matscipy.pressurecoupling.FixedDamping"]], "fixedmasscriticaldamping (class in matscipy.pressurecoupling)": [[91, "matscipy.pressurecoupling.FixedMassCriticalDamping"]], "p_bottom (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.P_bottom"]], "p_top (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.P_top"]], "slidelog (class in matscipy.pressurecoupling)": [[91, "matscipy.pressurecoupling.SlideLog"]], "slidelogger (class in matscipy.pressurecoupling)": [[91, "matscipy.pressurecoupling.SlideLogger"]], "slidewithnormalpressurecuboidcell (class in matscipy.pressurecoupling)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell"]], "t_thermostat (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.T_thermostat"]], "tdir (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.Tdir"]], "__init__() (matscipy.pressurecoupling.autodamping method)": [[91, "matscipy.pressurecoupling.AutoDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixeddamping method)": [[91, "matscipy.pressurecoupling.FixedDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[91, "matscipy.pressurecoupling.FixedMassCriticalDamping.__init__"]], "__init__() (matscipy.pressurecoupling.slidelog method)": [[91, "matscipy.pressurecoupling.SlideLog.__init__"]], "__init__() (matscipy.pressurecoupling.slidelogger method)": [[91, "matscipy.pressurecoupling.SlideLogger.__init__"]], "__init__() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.__init__"]], "a (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.a"]], "adjust_forces() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_forces"]], "adjust_momenta() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_momenta"]], "adjust_positions() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_positions"]], "adjust_potential_energy() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_potential_energy"]], "get_a() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.get_A"]], "get_m_gamma() (matscipy.pressurecoupling.autodamping method)": [[91, "matscipy.pressurecoupling.AutoDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixeddamping method)": [[91, "matscipy.pressurecoupling.FixedDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[91, "matscipy.pressurecoupling.FixedMassCriticalDamping.get_M_gamma"]], "h (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.h"]], "matscipy.pressurecoupling": [[91, "module-matscipy.pressurecoupling"]], "middle_mask (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[91, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.middle_mask"]], "rows (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.rows"]], "step (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.step"]], "tau_bottom (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.tau_bottom"]], "tau_top (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.tau_top"]], "time (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.time"]], "v (matscipy.pressurecoupling.slidelog attribute)": [[91, "matscipy.pressurecoupling.SlideLog.v"]], "write_header() (matscipy.pressurecoupling.slidelogger method)": [[91, "matscipy.pressurecoupling.SlideLogger.write_header"]], "matscipy.rings": [[92, "module-matscipy.rings"]], "ring_statistics() (in module matscipy.rings)": [[92, "matscipy.rings.ring_statistics"]], "betrag() (in module matscipy.spatial_correlation_function)": [[93, "matscipy.spatial_correlation_function.betrag"]], "matscipy.spatial_correlation_function": [[93, "module-matscipy.spatial_correlation_function"]], "max_rad() (in module matscipy.spatial_correlation_function)": [[93, "matscipy.spatial_correlation_function.max_rad"]], "spatial_correlation_function() (in module matscipy.spatial_correlation_function)": [[93, "matscipy.spatial_correlation_function.spatial_correlation_function"]], "spatial_correlation_function_near() (in module matscipy.spatial_correlation_function)": [[93, "matscipy.spatial_correlation_function.spatial_correlation_function_near"]]}})