Search.setIndex({"docnames": ["api", "applications/cylinder_configurations", "applications/elastic_constants", "applications/electrochemistry", "applications/electrochemistry_1", "applications/electrochemistry_2", "applications/electrochemistry_3", "applications/fracture_mechanics", "applications/gamma_surface_advanced", "applications/gamma_surfaces", "applications/index", "applications/multispecies_dislocations", "applications/plasticity", "applications/quasi_static_crack", "applications/tribology", "applications/visualisation", "calculators/index", "calculators/manybody", "cli/calculators", "cli/diffusion", "cli/electrochemistry", "cli/fracture_mechanics", "cli/index", "cli/structure", "conf", "generated/matscipy", "generated/matscipy.angle_distribution", "generated/matscipy.atomic_strain", "generated/matscipy.calculators", "generated/matscipy.calculators.calculator", "generated/matscipy.calculators.committee", "generated/matscipy.calculators.committee.committee", "generated/matscipy.calculators.committee.log", "generated/matscipy.calculators.committee.utils", "generated/matscipy.calculators.eam", "generated/matscipy.calculators.eam.average_atom", "generated/matscipy.calculators.eam.calculator", "generated/matscipy.calculators.eam.io", "generated/matscipy.calculators.ewald", "generated/matscipy.calculators.ewald.calculator", "generated/matscipy.calculators.fitting", "generated/matscipy.calculators.manybody", "generated/matscipy.calculators.manybody.calculator", "generated/matscipy.calculators.manybody.explicit_forms", "generated/matscipy.calculators.manybody.explicit_forms.harmonic", "generated/matscipy.calculators.manybody.explicit_forms.kumagai", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "generated/matscipy.calculators.manybody.newmb", "generated/matscipy.calculators.manybody.potentials", "generated/matscipy.calculators.mcfm", "generated/matscipy.calculators.mcfm.calculator", "generated/matscipy.calculators.mcfm.cluster_data", "generated/matscipy.calculators.mcfm.mcfm_parallel", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "generated/matscipy.calculators.mcfm.qm_cluster", "generated/matscipy.calculators.mcfm.qm_cluster_tools", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "generated/matscipy.calculators.pair_potential", "generated/matscipy.calculators.pair_potential.calculator", "generated/matscipy.calculators.polydisperse", "generated/matscipy.calculators.polydisperse.calculator", "generated/matscipy.calculators.supercell_calculator", "generated/matscipy.cauchy_born", "generated/matscipy.cli", "generated/matscipy.cli.calculators", "generated/matscipy.cli.calculators.average_eam_potential", "generated/matscipy.cli.diffusion", "generated/matscipy.cli.diffusion.rms", "generated/matscipy.cli.electrochemistry", "generated/matscipy.cli.electrochemistry.continuous2discrete", "generated/matscipy.cli.electrochemistry.poisson_nernst_planck_solver", "generated/matscipy.cli.electrochemistry.stericify", "generated/matscipy.cli.fracture_mechanics", "generated/matscipy.cli.fracture_mechanics.quasistatic_crack", "generated/matscipy.cli.fracture_mechanics.setup_crack", "generated/matscipy.cli.fracture_mechanics.sinclair_crack", "generated/matscipy.cli.glasses", "generated/matscipy.cli.glasses.quench", "generated/matscipy.deformation", "generated/matscipy.dislocation", "generated/matscipy.drift", "generated/matscipy.elasticity", "generated/matscipy.electrochemistry", "generated/matscipy.electrochemistry.continuous2discrete", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver_fenics", "generated/matscipy.electrochemistry.steric_correction", "generated/matscipy.ffi", "generated/matscipy.fracture_mechanics", "generated/matscipy.fracture_mechanics.clusters", "generated/matscipy.fracture_mechanics.crack", "generated/matscipy.fracture_mechanics.crackpathsel", "generated/matscipy.fracture_mechanics.energy_release", "generated/matscipy.fracture_mechanics.idealbrittlesolid", "generated/matscipy.gamma_surface", "generated/matscipy.hessian_finite_differences", "generated/matscipy.hydrogenate", "generated/matscipy.io", "generated/matscipy.io.lammpsdata", "generated/matscipy.io.metis", "generated/matscipy.io.opls", "generated/matscipy.io.tbl", "generated/matscipy.logger", "generated/matscipy.molecules", "generated/matscipy.neighbours", "generated/matscipy.numerical", "generated/matscipy.numpy_tricks", "generated/matscipy.opls", "generated/matscipy.optimize", "generated/matscipy.precon", "generated/matscipy.pressurecoupling", "generated/matscipy.rings", "generated/matscipy.socketcalc", "generated/matscipy.spatial_correlation_function", "generated/matscipy.surface", "generated/matscipy.surface_reconstruction", "generated/matscipy.utils", "getting_started", "index", "tools/angle_distribution", "tools/index", "tools/neighbour_list", "tools/pair_distribution", "tools/ring_analysis", "topology/index", "topology/setup_non-reactive_simulations", "topology/topology_building_aC"], "filenames": ["api.rst", "applications/cylinder_configurations.ipynb", "applications/elastic_constants.ipynb", "applications/electrochemistry.rst", "applications/electrochemistry_1.py", "applications/electrochemistry_2.py", "applications/electrochemistry_3.py", "applications/fracture_mechanics.rst", "applications/gamma_surface_advanced.ipynb", "applications/gamma_surfaces.ipynb", "applications/index.rst", "applications/multispecies_dislocations.ipynb", "applications/plasticity.rst", "applications/quasi_static_crack.ipynb", "applications/tribology.ipynb", "applications/visualisation.py", "calculators/index.rst", "calculators/manybody.ipynb", "cli/calculators.md", "cli/diffusion.md", "cli/electrochemistry.md", "cli/fracture_mechanics.md", "cli/index.rst", "cli/structure.md", "conf.py", "generated/matscipy.rst", "generated/matscipy.angle_distribution.rst", "generated/matscipy.atomic_strain.rst", "generated/matscipy.calculators.rst", "generated/matscipy.calculators.calculator.rst", "generated/matscipy.calculators.committee.rst", "generated/matscipy.calculators.committee.committee.rst", "generated/matscipy.calculators.committee.log.rst", "generated/matscipy.calculators.committee.utils.rst", "generated/matscipy.calculators.eam.rst", "generated/matscipy.calculators.eam.average_atom.rst", "generated/matscipy.calculators.eam.calculator.rst", "generated/matscipy.calculators.eam.io.rst", "generated/matscipy.calculators.ewald.rst", "generated/matscipy.calculators.ewald.calculator.rst", "generated/matscipy.calculators.fitting.rst", "generated/matscipy.calculators.manybody.rst", "generated/matscipy.calculators.manybody.calculator.rst", "generated/matscipy.calculators.manybody.explicit_forms.rst", "generated/matscipy.calculators.manybody.explicit_forms.harmonic.rst", "generated/matscipy.calculators.manybody.explicit_forms.kumagai.rst", "generated/matscipy.calculators.manybody.explicit_forms.stillinger_weber.rst", "generated/matscipy.calculators.manybody.explicit_forms.tersoff_brenner.rst", "generated/matscipy.calculators.manybody.newmb.rst", "generated/matscipy.calculators.manybody.potentials.rst", "generated/matscipy.calculators.mcfm.rst", "generated/matscipy.calculators.mcfm.calculator.rst", "generated/matscipy.calculators.mcfm.cluster_data.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.rst", "generated/matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.rst", "generated/matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.rst", "generated/matscipy.calculators.mcfm.qm_cluster.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.rst", "generated/matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.rst", "generated/matscipy.calculators.pair_potential.rst", "generated/matscipy.calculators.pair_potential.calculator.rst", "generated/matscipy.calculators.polydisperse.rst", "generated/matscipy.calculators.polydisperse.calculator.rst", "generated/matscipy.calculators.supercell_calculator.rst", "generated/matscipy.cauchy_born.rst", "generated/matscipy.cli.rst", "generated/matscipy.cli.calculators.rst", "generated/matscipy.cli.calculators.average_eam_potential.rst", "generated/matscipy.cli.diffusion.rst", "generated/matscipy.cli.diffusion.rms.rst", "generated/matscipy.cli.electrochemistry.rst", "generated/matscipy.cli.electrochemistry.continuous2discrete.rst", "generated/matscipy.cli.electrochemistry.poisson_nernst_planck_solver.rst", "generated/matscipy.cli.electrochemistry.stericify.rst", "generated/matscipy.cli.fracture_mechanics.rst", "generated/matscipy.cli.fracture_mechanics.quasistatic_crack.rst", "generated/matscipy.cli.fracture_mechanics.setup_crack.rst", "generated/matscipy.cli.fracture_mechanics.sinclair_crack.rst", "generated/matscipy.cli.glasses.rst", "generated/matscipy.cli.glasses.quench.rst", "generated/matscipy.deformation.rst", "generated/matscipy.dislocation.rst", "generated/matscipy.drift.rst", "generated/matscipy.elasticity.rst", "generated/matscipy.electrochemistry.rst", "generated/matscipy.electrochemistry.continuous2discrete.rst", "generated/matscipy.electrochemistry.poisson_boltzmann_distribution.rst", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver.rst", "generated/matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.rst", "generated/matscipy.electrochemistry.steric_correction.rst", "generated/matscipy.ffi.rst", "generated/matscipy.fracture_mechanics.rst", "generated/matscipy.fracture_mechanics.clusters.rst", "generated/matscipy.fracture_mechanics.crack.rst", "generated/matscipy.fracture_mechanics.crackpathsel.rst", "generated/matscipy.fracture_mechanics.energy_release.rst", "generated/matscipy.fracture_mechanics.idealbrittlesolid.rst", "generated/matscipy.gamma_surface.rst", "generated/matscipy.hessian_finite_differences.rst", "generated/matscipy.hydrogenate.rst", "generated/matscipy.io.rst", "generated/matscipy.io.lammpsdata.rst", "generated/matscipy.io.metis.rst", "generated/matscipy.io.opls.rst", "generated/matscipy.io.tbl.rst", "generated/matscipy.logger.rst", "generated/matscipy.molecules.rst", "generated/matscipy.neighbours.rst", "generated/matscipy.numerical.rst", "generated/matscipy.numpy_tricks.rst", "generated/matscipy.opls.rst", "generated/matscipy.optimize.rst", "generated/matscipy.precon.rst", "generated/matscipy.pressurecoupling.rst", "generated/matscipy.rings.rst", "generated/matscipy.socketcalc.rst", "generated/matscipy.spatial_correlation_function.rst", "generated/matscipy.surface.rst", "generated/matscipy.surface_reconstruction.rst", "generated/matscipy.utils.rst", "getting_started.rst", "index.rst", "tools/angle_distribution.ipynb", "tools/index.rst", "tools/neighbour_list.ipynb", "tools/pair_distribution.ipynb", "tools/ring_analysis.ipynb", "topology/index.rst", "topology/setup_non-reactive_simulations.ipynb", "topology/topology_building_aC.ipynb"], "titles": ["API Reference", "Building cylindrical configurations with dislocations", "Elastic Constants", "Electrochemistry", "One-dimensional Poisson-Nernst-Planck systems", "Poisson-Nernst-Planck systems by finite element method", "Steric correction", "Fracture Mechanics", "Advanced Features of <code class=\"docutils literal notranslate\"><span class=\"pre\">gamma_surface.py</span></code>", "Generating Gamma Surfaces &amp; Stacking Faults", "Application domains", "Multi-species Dislocation Systems", "Plasticity", "Quasi static fracture simulations", "Tribology", "&lt;no title&gt;", "Interatomic potentials", "Many-body potentials", "Interatomic potentials", "Diffusion", "Electrochemistry", "Fracture mechanics", "Command line interface", "Structure generation", "&lt;no title&gt;", "matscipy", "matscipy.angle_distribution", "matscipy.atomic_strain", "matscipy.calculators", "matscipy.calculators.calculator", "matscipy.calculators.committee", "matscipy.calculators.committee.committee", "matscipy.calculators.committee.log", "matscipy.calculators.committee.utils", "matscipy.calculators.eam", "matscipy.calculators.eam.average_atom", "matscipy.calculators.eam.calculator", "matscipy.calculators.eam.io", "matscipy.calculators.ewald", "matscipy.calculators.ewald.calculator", "matscipy.calculators.fitting", "matscipy.calculators.manybody", "matscipy.calculators.manybody.calculator", "matscipy.calculators.manybody.explicit_forms", "matscipy.calculators.manybody.explicit_forms.harmonic", "matscipy.calculators.manybody.explicit_forms.kumagai", "matscipy.calculators.manybody.explicit_forms.stillinger_weber", "matscipy.calculators.manybody.explicit_forms.tersoff_brenner", "matscipy.calculators.manybody.newmb", "matscipy.calculators.manybody.potentials", "matscipy.calculators.mcfm", "matscipy.calculators.mcfm.calculator", "matscipy.calculators.mcfm.cluster_data", "matscipy.calculators.mcfm.mcfm_parallel", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control", "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker", "matscipy.calculators.mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base", "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm", "matscipy.calculators.mcfm.qm_cluster", "matscipy.calculators.mcfm.qm_cluster_tools", "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool", "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool", "matscipy.calculators.pair_potential", "matscipy.calculators.pair_potential.calculator", "matscipy.calculators.polydisperse", "matscipy.calculators.polydisperse.calculator", "matscipy.calculators.supercell_calculator", "matscipy.cauchy_born", "matscipy.cli", "matscipy.cli.calculators", "matscipy.cli.calculators.average_eam_potential", "matscipy.cli.diffusion", "matscipy.cli.diffusion.rms", "matscipy.cli.electrochemistry", "matscipy.cli.electrochemistry.continuous2discrete", "matscipy.cli.electrochemistry.poisson_nernst_planck_solver", "matscipy.cli.electrochemistry.stericify", "matscipy.cli.fracture_mechanics", "matscipy.cli.fracture_mechanics.quasistatic_crack", "matscipy.cli.fracture_mechanics.setup_crack", "matscipy.cli.fracture_mechanics.sinclair_crack", "matscipy.cli.glasses", "matscipy.cli.glasses.quench", "matscipy.deformation", "matscipy.dislocation", "matscipy.drift", "matscipy.elasticity", "matscipy.electrochemistry", "matscipy.electrochemistry.continuous2discrete", "matscipy.electrochemistry.poisson_boltzmann_distribution", "matscipy.electrochemistry.poisson_nernst_planck_solver", "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics", "matscipy.electrochemistry.steric_correction", "matscipy.ffi", "matscipy.fracture_mechanics", "matscipy.fracture_mechanics.clusters", "matscipy.fracture_mechanics.crack", "matscipy.fracture_mechanics.crackpathsel", "matscipy.fracture_mechanics.energy_release", "matscipy.fracture_mechanics.idealbrittlesolid", "matscipy.gamma_surface", "matscipy.hessian_finite_differences", "matscipy.hydrogenate", "matscipy.io", "matscipy.io.lammpsdata", "matscipy.io.metis", "matscipy.io.opls", "matscipy.io.tbl", "matscipy.logger", "matscipy.molecules", "matscipy.neighbours", "matscipy.numerical", "matscipy.numpy_tricks", "matscipy.opls", "matscipy.optimize", "matscipy.precon", "matscipy.pressurecoupling", "matscipy.rings", "matscipy.socketcalc", "matscipy.spatial_correlation_function", "matscipy.surface", "matscipy.surface_reconstruction", "matscipy.utils", "<cite>matscipy</cite>", "<cite>matscipy</cite>", "Angle-distribution function", "Analysis tools", "Neighbour list", "Pair-distribution function", "Ring analysis", "Structure and topology generation", "Setups for non-reactive simulations with LAMMPS", "Topology building for LAMMPS non-reactive MD simulations of amorphous carbon"], "terms": {"The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 29, 31, 35, 36, 37, 39, 42, 44, 48, 50, 51, 59, 61, 62, 63, 65, 67, 68, 69, 86, 88, 91, 92, 93, 98, 101, 102, 108, 112, 115, 116, 117, 120, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134], "matscipi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 22, 24, 127, 128, 129, 130, 131, 132, 133, 134], "provid": [1, 3, 4, 6, 7, 8, 9, 12, 13, 14, 15, 22, 25, 31, 57, 63, 69, 86, 89, 98, 102, 115, 122, 123, 124, 125, 126, 132, 134], "set": [1, 2, 3, 6, 9, 10, 13, 14, 16, 20, 24, 29, 31, 32, 36, 37, 39, 40, 42, 48, 50, 51, 61, 62, 63, 65, 67, 68, 69, 76, 86, 88, 89, 92, 94, 98, 101, 102, 106, 109, 115, 117, 120, 122, 133, 134], "tool": [1, 4, 12, 14, 15, 85, 86, 112, 126, 132], "creat": [1, 2, 4, 5, 6, 8, 9, 12, 14, 18, 24, 29, 31, 32, 35, 36, 39, 42, 48, 50, 51, 62, 65, 67, 68, 86, 94, 101, 112, 115, 117, 120, 122, 129, 133, 134], "atomist": [1, 2, 3, 4, 6, 7, 12, 13, 14, 21, 65, 67, 69, 86, 88, 98], "contain": [1, 9, 10, 12, 14, 21, 24, 29, 31, 36, 37, 39, 42, 48, 50, 51, 62, 65, 67, 68, 69, 86, 88, 92, 93, 98, 101, 106, 108, 112, 114, 115, 120, 122, 123, 128, 129, 133, 134], "In": [1, 2, 4, 5, 8, 9, 11, 14, 15, 20, 23, 29, 31, 36, 39, 40, 42, 48, 50, 51, 62, 65, 67, 68, 86, 101, 112, 115, 120, 122, 123, 133, 134], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 29, 31, 36, 37, 39, 42, 44, 48, 50, 51, 55, 58, 59, 61, 62, 63, 65, 67, 68, 69, 77, 85, 86, 88, 90, 91, 92, 93, 94, 95, 98, 101, 104, 108, 112, 113, 115, 116, 117, 119, 120, 122, 123, 127, 129, 130, 132, 133, 134], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 17, 19, 21, 23, 29, 31, 35, 36, 39, 42, 48, 50, 51, 58, 62, 65, 67, 68, 69, 78, 86, 94, 98, 101, 108, 109, 112, 115, 118, 120, 122, 123, 125, 126, 129, 133, 134], "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 29, 31, 36, 39, 42, 44, 48, 50, 51, 65, 67, 68, 69, 86, 101, 112, 115, 120, 122, 127, 129, 130, 133, 134], "focu": 1, "order": [1, 4, 6, 9, 10, 11, 13, 18, 20, 24, 29, 36, 39, 42, 48, 49, 65, 67, 69, 86, 88, 92, 93, 112, 115, 116, 118, 120, 122], "start": [1, 9, 11, 12, 14, 24, 29, 36, 37, 39, 42, 48, 65, 67, 86, 88, 98, 102, 115, 120, 122, 133, 134], "cylind": [1, 15, 86, 98], "bulk": [1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 21, 86, 88, 91, 92, 93, 98, 100, 123, 124, 134], "materi": [1, 2, 7, 13, 14, 21, 35, 86, 104, 118, 125, 126], "orient": [1, 9, 13, 86, 102, 123], "along": [1, 4, 8, 9, 13, 14, 36, 69, 86, 88, 90, 102, 114, 115, 118, 121, 122, 123], "vector": [1, 6, 9, 26, 29, 36, 39, 42, 44, 45, 46, 69, 88, 92, 93, 102, 112, 113, 115, 117, 122, 124, 127, 129], "futur": [1, 29, 31, 36, 42, 67, 68, 101, 120, 122], "line": [1, 4, 5, 6, 9, 13, 14, 15, 20, 23, 24, 37, 77, 86, 98, 102, 108, 118, 120, 122, 134], "vec": [1, 44, 121, 127], "l": [1, 4, 5, 6, 20, 39, 65, 67, 86, 88, 92, 93, 94, 118, 122], "By": [1, 9, 13, 29, 31, 36, 42, 67, 68, 101, 108, 115, 120, 122], "convent": [1, 19, 92, 112, 115, 134], "assum": [1, 4, 13, 31, 88, 92, 93, 98, 112, 115], "z": [1, 4, 5, 6, 8, 9, 14, 69, 86, 88, 90, 91, 92, 93, 94, 98, 102, 108, 112, 115, 122, 123, 124, 133, 134], "direct": [1, 2, 4, 6, 8, 9, 13, 14, 21, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 90, 94, 98, 101, 102, 104, 112, 115, 118, 120, 122, 123], "cell": [1, 3, 6, 10, 11, 12, 13, 14, 15, 20, 29, 31, 36, 39, 42, 50, 51, 67, 68, 69, 85, 88, 92, 93, 97, 98, 101, 102, 108, 112, 115, 118, 120, 122, 124, 130, 133], "alwai": [1, 9, 122, 123, 124], "correspond": [1, 4, 8, 9, 12, 14, 29, 31, 32, 35, 36, 39, 42, 48, 65, 67, 69, 86, 88, 92, 93, 108, 112, 115, 122, 123, 132], "Then": [1, 4, 98, 122], "displac": [1, 6, 7, 11, 13, 17, 19, 27, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 86, 88, 96, 98, 101, 103, 113, 115, 120, 123, 125, 126], "field": [1, 2, 7, 10, 11, 12, 21, 35, 37, 69, 86, 89, 94, 96, 98, 101, 108, 122, 132, 134], "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 35, 36, 37, 39, 42, 44, 47, 48, 49, 50, 51, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 86, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "appli": [1, 3, 4, 7, 8, 9, 10, 11, 14, 19, 20, 63, 69, 78, 86, 88, 90, 92, 93, 94, 98, 102, 108, 112, 115, 116, 117, 118, 120, 122, 123, 124, 133], "outer": [1, 21, 92], "radial": [1, 98], "shell": [1, 130], "fix": [1, 14, 21, 24, 86, 93, 98, 100, 115, 118, 122], "stabilis": 1, "so": [1, 4, 5, 6, 9, 11, 15, 24, 44, 63, 88, 95, 115, 122, 133], "end": [1, 14, 98, 99, 115], "up": [1, 2, 13, 14, 57, 58, 67, 86, 92, 98, 119, 120, 122, 127, 129, 130, 133], "period": [1, 9, 11, 19, 86, 87, 97, 102, 104, 112, 115, 120, 123, 124, 134], "boundari": [1, 3, 6, 7, 9, 10, 14, 19, 20, 21, 65, 67, 78, 85, 91, 92, 93, 94, 98, 104, 112, 115, 123, 124, 134], "condit": [1, 3, 7, 10, 14, 20, 21, 85, 86, 92, 93, 98, 104, 112, 115, 122, 123, 124, 134], "x": [1, 4, 5, 6, 13, 24, 35, 45, 46, 48, 69, 86, 88, 90, 91, 92, 93, 94, 98, 100, 101, 102, 104, 108, 110, 112, 114, 115, 116, 117, 122, 123, 124, 127, 130, 133, 134], "y": [1, 4, 6, 8, 9, 13, 14, 24, 35, 48, 69, 86, 88, 90, 94, 98, 101, 102, 108, 112, 115, 117, 122, 123, 124, 133], "As": [1, 5, 8, 9, 11, 122, 123, 125, 126, 129, 133], "shown": [1, 4, 5, 24, 29, 36, 67, 68, 101, 120], "figur": [1, 4, 5, 15, 86], "abov": [1, 2, 4, 5, 6, 8, 9, 13, 21, 23, 44, 50, 51, 62, 69, 112, 118, 122, 123, 130], "ar": [1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 15, 17, 21, 22, 24, 29, 31, 35, 36, 37, 39, 40, 42, 44, 48, 50, 51, 58, 62, 63, 65, 67, 68, 69, 85, 86, 88, 90, 92, 93, 94, 98, 101, 102, 104, 108, 112, 115, 118, 120, 121, 122, 123, 127, 129, 132, 133, 134], "characteris": 1, "burger": [1, 86], "b": [1, 4, 6, 13, 15, 17, 18, 24, 27, 29, 35, 36, 37, 39, 40, 42, 48, 65, 67, 86, 88, 92, 94, 98, 101, 104, 115, 119, 121, 122, 127, 133], "parallel": [1, 9, 54, 69, 98, 115], "while": [1, 5, 14, 63, 90, 108, 115, 120, 121, 122, 129], "have": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 24, 29, 31, 36, 39, 40, 42, 44, 48, 50, 51, 65, 67, 68, 69, 86, 88, 98, 101, 102, 112, 114, 115, 117, 120, 122, 133], "perpendicular": [1, 98, 124], "us": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 24, 29, 31, 36, 37, 39, 42, 48, 50, 51, 52, 55, 57, 58, 61, 62, 63, 65, 67, 68, 69, 86, 88, 91, 92, 93, 97, 98, 101, 102, 103, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 127, 130, 133, 134], "an": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 18, 21, 23, 24, 29, 31, 35, 36, 37, 39, 42, 45, 46, 48, 50, 51, 62, 63, 65, 67, 68, 69, 85, 86, 87, 88, 90, 91, 98, 101, 102, 106, 108, 112, 115, 116, 118, 120, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134], "anisotrop": [1, 12, 86, 88, 98], "solut": [1, 3, 5, 6, 7, 10, 12, 20, 21, 29, 36, 39, 42, 48, 65, 67, 86, 88, 91, 92, 93, 98], "within": [1, 4, 6, 12, 20, 24, 29, 36, 63, 86, 93, 94, 98, 112, 115, 120, 122, 123], "stroh": [1, 12, 86], "formal": [1, 7, 12], "gener": [1, 3, 4, 7, 8, 10, 11, 12, 17, 18, 20, 22, 24, 29, 35, 36, 42, 48, 50, 51, 63, 65, 69, 76, 85, 86, 88, 90, 92, 93, 97, 102, 112, 117, 122, 123, 124, 125, 126, 128, 133], "implement": [1, 2, 5, 6, 7, 12, 16, 17, 29, 30, 31, 34, 36, 39, 42, 45, 46, 47, 48, 49, 50, 51, 57, 65, 67, 68, 69, 92, 93, 94, 98, 101, 116, 120, 122, 123, 125, 126, 129, 131], "atomman": [1, 12, 86], "packag": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 91, 95, 125, 126, 133, 134], "For": [1, 4, 8, 9, 11, 12, 14, 24, 29, 35, 36, 42, 44, 50, 51, 65, 67, 69, 86, 88, 98, 106, 108, 109, 112, 115, 118, 122, 124, 129], "interact": [1, 2, 11, 14, 15, 17, 21, 37, 39, 44, 48, 49, 65, 67, 106, 108, 111, 115, 122, 132, 133, 134], "visualis": [1, 8, 9, 11, 13, 15], "structur": [1, 2, 7, 8, 9, 11, 12, 13, 15, 17, 22, 29, 31, 36, 37, 39, 40, 42, 48, 50, 51, 54, 61, 62, 63, 65, 67, 68, 69, 86, 88, 101, 102, 108, 112, 115, 120, 122, 123, 124, 125, 126, 129, 133, 134], "nglview": [1, 11, 13, 15, 134], "which": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 18, 21, 24, 29, 31, 36, 39, 42, 44, 48, 50, 51, 55, 61, 62, 63, 65, 67, 68, 69, 88, 91, 98, 101, 102, 104, 108, 112, 114, 115, 116, 118, 120, 122, 123, 127, 128, 129, 132, 133, 134], "allow": [1, 8, 9, 11, 24, 39, 69, 86, 94, 98, 102, 115, 116, 122, 123, 129, 134], "view": [1, 2, 8, 11, 15, 17, 107, 115, 122, 133, 134], "ipython": [1, 2, 15, 17], "jupyt": [1, 24], "notebook": [1, 3, 15, 24, 133], "also": [1, 2, 7, 8, 9, 11, 13, 14, 17, 21, 24, 29, 31, 36, 39, 42, 48, 50, 51, 62, 65, 67, 68, 69, 98, 101, 102, 115, 120, 122, 129, 132], "color": [1, 2, 4, 5, 6, 11, 15, 86, 98, 124], "atom": [1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 23, 29, 31, 34, 35, 36, 37, 39, 40, 42, 44, 48, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 76, 78, 86, 87, 88, 90, 98, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133], "accord": [1, 3, 7, 8, 14, 15, 20, 21, 31, 63, 69, 86, 88, 90, 92, 93, 112, 122, 131], "crystallograph": [1, 12, 98, 122], "identifi": [1, 8, 15, 31, 112, 123, 124, 129, 131], "common": [1, 8, 15, 61, 102, 112, 115, 122, 124, 125, 126, 131], "neighbour": [1, 8, 26, 27, 29, 36, 42, 50, 51, 57, 58, 59, 61, 62, 63, 65, 67, 86, 98, 101, 102, 107, 126, 127, 128, 130, 132, 134], "analysi": [1, 8, 12, 15, 86, 92, 93, 102, 124, 126, 129], "algoritm": 1, "its": [1, 4, 5, 6, 14, 17, 24, 29, 31, 36, 40, 42, 61, 62, 63, 65, 67, 68, 86, 88, 94, 101, 104, 115, 120, 122, 134], "extent": 1, "ovito": [1, 6, 12, 15, 86, 124], "part": [1, 8, 12, 14, 24, 31, 37, 39, 86, 118, 122, 134], "default": [1, 4, 9, 11, 12, 15, 20, 22, 24, 25, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 90, 91, 92, 93, 94, 98, 101, 108, 112, 114, 115, 116, 120, 121, 122], "depend": [1, 2, 8, 9, 11, 12, 24, 40, 69, 95, 122], "requir": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 31, 76, 78, 86, 88, 98, 102, 115, 120, 122, 124, 127, 132, 133, 134], "separ": [1, 18, 29, 36, 39, 42, 48, 65, 67, 88, 102, 108, 118, 122, 134], "instal": [1, 10, 22, 95], "keep": [1, 9, 24, 122], "mind": [1, 2, 6, 11, 94], "run": [1, 9, 12, 13, 14, 17, 50, 51, 55, 63, 68, 86, 88, 91, 98, 102, 115, 118, 120, 134], "well": [1, 3, 4, 9, 12, 35, 69, 122], "test": [1, 2, 5, 10, 13, 17, 25, 91, 115, 122, 127, 130, 131], "test_disloc": [1, 12], "py": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 17, 21, 22, 23, 24, 25, 78, 88, 133, 134], "sinc": [1, 13, 14, 29, 31, 36, 39, 42, 48, 50, 51, 58, 65, 67, 68, 101, 120, 122, 129, 133], "major": [1, 12, 122], "modul": [1, 2, 3, 6, 7, 8, 12, 13, 14, 24, 25, 28, 30, 34, 38, 41, 43, 50, 53, 56, 57, 60, 64, 66, 70, 71, 73, 75, 79, 83, 88, 89, 95, 96, 103, 105, 122, 124, 126, 133], "thu": [1, 4, 6, 9, 11, 12, 92, 93, 115], "skip": [1, 9, 12, 122], "found": [1, 4, 11, 65, 67, 69, 92, 93, 98, 102, 108, 115, 118, 122, 123, 133, 134], "your": [1, 9, 12, 24, 115, 125, 126, 134], "pleas": [1, 6, 29, 31, 36, 42, 67, 68, 101, 115, 120, 134], "note": [1, 11, 14, 24, 35, 36, 44, 69, 86, 88, 98, 106, 108, 115, 122, 127, 133, 134], "veri": [1, 2, 8, 9, 13, 115, 122, 133, 134], "small": [1, 2, 4, 9, 13, 14, 17, 21, 63, 69, 88, 112, 118, 124], "radiu": [1, 6, 8, 11, 20, 78, 86, 94, 112], "product": [1, 6, 117, 122], "calcul": [1, 2, 4, 7, 8, 9, 13, 14, 16, 17, 21, 23, 27, 69, 88, 91, 96, 98, 101, 102, 113, 115, 117, 118, 119, 120, 121, 122, 123, 127, 129, 130], "one": [1, 4, 6, 9, 11, 13, 14, 29, 31, 36, 42, 49, 62, 63, 67, 68, 69, 78, 86, 88, 90, 92, 93, 94, 101, 108, 112, 115, 120, 121, 122, 123], "should": [1, 2, 8, 9, 11, 12, 24, 29, 31, 35, 36, 39, 42, 48, 50, 51, 61, 62, 63, 65, 67, 68, 69, 86, 88, 98, 101, 102, 108, 115, 118, 120, 122, 133, 134], "do": [1, 4, 6, 9, 11, 12, 13, 24, 29, 31, 36, 42, 50, 51, 67, 68, 91, 101, 112, 115, 117, 118, 120, 122], "converg": [1, 3, 4, 6, 9, 10, 13, 14, 29, 36, 39, 42, 48, 65, 67, 88, 91, 92, 93, 116], "size": [1, 2, 4, 6, 11, 13, 14, 15, 24, 29, 36, 39, 40, 42, 48, 55, 65, 67, 69, 86, 88, 89, 92, 93, 98, 99, 112, 113, 114, 116, 122, 130], "ensur": [1, 6, 13, 14, 65, 115, 116, 134], "affect": [1, 15, 115, 122, 134], "studi": [1, 11, 12, 14, 86], "import": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 21, 23, 24, 35, 94, 95, 98, 112, 115, 122, 127, 129, 130, 131, 133, 134], "numpi": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 20, 21, 24, 27, 36, 69, 93, 94, 98, 109, 112, 114, 115, 117, 118, 122, 127, 129, 130, 131, 133, 134], "np": [1, 2, 4, 5, 6, 8, 11, 13, 14, 15, 17, 21, 29, 36, 37, 50, 51, 52, 55, 57, 58, 62, 63, 67, 68, 69, 86, 88, 90, 92, 94, 98, 101, 102, 112, 114, 120, 122, 124, 127, 129, 130, 131, 133, 134], "necessari": [1, 4, 11, 12, 13, 50, 51, 61, 62, 63, 88, 122, 123], "render": [1, 11, 24, 122], "3d": [1, 6, 11, 69, 86, 88, 124], "from": [1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 29, 31, 33, 35, 36, 37, 39, 42, 48, 49, 50, 51, 57, 58, 62, 65, 67, 68, 69, 76, 78, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 106, 108, 109, 111, 112, 113, 115, 116, 118, 120, 122, 123, 124, 127, 129, 130, 131, 133, 134], "show_disloc": [1, 8, 11, 15], "defin": [1, 2, 4, 5, 8, 13, 14, 29, 31, 32, 44, 48, 49, 69, 86, 88, 101, 108, 111, 112, 115, 122, 123, 124, 134], "dimensionless": [1, 4, 86, 88, 98], "alat": [1, 8, 9, 11, 13, 86], "frame": [1, 4, 5, 6, 13, 69, 84, 86, 88, 98, 123, 124], "each": [1, 4, 5, 9, 19, 24, 27, 29, 36, 37, 39, 42, 48, 50, 51, 63, 65, 67, 69, 86, 88, 90, 91, 92, 93, 98, 102, 108, 109, 112, 115, 116, 118, 122, 123, 129, 132, 133, 134], "kind": [1, 12, 35, 36, 37, 86, 122], "ha": [1, 4, 5, 6, 7, 8, 9, 12, 14, 25, 29, 31, 35, 36, 37, 39, 42, 48, 58, 65, 67, 68, 85, 86, 88, 98, 101, 114, 115, 116, 120, 122, 123, 127, 129, 130, 131], "sever": 1, "describ": [1, 2, 9, 17, 18, 21, 92, 93, 98, 101, 115, 116, 122, 127, 130, 134], "geometr": [1, 37, 108, 115], "layout": [1, 15, 122], "posit": [1, 4, 6, 13, 14, 15, 17, 21, 23, 29, 31, 36, 42, 48, 50, 51, 62, 67, 68, 69, 76, 86, 88, 92, 93, 94, 98, 100, 101, 102, 108, 112, 115, 118, 120, 122, 133, 134], "Such": [1, 133], "store": [1, 24, 31, 40, 52, 55, 63, 77, 98, 101, 108, 112, 115, 117, 122, 129, 133], "attribut": [1, 29, 31, 36, 37, 39, 40, 42, 48, 50, 51, 65, 67, 68, 86, 92, 93, 98, 101, 112, 115, 117, 118, 120, 122], "class": [1, 8, 9, 11, 12, 13, 14, 17, 24, 29, 31, 36, 37, 39, 40, 42, 44, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 85, 86, 87, 88, 92, 93, 94, 98, 101, 102, 106, 110, 111, 112, 115, 117, 118, 120, 122, 123], "thei": [1, 2, 11, 12, 24, 29, 36, 58, 63, 67, 68, 101, 108, 112, 117, 120, 122, 133], "can": [1, 2, 4, 8, 9, 11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 29, 31, 35, 36, 39, 42, 44, 48, 50, 51, 57, 58, 63, 65, 67, 68, 69, 86, 88, 92, 93, 94, 98, 101, 108, 109, 112, 115, 118, 120, 122, 123, 125, 126, 127, 129, 130, 133, 134], "without": [1, 9, 17, 21, 33, 50, 51, 94, 122], "actual": [1, 2, 21, 23, 94, 98, 118, 122, 129], "need": [1, 6, 9, 13, 14, 15, 24, 29, 31, 36, 39, 42, 44, 48, 50, 51, 61, 62, 63, 65, 67, 68, 69, 86, 94, 98, 101, 112, 120, 122, 123, 127, 130, 133], "construct": [1, 9, 11, 12, 39, 48, 50, 51, 65, 86, 92, 93, 108, 111, 112, 122, 133], "bccmixed111disloc": [1, 86], "print": [1, 6, 8, 11, 13, 21, 50, 51, 62, 63, 86, 88, 94, 98, 112, 115, 120, 122, 133, 134], "bcc": [1, 13, 40, 86, 97, 102, 124], "miller": [1, 8, 9, 86, 98, 102, 122], "indic": [1, 9, 36, 57, 58, 62, 86, 91, 94, 98, 102, 103, 112, 113, 114, 115, 118, 122, 124, 129, 134], "ax": [1, 2, 4, 5, 6, 12, 13, 69, 86, 90, 98, 102, 115, 122, 124], "burgers_dimensionless": [1, 86], "core": [1, 11, 15, 50, 51, 52, 62, 86, 122], "fraction": [1, 11, 102], "coord": [1, 11, 94, 112, 121], "n": [1, 2, 4, 5, 6, 8, 9, 13, 21, 29, 35, 36, 37, 39, 42, 48, 65, 67, 86, 91, 92, 93, 94, 97, 98, 99, 101, 102, 112, 115, 122, 127, 130], "unit_cell_core_position_dimensionless": [1, 86], "unit": [1, 4, 6, 9, 13, 14, 15, 17, 23, 24, 29, 31, 36, 42, 67, 68, 69, 77, 86, 88, 91, 92, 93, 94, 98, 101, 102, 108, 115, 118, 120, 122], "usr": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 133, 134], "lib": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 122, 133, 134], "python3": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 133, 134], "dist": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 133, 134], "scipi": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 29, 36, 86, 88, 92, 93, 94, 98, 112, 117, 133, 134], "__init__": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 24, 29, 31, 36, 39, 40, 42, 44, 48, 49, 50, 51, 52, 58, 59, 61, 62, 63, 65, 67, 68, 69, 85, 86, 87, 88, 92, 93, 94, 98, 101, 102, 106, 110, 111, 112, 115, 117, 118, 120, 123, 133, 134], "146": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 133, 134], "userwarn": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 133, 134], "A": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 18, 20, 21, 24, 27, 29, 31, 35, 36, 37, 39, 42, 48, 49, 50, 51, 57, 58, 65, 67, 68, 69, 86, 88, 91, 98, 101, 102, 108, 112, 114, 115, 117, 118, 120, 122, 123, 124, 131, 133, 134], "version": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 24, 69, 86, 95, 115, 116, 120, 122, 133, 134], "17": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 24, 122, 129, 133, 134], "3": [1, 2, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 17, 21, 23, 29, 36, 37, 39, 52, 58, 63, 67, 68, 69, 76, 78, 86, 90, 91, 92, 93, 94, 98, 99, 101, 108, 111, 112, 115, 116, 117, 120, 121, 122, 123, 124, 127, 130, 131, 133, 134], "25": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 86, 133, 134], "0": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 20, 21, 23, 24, 29, 31, 35, 36, 37, 39, 40, 42, 44, 48, 49, 50, 51, 58, 59, 63, 65, 67, 68, 69, 78, 85, 86, 88, 91, 92, 93, 94, 97, 98, 99, 101, 102, 108, 109, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 127, 129, 130, 131, 133, 134], "detect": [1, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 21, 86, 133, 134], "26": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 86, 133, 134], "warn": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 24, 32, 50, 51, 94, 110, 115, 124, 133, 134], "f": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 23, 35, 36, 37, 42, 44, 65, 67, 69, 86, 91, 92, 93, 94, 98, 99, 115, 116, 118, 122, 133, 134], "np_minvers": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 133, 134], "np_maxvers": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 17, 133, 134], "5": [1, 2, 4, 5, 6, 11, 13, 14, 15, 20, 21, 23, 35, 37, 52, 69, 78, 85, 86, 88, 94, 97, 98, 99, 100, 101, 108, 112, 115, 120, 122, 124, 127, 129, 130, 131, 133, 134], "16666667": [1, 86], "disloc_mod": 1, "inspect": [1, 3, 10], "find": [1, 6, 13, 61, 62, 63, 69, 86, 94, 98, 102, 112, 115, 122, 127, 130], "all": [1, 4, 6, 9, 12, 13, 14, 15, 17, 19, 20, 24, 29, 31, 36, 37, 39, 42, 48, 50, 51, 58, 61, 63, 65, 67, 68, 69, 78, 92, 93, 98, 100, 101, 102, 104, 108, 111, 112, 115, 118, 120, 121, 122, 129, 133, 134], "inherit": [1, 24, 122], "abstract": [1, 42, 48, 65, 86, 95, 112, 120], "base": [1, 2, 8, 9, 11, 12, 13, 24, 29, 31, 36, 37, 39, 40, 42, 44, 48, 49, 50, 51, 52, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 85, 86, 87, 88, 92, 93, 94, 98, 101, 102, 106, 110, 111, 112, 115, 116, 117, 118, 120, 122, 123, 124, 127, 132, 133, 134], "cubiccrystaldisloc": [1, 8, 12, 86, 102], "name": [1, 4, 6, 8, 9, 11, 13, 15, 24, 25, 29, 31, 32, 36, 37, 39, 40, 42, 48, 50, 51, 63, 65, 67, 68, 78, 86, 98, 101, 106, 107, 108, 109, 110, 115, 120, 122, 124, 134], "attr": 1, "__dict__": 1, "item": [1, 115, 122], "isclass": 1, "issubclass": 1, "cubiccrystaldissociateddisloc": [1, 8, 12, 86, 102], "bccscrew111disloc": [1, 86], "bccedge111disloc": [1, 86], "bccedge111bardisloc": [1, 86], "bccedge100disloc": [1, 8, 86], "bccedge100110disloc": [1, 86], "diamondglide30degreeparti": [1, 86], "diamondglide90degreeparti": [1, 11, 86], "diamondglidescrew": [1, 8, 86, 102], "diamondglide60degre": [1, 86], "fccscrewshockleyparti": [1, 86], "fccedgeshockleyparti": [1, 86], "fccscrew110disloc": [1, 86], "fccedge110disloc": [1, 8, 86, 102], "case": [1, 4, 5, 9, 11, 15, 29, 31, 36, 39, 42, 48, 50, 51, 62, 65, 67, 68, 69, 86, 92, 93, 98, 101, 112, 115, 120, 122, 123, 134], "take": [1, 5, 11, 13, 21, 23, 44, 69, 85, 86, 88, 115, 122], "tungsten": [1, 86], "lattic": [1, 2, 7, 8, 11, 12, 13, 14, 17, 37, 69, 86, 97, 98, 101, 102, 108, 112, 115, 117, 123, 124, 133], "paramet": [1, 2, 4, 5, 12, 13, 14, 15, 21, 22, 23, 25, 26, 29, 31, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 78, 86, 88, 90, 91, 92, 93, 94, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 132, 133, 134], "elast": [1, 7, 10, 11, 12, 17, 21, 29, 35, 36, 39, 42, 48, 65, 67, 86, 96, 98, 118, 125, 126, 134], "constant": [1, 4, 5, 6, 8, 10, 11, 12, 13, 14, 17, 21, 23, 29, 35, 36, 37, 39, 40, 42, 48, 65, 67, 69, 86, 88, 91, 92, 93, 98, 101, 102, 108, 115, 118, 123, 124, 125, 126], "It": [1, 8, 13, 19, 21, 31, 50, 51, 88, 112, 115, 122, 125, 126, 127], "possibl": [1, 6, 11, 24, 29, 86, 88, 112, 115, 122, 123], "valu": [1, 4, 5, 6, 13, 14, 22, 24, 25, 31, 37, 40, 45, 46, 63, 69, 86, 88, 91, 92, 93, 94, 98, 100, 102, 108, 112, 115, 116, 117, 118, 121, 122, 127, 133], "literatur": [1, 9, 133], "howev": [1, 2, 9, 11, 12, 13, 35, 112, 122, 133], "you": [1, 8, 9, 12, 14, 24, 115, 120, 122, 133, 134], "plan": [1, 12], "relax": [1, 2, 9, 11, 13, 21, 23, 29, 36, 39, 40, 42, 48, 65, 67, 69, 86, 88, 98, 100, 102, 118, 133], "interatom": [1, 2, 8, 14, 22, 31, 35, 98, 126, 128, 132, 134], "potenti": [1, 2, 4, 5, 6, 8, 9, 13, 14, 20, 21, 22, 23, 29, 31, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 54, 59, 63, 65, 67, 69, 86, 91, 92, 93, 94, 98, 100, 108, 112, 115, 123, 126, 128, 133, 134], "conveni": [1, 108, 117, 122, 134], "method": [1, 3, 4, 6, 8, 10, 12, 29, 31, 34, 36, 37, 39, 40, 42, 44, 48, 49, 50, 51, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 86, 88, 92, 93, 94, 98, 101, 102, 106, 110, 111, 112, 115, 117, 118, 120, 122, 123, 124, 133], "get_elastic_const": [1, 8, 9, 29, 36, 39, 42, 48, 65, 67, 86], "desir": [1, 2, 5, 6, 8, 11, 39, 88, 92, 122, 134], "embed": [1, 34, 35, 36, 37], "marinica": [1, 86], "et": [1, 9, 14, 17, 24, 31, 65, 67, 134], "al": [1, 9, 14, 17, 24, 31, 65, 67, 115, 134], "2013": [1, 86], "paper": [1, 24, 86], "eam4": 1, "forc": [1, 2, 4, 13, 17, 29, 31, 36, 39, 40, 42, 44, 48, 50, 51, 52, 65, 67, 68, 69, 86, 88, 98, 99, 101, 102, 103, 108, 113, 115, 116, 117, 118, 120, 122, 123, 129, 132, 134], "energi": [1, 2, 9, 13, 17, 21, 29, 31, 35, 36, 37, 39, 40, 42, 48, 49, 50, 51, 55, 63, 65, 67, 68, 86, 98, 99, 100, 101, 102, 108, 109, 112, 115, 118, 120, 129], "eam": [1, 2, 22, 68], "eam_calc": 1, "w_eam4": 1, "function": [1, 2, 3, 4, 6, 7, 8, 9, 10, 13, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 61, 62, 63, 65, 67, 69, 72, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 128, 129, 131, 133], "accept": [1, 2, 5, 8, 29, 36, 39, 42, 48, 58, 65, 67, 69, 88, 102, 112, 122, 131, 134], "ani": [1, 4, 8, 9, 21, 24, 29, 31, 35, 36, 39, 42, 48, 50, 51, 57, 62, 65, 67, 68, 69, 101, 115, 120, 122, 133], "ASE": [1, 4, 6, 8, 13, 14, 16, 29, 36, 50, 51, 55, 69, 98, 102, 106, 108, 112, 115, 118, 120, 123, 125, 126, 133], "type": [1, 2, 8, 15, 20, 25, 36, 37, 50, 51, 52, 57, 58, 61, 62, 63, 69, 86, 88, 90, 91, 92, 93, 94, 98, 100, 102, 104, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 124, 130, 132, 133], "c11": [1, 8, 9, 11, 13, 14, 21, 40, 86, 88, 98, 118], "c12": [1, 8, 9, 11, 13, 21, 40, 86, 88, 98], "c44": [1, 8, 9, 11, 13, 21, 40, 86, 88, 98], "symbol": [1, 2, 4, 6, 8, 9, 11, 13, 14, 17, 35, 37, 49, 58, 86, 95, 102, 112, 115, 122, 124, 134], "w": [1, 14, 35, 39, 40, 44, 48, 49, 65, 86, 88, 98, 110, 118, 122, 124], "verbos": [1, 2, 8, 9, 12, 20, 29, 31, 36, 39, 42, 48, 50, 51, 59, 62, 63, 65, 67, 68, 78, 86, 88, 98, 101, 116, 120], "fals": [1, 2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 24, 29, 31, 36, 39, 40, 42, 48, 50, 51, 55, 63, 65, 67, 68, 69, 86, 88, 92, 97, 98, 101, 102, 106, 109, 110, 112, 115, 117, 120, 121, 122, 123, 124, 130, 134], "3f": [1, 17], "angstrom": [1, 4, 6, 8, 86, 94, 115, 127, 130], "2f": [1, 2, 17], "gpa": [1, 13, 14, 17, 21, 118], "143": 1, "538": 1, "90": [1, 4, 11, 115, 134], "219": 1, "93": [1, 18, 35], "178": 1, "80": [1, 91], "good": [1, 5, 122], "agreement": [1, 3, 10, 86], "number": [1, 4, 5, 6, 8, 9, 13, 14, 17, 21, 26, 29, 31, 35, 36, 37, 39, 42, 48, 50, 51, 55, 57, 58, 65, 67, 68, 69, 86, 88, 90, 91, 92, 93, 94, 97, 98, 101, 102, 104, 106, 108, 112, 114, 115, 119, 120, 122, 123, 127, 129, 130, 131, 134], "523": 1, "202": 1, "161": 1, "notat": [1, 35, 36, 69, 88, 102, 113, 115], "mean": [1, 4, 8, 11, 14, 15, 17, 31, 35, 37, 39, 63, 69, 98, 115, 116, 122, 125, 126, 127], "glide": [1, 8, 86, 102], "plane": [1, 9, 10, 12, 86, 88, 92, 98, 101, 102, 115, 122, 123, 134], "geometri": [1, 11, 13, 86, 98, 115, 124, 134], "112": [1, 8, 11], "think": 1, "about": [1, 4, 14, 24, 31, 50, 51, 69, 86, 88, 98, 108, 115, 122, 133], "object": [1, 2, 8, 13, 14, 15, 25, 29, 31, 36, 39, 40, 42, 48, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 81, 85, 86, 87, 88, 92, 94, 98, 101, 102, 104, 106, 107, 108, 110, 111, 112, 115, 117, 118, 120, 122, 123, 124, 133], "inform": [1, 12, 14, 20, 24, 29, 31, 36, 37, 39, 42, 48, 50, 51, 63, 65, 67, 68, 86, 98, 101, 106, 108, 120, 122, 133], "pass": [1, 8, 9, 11, 12, 13, 29, 31, 36, 42, 67, 68, 69, 86, 88, 98, 101, 102, 109, 115, 117, 120, 122, 124], "a_0": 1, "c_": [1, 11, 13, 35, 88], "11": [1, 6, 8, 11, 13, 17, 21, 86, 94, 115, 122, 133], "12": [1, 5, 6, 11, 13, 65, 86, 91, 92, 93, 94, 98, 108, 115, 122, 129, 133], "44": [1, 4, 11, 13, 86, 88, 119], "element": [1, 3, 10, 13, 14, 18, 20, 35, 37, 58, 69, 86, 108, 112, 115, 122, 123, 124, 133, 134], "constructor": [1, 86, 92, 98, 120], "w_screw": 1, "57169501": 1, "go": [1, 2], "build_cylind": [1, 8, 11, 86], "automat": [1, 14, 21, 22, 102, 115, 118, 120, 133], "onli": [1, 2, 4, 8, 9, 11, 12, 14, 26, 35, 37, 39, 42, 44, 50, 51, 58, 63, 65, 67, 69, 86, 88, 91, 98, 100, 102, 103, 104, 112, 113, 114, 115, 117, 118, 121, 122, 127, 129, 134], "chose": 1, "return": [1, 2, 4, 6, 9, 13, 15, 17, 25, 29, 31, 35, 36, 37, 39, 42, 44, 48, 49, 50, 51, 57, 58, 61, 62, 63, 65, 67, 68, 69, 85, 86, 88, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 130, 133, 134], "refer": [1, 3, 9, 10, 13, 15, 24, 35, 36, 37, 48, 50, 51, 65, 67, 92, 93, 94, 98, 100, 108, 113, 115, 122, 126], "iter": [1, 5, 29, 36, 39, 42, 48, 49, 65, 67, 85, 88, 92, 93, 102, 115, 122], "until": [1, 9, 120], "achiev": [1, 6, 8, 9, 29, 36, 39, 42, 48, 65, 67, 88], "output": [1, 4, 5, 12, 24, 29, 31, 36, 37, 39, 42, 48, 50, 51, 55, 65, 67, 68, 69, 78, 86, 88, 98, 101, 108, 114, 116, 120, 122, 132], "show": [1, 2, 4, 5, 6, 8, 9, 11, 14, 15, 24, 86, 98, 102, 122, 129, 133], "differ": [1, 2, 4, 6, 9, 10, 11, 12, 15, 23, 29, 31, 36, 37, 39, 42, 48, 50, 51, 55, 65, 67, 68, 69, 86, 91, 92, 93, 94, 98, 101, 102, 103, 108, 112, 113, 115, 120, 122, 123, 125, 126, 132, 133], "between": [1, 4, 6, 8, 9, 14, 15, 29, 36, 37, 40, 78, 86, 91, 92, 98, 100, 102, 108, 112, 115, 117, 122, 123, 124, 127, 129, 130, 133], "step": [1, 3, 10, 13, 14, 19, 23, 29, 36, 39, 42, 48, 50, 51, 65, 67, 88, 91, 98, 102, 113, 116, 118, 122, 127, 134], "unconstrain": [1, 86], "region": [1, 8, 14, 20, 21, 50, 51, 52, 62, 63, 86, 92, 93, 98, 100, 118, 134], "around": [1, 63, 69, 86, 98, 115, 122, 123, 125, 126], "ad": [1, 11, 12, 15, 24, 50, 51, 62, 63, 69, 86, 115, 122], "top": [1, 9, 17, 24, 69, 118, 123, 125, 126, 129], "10": [1, 4, 5, 6, 8, 9, 11, 13, 20, 21, 31, 40, 50, 51, 59, 62, 67, 69, 86, 90, 92, 93, 94, 98, 102, 108, 110, 112, 115, 116, 118, 122, 123, 130, 133], "two": [1, 2, 4, 6, 8, 9, 11, 12, 14, 15, 24, 29, 35, 36, 48, 57, 62, 78, 86, 98, 115, 122, 123, 124, 125, 126, 127, 129, 133, 134], "time": [1, 5, 9, 13, 14, 23, 57, 58, 69, 86, 94, 98, 108, 109, 112, 117, 118, 120, 122, 129, 133], "larger": [1, 61, 62, 63, 69, 121, 122], "than": [1, 2, 4, 14, 26, 27, 29, 31, 36, 42, 58, 67, 68, 69, 86, 92, 93, 101, 112, 116, 120, 121, 122, 124, 127], "cutoff": [1, 2, 14, 21, 26, 27, 36, 37, 39, 42, 49, 58, 65, 67, 86, 97, 98, 99, 101, 104, 108, 112, 115, 119, 121, 123, 127, 129, 130, 131, 133, 134], "fix_mask": [1, 15], "arrai": [1, 4, 6, 11, 13, 14, 15, 29, 36, 37, 39, 42, 45, 46, 48, 50, 51, 52, 55, 57, 58, 62, 63, 65, 67, 69, 86, 88, 90, 92, 93, 94, 97, 98, 100, 102, 104, 109, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 124, 129, 133, 134], "via": [1, 9, 13, 20, 67, 93, 103, 115, 120, 122], "w_screw_dislo": 1, "get_arrai": [1, 40, 115], "w_screw_bulk": 1, "20": [1, 4, 8, 14, 24, 78, 86, 90, 92, 93, 98, 108, 115, 122], "ncell": 1, "nburger": 1, "lenth": 1, "linalg": [1, 6, 13, 24, 27, 69], "norm": [1, 6, 13, 27, 29, 36, 39, 42, 45, 46, 48, 65, 67, 86, 88, 98, 116, 117, 121, 122], "scf": 1, "d1": 1, "d2": 1, "_inf": 1, "0014005967613863746": 1, "6": [1, 2, 4, 5, 6, 8, 11, 13, 17, 21, 29, 36, 37, 58, 65, 67, 68, 69, 86, 88, 93, 94, 98, 101, 108, 112, 115, 120, 122, 123, 129, 131, 133, 134], "703182437117761e": 1, "06": [1, 5, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 86, 88, 101, 116, 120, 124, 133], "208065590953879e": 1, "08": [1, 6, 21, 94], "61": 1, "59761308": 1, "62": 1, "23594737": 1, "72225562": 1, "72": 1, "now": [1, 4, 6, 11, 13, 14, 17, 50, 51, 61, 62, 63, 98, 122, 133], "look": [1, 4, 5, 6, 9, 20, 23, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120, 122, 133], "hover": 1, "mous": 1, "over": [1, 2, 11, 31, 94, 98, 122, 129], "chemic": [1, 8, 11, 13, 69, 86, 102, 115, 134], "cna": [1, 8], "algorithm": [1, 6, 12, 14, 94, 112, 113, 117, 122, 131], "arrow": 1, "displai": [1, 2, 15, 17, 24], "moreov": 1, "control": [1, 3, 4, 5, 8, 11, 20, 21, 22, 25, 86, 92, 93, 116, 122, 132, 134], "translat": [1, 9, 14, 31, 115, 122, 133], "right": [1, 4, 5, 6, 35, 36, 44, 86, 92, 93, 98, 124, 127, 130], "click": 1, "drag": 1, "rotat": [1, 4, 9, 13, 69, 88, 102, 115, 123, 124, 134], "left": [1, 5, 35, 36, 44, 86, 92, 93, 98, 122, 127, 130], "axi": [1, 6, 8, 13, 14, 15, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 90, 94, 101, 102, 112, 114, 115, 118, 120, 122, 124], "ctrl": 1, "zoom": [1, 8, 11, 134], "scroll": 1, "wheel": 1, "d_name": [1, 8, 11, 15], "seen": [1, 8, 123], "most": [1, 2, 4, 9, 12, 13, 115, 116, 122, 134], "some": [1, 2, 4, 5, 8, 9, 11, 12, 20, 24, 32, 50, 51, 58, 69, 98, 101, 109, 118, 122, 123, 127, 129], "grei": [1, 4, 5, 6], "other": [1, 4, 5, 6, 9, 11, 13, 15, 16, 24, 35, 40, 63, 69, 78, 86, 94, 112, 115, 121, 122, 123, 125, 126, 127, 130, 133, 134], "These": [1, 4, 12, 22, 24, 29, 36, 39, 42, 48, 65, 67, 98, 122], "repres": [1, 9, 13, 14, 31, 54, 61, 62, 63, 86, 98, 120], "defect": [1, 9, 12], "where": [1, 7, 11, 12, 22, 29, 36, 63, 67, 69, 92, 93, 94, 98, 112, 115, 117, 122, 123, 127, 130], "could": [1, 9, 11, 14, 23, 115, 122], "assign": [1, 2, 50, 51, 52, 69, 121, 122, 132], "artifici": [1, 98], "free": [1, 9, 69, 98, 115, 118, 122, 123], "surfac": [1, 4, 7, 8, 10, 12, 13, 14, 21, 69, 86, 91, 97, 98, 102, 123, 134], "here": [1, 4, 5, 6, 9, 13, 24, 92, 93, 98, 107, 115, 120, 127, 130, 133, 134], "length": [1, 4, 5, 6, 8, 15, 21, 26, 36, 86, 91, 92, 93, 98, 102, 104, 108, 112, 114, 115, 116, 119, 122, 127, 129, 131], "frac": [1, 17, 36, 44, 86, 98, 127, 130], "sqrt": [1, 2, 6, 29, 36, 67, 86, 91, 92, 93, 94, 117, 122], "With": [1, 4, 8, 10, 11, 90, 112], "infinit": [1, 4, 7, 88], "long": [1, 39, 57, 86, 114, 115, 122, 130, 134], "straight": [1, 12, 13, 86], "make": [1, 4, 5, 6, 8, 9, 13, 14, 20, 24, 29, 31, 57, 58, 62, 69, 86, 92, 93, 106, 108, 115, 122], "easier": [1, 115, 122], "see": [1, 2, 4, 8, 9, 11, 12, 14, 24, 27, 35, 37, 69, 86, 88, 92, 93, 98, 100, 107, 115, 119, 120, 122], "might": [1, 14, 115], "notic": [1, 4, 115], "outsid": [1, 58, 86, 112, 115], "simul": [1, 6, 7, 10, 12, 21, 55, 59, 61, 62, 63, 65, 76, 77, 78, 87, 91, 92, 93, 94, 108, 112, 115, 118, 125, 126, 130, 132], "box": [1, 4, 6, 29, 36, 39, 42, 48, 65, 67, 78, 86, 90, 94, 112, 113, 129], "To": [1, 6, 8, 9, 11, 12, 13, 14, 17, 86, 98, 115, 122, 123, 133, 134], "increas": [1, 14, 21, 86, 91, 98, 102, 118, 122, 129], "reli": [1, 12], "magic": 1, "simpli": [1, 11, 13, 35, 122, 134], "multipli": [1, 63, 92, 93], "longer_w_screw_dislo": 1, "If": [1, 6, 9, 12, 20, 24, 29, 31, 36, 39, 42, 48, 50, 51, 57, 58, 62, 63, 65, 67, 68, 69, 86, 88, 90, 91, 92, 94, 98, 101, 102, 104, 108, 112, 115, 117, 118, 120, 122, 124, 129], "want": [1, 4, 6, 9, 29, 36, 67, 68, 69, 76, 101, 115, 120, 122, 129, 134], "save": [1, 9, 14, 50, 51, 58, 69, 86, 107, 109, 123, 134], "file": [1, 4, 5, 6, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 33, 36, 37, 39, 42, 48, 50, 51, 65, 67, 68, 69, 76, 78, 86, 88, 101, 106, 107, 108, 109, 115, 118, 120, 122, 132, 133], "further": [1, 24, 58, 120, 122], "input": [1, 8, 15, 18, 21, 61, 62, 63, 78, 98, 102, 108, 112, 117, 120, 122, 124, 132, 133], "code": [1, 9, 11, 12, 13, 14, 17, 24, 88, 115, 120, 122, 125, 126, 129, 134], "write": [1, 4, 6, 13, 14, 21, 29, 31, 33, 36, 37, 42, 44, 67, 68, 88, 101, 106, 108, 109, 115, 118, 120, 122, 132, 133, 134], "filenam": [1, 24, 31, 86, 108, 115, 118, 122], "support": [1, 3, 7, 12, 17, 24, 29, 31, 36, 37, 42, 50, 51, 67, 68, 96, 101, 115, 120, 122, 124], "wide": [1, 10, 128], "rang": [1, 2, 4, 39, 40, 88, 94, 112, 123], "format": [1, 4, 6, 15, 20, 21, 24, 29, 35, 36, 37, 39, 42, 48, 65, 67, 76, 86, 94, 107, 108, 110, 112, 115, 120, 122, 123, 124, 129, 133], "includ": [1, 2, 7, 9, 13, 14, 22, 24, 26, 35, 52, 62, 63, 69, 86, 96, 98, 100, 108, 112, 115, 122, 125, 126, 127, 132, 133, 134], "xyz": [1, 4, 20, 21, 76, 86, 108, 115, 120, 133, 134], "lammp": [1, 4, 6, 12, 20, 37, 39, 76, 78, 85, 106, 108, 115, 126, 132], "data": [1, 2, 4, 6, 8, 11, 15, 20, 31, 37, 50, 51, 52, 54, 55, 63, 69, 76, 78, 86, 102, 106, 108, 109, 111, 112, 114, 118, 120, 122, 129], "forget": 1, "account": [1, 2, 6, 14, 88, 112, 115], "like": [1, 8, 9, 11, 13, 20, 23, 24, 29, 31, 35, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 101, 108, 115, 120, 122, 129, 133], "said": 1, "befor": [1, 4, 6, 24, 69, 88, 98, 102, 115, 117, 120, 122, 123], "vectpr": 1, "same": [1, 4, 8, 11, 12, 13, 17, 24, 35, 69, 86, 93, 94, 98, 102, 108, 112, 114, 115, 118, 120, 122, 133, 134], "w_edg": 1, "w_edge_bulk": 1, "w_edge_dislo": 1, "15": [1, 4, 6, 11, 21, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 86, 91, 92, 93, 101, 108, 120, 122, 133, 134], "1750376715612949": 1, "030669760256875678": 1, "004376501917143061": 1, "0008807178021867923": 1, "4": [1, 2, 4, 5, 6, 9, 13, 14, 17, 21, 37, 52, 65, 69, 86, 94, 98, 108, 112, 115, 122, 130, 133, 134], "00015452961340184368": 1, "6112813675371882e": 1, "05": [1, 4, 5, 6, 13, 20, 21, 29, 36, 39, 42, 48, 65, 67, 69, 88, 91, 92, 93, 94, 103, 113], "7488285575835185e": 1, "7": [1, 2, 5, 6, 8, 13, 20, 21, 23, 37, 86, 94, 108, 115, 122, 133], "771193334948912e": 1, "07": [1, 4, 92, 93, 94], "54": 1, "44511239": 1, "53": 1, "34509774": 1, "69970164": 1, "more": [1, 2, 9, 10, 11, 12, 29, 31, 36, 42, 44, 50, 51, 58, 62, 67, 68, 86, 92, 93, 101, 108, 112, 115, 120, 122, 123, 133], "scale": [1, 2, 8, 11, 14, 15, 31, 63, 67, 88, 115], "bar": [1, 4, 6, 24, 44, 86, 122], "bar1": 1, "angl": [1, 26, 44, 49, 86, 98, 108, 111, 112, 115, 122, 126, 128, 132, 133], "70": [1, 12], "lead": [1, 5, 11, 20, 91, 115, 122], "both": [1, 5, 6, 9, 14, 18, 21, 88, 115, 122, 129], "compon": [1, 3, 9, 11, 15, 36, 69, 88, 98, 102, 115, 121, 122, 123, 129, 134], "w_mix": 1, "w_mixed_bulk": 1, "w_mixed_dislo": 1, "2912079415873434": 1, "04617010795789245": 1, "011433812661707288": 1, "0007697510278923819": 1, "0003591870266064223": 1, "8554970632151122e": 1, "0262827855767043e": 1, "9": [1, 2, 5, 6, 8, 13, 17, 21, 23, 37, 92, 93, 94, 98, 112, 115, 122, 133], "262498320908308e": 1, "call": [1, 5, 8, 9, 13, 22, 24, 27, 29, 31, 36, 39, 42, 48, 50, 51, 58, 59, 65, 67, 68, 69, 86, 88, 92, 93, 98, 101, 102, 108, 115, 116, 117, 118, 120, 122, 123, 133], "burdger": 1, "form": [1, 5, 9, 11, 12, 17, 35, 45, 46, 47, 65, 67, 69, 88, 98, 102, 112, 115, 122, 123], "reaction": [1, 4], "abund": 1, "share": [1, 11, 55, 102, 112, 122], "plai": [1, 2], "role": [1, 2, 24], "impur": [1, 86], "segreg": 1, "w_100110_edg": 1, "14339003": 1, "w_100110_edge_bulk": 1, "w_100110_edge_dislo": 1, "d_color": [1, 15], "25601140489118085": 1, "06016860532818502": 1, "008688196415483684": 1, "002036848525945059": 1, "00025500566381200795": 1, "8": [1, 5, 6, 9, 11, 13, 14, 21, 24, 37, 40, 65, 91, 92, 93, 94, 98, 108, 110, 115, 121, 122, 129, 133, 134], "302123227732494e": 1, "6579022069529437e": 1, "7272027901249487e": 1, "75386009341139e": 1, "ly": 1, "w_100_edg": 1, "w_100_edge_bulk": 1, "w_100_edge_dislo": 1, "2972382408416421": 1, "03893880170574304": 1, "01118993521430145": 1, "0014929003265811563": 1, "00046542489793766073": 1, "162098079675384e": 1, "3592857046162976e": 1, "370951242504972e": 1, "007740695381346e": 1, "fcc": [1, 2, 9, 13, 40, 86, 97, 102, 115, 124], "consid": [1, 2, 6, 11, 21, 26, 63, 85, 115, 127, 129, 133], "ni": [1, 92, 93], "bonni": 1, "fecuni": 1, "alloi": [1, 2, 11, 18, 35, 36, 37, 65], "520": 1, "244": 1, "148": 1, "85": [1, 58, 86, 108, 112, 133, 134], "125": 1, "ni_screw": 1, "76": [1, 13], "ni_screw_bulk": 1, "ni_screw_dislo": 1, "025786878331816365": 1, "0009682645189886263": 1, "0001906222678526026": 1, "2412360552323645e": 1, "107613503747995e": 1, "976666234668414e": 1, "03226306802679607": 1, "0021469740733213866": 1, "000267677052085441": 1, "7238460326234337e": 1, "5324311344599995e": 1, "938753628500823e": 1, "35542726": 1, "96818843": 1, "48901587": 1, "49": [1, 118], "due": [1, 4, 7, 11, 24, 29, 36, 39, 42, 48, 65, 67, 69, 76, 91, 123], "stabl": [1, 21, 86, 122, 134], "intrins": 1, "stack": [1, 10, 12, 86, 102, 112], "fault": [1, 10, 12, 86, 102], "isf": 1, "shocklei": 1, "partial": [1, 4, 8, 9, 11, 12, 15, 36, 44, 86, 122], "bar10": 1, "rightarrow": 1, "mathrm": [1, 2, 4, 5, 6, 36], "bar21": 1, "partial_dist": [1, 8, 15, 86], "distanc": [1, 4, 5, 6, 9, 14, 15, 26, 29, 35, 36, 37, 39, 42, 44, 49, 58, 65, 78, 85, 86, 91, 94, 98, 100, 101, 102, 108, 111, 112, 115, 117, 121, 123, 127, 129, 130, 133], "obtain": [1, 5, 7, 29, 31, 36, 39, 42, 48, 50, 51, 54, 65, 67, 69, 88, 98, 112, 122], "patial_dist": 1, "glide_dist": [1, 8, 86], "nexpect": 1, "1f": [1, 2, 17], "0001906222678525471": 1, "241236055083178e": 1, "107613504081062e": 1, "976666184708378e": 1, "0322630680267956": 1, "0021469740733210466": 1, "expect": [1, 4, 23, 92, 93, 94, 111, 115, 122, 124], "togeth": [1, 12, 13, 86, 115], "green": [1, 6, 69, 98], "hcp": 1, "pink": 1, "result": [1, 4, 5, 6, 12, 15, 29, 31, 36, 39, 42, 48, 50, 51, 63, 65, 67, 68, 69, 86, 88, 91, 98, 101, 108, 112, 113, 115, 117, 120, 122, 124], "local": [1, 4, 8, 13, 14, 29, 36, 39, 42, 48, 65, 67, 88, 103, 112, 113, 115, 116, 122], "chang": [1, 2, 11, 14, 29, 31, 36, 39, 42, 48, 50, 51, 62, 65, 67, 68, 86, 101, 115, 120, 122], "layer": [1, 3, 6, 9, 10, 14, 20, 92, 93, 102, 123], "ni_edg": 1, "ni_edge_bulk": 1, "ni_edge_dislo": 1, "07479191850173955": 1, "007990359190408622": 1, "0005818540688957152": 1, "00010046782916865726": 1, "415270105462052e": 1, "733931923827654e": 1, "05000430161332797": 1, "010198993378765508": 1, "0009607376130270073": 1, "00021904644596726364": 1, "1921567654312764e": 1, "620021235149374e": 1, "567335267883891e": 1, "64": [1, 13, 65], "71441261": 1, "31110195": 1, "007990359190407997": 1, "0005818540688956597": 1, "00010046782916806052": 1, "4152701053954386e": 1, "si": [1, 4, 6, 9, 13, 14, 17, 21, 77, 91, 92, 93, 94, 102, 123], "work": [1, 4, 8, 9, 11, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 92, 93, 98, 101, 112, 114, 115, 118, 120, 122, 129], "d": [1, 6, 21, 24, 27, 29, 31, 36, 39, 40, 42, 48, 49, 50, 51, 65, 67, 68, 94, 98, 99, 101, 112, 113, 115, 119, 120, 122, 127, 129, 130], "holland": 1, "m": [1, 4, 5, 6, 9, 13, 14, 17, 21, 29, 36, 39, 42, 48, 65, 67, 86, 88, 91, 92, 93, 94, 99, 101, 102, 118, 122], "marder": [1, 101], "manybodi": [1, 8, 9, 13, 14, 17], "explicit_form": [1, 8, 9, 13, 14, 17], "stillinger_web": [1, 13, 14, 17], "stillingerweb": [1, 13, 14, 17, 46], "holland_marder_prl_80_746_si": [1, 13], "calc": [1, 2, 8, 9, 13, 14, 17, 21, 23, 29, 40, 68, 69, 86, 98, 115, 122, 123], "431": [1, 14], "201": [1, 13], "46": [1, 13], "51": [1, 4, 6, 13], "118": [1, 13], "18": [1, 4, 6, 13, 122], "si_screw": 1, "71547494": 1, "si_screw_bulk": 1, "si_screw_dislo": 1, "diamond_structur": [1, 8, 11, 15, 124], "true": [1, 4, 5, 6, 8, 9, 11, 13, 14, 15, 21, 24, 25, 29, 31, 33, 35, 36, 39, 42, 48, 50, 51, 57, 58, 62, 63, 65, 67, 68, 69, 86, 88, 92, 93, 94, 98, 101, 102, 104, 106, 108, 109, 112, 113, 115, 117, 118, 120, 121, 122, 124, 134], "add_bond": [1, 11, 15], "bond": [1, 15, 21, 26, 44, 52, 61, 62, 63, 86, 98, 104, 108, 111, 112, 115, 127, 129, 132, 133], "bit": [1, 117, 122], "66": 1, "51528011": 1, "75": [1, 11, 14, 86, 94], "25344899": 1, "84026149": 1, "84": [1, 8], "modif": [1, 122], "gradual": 1, "how": [1, 9, 14, 24, 29, 36, 39, 42, 48, 65, 67, 88, 98, 122, 125, 126, 127, 129, 130, 133, 134], "far": [1, 91, 98], "outcom": 1, "u": [1, 2, 6, 8, 9, 13, 17, 20, 24, 44, 86, 91, 92, 93, 94, 98, 122], "1st": [1, 115, 116], "2nd": [1, 86, 92, 93, 115, 116], "neighbor": [1, 15, 21, 29, 36, 57, 58, 104, 112, 115, 119, 124, 127, 129, 130, 131, 134], "similar": [1, 8, 9, 12, 21, 86, 111, 115, 122, 129], "mechan": [1, 6, 10, 14, 22, 98, 123, 125, 126], "exist": [1, 4, 9, 11, 25, 31, 86, 108, 115, 122, 133], "30": [1, 4, 6, 8, 13, 115, 122], "16": [1, 4, 5, 24, 65, 86, 122], "hexagon": [1, 115], "particular": [1, 2, 40, 86, 122, 129], "symmetri": [1, 2, 11, 13, 69, 88, 97, 123], "si_60_degree_screw": 1, "si_60_degree_screw_bulk": 1, "si_60_degree_screw_dislo": 1, "solid": [2, 12, 67, 101], "respond": [2, 12], "extern": [2, 24, 31], "load": [2, 12, 14, 17, 69, 88, 109, 118, 122, 127, 130, 131], "through": [2, 4, 8, 9, 19, 102, 115, 122, 123, 124], "revers": [2, 86, 112, 120, 122], "respons": [2, 7, 13, 59, 61, 62, 63, 86, 88, 96, 134], "strength": [2, 13, 91, 92, 93], "character": [2, 115], "moduli": [2, 17, 88], "comput": [2, 6, 13, 15, 17, 19, 20, 21, 26, 27, 29, 31, 36, 37, 39, 42, 44, 45, 46, 48, 50, 51, 65, 67, 69, 86, 88, 91, 92, 93, 98, 100, 103, 106, 111, 112, 113, 115, 116, 119, 120, 121, 125, 126, 127, 129, 130, 131], "deform": [2, 7, 12, 14, 27, 29, 36, 39, 42, 48, 65, 67, 69, 86, 88, 98, 100, 113, 123], "system": [2, 3, 6, 7, 9, 10, 12, 15, 17, 20, 21, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 77, 78, 86, 87, 88, 89, 92, 93, 95, 98, 101, 108, 112, 115, 116, 117, 119, 120, 124, 125, 126, 130, 131, 133], "underli": [2, 14, 122], "crystal": [2, 8, 9, 11, 12, 13, 14, 37, 40, 69, 86, 88, 98, 100, 101, 102], "analyt": [2, 3, 5, 6, 10, 42, 86, 88], "detail": [2, 6, 86, 88, 115, 116, 122], "below": [2, 4, 6, 7, 9, 13, 14, 21, 57, 108, 118, 122, 123], "basic": [2, 4, 5, 7, 9, 10, 18, 29, 31, 36, 42, 67, 68, 86, 101, 115, 120, 128, 133], "prerequisit": 2, "multi": [2, 10, 12, 69, 114, 123], "model": [2, 6, 8, 9, 11, 12, 14, 20, 30, 31, 65, 69, 86, 123], "continuum": [2, 6, 7, 11, 13, 69, 89, 94, 96, 98], "tutori": [2, 7, 10, 13, 14, 134], "wai": [2, 8, 9, 29, 92, 112, 115, 122, 133, 134], "configur": [2, 3, 4, 10, 12, 13, 14, 21, 24, 29, 33, 35, 36, 39, 42, 48, 58, 65, 67, 86, 88, 94, 98, 100, 103, 104, 108, 112, 113, 115, 118, 119, 120, 127, 130, 131, 133], "let": [2, 6, 8, 11, 14, 15], "": [2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 17, 20, 24, 29, 31, 35, 36, 45, 86, 88, 90, 92, 93, 94, 98, 108, 110, 112, 115, 116, 118, 119, 120, 122, 132, 133, 134], "first": [2, 4, 5, 6, 9, 13, 14, 17, 29, 36, 37, 42, 49, 57, 58, 62, 65, 67, 68, 69, 86, 92, 93, 94, 101, 108, 112, 115, 117, 120, 122, 129], "ase": [2, 4, 5, 6, 8, 9, 11, 13, 14, 15, 17, 21, 23, 29, 36, 39, 42, 48, 54, 57, 58, 61, 62, 63, 65, 67, 69, 76, 78, 86, 88, 98, 100, 102, 103, 104, 111, 112, 113, 115, 116, 117, 118, 119, 123, 124, 127, 129, 130, 131, 133, 134], "cubic": [2, 4, 8, 10, 11, 12, 13, 14, 21, 69, 86, 88, 97, 98, 102, 112, 122, 123, 124], "facecenteredcub": [2, 13, 112], "def": [2, 4, 5, 6, 13, 15, 17, 134], "interactive_view": [2, 11, 15, 17], "visual": [2, 3, 5, 10, 11, 17, 102, 133], "v": [2, 3, 5, 6, 10, 12, 14, 17, 20, 24, 36, 44, 86, 88, 91, 92, 93, 94, 98, 115, 118, 122, 130], "viewer": [2, 17, 115, 133], "ngl": [2, 17, 133], "resiz": [2, 17, 122], "widget": [2, 15, 17], "_remote_cal": [2, 15, 17], "setsiz": [2, 15, 17], "target": [2, 4, 6, 11, 14, 15, 17, 24, 40, 94], "arg": [2, 15, 17, 26, 44, 59, 65, 69, 86, 92, 93, 94, 97, 98, 101, 102, 115, 116, 122], "300px": [2, 15, 17], "center": [2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 17, 86, 87, 93, 98, 115, 129, 133], "1": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 17, 20, 21, 23, 24, 35, 36, 37, 39, 40, 49, 50, 51, 52, 58, 63, 65, 67, 69, 78, 86, 88, 91, 92, 93, 94, 97, 98, 99, 101, 102, 108, 109, 110, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 129, 130, 133, 134], "cu": [2, 112], "pbc": [2, 4, 6, 13, 14, 29, 31, 36, 50, 51, 67, 68, 86, 101, 112, 115, 120, 124, 133], "ll": 2, "lennard": [2, 65, 108, 115], "jone": [2, 65, 108, 115], "lennardjonescut": [2, 65], "pair_potenti": 2, "pairpotenti": [2, 39, 65], "reference_st": 2, "atomic_numb": [2, 35, 36, 37], "cu_num": 2, "sigma": [2, 49, 65, 98, 108, 115], "2": [2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 17, 20, 21, 23, 36, 37, 44, 52, 63, 65, 69, 78, 86, 88, 91, 92, 93, 94, 98, 99, 101, 102, 108, 109, 111, 112, 115, 116, 118, 120, 121, 122, 123, 127, 129, 130, 133, 134], "map": [2, 21, 24, 48, 86, 93, 112, 122], "copper": 2, "pair": [2, 6, 29, 35, 36, 37, 39, 42, 44, 48, 49, 58, 65, 67, 94, 108, 112, 115, 117, 126, 128, 129, 133], "epsilon": [2, 49, 65, 67, 99, 108, 115], "sensibl": [2, 124], "equilibrium": [2, 13, 44, 63, 86, 100, 108, 115], "assert_allclos": 2, "latex": [2, 24, 122], "e_": 2, "pot": 2, "get_potential_energi": [2, 13, 17, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 98, 101, 115, 120], "neg": [2, 122], "assert": [2, 122, 134], "get_forc": [2, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 98, 101, 115, 120], "atol": [2, 29, 36, 39, 42, 48, 65, 67, 88], "3e": 2, "14": [2, 5, 86, 93, 122, 133], "889": 2, "measure_triclinic_elastic_const": [2, 88], "full": [2, 4, 6, 7, 9, 13, 24, 31, 35, 69, 76, 78, 86, 88, 98, 106, 108, 115, 122, 133], "hook": 2, "tensor": [2, 27, 29, 36, 39, 42, 48, 65, 67, 69, 86, 88, 98, 115], "finit": [2, 3, 6, 7, 8, 10, 20, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 89, 92, 93, 101, 113, 120, 130], "fit_elastic_const": [2, 13, 88], "least": [2, 58, 69, 86, 98, 108, 114, 122], "squar": [2, 39, 49, 69, 86, 94, 98, 125, 126], "full_3x3x3x3_to_voigt_6x6": [2, 17, 88], "c_finite_differ": 2, "c_least_squar": 2, "_": [2, 4, 5, 6, 11, 35, 36, 44, 92, 93, 94, 127, 133], "plot": [2, 4, 5, 6, 8, 9, 15, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 76, 86, 88, 98, 101, 102, 115, 120, 127, 130, 131], "matplotlib": [2, 4, 5, 6, 9, 13, 15, 86, 88, 98, 102, 115, 127, 130, 131], "pyplot": [2, 4, 5, 6, 13, 15, 88, 98, 127, 130, 131], "plt": [2, 4, 5, 6, 13, 15, 86, 98, 127, 130, 131], "spy_const": 2, "imshow": [2, 102], "cmap": 2, "rdpu": 2, "interpol": [2, 4, 6, 94, 102], "none": [2, 4, 6, 15, 24, 25, 27, 29, 31, 32, 36, 37, 39, 40, 42, 48, 49, 50, 51, 52, 54, 55, 59, 62, 63, 65, 67, 68, 69, 84, 86, 88, 92, 93, 94, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 115, 116, 117, 120, 121, 122, 123, 124], "label": [2, 4, 5, 6, 15, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 108, 120, 124], "full_lik": 2, "dtype": [2, 94, 106, 112, 115, 122, 129, 133], "lambda": [2, 4, 6, 20, 63, 94, 101], "arang": [2, 94, 112, 122, 127, 134], "mu": [2, 35, 36, 101], "max_c": 2, "max": [2, 6, 29, 36, 39, 42, 48, 65, 67, 88, 94, 115, 122, 134], "shape": [2, 4, 5, 6, 11, 15, 29, 36, 37, 42, 65, 67, 69, 86, 94, 98, 111, 112, 115, 120, 121, 122], "j": [2, 4, 5, 6, 9, 13, 17, 21, 26, 31, 36, 47, 48, 65, 67, 86, 88, 91, 92, 93, 94, 98, 99, 100, 101, 102, 107, 112, 115, 116, 122, 127, 129, 134], "white": 2, "els": [2, 13, 15, 24, 39, 42, 65, 86, 99, 102, 115, 121, 134], "black": 2, "numer": [2, 3, 7, 10, 14, 21, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 103, 110, 120, 122], "ab": [2, 5, 45, 46, 134], "1e": [2, 4, 5, 13, 21, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 92, 93, 94, 101, 103, 113, 116, 120, 124], "sim": 2, "annot": 2, "horizontalalign": 2, "verticalalign": 2, "set_xtick": [2, 13], "set_ytick": [2, 13], "set_xticklabel": 2, "c": [2, 4, 5, 6, 8, 11, 13, 17, 20, 21, 24, 35, 49, 58, 65, 76, 86, 88, 91, 92, 93, 94, 98, 101, 102, 108, 112, 115, 116, 122, 129, 131, 133, 134], "set_yticklabel": 2, "fig": [2, 4, 5, 6, 13, 15, 102], "subplot": [2, 4, 5, 6, 13, 86, 98], "figsiz": [2, 4, 5, 6], "set_titl": [2, 4, 6, 13], "therefor": [2, 11, 112, 115, 133], "directli": [2, 24, 69, 102, 117, 121, 122], "get_properti": [2, 17, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 93, 101, 115, 120], "elastic_const": [2, 29, 39, 42, 48, 65, 67], "evalu": [2, 50, 51, 55, 69, 88, 94, 98, 115, 122], "non": [2, 4, 6, 24, 27, 29, 36, 39, 42, 44, 48, 50, 51, 61, 62, 63, 65, 67, 86, 88, 91, 92, 93, 108, 113, 115, 118, 122, 126, 132], "affin": [2, 17, 27, 29, 36, 39, 42, 48, 65, 67, 88, 113], "mode": [2, 12, 40, 55, 86, 98, 110, 115, 118, 121, 122, 125, 126], "random": [2, 11, 18, 23, 35, 94, 112, 115, 122], "our": [2, 4, 5, 6, 9, 11, 13, 15, 20, 86, 122], "mimic": 2, "glassi": 2, "io": [2, 4, 5, 6, 13, 14, 15, 17, 21, 24, 35, 115, 127, 130, 131, 133, 134], "read": [2, 14, 17, 18, 21, 24, 25, 29, 31, 35, 36, 37, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 101, 106, 108, 115, 120, 122, 123, 127, 130, 131, 132, 133, 134], "pathlib": [2, 122], "path": [2, 7, 8, 9, 21, 24, 31, 86, 102, 106, 119, 122, 131], "data_path": 2, "cuzr_glass_460_atom": 2, "gz": 2, "zrcu": [2, 35], "onecolumn": [2, 35], "2244": 2, "minim": [2, 6, 24, 67, 86, 92, 93, 94, 98, 116], "procedur": [2, 23, 133], "argument": [2, 8, 9, 11, 21, 29, 31, 36, 42, 67, 68, 69, 86, 88, 92, 93, 98, 101, 104, 109, 115, 120, 122, 129, 131], "optim": [2, 5, 13, 21, 23, 40, 86, 88, 92, 93, 94, 98, 102, 108, 117, 122], "fire": 2, "delta": [2, 35, 36, 86, 88, 94, 121, 127, 130], "increment": [2, 88, 98, 103, 113], "c_affin": 2, "c_relax": 2, "adjust": [2, 14, 115, 118, 123], "fmax": [2, 13, 21, 40, 86, 88, 116, 122, 123], "precis": [2, 91, 92, 122], "One": [2, 3, 10, 12, 24, 94, 98, 122, 123], "significantli": 2, "reduc": [2, 4, 9, 13, 97, 115], "when": [2, 8, 11, 12, 24, 29, 31, 36, 42, 67, 68, 69, 86, 92, 93, 98, 101, 102, 115, 117, 120, 122, 124, 134], "intern": [2, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 88, 93, 101, 115, 120, 123], "reduct": 2, "stop": [2, 29, 31, 36, 37, 39, 42, 48, 65, 67, 68, 69, 88, 101, 119, 120], "criterion": [2, 9, 115, 127], "ideal": [2, 11, 12, 98, 101, 115], "lower": [2, 4, 5, 6, 9, 14, 67, 94, 118, 123, 134], "higher": [2, 29, 122], "demonstr": [2, 133], "purpos": [2, 4, 29, 31, 35, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 101, 115, 117, 120, 122, 133], "three": [3, 4, 13, 36, 39, 42, 48, 49, 65, 67, 69, 86, 88, 98, 112, 115, 122, 123, 129, 134], "prepar": [3, 5, 10, 120], "usual": [3, 5, 13, 108, 122], "encount": [3, 14, 134], "context": [3, 8], "electrolyt": [3, 4, 6], "dimension": [3, 10, 39, 42, 65, 67, 116, 122], "poisson": [3, 6, 10, 17, 20, 77, 88, 89, 91, 92, 93, 98], "nernst": [3, 10, 20, 77, 89, 92, 93], "planck": [3, 10, 20, 77, 89, 92, 93], "inert": [3, 5, 6, 10], "electrod": [3, 5, 6, 10], "solv": [3, 5, 6, 10, 20, 77, 92, 93, 117], "dirichlet": [3, 10, 92, 93], "zero": [3, 10, 14, 29, 36, 39, 42, 44, 48, 49, 65, 67, 68, 88, 92, 99, 101, 115, 120, 122], "flux": [3, 10, 92, 93], "valid": [3, 5, 10, 31, 42, 88, 124], "half": [3, 5, 6, 10, 11, 115], "space": [3, 5, 6, 10, 37, 39, 90, 92, 93, 122, 128], "interv": [3, 10, 93], "pnp": [3, 5, 10, 20, 92, 93], "electrochem": [3, 6, 10], "continu": [3, 7, 10, 14, 20, 22, 76, 89, 90, 94, 98, 99, 120, 134], "doubl": [3, 6, 10, 13, 62, 86, 94, 112], "theori": [3, 6, 10, 12, 18, 31, 86, 91], "discret": [3, 5, 6, 7, 10, 20, 76, 89, 92, 93, 94], "coordin": [3, 10, 11, 20, 36, 69, 76, 78, 86, 89, 90, 94, 98, 99, 101, 102, 112, 115, 123, 127, 129, 134], "stern": [3, 10, 20, 92, 93], "robin": [3, 10, 20, 92, 93], "sampl": [3, 10, 11, 20, 31, 33, 69, 78, 89, 90, 94, 119, 133], "distribut": [3, 5, 10, 20, 26, 67, 76, 77, 90, 91, 92, 93, 94, 112, 115, 121, 126, 128], "export": [3, 10, 76, 78], "solver": [3, 4, 10, 20, 29, 36, 39, 40, 42, 48, 65, 67, 86, 88, 89, 92, 93, 116], "moder": [3, 10], "issu": [3, 4, 10, 76, 102], "extrem": [3, 9, 10, 11, 102, 123], "nonlinear": [3, 4, 10, 65], "steric": [3, 10, 20, 78, 89, 92, 93, 94], "correct": [3, 10, 14, 24, 29, 36, 39, 42, 48, 65, 67, 69, 78, 86, 88, 89, 94, 115, 122, 123], "concentr": [3, 4, 5, 10, 18, 35, 91, 92, 93, 94], "enforc": [3, 10, 20, 50, 51, 92, 93, 94], "radii": [3, 4, 10, 20, 58, 78, 94], "initi": [3, 4, 7, 10, 21, 23, 31, 39, 44, 50, 51, 57, 58, 59, 65, 69, 86, 88, 92, 93, 94, 98, 106, 111, 112, 115, 116, 120, 122, 134], "thank": 3, "luka": [3, 76, 91], "elflein": [3, 76, 91], "develop": [3, 8, 12], "christian": 3, "seidl": 3, "earli": 3, "experiment": [3, 7, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120], "andrea": 3, "greiner": 3, "discuss": [3, 6, 11], "inspir": 3, "transport": [3, 122], "problem": [3, 5, 10, 88, 92, 93, 94, 122, 125, 126], "volum": [3, 4, 5, 14, 20, 85, 86, 90, 92, 93, 100, 113, 115, 130], "fint": 3, "meng": 3, "yonggang": 3, "zhang": 3, "jun": 3, "pose": 3, "interest": [3, 8, 12], "tribolog": [3, 14], "spark": 3, "electrochemistri": [4, 5, 6, 10, 22, 125, 126], "poissonnernstplancksystem": [4, 5, 92, 93], "interfac": [4, 5, 6, 12, 13, 14, 20, 29, 57, 59, 77, 91, 92, 93, 95, 120, 122, 124, 134], "classic": [4, 6, 50, 51, 115], "arbitrari": [4, 20, 42, 88, 108, 115, 122], "ionic": [4, 91, 92, 93], "speci": [4, 6, 10, 12, 37, 78, 89, 91, 92, 93, 108, 112, 133], "archetyp": 4, "open": [4, 5, 6, 14, 92, 93, 118, 122], "govern": 4, "equat": [4, 6, 20, 91, 92, 93], "d_i": 4, "diffus": [4, 22, 125, 126], "th": [4, 63, 67, 93, 122], "c_i": [4, 91, 92, 93], "infti": [4, 130], "u_i": [4, 44, 98], "electr": [4, 115], "mobil": 4, "z_i": [4, 91, 92, 93], "charg": [4, 5, 6, 29, 36, 39, 67, 68, 78, 91, 92, 93, 101, 108, 115, 120, 134], "phi": [4, 5, 6, 48, 49, 69, 91, 94, 115, 127], "electrostat": [4, 6, 91], "phi_0": 4, "compar": [4, 7, 11, 31, 86, 94, 122], "epsilon_0": 4, "vacuum": [4, 8, 9, 13, 14, 21, 40, 91, 92, 93, 98, 101, 102, 104, 115, 122, 129], "permitt": [4, 91, 92, 93], "epsilon_r": 4, "rel": [4, 5, 9, 14, 24, 91, 92, 93, 98, 115, 116], "solvent": 4, "faradai": [4, 91, 92, 93], "follow": [4, 5, 6, 11, 12, 14, 17, 21, 23, 24, 29, 31, 36, 39, 42, 44, 48, 50, 51, 65, 67, 68, 86, 92, 93, 98, 101, 108, 115, 118, 120, 122, 129, 133, 134], "mm": [4, 5, 6, 20, 50, 51, 86], "text": [4, 11, 17, 20, 24, 35, 106, 122, 127, 131], "nacl": [4, 20], "bia": 4, "against": [4, 9, 91], "special": [4, 9, 24, 29, 31, 36, 39, 42, 48, 50, 51, 62, 63, 65, 67, 68, 101, 120, 122], "binari": [4, 6, 20, 122], "few": [4, 5, 6, 115], "sc": [4, 5, 6, 40, 97], "ion": [4, 6, 61, 62, 63, 91, 92, 93], "na": [4, 5, 6, 67, 78], "cl": [4, 5, 6, 49, 78], "delta_u": [4, 5, 92, 93], "log": [4, 14, 22, 40, 88, 93, 94, 110, 116, 118], "deriv": [4, 10, 14, 17, 29, 35, 36, 39, 40, 42, 44, 48, 49, 65, 67, 69, 88, 98, 113, 115], "grid": [4, 5, 37, 90, 92, 93, 98, 102, 121], "use_standard_interface_bc": [4, 5, 92, 93], "total": [4, 8, 23, 35, 36, 50, 51, 55, 92, 93, 112, 115, 121, 122, 127, 130, 133], "electromigr": 4, "ui": [4, 13, 98], "nij": [4, 5, 92, 93], "hold": [4, 61, 69, 122], "point": [4, 5, 6, 9, 20, 37, 39, 69, 78, 86, 90, 92, 93, 94, 102, 115, 117, 118, 121, 122, 123, 133], "quickli": [4, 5, 13], "retriev": [4, 6], "deby": [4, 5, 6, 91, 92, 93], "lambda_d": [4, 91, 92, 93], "deb": [4, 5, 6], "just": [4, 5, 23, 35, 115, 122, 124, 129], "possion": 4, "boltzmann": [4, 5, 6, 91], "poisson_boltzmann_distribut": [4, 5, 6], "short": [4, 24, 39, 122], "hand": [4, 12, 92, 93, 124], "densiti": [4, 5, 6, 9, 23, 35, 36, 37, 84, 91, 92, 93, 102, 127, 130], "aris": [4, 6, 115], "charge_dens": [4, 5, 6, 91, 92, 93, 94], "linspac": [4, 5, 6, 21, 94, 98], "100": [4, 5, 9, 10, 12, 13, 14, 15, 20, 35, 40, 50, 51, 62, 86, 90, 94, 108, 112, 116, 118, 130], "rho": [4, 5, 6, 49, 94], "littl": [4, 9, 122], "helper": [4, 6, 40, 106], "prettifi": 4, "make_patch_spines_invis": [4, 5, 6], "set_frame_on": [4, 5, 6], "patch": [4, 5, 6], "set_vis": [4, 5, 6], "sp": [4, 5, 6, 131, 134], "spine": [4, 5, 6], "next": [4, 6, 13, 14, 86, 122, 133, 134], "pb": [4, 5], "limit": [4, 50, 51, 62, 102, 122], "convinc": 4, "ax1": [4, 5, 6, 13], "ax4": [4, 5], "nrow": [4, 5], "ncol": [4, 5], "axvlin": [4, 5, 6, 98], "nano": [4, 5, 6], "linestyl": [4, 5, 6, 98], "02": [4, 5, 6, 13, 109], "01": [4, 5, 13, 21, 40, 86, 88, 94, 98, 101, 108, 109, 116, 117, 118, 134], "marker": [4, 5, 6, 93], "tomato": 4, "linewidth": [4, 5, 6, 98], "tab": [4, 5], "red": [4, 5, 6, 11, 98], "ax2": [4, 5, 6, 13], "twinx": [4, 5, 6], "ones": [4, 5, 6, 24, 40, 86, 134], "bisqu": [4, 5], "orang": [4, 5, 6, 8], "lightskyblu": [4, 5], "blue": [4, 5, 6, 98], "ax3": [4, 5, 6], "offset": [4, 5, 6, 8, 102, 108, 122], "tick": [4, 5, 6], "alreadi": [4, 5, 6, 14, 31, 69, 88, 115, 118, 120, 122, 133], "been": [4, 5, 6, 7, 14, 25, 29, 31, 36, 37, 39, 42, 48, 50, 51, 65, 67, 68, 69, 88, 101, 102, 115, 116, 120], "place": [4, 5, 6, 11, 24, 69, 86, 90, 115, 122], "set_posit": [4, 5, 6, 115], "off": [4, 5, 6, 9, 11, 52, 62, 86, 91, 98, 118, 121], "detach": [4, 5, 6], "invis": [4, 5, 6], "activ": [4, 5, 6, 9, 62, 120], "second": [4, 5, 6, 9, 10, 15, 17, 29, 36, 39, 42, 49, 65, 67, 86, 92, 93, 94, 108, 112, 115, 120, 122], "semilogi": [4, 5], "set_ylabel": [4, 5, 6], "r": [4, 5, 6, 14, 15, 17, 20, 37, 39, 42, 44, 48, 49, 65, 67, 69, 88, 91, 92, 93, 94, 98, 99, 100, 108, 115, 116, 118, 127, 129, 130, 131, 133], "set_xlabel": [4, 5, 6], "nm": [4, 5, 6, 20, 94], "legend": [4, 5, 6], "loc": [4, 5, 6], "upper": [4, 5, 6, 9, 14, 29, 36, 39, 42, 48, 65, 67, 88, 94, 118, 122, 123, 134], "bbox_to_anchor": [4, 5, 6], "fontsiz": [4, 5, 6], "tight_layout": [4, 5, 6], "anoth": [4, 11, 14, 24, 31, 115, 120, 122], "after": [4, 8, 14, 24, 29, 36, 39, 42, 48, 50, 51, 65, 67, 86, 88, 93, 98, 102, 104, 116, 120, 122, 133], "bazant": 4, "i_": 4, "farada": 4, "current": [4, 11, 14, 15, 21, 23, 24, 29, 31, 35, 36, 39, 42, 48, 50, 51, 65, 67, 68, 86, 98, 100, 101, 102, 115, 116, 117, 120, 122, 124], "i_j": 4, "nu_": 4, "ij": [4, 17, 27, 36, 44, 48, 49, 86, 88, 112, 127, 129, 130, 134], "stochiometr": 4, "coeffici": [4, 13, 29, 36, 39, 42, 48, 63, 65, 67, 88, 92, 93, 108], "n_j": 4, "electron": [4, 35, 36, 37], "particip": [4, 115], "lambda_": [4, 92, 93], "width": [4, 6, 15, 122], "compact": [4, 12, 20], "assumpt": [4, 88, 112], "strong": 4, "close": [4, 5, 6, 9, 11, 14, 15, 86, 91, 102, 118, 120, 122], "mai": [4, 5, 6, 8, 9, 24, 29, 31, 36, 42, 67, 68, 86, 87, 95, 101, 112, 120, 122, 123, 134], "facilit": [4, 50, 51, 59], "again": [4, 5, 9, 14, 93, 118, 122], "e": [4, 6, 8, 9, 11, 13, 14, 15, 17, 24, 26, 27, 29, 31, 35, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 85, 86, 88, 90, 91, 92, 93, 94, 98, 99, 101, 102, 106, 108, 112, 115, 117, 118, 120, 122, 123, 127, 129, 132, 134], "absenc": 4, "applic": [4, 24, 98, 118, 126, 128], "predefin": [4, 115], "use_standard_cell_bc": [4, 92, 93], "xij": [4, 92, 93], "familiar": [4, 12], "manner": [4, 8], "averag": [4, 22, 31, 35, 37, 63, 86, 98, 122, 130], "fill": [4, 29, 36, 39, 42, 48, 54, 65, 67, 88, 90, 122], "gap": [4, 20], "gold": 4, "wt": 4, "aqueou": [4, 20], "box_ang": 4, "50": [4, 11, 13, 21, 90, 98, 127, 133], "box_m": 4, "meter": 4, "vol_angcub": 4, "prod": [4, 6, 122], "vol_mcub": 4, "solubl": 4, "water": [4, 91, 129, 134], "estim": [4, 13, 39, 88, 98, 116], "molar": [4, 91, 92, 93], "weight_concentration_nacl": 4, "salin": [4, 6], "mass": [4, 14, 29, 35, 36, 37, 39, 42, 48, 65, 67, 87, 115, 118], "g": [4, 6, 8, 11, 13, 15, 17, 23, 24, 29, 35, 37, 42, 44, 65, 85, 86, 88, 91, 92, 93, 94, 98, 102, 115, 118, 120, 122, 123, 134], "cm\u00b3": 4, "saline_mass_density_kg_per_l": 4, "cm": [4, 23], "kg": 4, "http": [4, 8, 11, 15, 24, 31, 37, 69, 86, 88, 92, 93, 94, 107, 115, 116, 122], "www": [4, 15], "engineeringtoolbox": 4, "com": [4, 86, 88, 115, 122], "inorgan": 4, "sodium": 4, "salt": 4, "d_1957": 4, "html": [4, 15, 24, 37, 92, 93, 94, 115], "saline_mass_density_g_per_l": 4, "kilo": 4, "molar_mass_h2o": 4, "015": 4, "mol": [4, 91, 92, 93], "molar_mass_nacl": 4, "58": [4, 11], "cnacl_m": 4, "cnacl_mm": 4, "round": [4, 122], "milli": 4, "n_nacl": 4, "avogadro": 4, "nearli": 4, "300": [4, 14, 23], "\u00e5": [4, 6, 129, 130], "magnitud": 4, "0e": [4, 20, 122], "modifi": [4, 6, 9, 13, 15, 50, 51, 94, 115, 116, 122, 124, 134], "200": [4, 5, 6, 86, 92, 93, 102], "maxit": [4, 29, 36, 39, 42, 48, 65, 67, 88, 92, 93, 94], "particularli": [4, 95, 133], "use_stern_layer_cell_bc": [4, 92, 93], "linear": [4, 5, 7, 13, 20, 21, 31, 88, 92, 93, 96, 98, 101, 115, 117], "behavior": [4, 5, 108, 115, 122], "continuous2discret": [4, 6, 20, 94], "callabl": [4, 92, 93, 94, 123], "henc": [4, 6, 9, 13, 130], "convert": [4, 9, 13, 15, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 98, 100, 101, 120, 122, 133], "physic": [4, 35, 39, 62, 65, 123], "interp1d": [4, 6, 94], "normal": [4, 8, 9, 13, 14, 21, 44, 86, 91, 98, 102, 115, 118, 122, 123, 127], "na_coordinate_sampl": 4, "count": [4, 6, 37, 90, 94, 98, 104, 112, 114, 115, 119, 122, 129, 134], "util": [4, 9, 10, 19, 22, 50, 51, 102, 126, 127, 128, 129, 130], "get_histogram": [4, 6], "bin": [4, 6, 26, 112, 114, 130], "spatial": [4, 36, 92, 93, 94, 121], "dimens": [4, 29, 36, 42, 65, 67, 69, 90, 94, 102, 108, 114, 121, 122, 123], "histx": [4, 6], "histi": [4, 6], "histz": [4, 6], "n_bin": [4, 6], "get_cent": [4, 6], "astyp": [4, 6, 14, 122, 134], "float": [4, 6, 9, 26, 29, 36, 37, 39, 42, 48, 58, 63, 65, 67, 69, 86, 88, 91, 92, 93, 94, 98, 100, 102, 103, 104, 108, 112, 113, 115, 116, 117, 118, 119, 122, 123, 124, 133], "plot_dist": [4, 6], "histogram": [4, 6, 26, 112, 130], "reference_distribut": [4, 6], "option": [4, 5, 6, 13, 24, 25, 26, 29, 31, 36, 39, 42, 48, 65, 67, 68, 69, 86, 88, 90, 92, 93, 94, 98, 101, 102, 104, 108, 112, 114, 115, 116, 119, 120, 121, 122, 124], "hist": [4, 6], "fi": 4, "align": [4, 6, 8, 86, 122], "empir": [4, 6, 14, 115, 118], "edgecolor": [4, 6], "ref": [4, 6, 35, 86, 98], "sum": [4, 6, 13, 17, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 86, 91, 92, 93, 94, 99, 101, 112, 120, 122, 127, 129, 134], "eventu": 4, "uniform": [4, 90, 92, 93, 124], "similarli": [4, 102, 122], "chlorin": 4, "cl_coordinate_sampl": 4, "standard": [4, 8, 13, 31, 35, 88, 98, 115, 122], "speak": 4, "\u00e5ngstr\u00f6m": [4, 6], "per": [4, 15, 22, 24, 29, 36, 50, 51, 63, 69, 78, 86, 90, 91, 92, 93, 98, 100, 102, 109, 112, 115, 122, 124, 128, 134], "sample_s": [4, 6, 90, 94], "int": [4, 11, 14, 15, 21, 26, 29, 36, 37, 39, 42, 48, 50, 51, 55, 57, 58, 61, 62, 63, 65, 67, 69, 86, 88, 90, 92, 93, 98, 101, 102, 108, 112, 114, 115, 116, 118, 122, 123, 124, 127, 133, 134], "na_atom": 4, "cl_atom": 4, "nacl_c_4_m_u_0": 4, "5_v_box_5x5x5nm_lambda_s_5_ang": 4, "real": [4, 6, 39, 98, 122, 128], "style": [4, 15, 24, 35, 37, 76, 78, 106, 116, 122], "19": [4, 76, 94, 122], "0b1": [4, 76], "had": [4, 120, 122], "older": 4, "atom_styl": [4, 6], "plot_atom": [4, 102], "80x": 4, "10y": 4, "10z": 4, "set_axis_off": 4, "k": [4, 14, 17, 21, 39, 44, 48, 49, 65, 88, 91, 92, 93, 94, 98, 101, 112, 115, 118, 122, 127, 134], "t": [4, 9, 11, 14, 21, 29, 31, 36, 42, 67, 68, 69, 91, 92, 93, 94, 98, 101, 102, 112, 115, 120, 122, 129, 134], "chu": 4, "bayli": 4, "voltag": 4, "relat": [4, 8, 9, 69, 85, 86, 123], "thin": [4, 98], "film": 4, "siam": 4, "journal": [4, 65, 67], "mathemat": 4, "jul": 4, "2006": 4, "doi": [4, 6, 8, 11, 31, 86, 116], "1137": 4, "040609938": 4, "o": [4, 14, 24, 88, 115, 122, 129, 134], "zur": 4, "der": 4, "elektrolytischen": 4, "doppelschicht": 4, "zeitschrift": 4, "f\u00fcr": 4, "elektrochemi": 4, "und": 4, "angewandt": 4, "physikalisch": 4, "chemi": 4, "vol": [4, 6, 39], "21": [4, 100, 122], "22": [4, 11, 122], "pp": [4, 6, 86, 88], "508": 4, "516": 4, "1924": 4, "1002": [4, 6], "bbpc": 4, "192400182": 4, "israelachvili": 4, "intermolecular": 4, "academ": 4, "press": 4, "london": [4, 129], "1991": [4, 119], "poisson_nernst_planck_solv": 5, "own": [5, 20, 24, 92, 93, 122, 125, 126], "poissonnernstplancksystemfen": [5, 93], "poisson_nernst_planck_solver_fen": 5, "fenic": [5, 20, 24, 93], "highli": 5, "latter": [5, 20, 40, 95, 132], "offer": [5, 6, 8, 20], "improv": [5, 9], "former": [5, 122], "illustr": 5, "begin": [5, 98, 108, 122], "necess": 5, "ionic_strength": [5, 91, 92, 93], "bolzmann": 5, "gamma": [5, 10, 12, 14, 35, 36, 86, 91, 102, 118], "3rd": 5, "parti": [5, 20], "At": 5, "across": [5, 6, 9, 20, 92, 93, 115], "100e": [5, 92, 93], "std_interfac": 5, "hybr": 5, "xtol": 5, "uij": [5, 92, 93], "lamj": [5, 92, 93], "fenics_interfac": 5, "_root": 5, "208": 5, "runtimewarn": 5, "doe": [5, 9, 11, 13, 15, 21, 24, 69, 88, 115, 120, 122], "callback": [5, 29, 36, 39, 42, 48, 65, 67, 88, 92, 93, 98, 116], "ffc": 5, "jit": 5, "compil": [5, 95, 122], "No": [5, 115], "jacobian": [5, 92, 103, 113], "specifi": [5, 6, 9, 11, 14, 18, 21, 22, 29, 36, 37, 39, 42, 48, 58, 62, 65, 67, 69, 77, 86, 88, 90, 91, 94, 98, 102, 108, 109, 112, 115, 122, 133, 134], "variat": [5, 86], "differenti": [5, 86], "residu": [5, 15, 29, 36, 39, 42, 48, 65, 67, 88, 92, 93, 98, 116, 117], "newton": [5, 92, 93], "287e": 5, "tol": [5, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 93, 101, 120, 124], "000e": 5, "00": [5, 6, 13, 112], "09": [5, 6, 94], "656e": 5, "161e": 5, "03": 5, "172e": 5, "262e": 5, "975e": 5, "362e": 5, "783e": 5, "04": 5, "966e": 5, "937e": 5, "345e": 5, "finish": [5, 6, 24, 120], "fall": [5, 20], "onto": [5, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120, 122, 129], "fem": [5, 93], "frameon": 5, "third": [5, 20, 115], "outperform": 5, "o\u00f6": 5, "std_interface_high_potenti": 5, "progress": 5, "measur": [5, 6, 7, 9, 27, 29, 36, 39, 42, 48, 65, 67, 69, 88, 94, 98, 113, 131], "last": [5, 6, 14, 24, 29, 31, 36, 39, 42, 48, 50, 51, 58, 62, 65, 67, 68, 101, 115, 118, 120, 122], "ten": 5, "appar": 5, "fenics_interface_high_potenti": 5, "521e": 5, "062e": 5, "413e": 5, "796e": 5, "388e": 5, "177e": 5, "087e": 5, "132e": 5, "834e": 5, "154e": 5, "217e": 5, "454e": 5, "592e": 5, "724e": 5, "292e": 5, "13": [5, 6, 122, 133], "prove": 5, "particl": [6, 15, 67, 91, 94, 108, 115], "arbitrarili": [6, 90, 122, 134], "avoid": [6, 9, 15, 89, 98, 112, 122], "overlap": [6, 11, 63, 89, 94, 112], "yield": [6, 35, 88, 115], "usabl": 6, "dens": [6, 29, 36, 39, 42, 48, 65, 67, 88, 94, 117], "pack": [6, 94, 98], "steric_correct": [6, 20], "sub": [6, 31, 33, 61, 62, 63, 122, 123], "Its": 6, "apply_steric_correct": [6, 94], "assur": [6, 20, 78], "re": [6, 13, 24, 69, 94, 98], "pseudo": 6, "packmol": 6, "python": [6, 12, 22, 93, 108, 122, 124, 125, 126, 133], "involv": [6, 9, 132, 133], "previou": [6, 8, 9, 11, 14, 98, 120, 122], "document": [6, 15, 24, 93, 108, 115, 122, 133], "section": [6, 9, 11, 24, 44, 86], "adjac": [6, 69, 98, 123], "simpl": [6, 20, 44, 65, 69, 85, 86, 92, 93, 108, 115, 116, 121, 122, 123, 127, 129, 133], "although": [6, 122], "1d": [6, 20, 69, 77, 86, 89, 92, 93, 122], "later": [6, 9, 63, 69, 134], "xsize": [6, 94], "ysize": [6, 94], "5e": [6, 94, 122], "zsize": [6, 94], "20e": 6, "2000": [6, 94], "fundament": [6, 21], "par2": 6, "box3": 6, "ax_row": 6, "zip": [6, 35, 98], "expos": [6, 122], "closest": [6, 94, 122], "scipy_distance_based_closest_pair": [6, 94], "state": [6, 9, 11, 24, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 69, 86, 98, 101, 120], "xstack": 6, "vstack": [6, 94], "box6": 6, "corner": [6, 94, 120], "mindsq": [6, 94], "p1": [6, 94], "p2": [6, 94], "pmin": [6, 94], "min": [6, 94, 122, 134], "pmax": [6, 40, 94], "minimum": [6, 14, 19, 78, 94, 112, 114, 115, 122], "wise": [6, 93, 94, 122], "4e": [6, 94], "maximum": [6, 29, 36, 39, 42, 48, 65, 67, 86, 88, 92, 93, 94, 102, 117, 119, 122, 124, 131, 133], "352188695855715e": 6, "4566e": 6, "7113e": 6, "3501e": 6, "3269e": 6, "6958e": 6, "3537e": 6, "0000e": 6, "3292e": 6, "1885e": 6, "2696e": 6, "9992e": [6, 94], "9942e": 6, "9953e": 6, "bfg": [6, 94], "2e": 6, "x1": [6, 94, 98, 121], "disp": [6, 86, 94, 98], "tmp": [6, 8, 112], "ipykernel_8777": 6, "3409156327": 6, "deprecationwarn": [6, 8], "deprec": [6, 8, 29, 31, 36, 39, 42, 48, 65, 67, 68, 98, 101, 103, 115, 120, 122], "remov": [6, 9, 14, 44, 85, 87, 115, 122, 134], "instead": [6, 8, 9, 24, 29, 31, 36, 39, 42, 44, 48, 65, 67, 68, 101, 103, 109, 115, 117, 120, 122], "come": [6, 24, 122], "enough": [6, 9, 13, 122], "statu": [6, 14, 110], "success": 6, "nit": 6, "messag": [6, 24, 29, 31, 36, 39, 42, 48, 50, 51, 62, 63, 65, 67, 68, 94, 101, 120], "final": [6, 7, 14, 44, 50, 51, 52, 86, 94, 116, 122], "norm_of_projected_gradient_": 6, "_pgtol": 6, "9730e": 6, "2318e": 6, "7182e": 6, "2865e": 6, "4771e": 6, "8167e": 6, "6017e": 6, "0979e": 6, "0107e": 6, "2803e": 6, "7982e": 6, "7956e": 6, "9780e": 6, "out": [6, 21, 23, 24, 63, 69, 86, 94, 98, 100, 114, 115, 122, 123], "400": 6, "mani": [6, 16, 22, 42, 62, 90, 98, 120, 122, 126], "shift": [6, 8, 49, 65, 69, 86, 97, 98, 112, 123], "check": [6, 12, 24, 29, 31, 36, 39, 42, 48, 50, 51, 62, 65, 67, 68, 69, 86, 88, 101, 106, 108, 112, 115, 116, 120, 122, 124, 134], "count_nonzero": 6, "353": 6, "euclidean": [6, 94], "96192377352509e": 6, "pick": 6, "split": [6, 7, 9, 24], "steric_sampl": 6, "101": 6, "steric_hist": 6, "entri": [6, 24, 29, 36, 39, 42, 48, 65, 67, 88, 92, 93, 94, 98, 108, 109, 115, 122, 129], "diff_hist": 6, "h": [6, 37, 44, 86, 98, 104, 108, 112, 115, 116, 118, 122, 129, 133, 134], "ax_col": 6, "diag": [6, 122], "steric_system": 6, "nacl_200_0": 6, "05v_5x5x20nm_at_interface_pb_distribut": 6, "05v_5x5x20nm_at_interface_pb_distributed_steric_correction_2ang": 6, "martinez": 6, "andrad": 6, "birgin": 6, "mart\u00ednez": 6, "build": [6, 7, 8, 9, 10, 11, 12, 21, 24, 57, 58, 69, 86, 93, 95, 102, 124, 125, 126, 129, 132], "molecular": [6, 14, 111, 112, 115, 132, 134], "dynam": [6, 14, 29, 36, 39, 42, 48, 65, 67, 101, 112, 115, 132], "chem": [6, 31, 116], "2157": 6, "2164": 6, "2009": 6, "jcc": 6, "21224": 6, "crack": [7, 10, 22, 86, 96, 100, 101, 123, 125, 126], "process": [7, 55, 69, 88, 98, 120, 133], "new": [7, 12, 18, 31, 35, 62, 63, 69, 86, 98, 115, 116, 118, 120, 122, 134], "area": [7, 13, 102, 118, 122], "apart": [7, 9, 58], "fracture_mechan": [7, 13, 21], "tip": [7, 13, 21, 96, 98, 100, 101], "anisotropi": [7, 21, 96], "quantifi": [7, 69], "trap": 7, "pin": 7, "speed": [7, 9, 13, 14, 86, 101, 118, 119, 122], "silicon": [7, 13, 14, 17, 21, 131], "quasi": [7, 10, 21], "static": [7, 10, 21, 24, 39, 111, 112], "link": [7, 24, 58, 86], "flexibl": [7, 12, 21, 98], "propos": 7, "sinclair": [7, 22, 98], "domain": [7, 20, 92, 93, 100, 126], "coupl": [7, 12, 14, 118, 134], "extens": [7, 24, 35, 65, 86, 95, 115], "approach": [7, 9, 21, 30, 86, 122], "give": [7, 8, 9, 13, 14, 44, 69, 102, 115, 122, 124, 134], "scheme": [7, 9, 92, 93], "usag": [7, 8, 9, 10, 18, 22, 115, 118, 128], "properti": [7, 10, 11, 12, 21, 29, 31, 35, 36, 39, 42, 48, 50, 51, 63, 65, 67, 68, 86, 92, 93, 98, 101, 108, 112, 115, 118, 120, 122, 127, 128, 130, 133], "strain": [7, 10, 17, 69, 85, 88, 98, 102, 109, 113], "them": [8, 14, 31, 50, 51, 69, 108, 115, 120, 122, 134], "challeng": [8, 12], "dissoci": [8, 10, 12, 86], "connect": [8, 12, 58, 62, 106, 111, 112], "machin": [8, 31, 92, 122], "learn": [8, 31], "mlip": [8, 31], "isol": 8, "gammasurfac": [8, 9, 15, 102], "stackingfault": [8, 9, 102], "parameteris": 8, "index": [8, 9, 14, 24, 37, 42, 55, 57, 58, 61, 62, 63, 86, 102, 112, 115, 118, 122, 124, 126, 129, 134], "surface_direct": [8, 9, 102], "instanc": [8, 9, 31, 54, 88, 98, 102, 112, 118, 122], "subclass": [8, 12, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 102, 120, 122, 133], "user": [8, 12, 22, 29, 36, 39, 42, 48, 65, 67, 69, 88, 115, 122], "screw": [8, 10, 12, 86], "diamond": [8, 10, 11, 12, 13, 14, 15, 21, 69, 86, 97, 102, 123, 124], "circ": [8, 11], "111": [8, 10, 12, 13, 40, 69, 97, 122, 123], "glide_direct": [8, 9, 102], "tersoff_brenn": [8, 9], "tersoffbrenn": [8, 9, 47], "brenner_prb_42_9458_c_i": 8, "c_screw": 8, "c_screw_bulk": 8, "c_screw_dislo": 8, "degre": [8, 10, 11, 12, 17, 29, 36, 39, 42, 48, 65, 67, 69, 88, 98, 111, 115, 116, 118, 123], "spin": [8, 115], "math": [8, 117, 122, 129], "pi": [8, 99, 112, 115, 122, 127, 130], "flip": [8, 85, 86, 123], "sf": [8, 86], "360528114483162": 8, "ipykernel_8802": 8, "2247257300": 8, "24": 8, "alia": [8, 37, 120, 122], "librari": [8, 86, 122], "replac": [8, 11, 17, 24, 33, 35, 62, 86, 122], "try": [8, 14, 24, 94, 115, 134], "made": [8, 69, 122], "colour": [8, 102], "avail": [8, 10, 12, 20, 24, 31, 37, 88, 115, 122, 134], "cna_color": [8, 11, 15, 102], "show_html": [8, 9, 15], "generate_imag": [8, 9, 102], "cell_mov": [8, 9, 102], "z_rep": [8, 9, 102], "anim": [8, 9, 15, 98, 102], "onc": [8, 9, 12, 13, 44, 58, 62, 115, 118, 122, 133], "loop": [8, 9, 120, 122], "reflect": [8, 9, 122], "sweep": 8, "nine": 8, "imag": [8, 9, 19, 24, 86, 102, 112, 115, 122], "middl": [8, 13, 14], "five": 8, "perfect": [8, 9, 10, 12, 86], "exactli": [8, 115, 122], "help": [8, 20, 24, 49, 102, 115], "confirm": 8, "distinct": [8, 122], "shuffl": [8, 102], "select": [8, 16, 22, 50, 51, 62, 69, 102, 115, 122], "ordin": 8, "basi": [8, 9, 39, 69, 86, 102, 124], "choos": [8, 9, 11, 12, 14, 116, 122, 134], "cut": [8, 9, 52, 62, 65, 86, 102, 118, 121], "becaus": [8, 11, 44, 112, 122], "would": [8, 11, 13, 20, 69, 115, 122, 123], "suggest": [8, 122], "z_offset": [8, 102], "add": [8, 9, 11, 12, 15, 24, 50, 51, 61, 62, 63, 69, 98, 102, 104, 112, 115], "carbon": [8, 23, 126, 127, 130, 132], "get": [8, 9, 11, 14, 15, 17, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 69, 86, 92, 93, 94, 101, 102, 115, 120, 122, 124, 127, 130], "suppli": [8, 29, 36, 39, 42, 48, 65, 67, 69, 88, 102, 115, 123], "crystalstructur": [8, 9, 11, 86, 102, 124], "revisit": 8, "gaa": [8, 11], "multispeci": [8, 10, 12], "doc": [8, 9, 15, 24, 37, 92, 93, 94, 118, 134], "guarante": [8, 112], "cannot": [8, 11, 14, 69, 122], "themselv": [8, 69, 122], "disord": [8, 10, 12, 127, 130, 131], "effect": [8, 11, 20, 29, 36, 39, 42, 48, 65, 67, 86, 120], "org": [8, 11, 15, 31, 69, 86, 92, 93, 94, 116], "1080": [8, 11], "08927022": [8, 11], "2011": [8, 11], "602975": [8, 11], "2402": [8, 11], "zincblend": [8, 11], "generalis": [9, 102], "slide": [9, 10, 118], "slab": [9, 13, 14, 98, 104, 122, 134], "given": [9, 11, 21, 24, 29, 33, 36, 39, 42, 48, 50, 51, 58, 59, 62, 63, 65, 67, 69, 85, 86, 88, 90, 98, 102, 104, 108, 112, 115, 121, 122, 123, 124], "often": 9, "metast": 9, "grain": 9, "disloc": [9, 10, 12, 15, 102, 125, 126], "deal": [9, 62, 111], "pathwai": 9, "complet": [9, 115, 118, 120, 124], "back": [9, 20, 115, 122], "singl": [9, 11, 35, 50, 51, 58, 62, 63, 69, 86, 88, 91, 112, 115, 120, 122, 129], "wherea": 9, "gamma_surfac": [9, 10, 12], "associ": [9, 31, 88, 102], "There": [9, 24, 37, 115, 122], "main": [9, 72, 74, 76, 77, 78, 80, 82, 84, 86, 91, 106, 124], "methodologi": 9, "intuit": 9, "supercel": [9, 68, 102], "bottom": [9, 24, 69, 118], "fulli": 9, "leav": 9, "effici": [9, 132], "less": [9, 23, 112], "understand": 9, "vice": [9, 69], "versa": [9, 69], "produc": [9, 63, 86, 98, 102, 122], "setup": [9, 10, 13, 17, 21, 39, 86, 120, 126, 132], "becom": [9, 13, 69, 112, 115, 122], "api": [9, 42, 122, 126], "lot": 9, "addit": [9, 10, 12, 24, 29, 31, 35, 36, 39, 42, 48, 52, 65, 67, 69, 88, 98, 102, 120], "featur": [9, 10, 12, 115], "spread": 9, "though": 9, "pure": [9, 35, 37, 98], "copi": [9, 11, 13, 14, 15, 24, 62, 98, 102, 115, 117, 120, 122], "recommend": [9, 11], "quick": [9, 122], "glanc": 9, "parametis": 9, "suit": 9, "aluminium": 9, "kioseogl": 9, "perform": [9, 13, 14, 29, 31, 36, 42, 50, 51, 55, 67, 68, 69, 86, 94, 98, 101, 114, 118, 120, 133], "what": [9, 29, 36, 67, 68, 101, 115, 120, 122], "kioseoglou_pssb_245_1118_aln": 9, "initialis": [9, 12, 101, 102], "001": [9, 10, 12, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 94, 98, 101, 102, 108, 115, 120, 122, 123], "equival": [9, 86, 115, 122], "attach": [9, 14, 29, 31, 36, 42, 59, 63, 67, 68, 86, 101, 115, 118, 120], "don": [9, 21, 29, 31, 36, 42, 67, 68, 101, 115, 120], "feed": [9, 69, 102], "nice": [9, 32], "funcanim": [9, 15], "disabl": [9, 13], "done": [9, 11, 29, 36, 39, 42, 48, 54, 65, 67, 113, 120, 122, 123, 129], "toggl": [9, 102, 122], "thick": [9, 86, 92, 93, 98], "nx": [9, 102], "ny": [9, 102], "relax_imag": [9, 102], "get_energy_dens": [9, 102], "profil": [9, 102], "wa": [9, 13, 22, 57, 58, 102, 122, 123], "constraint": [9, 13, 14, 86, 93, 94, 98, 102, 115, 118], "sens": [9, 14, 106], "cell_relax": [9, 102], "e_dens": 9, "plot_energy_dens": [9, 102], "heatmap": 9, "reus": [9, 14, 58], "plot_energi": [9, 102], "alongsid": [9, 102], "appear": [9, 18, 31, 112, 122], "low": [9, 122], "diagon": [9, 13, 29, 36, 39, 42, 48, 65, 67, 88, 98, 122], "110": [9, 10, 12, 13, 40, 133], "attempt": [9, 12, 122], "thought": 9, "much": [9, 11, 104], "content": [9, 13, 15, 24, 122], "reason": [9, 12], "explicitli": [9, 13, 14, 20, 21, 98], "aim": 9, "approxim": [9, 35, 69, 88, 92, 116], "surround": [9, 21], "room": 9, "extend": [9, 12, 24, 31, 50, 51, 86, 108, 115, 120, 133], "purposefulli": 9, "kept": [9, 115, 122], "eas": [9, 12], "practic": 9, "ourselv": 9, "ev": [9, 17, 67, 86, 88, 98, 102, 108, 115], "crystallin": [10, 67], "amorph": [10, 17, 23, 65, 125, 126, 127, 130, 131, 132], "fit": [10, 13, 37, 69, 86, 88, 98, 122], "plastic": [10, 126], "cylindr": [10, 11, 12, 98], "access": [10, 12, 13, 29, 50, 51, 86, 122], "kei": [10, 12, 31, 40, 47, 63, 98, 109, 115, 122], "bodi": [10, 12, 13, 16, 42, 48, 49, 126], "edg": [10, 12, 86], "mix": [10, 12, 29, 36, 37, 40, 42, 47, 65, 67, 108, 115], "junction": [10, 12], "face": [10, 12, 21], "60": [10, 12], "move": [10, 12, 21, 58, 63, 85, 86, 98, 102, 115, 122], "advanc": [10, 12, 21, 129], "specif": [10, 12, 24, 50, 51, 58, 102, 112, 114, 122, 123, 125, 126, 127, 129, 130, 132, 133], "complex": [10, 11, 12, 44, 112, 122, 133], "fractur": [10, 22, 98, 123, 125, 126], "acknowledg": 10, "tribologi": [10, 118, 125, 126], "pressur": [10, 118], "equilibr": [10, 23, 118], "restart": [10, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 118, 120], "restrict": [11, 39, 42, 65, 67, 98, 122, 127], "express": [11, 44, 49, 69, 123], "306": 11, "98": 11, "47": 11, "57": [11, 13, 21, 27], "89": [11, 86, 108], "latticeconst": [11, 13, 14], "gaas_po": 11, "get_scaled_posit": [11, 115], "dia_po": 11, "sort": [11, 24, 112, 120, 122], "gaas_idx": 11, "lexsort": [11, 112, 122], "dia_idx": 11, "sai": 11, "agnost": 11, "chemistri": 11, "were": [11, 62, 115, 122], "gaas_bulk": 11, "gaas_disloc": 11, "35": 11, "additiion": 11, "those": [11, 40, 98, 112, 115], "break": [11, 58, 122, 123], "caus": [11, 122], "alpha": [11, 24, 31, 37, 39, 86, 98, 115], "termin": [11, 52, 62, 108, 116, 134], "beta": [11, 24, 37, 101], "ga": [11, 91, 92, 93, 115], "get_chemical_symbol": [11, 115, 129], "swap": [11, 122], "new_symbol": 11, "set_chemical_symbol": [11, 115], "built": [11, 24, 92, 122, 125, 126], "caveat": 11, "routin": [11, 14, 40, 57, 88, 116, 122, 125, 126, 132, 134], "reliabl": [11, 122], "replic": [11, 86], "unit_cel": [11, 86, 122], "won": 11, "known": [11, 12, 122, 133], "distort": 11, "captur": [11, 129, 133, 134], "neq": [11, 17, 36, 48], "workflow": [11, 125, 126], "chemcic": 11, "match": [11, 24, 69, 98, 122, 123, 124], "composit": [11, 18, 35], "site": [11, 95, 98], "occupi": 11, "whilst": 11, "heavili": 11, "incorrect": [11, 117], "120": [11, 69, 115], "31": [11, 21, 98], "55": [11, 15, 134], "87": 11, "mont": 11, "carlo": 11, "introduc": [11, 93], "indium": 11, "seed": [11, 115, 122], "ga_idx": 11, "argwher": 11, "idx": [11, 86], "in_idx": 11, "choic": [11, 65, 122], "ingaas_bulk": 11, "ingaas_disloc": 11, "ingaa": 11, "almost": [11, 122], "better": [11, 15], "in_at": 11, "add_compon": [11, 15, 134], "asestructur": [11, 15, 134], "default_represent": [11, 15, 134], "add_spacefil": [11, 15], "larg": [12, 24, 86, 119], "irrevers": 12, "carri": [12, 21, 23, 69, 98, 100], "movement": [12, 86], "kink": [12, 86, 97, 98], "rather": [12, 14, 69, 116, 120, 124, 134], "deep": [12, 122, 123], "knowledg": 12, "experi": 12, "peopl": 12, "friendli": 12, "enabl": [12, 13, 50, 51, 115], "ident": [12, 86, 104, 115], "assist": 12, "easili": [12, 29, 36, 39, 42, 48, 65, 67, 88, 123], "pip": [12, 95], "pytest": 12, "directori": [12, 21, 22, 23, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120, 134], "repositori": 12, "ssssssssssssss": 12, "ssssssss": 12, "stand": 12, "behind": [12, 18, 101, 122], "abl": 12, "dure": [12, 14, 63, 85, 98, 115, 120, 123, 134], "idea": [12, 31], "dxa": [12, 86], "intend": [12, 95, 122], "safe": [12, 122], "ignor": [12, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120, 121, 122], "analys": [13, 86], "command": [13, 18, 21, 23, 77, 108, 115, 120], "quasistat": [13, 22], "expcellfilt": 13, "precon": [13, 98], "preconlbfg": 13, "show_as": [13, 15, 134], "cubiccrystalcrack": [13, 98], "cluster": [13, 21, 50, 51, 52, 54, 55, 59, 61, 62, 63, 86, 98], "set_group": [13, 21, 97], "inadvertendli": 13, "stilling": [13, 14, 17, 46, 49], "weber": [13, 14, 17, 46, 49], "imsw": 13, "accident": 13, "brittl": [13, 98, 101], "variabl": [13, 40, 42, 50, 51, 92, 93, 122, 129], "filter": 13, "precondit": [13, 98, 117], "still": [13, 69, 92, 93, 120, 122], "robust": [13, 116], "calcual": 13, "forward": [13, 94], "el": [13, 21, 40, 69, 84, 97, 123], "ecf": 13, "opt": 13, "smax": [13, 86], "43": 13, "34": 13, "692786": 13, "0000": 13, "0003": 13, "692800": 13, "lbfg": 13, "133": 13, "too": [13, 69], "benefit": 13, "precondition": [13, 29, 36, 39, 42, 48, 65, 67, 88, 98, 117], "kwarg": [13, 29, 31, 36, 39, 40, 42, 48, 50, 51, 59, 65, 67, 68, 69, 86, 88, 92, 93, 94, 97, 101, 102, 109, 115, 120, 122], "a0": [13, 21, 40, 44, 69, 86, 97, 115, 122, 123], "c_err": [13, 88], "c_11": 13, "stress": [13, 14, 21, 29, 31, 36, 39, 40, 42, 48, 50, 51, 65, 67, 68, 88, 98, 101, 113, 115, 118, 120], "18433656e": 13, "05309496e": 13, "32979590e": 13, "97563406e": 13, "87437477e": 13, "cij": 13, "gradient": [13, 27, 29, 36, 39, 42, 44, 48, 49, 65, 67, 69, 86, 88, 92, 94, 98, 100], "4615167357166": 13, "error": [13, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 88, 98, 101, 116, 117, 120, 122, 134], "647086489317546": 13, "correl": [13, 121, 130], "9997411342093212": 13, "257424": 13, "016522": 13, "c_21": 13, "13682864e": 13, "40632635e": 13, "89079644e": 13, "30322868e": 13, "640152889484874": 13, "764431020075705": 13, "9982534274183545": 13, "c21": 13, "322312": 13, "011013": 13, "c_31": 13, "64015288948469": 13, "7644310200754734": 13, "998253427418355": 13, "updat": [13, 21, 24, 29, 31, 36, 42, 50, 51, 57, 58, 62, 63, 67, 68, 69, 98, 101, 108, 115, 116, 120, 122], "c31": 13, "c_44": 13, "43911515": 13, "19994966": 13, "16236289": 13, "2885839": 13, "17710649364383": 13, "285752508674578": 13, "9998224896560226": 13, "737603": 13, "008025": 13, "65": [13, 134], "c_12": 13, "29": 13, "extract": [13, 86], "64015288948479": 13, "remain": [13, 44, 122], "ingredi": 13, "fly": 13, "adapticecont": 13, "branch": 13, "merg": [13, 14, 37], "find_surface_energi": [13, 122], "0001": [13, 69, 86, 122, 123], "1j": [13, 122], "builder": [13, 24, 69, 102], "startswith": 13, "bodycenteredcub": 13, "lattice_build": 13, "elif": [13, 134], "untest": 13, "append": [13, 14, 15, 24, 94, 115, 118, 134], "unsupport": 13, "orthogon": [13, 86, 88, 102, 118, 124], "endswith": 13, "get_cel": [13, 14, 115, 118], "set_cel": [13, 115], "lbfgslinesearch": 13, "opt_bulk": 13, "opt_slab": 13, "ebulk": 13, "eslab": 13, "cross": [13, 24, 67, 86, 112, 122], "gamma_as": 13, "ase_unit": 13, "gamma_si": 13, "surface_energi": [13, 21, 98], "diamond111": 13, "consist": [13, 14, 29, 36, 42, 65, 67, 86, 91, 93, 98, 115, 129, 132, 134], "416": 13, "313600": 13, "403": 13, "303800": 13, "proce": [13, 120], "param": [13, 21, 22, 23, 25, 86, 91, 98, 120, 123], "script": [13, 14, 19, 20, 21, 23, 24, 88, 108, 133, 134], "quasistatic_crack": 13, "crack_surfac": [13, 21, 97, 98], "crack_front": [13, 21, 97, 98], "crack_tip": 13, "41": 13, "56": [13, 108], "skin_x": [13, 21, 97], "skin_i": [13, 21, 97], "cryst": [13, 21, 97, 98], "cfg": [13, 17, 21, 127, 130, 131], "r0": [13, 40, 44, 49, 65, 98], "get_posit": [13, 14, 115, 134], "len": [13, 14, 17, 29, 36, 67, 68, 86, 98, 100, 101, 112, 115, 117, 120, 124, 129, 130, 134], "tip_x0": 13, "tip_y0": 13, "tip_z0": 13, "651528178589903": 13, "406681360668651": 13, "either": [13, 20, 21, 24, 29, 36, 39, 42, 85, 88, 92, 102, 112, 115, 120, 122, 124], "6x6": [13, 88, 98], "stiff": [13, 44, 88], "matrix": [13, 27, 29, 36, 39, 42, 48, 65, 67, 69, 86, 88, 94, 98, 103, 112, 113, 115, 117, 122], "specimen": 13, "crk": [13, 98], "griffith": [13, 98], "critic": [13, 14, 98, 118], "intens": [13, 21, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 98, 101, 120], "factor": [13, 14, 21, 29, 31, 36, 39, 42, 48, 65, 67, 86, 88, 98, 115, 118], "thermodynam": 13, "favour": 13, "k1g": [13, 98], "137": 13, "7212872906663": 13, "everyth": 13, "centr": [13, 69, 98], "tip_x": [13, 100], "tip_i": [13, 100], "set_pbc": [13, 14, 115], "k1": [13, 21, 98], "ux": [13, 98], "notch": [13, 21], "oldr": 13, "scatter": [13, 98], "group": [13, 24, 62, 115, 118, 134], "quiver": 13, "set_aspect": 13, "equal": [13, 112, 122], "set_xlim": 13, "set_ylim": 13, "45": 13, "friction": 14, "adhes": 14, "gain": 14, "insight": 14, "wear": 14, "pressurecoupl": 14, "under": [14, 69, 88, 115, 118, 122], "veloc": [14, 108, 115], "fast": [14, 118], "prior": [14, 88], "afterward": [14, 50, 51], "pastewka": [14, 24, 65, 67, 118], "inertia": [14, 115], "exemplari": 14, "slab1": 14, "slab2": 14, "lowest": 14, "mask": [14, 15, 69, 86, 98, 100, 104, 112, 115, 118, 123], "bottom_mask": [14, 118], "topmost": 14, "treat": [14, 50, 51], "rigidli": [14, 98], "top_mask": [14, 118], "rigid": [14, 115, 118], "adapt": [14, 88, 116], "subsequ": [14, 98, 120, 122], "savetxt": 14, "txt": [14, 20, 24, 69, 86], "md": [14, 98, 115, 118, 126, 132], "langevin": [14, 23, 118], "thermostat": [14, 23, 118], "neither": 14, "nor": 14, "motion": [14, 87], "simplic": 14, "thermal": [14, 118], "dedic": 14, "dt": [14, 94, 98, 101], "166": 14, "m_factor": [14, 118], "lid": [14, 118], "expens": [14, 23, 58, 69, 122], "pdir": [14, 118], "p": [14, 40, 44, 47, 86, 94, 98, 99, 117, 118, 122], "yet": 14, "vdir": [14, 118], "happen": 14, "temperatur": [14, 23, 29, 36, 39, 42, 48, 65, 67, 91, 92, 93, 115, 118], "t_langevin": 14, "gamma_langevin": 14, "t_integr": 14, "steps_integr": [14, 118], "damp": [14, 118], "typic": [14, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120, 132, 133], "twice": [14, 92, 129], "stillinger_weber_prb_31_5262_si": [14, 17], "pc": 14, "velocitydistribut": 14, "maxwellboltzmanndistribut": 14, "fixedmasscriticaldamp": [14, 118], "slider": [14, 118], "slidewithnormalpressurecuboidcel": [14, 118], "set_constraint": [14, 101, 115], "temperature_k": 14, "clear": [14, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120, 122], "momenta": [14, 115, 118], "otherwis": [14, 20, 78, 88, 92, 115, 122, 134], "awai": [14, 91, 95], "set_calcul": [14, 40, 115], "integr": [14, 100, 118], "trajectori": [14, 19, 85, 98], "track": 14, "term": [14, 29, 36, 37, 39, 42, 48, 65, 67, 69, 86, 91, 132], "height": [14, 15, 98], "shear": [14, 85, 88, 98, 101, 118], "etc": [14, 24, 113, 122], "slidelog": [14, 118], "temp": 14, "middle_mask": [14, 118], "tdir": [14, 118], "fixcm": 14, "equilibrate_pressure_01": 14, "traj": [14, 19, 85, 87], "logger": [14, 25, 32, 81, 94, 118, 120], "log_handl": [14, 118], "log_equilibrate_01": 14, "encod": [14, 24, 40, 110], "utf": [14, 24, 40, 110], "buffer": [14, 50, 51, 52, 62, 118, 122], "slidelogg": [14, 118], "write_head": [14, 118], "header": [14, 37, 109, 110, 118], "loadtxt": [14, 109], "bool": [14, 25, 29, 31, 36, 39, 42, 50, 51, 55, 57, 58, 62, 63, 65, 67, 68, 69, 86, 88, 92, 93, 94, 98, 101, 102, 104, 108, 109, 113, 115, 120, 122, 123, 124], "written": [14, 18, 69, 108, 118, 120, 122, 133], "equilibrate_pressure_02": 14, "step_offset": [14, 118], "log_equilibrate_02": 14, "p_c": [14, 118], "high": [14, 69, 91, 97], "frequenc": 14, "oscil": 14, "reset": [14, 29, 31, 36, 39, 42, 48, 50, 51, 59, 65, 67, 68, 101, 120], "get_veloc": [14, 115], "set_veloc": [14, 115], "analogi": 14, "autodamp": [14, 118], "slide_01": 14, "log_slide_01": 14, "docstr": [14, 91], "slide_02": 14, "log_slide_02": 14, "tmp_file": [14, 134], "except": [14, 24, 94, 114, 115, 120, 122, 134], "filenotfounderror": [14, 134], "viewabl": 15, "sphinx": [15, 24], "insid": [15, 86, 93, 115, 122], "to_jshtml": 15, "page": [15, 24, 126], "output_html": 15, "div": 15, "flex": 15, "justifi": 15, "gcf": 15, "pipelin": [15, 20], "common_neighbor_analysi": 15, "identify_diamond": 15, "get_structure_typ": [15, 124], "atom_label": [15, 124], "structure_nam": [15, 124], "list": [15, 18, 24, 26, 27, 29, 31, 36, 39, 40, 42, 48, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 86, 88, 90, 94, 98, 101, 102, 104, 107, 108, 109, 112, 115, 120, 122, 123, 124, 126, 128, 130, 132, 133, 134], "string": [15, 24, 29, 36, 37, 39, 42, 48, 65, 67, 69, 86, 88, 92, 109, 110, 112, 115, 122, 123, 124, 129], "hex": [15, 122, 124], "ase_to_ovito": 15, "commonneighboranalysismodifi": 15, "identifydiamondmodifi": 15, "staticsourc": 15, "ovito_structur": 15, "del": 15, "sourc": [15, 24, 35, 37], "hex_color": 15, "02x": 15, "255": 15, "custom": [15, 24, 29, 36, 39, 42, 48, 65, 67, 88, 115], "tooltip": 15, "molecul": [15, 62, 106, 108, 112, 115, 129, 133, 134], "relev": [15, 98, 122, 124, 132], "tooltip_j": 15, "stage": [15, 134], "mousecontrol": 15, "hoverpick": 15, "pickingproxi": 15, "innertext": 15, "atomnam": 15, "atom1": 15, "atom2": 15, "unitcel": [15, 69], "add_disloc": 15, "x_shift": 15, "cone": 15, "hollow": 15, "shifter": 15, "accordingli": [15, 94], "add_cylind": 15, "add_con": 15, "hide": 15, "add_ball_and_stick": [15, 134], "cylinderonli": [15, 134], "radiustyp": [15, 134], "coval": [15, 134], "radiusscal": [15, 134], "aspectratio": [15, 134], "structure_typ": 15, "uniqu": [15, 112, 115], "everi": [15, 24, 69, 86, 98, 112, 115, 120], "str": [15, 25, 29, 31, 35, 36, 39, 42, 48, 50, 51, 62, 63, 65, 67, 68, 86, 88, 93, 94, 98, 101, 102, 106, 107, 108, 109, 112, 115, 120, 122, 124], "add_unitcel": 15, "camera": 15, "orthograph": 15, "clipdist": 15, "400px": 15, "_j": [15, 44], "_remove_represent": 15, "update_spacefil": 15, "kumagai": [16, 21, 49], "sum_": [17, 35, 36, 48, 94, 127, 130], "substack": [17, 36], "u_2": [17, 86], "2_": 17, "u_": [17, 35, 36, 88], "xi_": 17, "xi": [17, 42, 44, 49, 94], "ik": [17, 44, 49, 112, 127], "jk": [17, 49, 112], "m\u00fcser": 17, "grie\u00dfer": 17, "On": [17, 98], "respect": [17, 36, 42, 69, 90, 98, 113, 115, 120, 122, 129], "freedom": [17, 88, 98, 115, 116, 118], "explicit": [17, 132], "represent": [17, 29, 36, 88, 115, 117, 122], "asi": [17, 131], "parametr": 17, "kumagai_comp_mat_sci_39_si": 17, "markdown": 17, "cohes": [17, 100], "42": [17, 133], "born": [17, 29, 36, 39, 42, 48, 49, 65, 67, 69, 123], "elastic_moduli": [17, 88], "nonaffin": [17, 113], "born_const": [17, 29, 39, 42, 48, 65, 67], "isotrop": [17, 98], "nu": [17, 35, 36, 88, 98], "young": [17, 88, 98], "modulu": [17, 88, 98], "ey": [17, 112, 122], "170": 17, "212": 17, "tersoff": [17, 23, 47, 49], "brenner": [17, 47, 49], "lookup": 17, "tabl": [17, 18, 35, 134], "erhart": 17, "alb": 17, "varvenn": [18, 35], "luqu": [18, 35], "n\u00f6hring": [18, 35], "curtin": [18, 35], "phy": [18, 27, 37, 65, 67, 86, 88, 116, 119], "rev": [18, 27, 37, 65, 119], "104201": [18, 35], "2016": [18, 35], "input_t": 18, "output_t": 18, "origin": [18, 61, 62, 63, 86, 88, 98, 115, 116, 117, 123], "whitespac": 18, "netcdf": 19, "gracefulli": [19, 120], "handl": [19, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 94, 101, 115, 118, 120, 129], "jump": [19, 122], "nc": [19, 134], "posson_nernst_planck_solv": 20, "posson_nernst_planck_solver_fen": 20, "stericifi": 20, "execut": [20, 22, 24, 114], "drop": [20, 29, 36, 39, 42, 48, 65, 67, 88, 92, 93], "bc": [20, 92, 93, 98], "plain": 20, "npz": 20, "stream": [20, 106], "regim": [20, 92], "implicitli": 20, "exclud": [20, 24, 104], "impos": 20, "stericnacl": 20, "sih": [21, 98], "pari": [21, 98], "irwin": [21, 98], "fract": [21, 100, 101], "mech": [21, 98, 100], "189": [21, 98], "1965": [21, 98], "stepwis": 21, "k_": 21, "textrm": [21, 127], "atomistica": [21, 23], "tersoffscr": [21, 23], "tersoff_prb_39_5566_si_c__scr": 21, "compute_elastic_const": 21, "1220": 21, "535": 21, "7326": 21, "front": 21, "bondlength": [21, 98], "bulk_nn": [21, 98], "nearest": [21, 98, 101, 121, 122, 127], "nstep": 21, "tip_dx": 21, "zeros_lik": 21, "tip_dz": 21, "toler": [21, 29, 36, 39, 42, 48, 63, 65, 67, 69, 86, 88, 92, 93, 102, 116, 123, 124], "extxyz": [21, 133, 134], "dump": [21, 98, 108, 122], "1975": [21, 98], "screen": [21, 91, 110], "set_region": [21, 97], "kumagaiscr": 21, "429": 21, "elastic_symmetri": 21, "10000": [21, 23], "k0": [21, 49], "dk": 21, "max_step": [21, 98], "r_i": [21, 94, 97], "r_iii": [21, 97], "40": [21, 24, 86, 122], "ii": [21, 98], "iii": [21, 98], "iv": 21, "carv": [21, 50, 51, 62, 63], "circular": 21, "unstabl": 21, "equilibria": 21, "buze": 21, "kermod": [21, 24, 116], "2021": 21, "suitabl": [21, 98, 102, 122], "cli": 22, "prefix": [22, 24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 108, 120], "resid": 22, "queri": 22, "programmat": [22, 125, 126], "has_paramet": [22, 25], "echo": 22, "whether": [22, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 98, 101, 102, 115, 120, 122, 123], "rm": 22, "overview": 22, "quench": [22, 125, 126], "liquid": [23, 91], "t1": [23, 94], "exponenti": [23, 63], "t2": 23, "present": [23, 24, 25, 37, 98, 104, 108, 115, 133], "kb": 23, "stoichiometri": 23, "4096c": 23, "densit": 23, "dt1": 23, "dt2": 23, "tau1": 23, "5e3": 23, "tau2": 23, "down": [23, 69, 98], "teq": 23, "50e3": 23, "equlibr": 23, "durat": 23, "tqu": 23, "20e3": 23, "quick_calc": 23, "computation": 23, "quickstart": 24, "sun": 24, "2015": 24, "execfil": 24, "dir": 24, "autogener": 24, "comment": [24, 37, 108], "serv": 24, "sy": [24, 37, 84, 122, 134], "readthedoc": 24, "mock": 24, "mock_modul": 24, "mod_nam": 24, "autodoc": 24, "root": [24, 39, 125, 126], "abspath": 24, "absolut": [24, 42, 45, 46, 69, 88, 92, 93, 112, 117], "insert": [24, 29, 36, 67, 68, 101, 115, 120, 122], "needs_sphinx": 24, "ext": 24, "napoleon": 24, "autosummari": 24, "mathjax": 24, "myst_nb": 24, "numpydoc": 24, "sphinx_copybutton": 24, "sphinxcontrib": 24, "spell": 24, "templat": 24, "templates_path": 24, "_templat": 24, "suffix": 24, "source_suffix": 24, "rst": [24, 122], "source_encod": 24, "sig": 24, "master": 24, "toctre": 24, "master_doc": 24, "project": [24, 29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "copyright": [24, 76, 77, 78, 91, 92, 93, 94], "2023": 24, "jame": 24, "lar": 24, "info": [24, 94, 98], "act": [24, 36, 115, 122], "releas": [24, 98, 100], "variou": [24, 122], "throughout": [24, 50, 51], "devel": 24, "rc": [24, 39, 65, 101], "tag": [24, 115], "languag": 24, "todai": 24, "today_fmt": 24, "strftime": 24, "pattern": [24, 88], "exclude_pattern": 24, "_build": 24, "condition": 24, "modulenotfounderror": 24, "electrochemistry_2": 24, "rest": [24, 62, 122], "markup": 24, "default_rol": 24, "func": [24, 40, 69, 90, 92, 93, 94, 106], "add_function_parenthes": 24, "prepend": 24, "descript": [24, 86, 92, 93, 108, 110, 122, 133], "titl": 24, "add_module_nam": 24, "sectionauthor": 24, "moduleauthor": 24, "show_author": 24, "pygment": 24, "syntax": [24, 122], "highlight": 24, "pygments_styl": 24, "modindex_common_prefix": 24, "paragraph": 24, "keep_warn": 24, "theme": 24, "builtin": [24, 122], "html_theme": 24, "sphinx_rtd_them": 24, "feel": 24, "html_theme_opt": 24, "html_theme_path": 24, "html_titl": 24, "shorter": [24, 26, 121], "navig": 24, "html_short_titl": 24, "sidebar": 24, "html_logo": 24, "favicon": 24, "window": 24, "icon": 24, "ico": 24, "being": [24, 54, 69, 95, 118, 122, 123], "16x16": 24, "32x32": 24, "pixel": 24, "html_favicon": 24, "sheet": 24, "css": 24, "overwrit": [24, 115], "html_static_path": 24, "_static": 24, "extra": [24, 29, 58, 63, 69, 102], "robot": 24, "htaccess": 24, "html_extra_path": 24, "timestamp": 24, "html_last_updated_fmt": 24, "smartyp": 24, "quot": 24, "dash": [24, 98], "typograph": 24, "entiti": 24, "html_use_smartyp": 24, "html_sidebar": 24, "html_additional_pag": 24, "html_domain_indic": 24, "html_use_index": 24, "individu": [24, 31, 63, 112, 115, 120, 122], "letter": [24, 122], "html_split_index": 24, "html_show_sourcelink": 24, "footer": 24, "html_show_sphinx": 24, "html_show_copyright": 24, "opensearch": 24, "must": [24, 29, 31, 36, 39, 42, 48, 50, 51, 58, 65, 67, 68, 69, 86, 92, 94, 101, 102, 104, 106, 108, 112, 114, 115, 120, 122], "url": 24, "html_use_opensearch": 24, "xhtml": 24, "html_file_suffix": 24, "htmlhelp_basenam": 24, "matscipydoc": 24, "latex_el": 24, "letterpap": 24, "a4pap": 24, "papers": 24, "font": 24, "10pt": 24, "11pt": 24, "12pt": 24, "pointsiz": 24, "stuff": [24, 91], "preambl": 24, "tree": 24, "tupl": [24, 86, 94, 109, 112, 115, 122, 129], "author": [24, 76, 77, 78, 91, 92, 93, 94], "documentclass": 24, "howto": 24, "manual": [24, 92, 133], "latex_docu": 24, "tex": 24, "latex_logo": 24, "toplevel": 24, "head": 24, "chapter": [24, 86], "latex_use_part": 24, "latex_show_pageref": 24, "address": [24, 120], "latex_show_url": 24, "appendix": 24, "latex_appendic": 24, "latex_domain_indic": 24, "man_pag": 24, "man_show_url": 24, "texinfo": 24, "menu": 24, "categori": 24, "texinfo_docu": 24, "miscellan": 24, "texinfo_appendic": 24, "texinfo_domain_indic": 24, "footnot": 24, "inlin": [24, 127, 130, 131], "texinfo_show_url": 24, "detailmenu": 24, "node": [24, 120], "texinfo_no_detailmenu": 24, "rais": [24, 29, 31, 36, 37, 39, 42, 48, 50, 51, 58, 65, 67, 68, 86, 101, 108, 115, 118, 120, 122, 124, 134], "fail": [24, 94, 122], "timeout": [24, 120], "nb_execution_raise_on_error": 24, "autodoc_default_opt": 24, "member": [24, 31, 129], "bysourc": 24, "undoc": 24, "myst_enable_extens": 24, "dollarmath": 24, "colon_f": 24, "mystnb": 24, "jupytext": 24, "properli": [24, 31, 122], "percent": 24, "en": [24, 69], "latest": 24, "ipynb": [24, 118], "myst": 24, "nb": [24, 37], "nb_custom_format": 24, "fmt": [24, 120], "spelling_lang": 24, "en_u": 24, "spelling_show_suggest": 24, "Will": 25, "dr": [26, 112], "nbin": [26, 127], "array_lik": [26, 29, 35, 36, 37, 39, 42, 48, 65, 67, 69, 88, 98, 100, 104, 107, 112, 114, 123], "2_min": 27, "falk": 27, "langer": 27, "7192": 27, "1998": 27, "get_xij": 27, "nat": [27, 112], "i_now": 27, "dr_now": 27, "dr_old": 27, "x_": 27, "get_yij": 27, "y_": 27, "array_invers": 27, "invers": [27, 29, 36, 39, 42, 48, 65, 67, 88, 122], "matric": [27, 117, 129], "faster": [27, 109, 122], "inv": [27, 88], "get_delta_plus_epsilon_dgesv": 27, "delta_ij": 27, "epsilon_ij": 27, "get_delta_plus_epsilon": 27, "get_d_square_min": 27, "atoms_now": 27, "atoms_old": 27, "j_now": 27, "delta_plus_epsilon": 27, "matscipycalcul": [29, 36, 42, 48, 65, 67], "ignore_bad_restart_fil": [29, 31, 36, 42, 67, 68, 101, 120], "daughter": 29, "hessian": [29, 36, 39, 42, 44, 48, 49, 65, 67, 69, 88, 103, 113, 117], "dynamical_matrix": [29, 39, 42, 48, 65, 67], "nonaffine_forc": [29, 39, 42, 48, 65, 67], "stress_elastic_contribut": [29, 39, 65, 67], "birch_coeffici": [29, 39, 42, 48, 65, 67], "nonaffine_elastic_contribut": [29, 36, 39, 42, 48, 65, 67, 88], "perspect": 29, "sumcalcul": 29, "calculation_requir": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "export_properti": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "get_atom": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "get_charg": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120, 134], "get_default_paramet": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "get_dipole_mo": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120], "get_magnetic_mo": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120], "get_stress": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 98, 101, 115, 120], "read_atom": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "todict": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120], "system_chang": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "combin": [29, 31, 36, 50, 51, 67, 68, 94, 101, 108, 115, 117, 120, 123, 133], "dipol": [29, 36, 67, 68, 86, 101, 115, 120], "magmom": [29, 36, 67, 68, 101, 115, 120], "six": [29, 36, 67, 68, 101, 115, 120], "initial_charg": [29, 31, 36, 67, 68, 101, 115, 120], "initial_magmom": [29, 31, 36, 67, 68, 101, 115, 120], "dictionari": [29, 31, 36, 39, 40, 42, 48, 50, 51, 58, 63, 65, 67, 68, 88, 98, 101, 108, 109, 112, 115, 120, 122], "dummi": [29, 36, 67, 68, 101, 120], "self": [29, 31, 36, 39, 42, 48, 50, 51, 59, 61, 62, 63, 65, 67, 68, 69, 86, 93, 98, 101, 102, 115, 117, 120, 122], "miss": [29, 31, 36, 42, 67, 68, 86, 98, 101, 120, 122, 134], "get_dynamical_matrix": [29, 36, 39, 42, 48, 65, 67], "weight": [29, 35, 36, 37, 39, 42, 48, 65, 67, 112, 114], "get_hessian": [29, 36, 39, 42, 48, 65, 67], "spars": [29, 36, 39, 42, 48, 65, 67, 88, 112, 117, 129], "divide_by_mass": [29, 36, 39, 42, 48, 65, 67], "symmetr": [29, 36, 42, 65, 67, 115], "hermitian": [29, 36, 42, 65, 67], "block": [29, 36, 42, 65, 67, 108, 112, 120, 122], "global": [29, 32, 36, 39, 42, 48, 58, 65, 67, 86, 88, 103, 108, 112, 113, 115], "minima": [29, 36, 39, 42, 48, 65, 67, 88, 103, 113], "divid": [29, 36, 67, 98, 115, 122], "m_i": [29, 36], "m_j": [29, 36], "bsr_matrix": [29, 36, 42, 112], "hessian_ncc": [29, 36], "ndarrai": [29, 36, 90, 91, 92, 93, 94, 111, 112, 114, 115, 118, 122], "distances_nc": [29, 36], "get_born_elastic_const": [29, 36, 39, 42, 48, 65, 67], "get_stress_contribution_to_elastic_const": [29, 36, 39, 42, 48, 65, 67], "cauchi": [29, 36, 39, 42, 48, 65, 67, 69, 123], "get_birch_coeffici": [29, 36, 39, 42, 48, 65, 67], "birch": [29, 36, 39, 42, 48, 65, 67], "get_nonaffine_forc": [29, 36, 39, 42, 48, 65, 67], "cg_paramet": [29, 36, 39, 42, 48, 65, 67, 88], "x0": [29, 36, 39, 42, 48, 65, 67, 86, 88, 92, 93, 94, 98, 116], "contribut": [29, 35, 36, 39, 42, 48, 65, 67, 88, 98, 115, 129], "dict": [29, 31, 36, 39, 40, 42, 48, 50, 51, 58, 65, 67, 68, 88, 94, 98, 101, 102, 108, 109, 112, 115, 120], "dictonari": [29, 36, 39, 42, 48, 65, 67, 88], "conjug": [29, 36, 39, 42, 48, 65, 67, 88, 122], "guess": [29, 36, 39, 42, 48, 65, 67, 86, 88, 98], "even": [29, 36, 39, 42, 48, 65, 67, 86, 88, 115, 122], "linearoper": [29, 36, 39, 42, 48, 65, 67, 88], "get_non_affine_contribution_to_elastic_const": [29, 36, 39, 42, 48, 65, 67], "eigenvalu": [29, 36, 39, 42, 48, 65, 67, 88, 115], "eigenvector": [29, 36, 39, 42, 48, 65, 67, 88], "pc_paramet": [29, 36, 39, 42, 48, 65, 67, 88], "occur": [29, 36, 39, 42, 48, 65, 67, 87, 88, 122, 124, 129], "bypass": [29, 36, 39, 42, 48, 65, 67, 88, 122], "cg": [29, 36, 39, 42, 48, 65, 67, 88, 94, 134], "ascend": [29, 36, 39, 42, 48, 65, 67, 88, 112], "incomplet": [29, 36, 39, 42, 48, 65, 67, 88], "lu": [29, 36, 39, 42, 48, 65, 67, 88], "decomposit": [29, 36, 39, 42, 48, 65, 67, 69, 88], "drop_tol": [29, 36, 39, 42, 48, 65, 67, 88], "fill_factor": [29, 36, 39, 42, 48, 65, 67, 88], "ratio": [29, 36, 39, 42, 48, 65, 67, 88, 98], "bound": [29, 36, 39, 42, 48, 65, 67, 88, 94], "drop_rul": [29, 36, 39, 42, 48, 65, 67, 88], "comma": [29, 36, 39, 42, 48, 65, 67, 88], "rule": [29, 36, 39, 42, 47, 48, 65, 67, 88], "permc_spec": [29, 36, 39, 42, 48, 65, 67, 88], "permut": [29, 36, 39, 42, 48, 65, 67, 69, 88, 115, 122, 123], "column": [29, 36, 39, 42, 48, 63, 65, 67, 69, 88, 92, 106, 108, 109, 122, 133], "sparsiti": [29, 36, 39, 42, 48, 65, 67, 88], "diag_pivot_thresh": [29, 36, 39, 42, 48, 65, 67, 88], "threshold": [29, 36, 39, 42, 48, 50, 51, 62, 63, 65, 67, 88], "pivot": [29, 36, 39, 42, 48, 65, 67, 88], "expert": [29, 36, 39, 42, 48, 65, 67, 88], "supernod": [29, 36, 39, 42, 48, 65, 67, 88], "panel_s": [29, 36, 39, 42, 48, 65, 67, 88], "panel": [29, 36, 39, 42, 48, 65, 67, 88], "superlu": [29, 36, 39, 42, 48, 65, 67, 88], "get_numerical_non_affine_forc": [29, 36, 39, 42, 48, 65, 67], "numerical_nonaffine_forc": [29, 36, 39, 42, 48, 65, 67, 113], "central": [29, 36, 39, 42, 48, 65, 67, 103, 113], "rescal": [29, 36, 39, 42, 48, 65, 67, 98, 113], "broken": [29, 31, 36, 42, 67, 68, 98, 101, 120], "purepath": [29, 31, 36, 42, 67, 68, 101, 120], "Not": [29, 31, 36, 42, 67, 68, 101, 120], "band_structur": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "band": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "calculate_numerical_forc": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "calculate_numerical_stress": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "voigt": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 88, 101, 113, 115, 120], "calculate_properti": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "check_stat": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "default_paramet": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "discard_results_on_any_chang": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "purg": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "magnet": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120], "moment": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120], "force_consist": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120], "allow_calcul": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "ignored_chang": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "cach": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 86, 101, 120], "implemented_properti": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "readerror": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "corrupt": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "succ": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "fileiocalcul": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "read_result": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "classmethod": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 115, 120, 122], "old": [29, 31, 36, 39, 42, 48, 50, 51, 63, 65, 67, 68, 101, 120], "key1": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "value1": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "key2": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "value2": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "chaneg": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "decid": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120, 123], "harmless": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "keyword": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 69, 86, 101, 102, 109, 115, 120, 122], "set_label": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "abc": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 112, 120], "dir1": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "skip_default": [29, 31, 36, 39, 42, 48, 50, 51, 65, 67, 68, 101, 120], "committeeuncertainti": 31, "train": 31, "uncertainti": 31, "deviat": [31, 115, 122], "public": [31, 122], "musil": 31, "906": 31, "915": 31, "2019": [31, 76, 77, 91, 92, 93, 116], "pub": 31, "ac": [31, 127, 130], "1021": 31, "jctc": 31, "8b00959": 31, "varianc": [31, 121, 122], "committeememb": 31, "calibr": 31, "calibrated_for": 31, "id_count": 31, "counter": 31, "id_to_atom": 31, "id": [31, 103, 106, 108, 111, 112, 113, 133, 134], "validation_set": 31, "add_memb": 31, "set_internal_validation_set": 31, "appearance_threshold": 31, "prop": [31, 39], "locat": [31, 32, 101, 122], "is_calibrated_for": 31, "scale_uncertainti": 31, "training_data": 31, "lightweight": 31, "set_training_data": 31, "is_sample_in_atom": 31, "create_logg": 32, "level": [32, 50, 51, 62, 69, 116, 122], "log_fil": 32, "formatt": 32, "handler": 32, "set_log": 32, "subsampl": 33, "output_fil": 33, "num_subset": 33, "num_subset_sampl": 33, "keep_isolated_atom": 33, "draw": [33, 90, 102], "average_potenti": 35, "rep": [35, 36, 37, 115], "avg_atom": 35, "999": 35, "crystal_structur": [35, 37], "unknown": [35, 134], "lattice_const": [35, 37], "fictiou": 35, "reproduc": 35, "tabul": [35, 37, 109], "phi_": [35, 36], "aa": [35, 108, 115], "r_": [35, 36, 44, 49, 127, 130], "n_t": 35, "xy": [35, 98, 115], "quad": 35, "rho_": [35, 36], "g_a": 35, "c_x": 35, "g_x": 35, "m_a": 35, "m_x": 35, "straightforward": 35, "eamparamet": [35, 37], "new_f": 35, "new_rep": 35, "read_eam": [35, 37], "new_paramet": 35, "join": [35, 63], "rstrip": 35, "write_eam": [35, 37], "equicomposit": 35, "review": 35, "rho_nu": [35, 36], "g_": [35, 36], "equiv": [35, 36, 122], "m_": [35, 36], "fn": [36, 107, 109], "free_energi": [36, 39, 42, 48, 65, 67, 101], "energy_virial_and_forc": 36, "atomic_numbers_i": 36, "i_n": [36, 112], "j_n": [36, 112], "dr_nc": [36, 112], "abs_dr_n": [36, 112], "virial": [36, 100], "abd_dr_n": 36, "epot": [36, 100], "virial_v": 36, "forces_": 36, "calculate_hessian_matrix": 36, "mathcal": 36, "emb": 36, "delta_": [36, 44], "eight": 36, "t_1": 36, "t_2": 36, "t_3": 36, "t_4": 36, "t_5": 36, "t_6": 36, "t_7": 36, "t_8": 36, "row": [36, 69, 92, 112, 118, 122, 123], "nonzero": [36, 122], "atomic_mass": 37, "number_of_density_grid_point": 37, "number_of_distance_grid_point": 37, "density_grid_spac": 37, "distance_grid_spac": 37, "cover": [37, 122], "empti": [37, 54, 92, 108, 112, 115, 122], "metal": [37, 91, 108, 115], "occurr": 37, "maxsiz": [37, 67], "valueerror": [37, 58, 86, 122], "eam_fil": 37, "differnt": 37, "flavor": 37, "storag": [37, 122], "subset": [37, 100], "sandia": 37, "gov": 37, "pair_eam": 37, "dynamo": 37, "funcfl": 37, "setfl": 37, "mix_eam": 37, "rep_ab": 37, "interspeci": 37, "kinf": 37, "arithmet": [37, 122], "ponder": 37, "fb": 37, "fa": [37, 122], "rep_a": 37, "rep_b": 37, "previous": [37, 120, 122], "pars": [37, 122], "karg": 37, "fine": [37, 122], "tune": 37, "alpha_a": 37, "alpha_b": 37, "f_ab": 37, "beta_00": 37, "beta_01": 37, "f_ba": 37, "beta_10": 37, "beta_11": 37, "parameters_mix": 37, "f_": [37, 127], "rep_": 37, "zhou": 37, "johnson": 37, "wadlei": 37, "69": 37, "144113": 37, "2004": [37, 101], "out_fil": 37, "summat": 39, "ewaldshortrang": 39, "cutoffinteract": [39, 65], "first_deriv": [39, 65, 67], "qi": [39, 65], "qj": [39, 65], "second_deriv": [39, 65, 67], "get_cutoff": [39, 42, 65, 67], "ewal": 39, "short_rang": 39, "accuraci": [39, 88], "kspace": 39, "determine_alpha": 39, "acc": 39, "determin": [39, 69, 88, 98, 112, 122, 127], "adopt": 39, "determine_nk": 39, "natom": [39, 52, 55, 63, 69, 123], "maxim": [39, 67], "reciproc": [39, 115], "determine_kc": 39, "nk": 39, "wave": [39, 101, 113], "integ": [39, 69, 86, 98, 115, 122, 124], "triplet": [39, 42, 44, 48, 112], "rms_kspace": 39, "km": 39, "q2": 39, "rms_rspace": 39, "allowed_wave_vector": 39, "prefactor": [39, 129], "self_energi": 39, "kspace_energi": 39, "po": [39, 86, 99, 108, 133], "first_derivative_kspac": 39, "stress_kspac": 39, "coulomb": [39, 108, 115], "reset_kspac": 39, "kspace_properti": 39, "recirproc": 39, "contributiom": 39, "naforc": 39, "hidden": 40, "distinguish": 40, "range_map": 40, "get_const": 40, "get_deriv": 40, "get_dict": 40, "get_lower_bound": 40, "get_upper_bound": 40, "get_vari": 40, "in_rang": 40, "set_arrai": [40, 115, 134], "set_const": 40, "set_deriv": 40, "set_dict": 40, "set_range_deriv": 40, "set_vari": 40, "par": 40, "cost_histori": 40, "minimal_cost": 40, "par_at_minimal_cost": 40, "residuals_histori": 40, "get_cohesive_energi": 40, "get_cost_funct": 40, "get_cost_histori": 40, "get_parameters_at_minimal_cost": 40, "get_residuals_histori": 40, "get_square_residu": 40, "optimize_ann": 40, "optimize_brut": 40, "optimize_leastsq": 40, "optimize_openopt": 40, "set_calculator_class": 40, "set_paramet": 40, "set_parameters_from_arrai": 40, "store_histori": 40, "_io": [40, 110], "textiowrapp": [40, 110], "stdout": [40, 110, 115], "interalg": 40, "combinedfit": 40, "get_residu": 40, "rotatingfit": 40, "penalti": [40, 94], "fitsinglepoint": 40, "w_energi": 40, "w_forc": 40, "w_stress": 40, "fitdim": 40, "d0": 40, "w_d0": 40, "w_r0": 40, "get_dist": [40, 111, 115], "new_dim": 40, "ground": 40, "fitcubiccryst": 40, "ec": 40, "cp": 40, "sfe": 40, "w_ec": 40, "w_a0": 40, "w_b": 40, "w_c11": 40, "w_c12": 40, "w_c44": 40, "w_cp": 40, "w_sfe": 40, "ep": [40, 91, 92, 93, 94, 99, 115], "ecoh_ref": 40, "get_c11": 40, "get_c44": 40, "get_cp": 40, "get_sf": 40, "get_lattice_const": [40, 86], "new_bulk": 40, "fittetragonalcryst": 40, "c0": [40, 93, 115], "c_a": 40, "c13": 40, "c33": 40, "c66": 40, "w_c0": 40, "w_c_a": 40, "w_c13": 40, "w_c33": 40, "w_c66": 40, "get_c33": 40, "get_c66": 40, "get_d1": 40, "get_d2": 40, "get_d4": 40, "fithexagonalcryst": 40, "fitsurfac": 40, "esurf": 40, "w_esurf": 40, "get_surface_energi": [40, 102], "fitsc": 40, "crystalstr": 40, "fitbcc": 40, "fitfcc": 40, "fitb2": 40, "b2": 40, "fitl1_0": 40, "l1_0": 40, "fitl1_2": 40, "l1_2": 40, "fitdiamond": 40, "dia": 40, "fitgraphit": 40, "gra": 40, "fitgraphen": 40, "grp": 40, "fitdiamond100": 40, "new_surfac": 40, "surfstr": 40, "fitdiamond110": 40, "fitdiamond111": 40, "atom_typ": [42, 112], "pair_typ": [42, 112], "d1f": 42, "d2f": 42, "d11f": 42, "d22f": 42, "d12f": 42, "d1g": 42, "d11g": 42, "d2g": 42, "d22g": 42, "d12g": 42, "neighbourhood": [42, 48, 112], "get_second_deriv": 42, "drda_pc": 42, "drdb_pc": 42, "i_p": [42, 112], "j_p": [42, 112], "r_p": [42, 49, 112], "r_pc": 42, "get_hessian_from_second_deriv": 42, "get_non_affine_forces_from_second_deriv": 42, "nicemanybodi": 42, "nicer": 42, "r_ij": [42, 99], "r_ik": 42, "ij_typ": 42, "ik_typ": 42, "init": [42, 92, 93], "zeropair": [44, 49], "zerotriplet": 44, "harmonicbond": 44, "atyp": 44, "ptype": 44, "spring": [44, 65, 108, 115], "harmonicangl": [44, 49], "mic": [44, 112, 115], "redefin": 44, "r_ij_c": 44, "r_ik_c": 44, "v_i": 44, "_i": 44, "w_i": 44, "scalar": [44, 122], "reader": [44, 118], "u_j": 44, "v_j": 44, "care": [44, 85, 112], "treatment": [44, 50, 51], "pair_index": 47, "maxval": 47, "triplet_index": 47, "mix_arithmet": 47, "mix_geometr": 47, "abel": 47, "definit": [48, 49, 108, 115, 133], "theta": [48, 49, 98, 115, 127], "sum_xx_sum_ijk_tau_xx_mn": 48, "sum_xy_sum_ijk_tau_xy_mn": 48, "sum_x_sum_ijk_tau_ijx_mn": 48, "sum_x_sum_ijk_tau_ij_xor_x_mn": 48, "sum_ijk_tau_xy_mn": 48, "\u0278": 48, "r\u1d62\u2c7c\u00b2": [48, 49], "\u03be\u1d62\u2c7c": [48, 49], "rsq_p": [48, 49], "xi_p": [48, 49], "\u2081\u0278": [48, 49], "\u2082\u0278": [48, 49], "\u2081\u2081\u0278": [48, 49], "\u2082\u2082\u0278": [48, 49], "\u2081\u2082\u0278": [48, 49], "\u03b8": 48, "r\u1d62\u2096\u00b2": [48, 49], "r\u2c7c\u2096\u00b2": [48, 49], "r1_p": 48, "r2_p": 48, "r3_p": 48, "\u2081\u03b8": [48, 49], "\u2082\u03b8": [48, 49], "\u2083\u03b8": [48, 49], "\u2081\u2081\u03b8": [48, 49], "\u2082\u2082\u03b8": [48, 49], "\u2083\u2083\u03b8": [48, 49], "\u2082\u2083\u03b8": [48, 49], "\u2081\u2083\u03b8": [48, 49], "\u2081\u2082\u03b8": [48, 49], "sum_ij_pi_ij_n": 48, "values_p": 48, "pi_": 48, "chi_": 48, "sum_ij_sum_x_pi_x_n": 48, "values_tq": 48, "chi_x": 48, "tr_p": 48, "values_t": 48, "values_txi": 48, "values_tx": 48, "distance_defin": 49, "decor": 49, "transform": [49, 115, 121, 124], "angle_distance_defin": 49, "zeroangl": 49, "r1": [49, 100], "r2": [49, 100], "r3": 49, "harmonicpair": 49, "harmon": [49, 108, 115], "theta0": 49, "5707963267948966": 49, "rij": 49, "rik": [49, 94], "rjk": 49, "lennardjon": 49, "inf": [49, 98, 116, 117], "bornmayercut": 49, "mayer": 49, "stillingerweberpair": 49, "stillingerweberangl": 49, "kumagaipair": 49, "kumagaiangl": 49, "tersoffbrennerpair": 49, "tersoffbrennerangl": 49, "symphi": 49, "energy_express": 49, "expr": 49, "sympi": 49, "symtheta": 49, "r1_t": 49, "r2_t": 49, "r3_t": 49, "multiclusterforcemixingpotenti": [50, 51], "classical_calcul": [50, 51], "qm_calcul": [50, 51], "qm_cluster": [50, 51], "forced_qm_list": [50, 51], "change_bond": [50, 51], "calculate_error": [50, 51], "calculation_always_requir": [50, 51], "buffer_hop": [50, 51, 59, 62], "enable_check_st": [50, 51], "multipl": [50, 51, 86, 98, 118, 122], "qm": [50, 51, 52, 59, 61, 62, 63, 86, 120], "instac": [50, 51], "forcemixingpotenti": [50, 51], "potential_energi": [50, 51, 59, 63], "all_chang": [50, 51], "power": [50, 51, 67, 98], "mm_pot": [50, 51], "ae": [50, 51], "flag": [50, 51, 63, 86, 93, 94, 106, 115, 122], "topologi": [50, 51, 112, 126], "hop": [50, 51, 62, 63], "noth": [50, 51], "meth": [50, 51], "emploi": [50, 51], "analyz": [50, 51], "independ": [50, 51, 115, 122], "send": [50, 51], "qmmm": [50, 51, 54, 86], "accur": [50, 51], "produce_classical_result": [50, 51], "ot": [50, 51, 52, 55, 62, 63], "produce_qm_clust": [50, 51], "evaluate_qm_cluster_seri": [50, 51], "clusternumb": [50, 51], "qm_atom": [50, 51], "mark": [50, 51, 52, 93, 94, 98, 120], "cluster_data": [50, 51], "combine_qm_mm_forc": [50, 51], "cluster_data_list": [50, 51], "clusterdata": [50, 51, 52, 54], "attach_hybrid_data": [50, 51], "full_qm_atoms_mask": [50, 51], "quantm": [50, 51], "mmechan": [50, 51], "comprehens": [50, 51], "ooutput": [50, 51], "evaluate_error": [50, 51], "heavy_onli": [50, 51], "r_forc": [50, 51], "hybrid": [50, 51], "hydrogen": [50, 51, 52, 61, 62, 63, 86, 129, 133], "set_qm_atom": [50, 51], "qm_list": [50, 51, 52], "certian": [50, 51], "compute_stress": [50, 51], "viral": [50, 51], "theorem": [50, 51], "print_messag": [50, 51, 62], "inner": [52, 62], "get_cluster_data": 54, "mcfm_pot": 54, "multiclusterforcemix": 54, "worker_populate_cluster_data": 55, "rank": 55, "nprocloc": 55, "atomic_clust": [55, 62], "clusterindex": 55, "qmcalcul": 55, "sharedlist": 55, "debug_qm_calcul": 55, "calcuat": 55, "tb": 55, "cpu": 55, "stuctur": 55, "mp": 55, "debug": [55, 115, 116], "neighbourlistbas": [57, 58], "sure": [57, 58, 92, 93, 108, 122], "date": [57, 58], "clled": [57, 58], "sucesful": [57, 58], "get_neighbour": [57, 58], "neighbourlistmcfm": 58, "skin": 58, "hysteretic_break_factor": 58, "wrapper": [58, 69, 117], "aroud": 58, "neighbour_list": [58, 59, 61, 62, 63, 86, 98, 112, 127, 129, 130, 134], "search": [58, 98, 108, 112, 119, 124, 126, 131, 133], "rebuild": [58, 115], "do_upd": 58, "pairwis": [58, 67, 94, 115], "runtimeerror": [58, 108, 115, 120, 122, 124], "qmcluster": [59, 61, 62, 63], "special_atoms_list": [59, 63], "manag": [59, 61, 62, 63], "attach_neighbour_list": 59, "attach_flagging_modul": 59, "qmflaggingtool": [59, 63], "attach_clustering_modul": 59, "qmclusteringtool": [59, 62], "reset_energized_list": 59, "old_energized_atom": 59, "flaggingmodul": 59, "warmup": 59, "update_qm_region": [59, 63], "flagging_modul": 59, "carve_clust": [59, 62], "clustering_modul": 59, "core_qm_list": [59, 62], "baseqmclustertool": [61, 62, 63], "mediat": [61, 62, 63], "find_neighbour": [61, 62, 63], "heavy_neighbour": [61, 62, 63], "hydrogen_neighbour": [61, 62, 63], "hydrogenate_clust": [61, 62, 63], "neigobur": [61, 62, 63], "compos": [61, 62, 63, 69, 123], "heavi": [61, 62, 63], "oper": [61, 62, 63, 69, 102, 122], "struct": [61, 62, 63, 134], "dangl": [61, 62, 63], "double_bonded_atoms_list": 62, "doubli": 62, "create_buffer_region": 62, "qm_atoms_list": 62, "whole": [62, 63], "expand": 62, "buffer_list": 62, "terminal_atom": 62, "verg": 62, "cutoff_atoms_list": 62, "hydrogenate_dangling_bond": 62, "terminal_atoms_list": 62, "replace_single_bond": 62, "terminal_atom_index": 62, "cutoff_atom_index": 62, "atomic_posit": 62, "replace_double_bond": 62, "include_special_atom": 62, "specialatomindex": 62, "regio": [62, 63], "complete_aromatic_r": 62, "total_supplementary_terminal_atom": 62, "aromat": 62, "ring": [62, 126, 128], "aromnat": 62, "create_cluster_from_mark": 62, "select_list": 62, "mesag": 62, "qm_flag_potential_energi": 63, "small_cluster_hop": 63, "only_heavi": 63, "ema_paramet": 63, "energy_cap": 63, "energy_increas": 63, "threshhold": 63, "indivu": 63, "diension": 63, "enter": 63, "stai": 63, "expans": [63, 69], "cap": 63, "convininec": 63, "get_energized_list": 63, "data_arrai": 63, "property_str": 63, "hysteretic_toler": 63, "create_cluster_around_atom": 63, "atom_id": 63, "join_clust": 63, "expand_clust": 63, "exponential_moving_averag": 63, "oldset": 63, "newset": 63, "update_avg_property_per_atom": 63, "avarag": 63, "hard": [65, 86], "lennardjonesquadrat": 65, "soft": [65, 86], "lennardjoneslinear": 65, "feneljcut": 65, "fene": 65, "bead": 65, "polym": 65, "lj": [65, 108, 115, 134], "contin": 65, "lennardjones84": 65, "c1": [65, 108, 115, 116, 133, 134], "c2": [65, 115, 116, 134], "c3": [65, 115, 134], "c4": [65, 134], "cuzr": 65, "kobayashi": 65, "shinji": 65, "cu57zr43": 65, "societi": 65, "japan": 65, "48": [65, 78, 122], "1980": 65, "1147": 65, "1152": 65, "beestkramersanten": 65, "beest": 65, "kramer": 65, "van": 65, "santen": 65, "bk": 65, "buckingham": 65, "lett": [65, 118], "1990": 65, "seamless": [65, 67], "86": [65, 67], "075459": [65, 67], "2012": [65, 67], "inversepowerlawpotenti": 67, "q": [67, 100], "minsiz": 67, "smooth": 67, "law": [67, 98], "ipl": 67, "repuls": 67, "expon": 67, "distribtuion": 67, "paramt": 67, "lerner": 67, "522": 67, "119570": 67, "mix_siz": 67, "isiz": 67, "jsize": 67, "nonaddit": 67, "get_coeff": 67, "get_maxs": 67, "get_mins": 67, "ijsiz": 67, "m_l": 67, "m_m": 67, "supercellcalcul": 68, "regressionmodel": 69, "regress": [69, 88], "lstsq": 69, "predict": [69, 86], "2d": [69, 86, 98, 118, 122, 123], "design": 69, "predict_gradi": 69, "grad_phi": 69, "cb_model": 69, "cubiccauchyborn": [69, 123], "diamondfactori": 69, "corrector": [69, 98], "subject": 69, "exploit": 69, "triad": 69, "possess": [69, 122], "get_model": 69, "set_model": 69, "constitut": [69, 92, 93, 129], "set_sublattic": [69, 123], "read_from_atom": [69, 123], "belong": 69, "sublattic": [69, 123], "unstrain": [69, 98], "trust": 69, "lattice1mask": [69, 123], "lattice2mask": [69, 123], "seper": [69, 98], "3x3": [69, 86, 88, 100, 112, 115, 122], "normalis": [69, 122, 124], "lab": [69, 123], "switch_sublattic": [69, 97], "switch": [69, 86, 123], "fit_taylor": 69, "de": [69, 76, 77, 78, 86, 91, 92, 93, 94, 98, 112], "taylor": 69, "grad_f": 69, "hess_f": 69, "wors": 69, "initial_regression_fit": 69, "save_taylor": 69, "readabl": [69, 133, 134], "load_taylor": 69, "tensor_field_3d_from_atom": 69, "cart3d": 69, "sit": [69, 101], "anyth": 69, "ndim": [69, 122], "cartesian": [69, 98, 104, 115], "cylind2d": 69, "cylind3d": 69, "spheric": 69, "cart2d": 69, "field3d": 69, "evaluate_f_or_": 69, "f_func": 69, "e_func": 69, "lagrang": [69, 92, 93], "polar": 69, "ru": 69, "wikipedia": 69, "wiki": 69, "finite_strain_theori": 69, "polar_decomposition_of_the_deformation_gradient_tensor": 69, "evaluate_f": 69, "evaluate_": 69, "predict_shift": 69, "strain_vec": 69, "perm_shift": 69, "permeut": 69, "fed": [69, 102], "240": 69, "strain_vec_perm": 69, "evaluate_shift_model": 69, "apply_shift": 69, "get_cb_error": 69, "poor": 69, "quantif": 69, "minimis": [69, 86], "cb_err": 69, "initial_sampl": 69, "latin": 69, "hypercub": 69, "check_for_refit": 69, "refit_point": 69, "err_vec": 69, "refit": 69, "metric": [69, 94], "dataset": [69, 106], "highest": 69, "criteria": 69, "took": 69, "did": 69, "cb_err_per_atom": 69, "refit_regress": 69, "e_voigt": 69, "get_data_point": 69, "e_vec": 69, "seri": 69, "shift_val": 69, "eval_shift": 69, "shift_diff": 69, "basis_function_evalu": 69, "polynomi": 69, "grad_basis_function_evalu": 69, "de_vec": 69, "evaluate_shift_gradient_regress": 69, "get_shift_gradi": 69, "save_regression_model": 69, "load_regression_model": 69, "imtek": [76, 77, 78, 91, 92, 93, 94], "univers": [76, 77, 78, 91, 92, 93, 94], "freiburg": [76, 77, 78, 91, 92, 93, 94], "johann": [76, 77, 78, 91, 92, 93, 94], "hoermann": [76, 77, 78, 91, 92, 93, 94], "uni": [76, 77, 78, 91, 92, 93, 94], "elfleinl": [76, 91], "attent": [76, 78, 92, 94], "6th": 76, "nov": 76, "recent": [76, 122], "resolv": [76, 98], "quantiti": [77, 86, 92, 93, 112], "2020": [78, 91, 94], "supposedli": 78, "overrid": [78, 94, 98, 120], "infer": [78, 122], "196": 78, "coordiant": 78, "certain": [78, 115, 122, 123], "pairwies": 78, "handle_sigusr2": 84, "signum": 84, "random_solid": 84, "sx": 84, "homogen": 85, "get_shear_dist": 85, "lee": 85, "edward": 85, "removesimplesheardeform": 85, "proper": [85, 106], "instantan": 85, "make_screw_cyl": 86, "cylinder_r": 86, "hard_cor": 86, "l_extend": 86, "fixatom": 86, "creation": [86, 122], "simplecubicfactori": 86, "disk": 86, "make_edge_cyl": 86, "plot_vitek": 86, "dislo": 86, "plot_ax": 86, "xyscal": 86, "vitek": 86, "graph": [86, 107], "show_neb_configur": 86, "core_posit": 86, "neb": 86, "show_configur": 86, "fixed_mask": 86, "pot_path": 86, "make_barrier_configur": 86, "elastic_param": 86, "fixedatom": 86, "constrain": [86, 98, 115], "chosen": [86, 88], "disloc_ini": 86, "disloc_fin": 86, "make_screw_cyl_kink": 86, "kink_length": 86, "quadrupol": 86, "reference_straight_disloc": 86, "large_bulk": 86, "slice_long_dislo": 86, "kink_bulk": 86, "slice": [86, 122], "sliced_kink": 86, "sliced_bulk": 86, "disloc_z_posit": 86, "compare_configur": 86, "dislo_ref": 86, "bulk_ref": 86, "print_info": 86, "remap": 86, "bulk_neighbour": 86, "neghbour": 86, "comparison": [86, 88, 98], "coreself": 86, "statement": 86, "swtich": 86, "bulk_i": 86, "bulk_j": 86, "y0": [86, 98], "du": 86, "cost_funct": 86, "cost": 86, "config": [86, 88], "optimis": [86, 88, 102, 116, 134], "fit_core_posit": 86, "dislo_imag": 86, "core_radiu": 86, "current_po": 86, "powel": [86, 94, 98], "core_x": 86, "core_i": 86, "neigbbour": 86, "calcualt": 86, "core_po": 86, "fit_core_position_imag": 86, "screw_cyl_tetrahedr": 86, "scan_r": 86, "imp_symbol": 86, "tetrahedr": 86, "lattuc": 86, "elemnt": 86, "dislocatino": 86, "sign": [86, 122], "screw_cyl_octahedr": 86, "octahedr": 86, "bodycenteredcubictetrahedralfactori": 86, "factori": 86, "element_basi": 86, "calc_num_atom": 86, "xtal_nam": 86, "bcc_tetrahedr": 86, "bravais_basi": 86, "sequenc": [86, 88, 98, 115, 122], "atoms_in_unit_cel": 86, "basis_factor": 86, "check_basis_volum": 86, "chop_toler": 86, "convert_to_natural_basi": 86, "natur": 86, "find_direct": 86, "find_ortho": 86, "ortho": 86, "int_basi": 86, "inverse_basi": 86, "inverse_basis_factor": 86, "make_crystal_basi": 86, "make_list_of_atom": 86, "repeat": [86, 115, 122], "make_unit_cel": 86, "print_directions_and_mil": 86, "process_el": 86, "put_atom": 86, "bodycenteredcubicoctahedralfactori": 86, "bcc_octahedr": 86, "dipole_displacement_angl": 86, "w_bulk": 86, "dislo_coord_left": 86, "dislo_coord_right": 86, "ud": 86, "voltera": 86, "get_u_img": 86, "n_img": 86, "n1_shift": 86, "n2_shift": 86, "displacemnt": 86, "make_screw_quadrupol": 86, "left_shift": 86, "right_shift": 86, "n1u": 86, "arrang": 86, "dsitanc": 86, "disoc": 86, "odd": 86, "disloc_quadrupol": 86, "coodrin": 86, "c_1": 86, "u_1": 86, "v_1": 86, "z_1": 86, "c_2": 86, "v_2": 86, "z_2": 86, "c_3": 86, "135": 86, "approx": 86, "tilt": 86, "compomemt": 86, "cz1": 86, "cz2": 86, "3n": 86, "easi": [86, 123], "typo": 86, "ventelon": 86, "willaim": 86, "peierl": 86, "fe": 86, "principl": 86, "versu": 86, "aid": 86, "mater": 86, "2007": 86, "suppl": 86, "1007": 86, "s10820": 86, "007": 86, "9064": 86, "cai": 86, "2005": [86, 88, 100], "yip": 86, "ed": 86, "handbook": 86, "springer": [86, 92, 93], "dordrecht": 86, "978": 86, "4020": 86, "3286": 86, "8_42": 86, "make_screw_quadrupole_kink": 86, "1016": 86, "jnucmat": 86, "2008": 86, "053": 86, "make_edge_cyl_001_100": 86, "determenit": 86, "read_dislo_qmmm": 86, "qm_mask": 86, "dislo_qmmm": 86, "plot_bulk": 86, "n_plane": 86, "ovito_dxa_straight_dislo_info": 86, "replicate_z": 86, "1b": 86, "3b": 86, "get_centering_mask": 86, "check_dupl": 86, "closer": 86, "anisotropicdisloc": 86, "slip_plan": 86, "disloc_lin": 86, "media": 86, "467": 86, "hirth": 86, "loth": 86, "catersian": 86, "eg": [86, 102], "slip": 86, "bulk_posit": 86, "3x1": 86, "deformation_gradi": [86, 98, 100], "return_2d": 86, "du_dx": [86, 98], "du_di": [86, 98], "dz": 86, "dv_dx": [86, 98], "dv_dy": [86, 98], "dv": [86, 98], "dw": 86, "dx": [86, 92, 98, 99, 103, 116], "dy": [86, 98], "adstroh": 86, "glide_distance_dimensionless": 86, "unit_cell_core_posit": 86, "build_glide_configur": 86, "build_impurity_cylind": 86, "init_anisotropic_disloc": 86, "init_stroh": 86, "plot_unit_cel": 86, "self_consistent_displac": 86, "set_burg": 86, "self_consist": 86, "pariti": 86, "OR": 86, "250": 86, "max_it": 86, "use_atomman": 86, "fix_width": 86, "average_posit": 86, "extra_bulk_at_cor": 86, "left_disloc": 86, "new_left_burg": 86, "new_right_burg": 86, "right_disloc": 86, "b_left": 86, "b_right": 86, "righ": 86, "overload": [86, 93, 102], "33333333": 86, "fixedlineatom": 86, "adjust_forc": [86, 98, 118], "adjust_posit": [86, 98, 118], "newposit": [86, 115], "gamma_lin": 86, "shift_dir": 86, "n_dot": 86, "return_imag": 86, "gsf": 86, "landscap": 86, "preserv": [86, 122], "conden": 86, "matter": 86, "395502": 86, "15pp": 86, "iopscienc": 86, "iop": 86, "0953": 86, "8984": 86, "39": [86, 118], "toten": 86, "removedrift": 87, "full_3x3_to_voigt_6_index": 88, "voigt_6_to_full_3x3_strain": 88, "strain_vector": 88, "voigt_6_to_full_3x3_stress": 88, "stress_vector": 88, "full_3x3_to_voigt_6_strain": 88, "strain_matrix": 88, "full_3x3_to_voigt_6_stress": 88, "stress_matrix": 88, "voigt_6x6_to_full_3x3x3x3": 88, "3x3x3x3": 88, "check_symmetri": 88, "voigt_6x6_to_cub": 88, "cubic_to_voigt_6x6": 88, "invari": 88, "syi": 88, "szz": 88, "syz": 88, "sxz": 88, "sxy": 88, "full_3x3_to_voigt_6": 88, "rotate_cubic_elastic_const": 88, "rotate_elastic_const": 88, "cubicelasticmoduli": 88, "complianc": 88, "logfil": [88, 102, 110], "brute": [88, 94], "triclin": 88, "generate_strained_config": 88, "at0": 88, "n_step": 88, "triclininc": 88, "conifugur": 88, "c_ij": 88, "graphic": 88, "stress_err": 88, "grad_scal": 88, "6241509125883258": 88, "intercept_scal": 88, "03120754562941629": 88, "infom": 88, "qualiti": 88, "summaris": 88, "curv": 88, "suppress": 88, "100gpa": 88, "intercept": 88, "5gpa": 88, "stat": [88, 94], "github": [88, 122], "djw": 88, "youngs_modulu": 88, "e_l": 88, "exact": 88, "answer": 88, "anisotropui": 88, "cr": 88, "e_x": 88, "pull": [88, 98], "e_i": 88, "e_z": 88, "formula": [88, 115], "brantlei": 88, "semiconductor": [88, 92, 93], "devic": [88, 92, 93], "appl": 88, "534": 88, "1973": 88, "poisson_ratio": 88, "lm": 88, "muduli": 88, "mudulu": 88, "gm": 88, "rand": [88, 94, 112], "rovenski": 88, "birkh": 88, "auser": 88, "71": 88, "n_gridpoint": 90, "nan": [90, 92], "drawn": [90, 115], "uniformli": 90, "evenli": 90, "298": [91, 92, 93], "relative_permitt": [91, 92, 93], "79": [91, 92, 93], "vacuum_permitt": [91, 92, 93], "8541878128e": [91, 92, 93], "314462618": [91, 92, 93], "96485": [91, 92, 93], "33212": [91, 92, 93], "854187817620389e": [91, 92, 93], "3144598": [91, 92, 93], "33289": [91, 92, 93], "epsr": [91, 92, 93], "goui": 91, "chapmann": 91, "volt": 91, "kelvin": [91, 115], "decim": [91, 122], "unphys": [91, 134], "substrat": 91, "neutral": [91, 134], "unittest": 91, "bernoulli": 92, "naiv": 92, "jacobin": 92, "fij": 92, "nxn": 92, "f_ij": [92, 99], "dfidxj": 92, "x1_scale": [92, 93], "left_potential_dirichlet_bc": [92, 93], "left_potential_robin_bc": [92, 93], "right_dirichlet_bc": [92, 93], "right_potential_dirichlet_bc": [92, 93], "right_potential_robin_bc": [92, 93], "solver_callback": [92, 93], "initial_valu": [92, 93], "decoupl": [92, 93], "evok": [92, 93], "side": [92, 93, 115, 122], "implicit": 92, "prescrib": 92, "helmholtz": 92, "ohp": 92, "crop": 92, "use_standard_dirichlet_bc": [92, 93], "left_finite_difference_scheme_flux_bc": [92, 93], "j0": [92, 93], "right_finite_difference_scheme_flux_bc": [92, 93], "left_controlled_volume_scheme_flux_bc": [92, 93], "right_controlled_volume_scheme_flux_bc": [92, 93], "u0": [92, 93], "left_dirichlet_bc": [92, 93], "lam": [92, 93, 101], "left_robin_bc": [92, 93], "dudx": [92, 93], "beyond": [92, 93], "right_robin_bc": [92, 93], "number_conservation_constraint": [92, 93], "n0": [92, 93], "amount": [92, 93, 98, 115, 123], "poisson_pd": [92, 93], "fd": [92, 93, 106], "nernst_planck_pd": [92, 93], "selbherr": [92, 93], "1984": [92, 93], "potential0": [92, 93], "concentration0": [92, 93], "kwarsg": [92, 93], "segment": [92, 93, 122], "subdomain": 93, "dolfin": 93, "cpp": 93, "mesh": 93, "map_tol": 93, "on_boundari": 93, "arg0": 93, "float64": [93, 99, 122], "arg1": 93, "writeabl": [93, 122], "meshfunct": 93, "meshfunctionsizet": 93, "check_midpoint": 93, "meshfunctiondoubl": 93, "meshfunctionbool": 93, "mark_cel": 93, "sub_domain": 93, "mark_facet": 93, "set_properti": 93, "snap": 93, "apply_right_potential_robin_bc": 93, "boundary_l": 93, "boundary_r": 93, "boundary_c": 93, "apply_left_potential_dirichlet_bc": 93, "apply_right_potential_dirichlet_bc": 93, "apply_left_concentration_dirichlet_bc": 93, "apply_right_concentration_dirichlet_bc": 93, "apply_central_reference_concentration_constraint": 93, "apply_left_potential_robin_bc": 93, "lam0": 93, "apply_number_conservation_constraint": 93, "conserv": 93, "fenicsproject": 93, "demo": 93, "neumann": 93, "apply_potential_dirichlet_bc": 93, "u1": 93, "apply_potential_robin_bc": 93, "lam1": 93, "use_central_reference_concentration_based_cell_bc": 93, "distribtut": 94, "benchmark": 94, "10e": 94, "dim": [94, 121, 122], "t0": 94, "perf_count": 94, "runtim": 94, "stats_df": 94, "pd": 94, "datafram": 94, "enumer": [94, 98, 99, 134], "to_str": 94, "float_format": 94, "6g": 94, "p10": 94, "p11": 94, "p12": 94, "p20": 94, "p21": 94, "p22": 94, "pmin0": 94, "pmin1": 94, "pmin2": 94, "pmax0": 94, "pmax1": 94, "pmax2": 94, "15674e": 94, "02188e": 94, "87564e": 94, "21835e": 94, "03505e": 94, "72691e": 94, "22171e": 94, "17135e": 94, "49124e": 94, "34126e": 94, "98407e": 94, "99037e": 94, "86069e": 94, "2704": 94, "02318e": 94, "23954e": 94, "36242e": 94, "80092e": 94, "31183e": 94, "56345e": 94, "81278e": 94, "01789e": 94, "0081e": 94, "2045e": 94, "59284e": 94, "54413e": 94, "5924e": 94, "27": 94, "0756": 94, "39218e": 94, "00079e": 94, "27255e": 94, "86337e": 94, "27807e": 94, "68863e": 94, "00018e": 94, "00146e": 94, "00565e": 94, "59941e": 94, "59989e": 94, "59931e": 94, "0255": 94, "99527e": 94, "82802e": 94, "54397e": 94, "69736e": 94, "41411e": 94, "936e": 94, "34664e": 94, "00514e": 94, "01874e": 94, "0002e": 94, "59695e": 94, "59998e": 94, "58155e": 94, "7869": 94, "99675e": 94, "34395e": 94, "94096e": 94, "28996e": 94, "44064e": 94, "15999e": 94, "14778e": 94, "12146e": 94, "01506e": 94, "03583e": 94, "6e": 94, "59898e": 94, "5982e": 94, "deferredmessag": 94, "msg": 94, "lazi": 94, "brute_force_closest_pair": 94, "xj": 94, "coodin": 94, "steric_distribut": 94, "scipy_distance_based_target_funct": 94, "numpy_only_target_funct": 94, "brute_force_target_funct": 94, "itertool": 94, "panda": 94, "timeit": 94, "planar_closest_pair": 94, "func_nam": 94, "planar": 94, "1000": [94, 116], "ret": 94, "val": [94, 110, 122], "diff": 94, "pdist": 94, "atleast_2d": 94, "func_name_tupl": 94, "diff_nam": 94, "d_": 94, "f1": 94, "f2": 94, "perf_nam": 94, "t_": 94, "coord_nam": 94, "float_field": 94, "f4": 94, "labeled_stat": 94, "24089e": 94, "61002e": 94, "51047e": 94, "48424e": 94, "37235e": 94, "d_brute_scipi": 94, "d_brute_planar": 94, "d_scipy_planar": 94, "t_brute": 94, "02697": 94, "85543": 94, "1414": 94, "90338": 94, "86993": 94, "t_scipi": 94, "00708364": 94, "00698962": 94, "00762594": 94, "00703242": 94, "00703579": 94, "t_planar": 94, "38302": 94, "39462": 94, "434342": 94, "407233": 94, "420773": 94, "p1x_brute": 94, "132014": 94, "331441": 94, "553405": 94, "534633": 94, "977582": 94, "p1y_brut": 94, "599688": 94, "186959": 94, "90897": 94, "575864": 94, "636278": 94, "p1z_brute": 94, "49631": 94, "993856": 94, "246418": 94, "853567": 94, "411793": 94, "p2x_brute": 94, "134631": 94, "333526": 94, "55322": 94, "534493": 94, "977561": 94, "p2y_brut": 94, "603598": 94, "179771": 94, "915063": 94, "576894": 94, "629313": 94, "p2z_brute": 94, "496833": 94, "994145": 94, "239493": 94, "859377": 94, "409509": 94, "p1x_scipi": 94, "p1y_scipi": 94, "p1z_scipi": 94, "p2x_scipi": 94, "p2y_scipi": 94, "p2z_scipi": 94, "p1x_planar": 94, "p1y_planar": 94, "p1z_planar": 94, "p2x_planar": 94, "p2y_planar": 94, "p2z_planar": 94, "recursive_closest_pair": 94, "tackl": 94, "condens": 94, "squareform": 94, "tril_indic": 94, "triu_indic": 94, "penal": 94, "ri": [94, 98], "rj": 94, "exp": 94, "d_brute_numpi": 94, "d_numpy_scipi": 94, "t_numpi": 94, "1984e": 94, "58794e": 94, "70552e": 94, "11759e": 94, "212432": 94, "168858": 94, "0734278": 94, "19829e": 94, "31323e": 94, "82311e": 94, "49012e": 94, "212263": 94, "16846": 94, "0791856": 94, "18763e": 94, "45058e": 94, "86265e": 94, "201706": 94, "164867": 94, "0711544": 94, "27418e": 94, "72529e": 94, "84288e": 94, "20762": 94, "166005": 94, "0724238": 94, "199751": 94, "16415e": 94, "91038e": 94, "73115e": 94, "202635": 94, "161932": 94, "0772684": 94, "252": 94, "548": 94, "28555e": 94, "202512": 94, "161217": 94, "0726705": 94, "neigh_list_based_target_funct": 94, "dij": 94, "sum_i": 94, "r_j": 94, "df": [94, 99], "sj": 94, "xik": 94, "xjk": 94, "kdi": 94, "subscrib": 94, "kd": 94, "kroneck": 94, "box_constraint": 94, "confin": 94, "box_constraint_with_gradi": 94, "lik": 94, "sum_k": 94, "dg": 94, "dgdxik": 94, "gtol": 94, "target_funct": 94, "returns_gradi": 94, "closest_pair_funct": 94, "minimz": 94, "submodul": 94, "signatur": 94, "meet": 94, "optimizeresult": 94, "raw": [94, 115, 122], "foreign": 95, "_matscipi": 95, "cpython": 95, "destin": 95, "first_neighbour": [95, 112], "get_alpha_period": 97, "generate_3d_structur": 97, "cryst_2d": 97, "nzlayer": 97, "cb": [97, 123, 134], "generate_3d_cubic_111": 97, "central_x": 97, "central_i": 97, "invert_centr": 97, "extended_far_field": [97, 98], "extended_region_i": 97, "exclude_surfac": 97, "sort_typ": 97, "r_theta_z": 97, "rectilinearanisotropiccrack": 98, "Near": 98, "rectilinear": 98, "medium": 98, "k1gsqg": 98, "set_plane_strain": 98, "set_plane_stress": 98, "a11": 98, "a22": 98, "a12": 98, "a16": 98, "a26": 98, "a66": 98, "b11": 98, "b22": 98, "b33": 98, "b12": 98, "b13": 98, "b23": 98, "b16": 98, "b26": 98, "b36": 98, "b66": 98, "ki": 98, "kii": 98, "cyclind": 98, "sig_x": 98, "sig_i": 98, "sig_xi": 98, "rtheta": 98, "invert": [98, 123], "displacement_residu": 98, "ref_x": 98, "ref_i": 98, "minu": [98, 122], "deformation_gradient_residu": 98, "cur": 98, "stress_stat": 98, "crot": 98, "cauchy_born": 98, "displacements_from_cylinder_coordin": 98, "displacements_from_cartesian_coordin": 98, "deformation_gradient_from_cylinder_coordin": 98, "deformation_gradient_from_cartesian_coordin": 98, "crack_tip_posit": 98, "residual_func": 98, "return_residu": 98, "addition": [98, 102, 122, 129], "leastsq": 98, "invok": [98, 122], "crack_tip_position_i": 98, "scale_displac": 98, "old_k": 98, "new_k": 98, "extrapol": [98, 115, 116], "stresses_from_cylinder_coordin": 98, "stresses_from_cartesian_coordin": 98, "xx": [98, 115], "yy": [98, 115], "sinclaircrack": 98, "variable_alpha": 98, "variable_k": 98, "alpha_scal": 98, "k_scale": 98, "riii": 98, "incl_ri_f_alpha": 98, "is_3d": 98, "theta_3d": 98, "cont_k": 98, "precon_recompute_interv": 98, "influenc": 98, "propag": 98, "philo": 98, "mag": 98, "647": 98, "671": 98, "arc_length_continu": 98, "convergence_line_plot": 98, "dfk_dk_approx": 98, "fit_cl": 98, "get_crack_tip_forc": 98, "get_deformation_gradi": 98, "get_dof": 98, "get_k_forc": 98, "get_precon": 98, "get_xdot": 98, "load_cb_model": 98, "rescale_k": 98, "save_cb_model": 98, "set_atom": 98, "set_dof": 98, "set_shiftmask": 98, "unpack": [98, 122], "update_precon": 98, "write_atoms_to_fil": 98, "undeform": 98, "compat": [98, 115, 116, 120, 122], "vari": [98, 122], "arc": 98, "contrib": 98, "f_alpha": 98, "reshap": [98, 112, 122], "u_cl": 98, "cle": 98, "pre": [98, 115], "r_fit": 98, "radial_dist": 98, "update_atom": 98, "use_alpha_3d": 98, "full_array_output": 98, "x2": [98, 121], "xdot1": 98, "ftol": [98, 102], "krylov": 98, "check_grad": 98, "dump_interv": 98, "new_ki": 98, "traj_fil": 98, "x_traj": 98, "h5": [98, 134], "traj_interv": 98, "otf_traj": 98, "ds_max": 98, "ds_min": 98, "ds_aggress": 98, "opt_method": 98, "cos_alpha_min": 98, "pipe_output": 98, "data_queu": 98, "kill_confirm_queu": 98, "allow_alpha_backtrack": 98, "follow_g_contour": 98, "1234": 98, "rzoom": 98, "regions_styl": 98, "atoms_arg": 98, "bonds_arg": 98, "tip_arg": 98, "plot_tip": 98, "strain_err": 98, "seperate_surfac": 98, "num": 98, "isotropic_modei_crack_tip_stress_field": 98, "xy_onli": 98, "singular": 98, "multidimension": [98, 129], "horzont": 98, "ahead": 98, "anticlockwis": 98, "yx": 98, "zz": [98, 115], "xyz_onli": 98, "isotropic_modei_crack_tip_displacement_field": 98, "horizont": 98, "isotropic_modeii_crack_tip_displacement_field": 98, "isotropicstressfield": 98, "sxx0": 98, "syy0": 98, "sxy0": 98, "strain_to_g": 98, "orig_height": 98, "rate": [98, 100], "strip": 98, "current_height": 98, "sigma_yi": 98, "eps_yi": 98, "poission": 98, "eps_xx": 98, "g_to_strain": 98, "get_strain": 98, "origheight": 98, "get_energy_release_r": 98, "get_stress_intensity_factor": 98, "k_i": 98, "youngsmodulu": 98, "poissionratio_yz": 98, "fit_crack_stress_field": 98, "r_rang": 98, "initial_param": 98, "fix_param": 98, "avg_sigma": 98, "avg_decai": 98, "005": 98, "possionratio_yx": 98, "crackpo": 98, "sigma0": 98, "poissonratio_yx": 98, "exit": 98, "annular": 98, "accumul": [98, 112], "attenu": 98, "tau": 98, "characterist": 98, "get_calcul": [98, 115], "atomresolvedstressfield": 98, "find_tip_coordin": 98, "find_tip_broken_bond": 98, "boundary_thick": 98, "boundary_buff": 98, "tip_posit": 98, "midpoint": 98, "depth": [98, 122, 134], "find_tip_stress_field": 98, "plot_stress_field": 98, "firstli": 98, "sigma_": 98, "thin_strip_displacement_i": 98, "vertic": 98, "ramp": 98, "meshgrid": 98, "axhlin": 98, "print_crack_system": 98, "pretti": 98, "crack_direct": 98, "cleavage_plan": 98, "constantstrainr": 98, "delta_strain": 98, "epsilon_yi": 98, "newpo": 98, "apply_strain": 98, "rigid_constraint": 98, "boolean": [98, 104, 118, 122], "transition_width": 99, "elseif": 99, "co": 99, "sin": 99, "dcoordin": 99, "neighb_j": 99, "neighb_rij": 99, "printf": 99, "sum_b_ij": 99, "b_ij": 99, "eb_i": 99, "local_e_p": 99, "n_p": 99, "2dx": 99, "em": 99, "local_e_m": 99, "n_m": 99, "j_integr": 100, "e0": 100, "contour": 100, "li": [100, 115, 123], "shih": 100, "needleman": 100, "eng": 100, "405": 100, "1985": 100, "jin": 100, "yuan": 100, "nanosci": 100, "nanotech": 100, "2099": 100, "triangular_lattice_slab": 101, "find_triangles_2d": 101, "minangl": 101, "5235987755982988": 101, "maxangl": 101, "0943951023931953": 101, "xdim": 101, "ydim": 101, "triangl": [101, 127], "triangular": 101, "130": 101, "517": 101, "555": 101, "get_poisson_ratio": 101, "get_youngs_modulu": 101, "set_reference_cryst": 101, "get_wave_spe": 101, "longitudin": 101, "rayleigh": 101, "get_elastic_moduli": 101, "find_crack_tip": 101, "rightmost": 101, "whose": [101, 122], "set_initial_veloc": 101, "kick": 101, "extend_strip": 101, "cut_at": 102, "surf_direct": 102, "popul": 102, "cell_strain": 102, "path_xlim": 102, "path_ylim": 102, "aren": 102, "unrelax": 102, "vacuum_offset": 102, "vac_po": 102, "bfgslinesearch": 102, "constrain_atom": 102, "relax_kwarg": 102, "bicub": 102, "gather": 102, "get_energy_densit": 102, "identif": [102, 123], "fd_hessian": 103, "numerical_hessian": [103, 113], "bond_length": 104, "turn": 104, "nonperiod": [104, 112], "read_molecules_from_lammps_data": 106, "pathlik": 106, "textiobas": 106, "descriptor": [106, 122], "sort_by_id": 106, "check_legal_nam": 106, "column_s": 106, "image_flag": 106, "save_meti": 107, "glaro": 107, "dtc": 107, "umn": 107, "edu": 107, "gkhome": 107, "read_extended_xyz": [108, 133, 134], "fileobj": 108, "charact": [108, 112, 115, 133], "h2": [108, 133, 134], "molid": [108, 133, 134], "h1": [108, 133, 134], "oplsstructur": [108, 115, 133], "read_block": 108, "reactiv": [108, 115, 126, 132], "parameterfil": 108, "read_cutoff": [108, 133], "23": [108, 122], "cutofflist": [108, 115], "read_parameter_fil": [108, 133, 134], "bond_styl": [108, 115], "angle_styl": [108, 115], "dihedral_styl": [108, 115], "overridden": [108, 120], "002": 108, "dihedr": [108, 111, 115, 132, 133, 134], "ljq": 108, "ljqdata": [108, 115], "bonddata": [108, 115], "anglesdata": [108, 115], "dihedralsdata": [108, 115], "write_lammp": [108, 133, 134], "write_lammps_in": 108, "write_lammps_atom": 108, "write_lammps_definit": 108, "read_lammps_definit": 108, "bond_coeff": 108, "bb": [108, 115], "bond_type_index": 108, "ljq_data": 108, "bond_data": [108, 133, 134], "ang_data": 108, "dih_data": [108, 133], "particle_type_index": 108, "indice": [108, 115], "ang_type_index": 108, "dih_type_index": 108, "read_lammps_data": 108, "filename_lammps_param": 108, "restor": 108, "preced": 108, "update_from_lammps_dump": 108, "savetbl": 109, "dat": 109, "loadtbl": 109, "usecol": 109, "fromfil": [109, 122], "283": 109, "398": 109, "circumst": [109, 122], "colum": 109, "hdr_str": 110, "hdrfmt_str": 110, "datatyp": [110, 122], "numfmt_str": 110, "flatten": [110, 114, 122], "outeveri": 110, "sepeveri": 110, "flush": 110, "get_logfil": 110, "has_logfil": 110, "iteration_finish": 110, "pr": 110, "set_logfil": 110, "set_outeveri": 110, "st": 110, "caller": 110, "hdr": 110, "force_print": 110, "bonds_connect": 111, "bonds_typ": 111, "angles_connect": 111, "angles_typ": 111, "dihedrals_connect": 111, "dihedrals_typ": 111, "arraylik": [111, 112], "nbond": 111, "nangl": 111, "ndihedr": 111, "get_angl": [111, 115, 133, 134], "get_dihedr": [111, 115, 133, 134], "from_atom": 111, "connected_triplet": 112, "triplet_to_numb": 112, "get_pair": 112, "request": [112, 120], "get_triplet": 112, "full_connect": 112, "pair_dist": 112, "make_result": 112, "accepted_quant": 112, "compute_dist": 112, "pair_list": 112, "triplet_list": 112, "nb_pair": 112, "find_triplet_typ": 112, "double_neighbourhood": 112, "reverse_pair_indic": 112, "cutoffneighbourhood": 112, "triplet_typ": 112, "proxim": 112, "sphere": 112, "neighborhood": 112, "molecularneighbourhood": 112, "double_cutoff": 112, "initialz": 112, "double_connect": 112, "complete_connect": 112, "typeoffset": 112, "wrap": [112, 115], "cell_origin": 112, "dot": [112, 117, 122], "shrink": [112, 122], "bincount": [112, 114, 129], "bin_edg": 112, "pdf": 112, "get_volum": [112, 115, 130], "ijdd": [112, 129], "pair_forc": [112, 129], "forces_x": 112, "minlength": [112, 114], "forces_i": 112, "forces_z": 112, "abs_dr": 112, "dynmat": 112, "dde": 112, "dynmat_bsr": 112, "first_i": 112, "dynmat_diag": 112, "e_nc": 112, "d_ncc": 112, "dde_n": 112, "de_n": 112, "ddiag_icc": 112, "abs_dr_p": 112, "tripl": [112, 115, 127], "adress": 112, "occour": 112, "neighour": 112, "ij_t": 112, "ik_t": 112, "jk_t": 112, "ijd": [112, 127, 129], "int32": [112, 122, 129], "first_ij": 112, "find_ij": 112, "slower": 112, "get_jump_indici": 112, "find_indices_of_reversed_pair": 112, "taken": [112, 115, 120], "fact": 112, "overhead": 112, "find_common_neighbour": 112, "i1": [112, 122], "j1": 112, "i2": [112, 122], "itself": [112, 122], "cnl_i1_i2": 112, "cnl_j1": 112, "nl_index_i1_j1": 112, "nl_index_i2_j1": 112, "256": [112, 122], "22016": 112, "1893376": 112, "unique_pairs_i1_i2": 112, "bincount_bin": 112, "return_invers": 112, "65536": 112, "my_sum": 112, "numerical_forc": 113, "minumum": 113, "numerical_stress": 113, "coo_matrix": 113, "numerical_nonaffine_forces_refer": 113, "get_derivative_volum": 113, "get_derivative_wave_vector": 113, "mabincount": [114, 129], "onlin": 114, "twochar": 115, "simplest": 115, "lj_pair": 115, "lj_cutoff": 115, "c_cutoff": 115, "shallow": 115, "fromkei": 115, "pop": 115, "unrepresent": 115, "keyerror": 115, "popitem": 115, "lifo": 115, "setdefault": 115, "lack": 115, "name_value_hash": 115, "cc": 115, "set_nam": 115, "get_nam": 115, "anam": 115, "bname": 115, "name_valu": 115, "get_valu": 115, "add_nam": 115, "cname": 115, "dd": 115, "dname": 115, "fourth": 115, "four": [115, 122, 129], "manipul": [115, 133], "number_of_lattice_vector": 115, "iterimag": 115, "default_map": 115, "br": 115, "Be": 115, "ca": [115, 122, 134], "mg": 115, "set_typ": [115, 133], "get_typ": 115, "set_cutoff": [115, 133, 134], "get_neighbor": 115, "set_atom_data": [115, 133, 134], "atom_data": [115, 133, 134], "pair_modifi": 115, "get_bond": [115, 133, 134], "elsewher": 115, "bond_typ": [115, 133], "a1": [115, 133], "a2": [115, 133], "bond_list": 115, "ang_typ": 115, "conceiv": 115, "ang_list": 115, "ase_objtyp": 115, "interpret": [115, 122], "edit": 115, "gui": 115, "conflict": 115, "undesir": 115, "behaviour": [115, 122], "incompat": [115, 122], "backend": 115, "circumv": 115, "gtk": 115, "euler_rot": 115, "psi": 115, "euler": 115, "mathworld": 115, "wolfram": 115, "eulerangl": 115, "explan": [115, 122], "cop": 115, "cou": 115, "fromdict": 115, "dct": 115, "get_all_dist": 115, "a3": 115, "get_angular_momentum": 115, "angular": 115, "momentum": 115, "unless": [115, 122], "get_atomic_numb": 115, "resembl": 115, "jth": 115, "ith": 115, "get_cell_lengths_and_angl": 115, "get_celldisp": 115, "get_center_of_mass": 115, "get_chemical_formula": 115, "hill": 115, "contract": [115, 116], "chhhoh": 115, "chhhochhh": 115, "ch3och3": 115, "alphabet": 115, "c2h6o": 115, "soohoho": 115, "h2o4": 115, "greatest": [115, 122], "divisor": [115, 122], "full_output": 115, "sometim": [115, 122], "dih_typ": [115, 133], "benzen": 115, "dih_list": 115, "apply_constraint": 115, "ask": 115, "holonom": 115, "triatom": 115, "redistribut": 115, "get_global_number_of_atom": 115, "NOT": 115, "know": 115, "asap": 115, "maintain": [115, 122], "situat": [115, 134], "get_initial_charg": 115, "get_initial_magnetic_mo": 115, "get_kinetic_energi": 115, "kinet": 115, "get_mass": 115, "get_momenta": 115, "get_moments_of_inertia": 115, "princip": 115, "inerti": 115, "amu": 115, "get_number_of_atom": 115, "probabl": [115, 127, 130], "Or": 115, "get_pbc": 115, "wrap_kw": 115, "pretty_transl": 115, "wrap_posit": 115, "get_reciprocal_cel": 115, "commonli": 115, "fourier": [115, 121, 128], "span": 115, "include_ideal_ga": 115, "tradit": 115, "yz": 115, "xz": 115, "get_tag": 115, "get_temperatur": 115, "get_total_energi": 115, "plu": 115, "new_arrai": 115, "rattl": 115, "stdev": 115, "rng": 115, "randomli": 115, "processor": 115, "rotate_cel": 115, "rotate_dihedr": 115, "a4": 115, "set_dihedr": 115, "set_angl": 115, "delet": 115, "set_atomic_numb": 115, "scale_atom": 115, "orthorhomb": 115, "lie": 115, "subspac": 115, "he": 115, "rhombohedr": 115, "77": 115, "set_celldisp": 115, "celldisp": 115, "set_center_of_mass": 115, "entir": [115, 122], "subgroup": 115, "altern": [115, 116, 122, 133], "crude": 115, "ethan": [115, 133], "twist": 115, "hhcchh": 115, "210": 115, "set_dist": 115, "set_initial_charg": 115, "set_initial_magnetic_mo": 115, "collinear": 115, "set_mass": 115, "set_momenta": 115, "honor": 115, "set_scaled_posit": 115, "set_tag": 115, "json": 115, "databas": 115, "nx3": 115, "ode12r": 116, "maxtol": 116, "rtol": 116, "hmin": 116, "apply_precon": 116, "od": 116, "ncflex": 116, "makri": 116, "ortner": 116, "150": 116, "094109": 116, "1063": 116, "5064465": 116, "drive": 116, "ode12": 116, "reisdual": 116, "exce": 116, "suffici": 116, "growth": 116, "seem": 116, "apply_precondition": 116, "hessianprecon": 117, "c_stab": 117, "move_tol": 117, "old_posit": 117, "vdot": 117, "make_precon": 117, "examin": 117, "reiniti": 117, "recalcul": 117, "ie": 117, "csr_matrix": 117, "BE": 117, "awar": 117, "pdot": 117, "asarrai": 117, "precon_forc": 117, "128": 117, "_p": 117, "px": 117, "moser": 118, "mosel": 118, "tribol": 118, "2010": 118, "get_m_gamma": 118, "dissip": 118, "fixeddamp": 118, "get_a": 118, "notimplementederror": [118, 134], "adjust_momenta": 118, "adjust_potential_energi": 118, "job": [118, 120], "filehandl": 118, "logfn": 118, "t_thermostat": 118, "instantantan": 118, "p_top": 118, "p_bottom": 118, "ang": 118, "acceler": 118, "tau_top": 118, "tau_bottom": 118, "ring_statist": [119, 131], "maxlength": [119, 131], "shortest": [119, 131], "franzblau": [119, 131], "4925": 119, "ringstat": 119, "pack_atoms_to_reftraj_str": 120, "pack_atoms_to_xyz_str": 120, "unpack_reftraj_str_to_atom": 120, "pack_results_to_reftraj_output_str": 120, "unpack_reftraj_output_str_to_result": 120, "unpack_xyz_str_to_result": 120, "atomsrequesthandl": 120, "client_address": 120, "server": 120, "streamrequesthandl": 120, "disable_nagle_algorithm": 120, "rbufsiz": 120, "wbufsiz": 120, "atomsserversync": 120, "server_address": 120, "requesthandlerclass": 120, "client": 120, "bind_and_activ": 120, "max_attempt": 120, "bgq": 120, "tcpserver": 120, "get_result": 120, "join_al": 120, "put": [120, 122], "shutdown_cli": 120, "allow_reuse_address": 120, "request_queue_s": 120, "server_activ": 120, "shutdown": 120, "serve_forev": 120, "thread": 120, "deadlock": 120, "client_id": 120, "force_restart": 120, "address_famili": 120, "close_request": 120, "clean": 120, "fileno": [120, 122], "socket": 120, "selector": 120, "finish_request": 120, "instanti": 120, "get_request": 120, "handle_error": 120, "traceback": [120, 122], "handle_request": 120, "possibli": [120, 122], "handle_timeout": 120, "arriv": 120, "forkingmixin": 120, "process_request": 120, "threadingmixin": 120, "poll_interv": 120, "poll": 120, "task": [120, 133], "server_bind": 120, "bind": 120, "server_clos": 120, "service_act": 120, "mixin": 120, "shutdown_request": 120, "socket_typ": 120, "verify_request": 120, "verifi": 120, "atomsserverasync": 120, "asynchron": 120, "atomsserv": 120, "block_on_clos": 120, "daemon_thread": 120, "process_request_thread": 120, "baseserv": 120, "ex": 120, "env": 120, "npj": 120, "ppn": 120, "jobnam": 120, "rundir": 120, "reftraj": 120, "parmod": 120, "mpirun": 120, "mpirun_arg": 120, "max_pos_diff": 120, "max_cell_diff": 120, "write_input_fil": 120, "extra_arg": 120, "wait": 120, "waits_thread": 120, "isal": 120, "wait_for_shutdown": 120, "start_or_restart": 120, "queu": 120, "client_timeout": 120, "grace": 120, "aliv": 120, "sigterm": 120, "signal": 120, "sent": 120, "sigkil": 120, "input_q": 120, "preprocess": 120, "schedul": 120, "submit": 120, "queue": 120, "is_compat": 120, "inplac": [120, 122], "first_tim": 120, "postprocess": 120, "post": 120, "overrriden": 120, "old_at": 120, "new_at": 120, "quipclient": 120, "param_fil": 120, "quip": [120, 122], "commun": 120, "qmclient": 120, "vaspclient": 120, "vasp_arg": 120, "vasp": 120, "poscar": 120, "incar": 120, "potcar": 120, "kpoint": 120, "communicatin": 120, "castepcli": 120, "castep_arg": 120, "castep": 120, "socketcalcul": 120, "ip": 120, "port": 120, "remot": 120, "engin": 120, "synchron": 120, "n_atom": 121, "cell_vector": 121, "y1": 121, "z1": 121, "y2": 121, "z2": 121, "x3": 121, "y3": 121, "z3": 121, "fft": [121, 130], "proport": 121, "nomalis": 121, "betrag": 121, "max_rad": 121, "length_cutoff": 121, "output_grids": 121, "fft_cutoff": 121, "approx_fft_grids": [121, 130], "spatial_correlation_function_near": 121, "gridsiz": 121, "gcd": 122, "millerindex": 122, "211": 122, "bracket": 122, "denot": 122, "angle_between": 122, "transpos": 122, "memori": 122, "ctype": 122, "simplifi": [122, 133], "flat": 122, "imaginari": 122, "items": 122, "byte": 122, "nbyte": 122, "consum": [122, 133], "stride": 122, "travers": 122, "as3": 122, "as4": 122, "cosin": 122, "hat": 122, "plane_spac": 122, "direction_famili": 122, "plane_famili": 122, "all_bracket": 122, "trail": 122, "112b": 122, "denomin": 122, "keepdim": 122, "argmax": 122, "argmin": 122, "argpartit": 122, "kth": 122, "introselect": 122, "partit": 122, "argsort": 122, "cast": 122, "unsaf": 122, "subok": 122, "typecod": 122, "fortran": 122, "contigu": 122, "same_kind": 122, "backward": 122, "float32": 122, "convers": 122, "newli": 122, "alloc": 122, "satisfi": 122, "arr_t": 122, "complexwarn": 122, "byteswap": 122, "endian": 122, "big": 122, "8755": 122, "int16": 122, "0x1": 122, "0x100": 122, "0x2233": 122, "13090": 122, "0x3322": 122, "ceg": 122, "fac": 122, "s3": 122, "newbyteord": 122, "uint8": 122, "clip": 122, "compress": 122, "conj": 122, "copyto": 122, "prefer": 122, "c_contigu": 122, "among": 122, "ctypeslib": 122, "guid": 122, "omit": 122, "undocu": 122, "privat": 122, "_ctype": 122, "pointer": 122, "troubl": 122, "crash": 122, "bewar": 122, "_array_interface_": 122, "unlik": 122, "data_a": 122, "c_void_p": 122, "dealloc": 122, "spelt": 122, "basetyp": 122, "platform": 122, "c_intp": 122, "c_int": 122, "c_long": 122, "c_longlong": 122, "obj": 122, "_as_parameter_": 122, "perhap": 122, "c_doubl": 122, "shape_a": 122, "c_short": 122, "strides_a": 122, "someth": 122, "as_paramet": 122, "31962608": 122, "c_uint32": 122, "__main__": 122, "lp_c_uint": 122, "0x7ff2fc1fc200": 122, "c_uint": 122, "c_uint64": 122, "c_ulong": 122, "4294967296": 122, "_intern": 122, "c_long_array_2": 122, "0x7ff2fc1fce60": 122, "0x7ff2fc1ff320": 122, "cumprod": 122, "cumul": 122, "cumsum": 122, "axis1": 122, "axis2": 122, "arr": 122, "discourag": 122, "pickl": 122, "behav": 122, "rare": 122, "f_contigu": 122, "owndata": 122, "borrow": 122, "lock": 122, "opposit": 122, "alter": 122, "appropri": [122, 133], "hardwar": 122, "writebackifcopi": 122, "pyarray_resolvewritebackifcopi": 122, "fnc": 122, "carrai": 122, "farrai": 122, "lowercas": 122, "setflag": 122, "truli": 122, "ultim": 122, "owner": 122, "simultan": 122, "flatit": 122, "collaps": 122, "ravel": 122, "getfield": 122, "complex128": 122, "32": 122, "0j": 122, "70710678": 122, "int_typ": 122, "nd": 122, "longdoubl": 122, "clongdoubl": 122, "lose": 122, "void": 122, "123": 122, "randint": 122, "itemset": 122, "complic": 122, "amax": 122, "amin": 122, "getsizeof": 122, "parent": 122, "480": 122, "new_ord": 122, "newbytord": 122, "nativ": 122, "byteord": 122, "new_arr": 122, "rearrang": 122, "smaller": [122, 127], "greater": 122, "undefin": 122, "unspecifi": 122, "ti": 122, "indirect": 122, "ptp": 122, "peak": 122, "new_shap": 122, "refcheck": 122, "pypi": 122, "systemerror": 122, "bug": 122, "realloc": 122, "consecut": 122, "enlarg": 122, "doesn": 122, "referenc": 122, "prevent": 122, "searchsort": 122, "sorter": 122, "setfield": 122, "000": 122, "323": 122, "uic": 122, "never": 122, "unpickl": 122, "stdin": 122, "unchang": 122, "attributeerror": 122, "getter": 122, "int_": 122, "overflow": 122, "quicksort": 122, "mergesort": 122, "heapsort": 122, "timsort": 122, "retain": 122, "s1": 122, "i8": 122, "squeez": 122, "std": 122, "ddof": 122, "stride_trick": 122, "as_strid": 122, "safer": 122, "imagin": 122, "tell": 122, "224": 122, "1344": 122, "813": 122, "swapax": 122, "interchang": 122, "tobyt": 122, "exhibit": 122, "frombuff": 122, "u2": 122, "x00": 122, "x01": 122, "x02": 122, "x03": 122, "tofil": 122, "fid": 122, "sep": 122, "recov": 122, "lost": 122, "archiv": 122, "overcom": 122, "gzipfil": 122, "bytesio": 122, "tolist": 122, "nest": 122, "recreat": 122, "uint32": 122, "a_list": 122, "a_tolist": 122, "recurs": 122, "0d": 122, "typeerror": 122, "tostr": 122, "despit": 122, "trace": 122, "var": 122, "float_": 122, "omiss": 122, "some_dtyp": 122, "reinterpret": 122, "ndarray_subclass": 122, "regular": 122, "int8": 122, "513": 122, "xv": 122, "recarrai": 122, "770": 122, "3340": 122, "3854": 122, "1284": 122, "1798": 122, "4368": 122, "4882": 122, "2312": 122, "2826": 122, "5396": 122, "5910": 122, "millerplan": 122, "millerdirect": 122, "ijk": 122, "lmn": 122, "radian": [122, 127], "make_unit_slab": 122, "quippi": 122, "unit_slab": 122, "libatom": 122, "blob": 122, "src": 122, "f95": 122, "primit": 122, "surfacereconstruct": 123, "surf_dir": 123, "multilattic": 123, "reconstruct": 123, "map_surfac": 123, "invert_dir": 123, "beneath": 123, "meaning": 123, "cleavag": 123, "essenti": 123, "mirror": 123, "diad": 123, "identify_lay": 123, "surface_coord": 123, "xlim": [123, 127, 130], "ylim": [123, 130], "zlim": 123, "search_dir": 123, "atoms_for_cb": 123, "layer_mask_set": 123, "nlayer": 123, "apply_surface_shift": 123, "map_pandey_111": 123, "pandei": 123, "identify_pandey_lay": 123, "frame_dir": 123, "apply_pandey_111": 123, "map_si_110_3x1": 123, "180": [123, 134], "identify_si_110_lay": 123, "apply_si_110": 123, "validate_cubic_cel": 124, "complete_basi": 124, "v1": 124, "v2": 124, "nmax": 124, "v3": 124, "primari": 124, "secondari": 124, "unsuccess": 124, "orthonorm": 124, "scienc": [125, 126], "toolbox": [125, 126], "environ": [125, 126, 134], "explor": [125, 126], "n_i": 127, "arcco": 127, "cdot": [127, 130], "heavisid": 127, "sum_j": 127, "angle_distribut": 127, "max_bond_dist": 127, "capit": 127, "bin_spac": 127, "nb_angl": 127, "xlabel": [127, 130, 131], "ylabel": [127, 130, 131], "141592653589793": 127, "coo": 129, "h2o": [129, 134], "oxygen": 129, "96856502": 129, "526478": 129, "ship": 129, "attract": 129, "propto": 129, "dispers": 129, "numpy_trick": 129, "33444449": 129, "54138009": 129, "66722225": 129, "g_2": 130, "langl": 130, "rangl": 130, "overal": 130, "ensembl": 130, "straightforwardli": 130, "instruct": 130, "broaden": 130, "mean_dist": 130, "mean_dens": 130, "shell_volum": 130, "tail": 130, "spatial_correlation_funct": 130, "topolog": 131, "statist": 131, "backtrack": 131, "opl": [133, 134], "c2h6": 133, "tediou": 133, "greatli": 133, "angle_typ": 133, "0028": 133, "0013": 133, "115": 133, "016": 133, "angle_data": [133, 134], "especi": 133, "human": 133, "lubric": 134, "reichenbach": 134, "ac_h2o": 134, "oh": 134, "serpar": 134, "facili": 134, "parameters_reichenbach2023": 134, "strict": 134, "soon": 134, "hybridis": 134, "passiv": 134, "regard": 134, "cd": 134, "sp2": 134, "contact": 134, "h_surface_region": 134, "zmid_c": 134, "mask_c": 134, "mask_c_lower_slab": 134, "logical_and": 134, "mask_c_upper_slab": 134, "zmax_c_lower_slab": 134, "zmin_c_upper_slab": 134, "ca_region_lower_slab": 134, "ca_region_upper_slab": 134, "atom_in_ca_region": 134, "zpo": 134, "neigh": 134, "nO": 134, "nh": 134, "sp3": 134, "c6": 134, "c5": 134, "n_sp3neigh": 134, "neighs2": 134, "cy": 134, "cz": 134, "cx": 134, "o2": 134, "o1": 134, "ow": 134, "h4": 134, "hw": 134, "molid1": 134, "63": 134, "molid2": 134, "67": 134, "molid_h2o": 134, "pair_styl": 134, "parameter_fil": 134, "parameter_data": 134, "dihed_data": 134}, "objects": {"": [[25, 0, 0, "-", "matscipy"]], "matscipy": [[26, 0, 0, "-", "angle_distribution"], [27, 0, 0, "-", "atomic_strain"], [28, 0, 0, "-", "calculators"], [69, 0, 0, "-", "cauchy_born"], [70, 0, 0, "-", "cli"], [85, 0, 0, "-", "deformation"], [86, 0, 0, "-", "dislocation"], [87, 0, 0, "-", "drift"], [88, 0, 0, "-", "elasticity"], [89, 0, 0, "-", "electrochemistry"], [95, 0, 0, "-", "ffi"], [96, 0, 0, "-", "fracture_mechanics"], [102, 0, 0, "-", "gamma_surface"], [25, 1, 1, "", "has_parameter"], [103, 0, 0, "-", "hessian_finite_differences"], [104, 0, 0, "-", "hydrogenate"], [105, 0, 0, "-", "io"], [110, 0, 0, "-", "logger"], [111, 0, 0, "-", "molecules"], [112, 0, 0, "-", "neighbours"], [113, 0, 0, "-", "numerical"], [114, 0, 0, "-", "numpy_tricks"], [115, 0, 0, "-", "opls"], [116, 0, 0, "-", "optimize"], [25, 1, 1, "", "parameter"], [117, 0, 0, "-", "precon"], [118, 0, 0, "-", "pressurecoupling"], [119, 0, 0, "-", "rings"], [120, 0, 0, "-", "socketcalc"], [121, 0, 0, "-", "spatial_correlation_function"], [122, 0, 0, "-", "surface"], [123, 0, 0, "-", "surface_reconstruction"], [124, 0, 0, "-", "utils"]], "matscipy.angle_distribution": [[26, 1, 1, "", "angle_distribution"]], "matscipy.atomic_strain": [[27, 1, 1, "", "array_inverse"], [27, 1, 1, "", "atomic_strain"], [27, 1, 1, "", "get_D_square_min"], [27, 1, 1, "", "get_XIJ"], [27, 1, 1, "", "get_YIJ"], [27, 1, 1, "", "get_delta_plus_epsilon"], [27, 1, 1, "", "get_delta_plus_epsilon_dgesv"]], "matscipy.calculators": [[29, 0, 0, "-", "calculator"], [30, 0, 0, "-", "committee"], [34, 0, 0, "-", "eam"], [38, 0, 0, "-", "ewald"], [40, 0, 0, "-", "fitting"], [41, 0, 0, "-", "manybody"], [50, 0, 0, "-", "mcfm"], [64, 0, 0, "-", "pair_potential"], [66, 0, 0, "-", "polydisperse"], [68, 0, 0, "-", "supercell_calculator"]], "matscipy.calculators.calculator": [[29, 2, 1, "", "MatscipyCalculator"]], "matscipy.calculators.calculator.MatscipyCalculator": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "band_structure"], [29, 3, 1, "", "calculate"], [29, 3, 1, "", "calculate_numerical_forces"], [29, 3, 1, "", "calculate_numerical_stress"], [29, 3, 1, "", "calculate_properties"], [29, 3, 1, "", "calculation_required"], [29, 3, 1, "", "check_state"], [29, 4, 1, "", "default_parameters"], [29, 5, 1, "", "directory"], [29, 4, 1, "", "discard_results_on_any_change"], [29, 3, 1, "", "export_properties"], [29, 3, 1, "", "get_atoms"], [29, 3, 1, "", "get_birch_coefficients"], [29, 3, 1, "", "get_born_elastic_constants"], [29, 3, 1, "", "get_charges"], [29, 3, 1, "", "get_default_parameters"], [29, 3, 1, "", "get_dipole_moment"], [29, 3, 1, "", "get_dynamical_matrix"], [29, 3, 1, "", "get_elastic_constants"], [29, 3, 1, "", "get_forces"], [29, 3, 1, "", "get_hessian"], [29, 3, 1, "", "get_magnetic_moment"], [29, 3, 1, "", "get_magnetic_moments"], [29, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [29, 3, 1, "", "get_nonaffine_forces"], [29, 3, 1, "", "get_numerical_non_affine_forces"], [29, 3, 1, "", "get_potential_energies"], [29, 3, 1, "", "get_potential_energy"], [29, 3, 1, "", "get_property"], [29, 3, 1, "", "get_stress"], [29, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [29, 3, 1, "", "get_stresses"], [29, 4, 1, "", "ignored_changes"], [29, 4, 1, "", "implemented_properties"], [29, 5, 1, "", "label"], [29, 3, 1, "", "read"], [29, 3, 1, "", "read_atoms"], [29, 3, 1, "", "reset"], [29, 3, 1, "", "set"], [29, 3, 1, "", "set_label"], [29, 3, 1, "", "todict"]], "matscipy.calculators.committee": [[31, 0, 0, "-", "committee"], [32, 0, 0, "-", "log"], [33, 0, 0, "-", "utils"]], "matscipy.calculators.committee.committee": [[31, 2, 1, "", "Committee"], [31, 2, 1, "", "CommitteeMember"], [31, 2, 1, "", "CommitteeUncertainty"]], "matscipy.calculators.committee.committee.Committee": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "add_member"], [31, 5, 1, "", "alphas"], [31, 5, 1, "", "atoms"], [31, 3, 1, "", "calibrate"], [31, 5, 1, "", "calibrated_for"], [31, 5, 1, "", "id_counter"], [31, 5, 1, "", "id_to_atoms"], [31, 5, 1, "", "ids"], [31, 3, 1, "", "is_calibrated_for"], [31, 5, 1, "", "members"], [31, 5, 1, "", "number"], [31, 3, 1, "", "scale_uncertainty"], [31, 3, 1, "", "set_internal_validation_set"], [31, 5, 1, "", "validation_set"]], "matscipy.calculators.committee.committee.CommitteeMember": [[31, 3, 1, "", "__init__"], [31, 5, 1, "", "atoms"], [31, 5, 1, "", "calculator"], [31, 5, 1, "", "filename"], [31, 5, 1, "", "ids"], [31, 3, 1, "", "is_sample_in_atoms"], [31, 3, 1, "", "set_training_data"]], "matscipy.calculators.committee.committee.CommitteeUncertainty": [[31, 3, 1, "", "__init__"], [31, 3, 1, "", "band_structure"], [31, 3, 1, "", "calculate"], [31, 3, 1, "", "calculate_numerical_forces"], [31, 3, 1, "", "calculate_numerical_stress"], [31, 3, 1, "", "calculate_properties"], [31, 3, 1, "", "calculation_required"], [31, 3, 1, "", "check_state"], [31, 4, 1, "", "default_parameters"], [31, 5, 1, "", "directory"], [31, 4, 1, "", "discard_results_on_any_change"], [31, 3, 1, "", "export_properties"], [31, 3, 1, "", "get_atoms"], [31, 3, 1, "", "get_charges"], [31, 3, 1, "", "get_default_parameters"], [31, 3, 1, "", "get_dipole_moment"], [31, 3, 1, "", "get_forces"], [31, 3, 1, "", "get_magnetic_moment"], [31, 3, 1, "", "get_magnetic_moments"], [31, 3, 1, "", "get_potential_energies"], [31, 3, 1, "", "get_potential_energy"], [31, 3, 1, "", "get_property"], [31, 3, 1, "", "get_stress"], [31, 3, 1, "", "get_stresses"], [31, 4, 1, "", "ignored_changes"], [31, 4, 1, "", "implemented_properties"], [31, 5, 1, "", "label"], [31, 3, 1, "", "read"], [31, 3, 1, "", "read_atoms"], [31, 3, 1, "", "reset"], [31, 3, 1, "", "set"], [31, 3, 1, "", "set_label"], [31, 3, 1, "", "todict"]], "matscipy.calculators.committee.log": [[32, 1, 1, "", "create_logger"], [32, 1, 1, "", "set_logging"]], "matscipy.calculators.committee.utils": [[33, 1, 1, "", "subsample"]], "matscipy.calculators.eam": [[35, 0, 0, "-", "average_atom"], [36, 0, 0, "-", "calculator"], [37, 0, 0, "-", "io"]], "matscipy.calculators.eam.average_atom": [[35, 1, 1, "", "average_potential"]], "matscipy.calculators.eam.calculator": [[36, 2, 1, "", "EAM"]], "matscipy.calculators.eam.calculator.EAM": [[36, 3, 1, "", "__init__"], [36, 3, 1, "", "band_structure"], [36, 3, 1, "", "calculate"], [36, 3, 1, "", "calculate_hessian_matrix"], [36, 3, 1, "", "calculate_numerical_forces"], [36, 3, 1, "", "calculate_numerical_stress"], [36, 3, 1, "", "calculate_properties"], [36, 3, 1, "", "calculation_required"], [36, 3, 1, "", "check_state"], [36, 5, 1, "", "cutoff"], [36, 4, 1, "", "default_parameters"], [36, 5, 1, "", "directory"], [36, 4, 1, "", "discard_results_on_any_change"], [36, 3, 1, "", "energy_virial_and_forces"], [36, 3, 1, "", "export_properties"], [36, 3, 1, "", "get_atoms"], [36, 3, 1, "", "get_birch_coefficients"], [36, 3, 1, "", "get_born_elastic_constants"], [36, 3, 1, "", "get_charges"], [36, 3, 1, "", "get_default_parameters"], [36, 3, 1, "", "get_dipole_moment"], [36, 3, 1, "", "get_dynamical_matrix"], [36, 3, 1, "", "get_elastic_constants"], [36, 3, 1, "", "get_forces"], [36, 3, 1, "", "get_hessian"], [36, 3, 1, "", "get_magnetic_moment"], [36, 3, 1, "", "get_magnetic_moments"], [36, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [36, 3, 1, "", "get_nonaffine_forces"], [36, 3, 1, "", "get_numerical_non_affine_forces"], [36, 3, 1, "", "get_potential_energies"], [36, 3, 1, "", "get_potential_energy"], [36, 3, 1, "", "get_property"], [36, 3, 1, "", "get_stress"], [36, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [36, 3, 1, "", "get_stresses"], [36, 4, 1, "", "ignored_changes"], [36, 4, 1, "", "implemented_properties"], [36, 5, 1, "", "label"], [36, 4, 1, "", "name"], [36, 3, 1, "", "read"], [36, 3, 1, "", "read_atoms"], [36, 3, 1, "", "reset"], [36, 3, 1, "", "set"], [36, 3, 1, "", "set_label"], [36, 3, 1, "", "todict"]], "matscipy.calculators.eam.io": [[37, 2, 1, "", "EAMParameters"], [37, 1, 1, "", "mix_eam"], [37, 1, 1, "", "read_eam"], [37, 1, 1, "", "write_eam"]], "matscipy.calculators.eam.io.EAMParameters": [[37, 4, 1, "", "atomic_masses"], [37, 4, 1, "", "atomic_numbers"], [37, 3, 1, "", "count"], [37, 4, 1, "", "crystal_structures"], [37, 4, 1, "", "cutoff"], [37, 4, 1, "", "density_grid_spacing"], [37, 4, 1, "", "distance_grid_spacing"], [37, 3, 1, "", "index"], [37, 4, 1, "", "lattice_constants"], [37, 4, 1, "", "number_of_density_grid_points"], [37, 4, 1, "", "number_of_distance_grid_points"], [37, 4, 1, "", "symbols"]], "matscipy.calculators.ewald": [[39, 0, 0, "-", "calculator"]], "matscipy.calculators.ewald.calculator": [[39, 2, 1, "", "Ewald"], [39, 2, 1, "", "EwaldShortRange"]], "matscipy.calculators.ewald.calculator.Ewald": [[39, 3, 1, "", "__init__"], [39, 3, 1, "", "allowed_wave_vectors"], [39, 5, 1, "", "alpha"], [39, 3, 1, "", "band_structure"], [39, 3, 1, "", "calculate"], [39, 3, 1, "", "calculate_numerical_forces"], [39, 3, 1, "", "calculate_numerical_stress"], [39, 3, 1, "", "calculate_properties"], [39, 3, 1, "", "calculation_required"], [39, 3, 1, "", "check_state"], [39, 4, 1, "", "default_parameters"], [39, 3, 1, "", "determine_alpha"], [39, 3, 1, "", "determine_kc"], [39, 3, 1, "", "determine_nk"], [39, 5, 1, "", "directory"], [39, 4, 1, "", "discard_results_on_any_change"], [39, 3, 1, "", "export_properties"], [39, 3, 1, "", "first_derivative_kspace"], [39, 3, 1, "", "get_atoms"], [39, 3, 1, "", "get_birch_coefficients"], [39, 3, 1, "", "get_born_elastic_constants"], [39, 3, 1, "", "get_charges"], [39, 3, 1, "", "get_default_parameters"], [39, 3, 1, "", "get_dipole_moment"], [39, 3, 1, "", "get_dynamical_matrix"], [39, 3, 1, "", "get_elastic_constants"], [39, 3, 1, "", "get_forces"], [39, 3, 1, "", "get_hessian"], [39, 3, 1, "", "get_magnetic_moment"], [39, 3, 1, "", "get_magnetic_moments"], [39, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [39, 3, 1, "", "get_nonaffine_forces"], [39, 3, 1, "", "get_numerical_non_affine_forces"], [39, 3, 1, "", "get_potential_energies"], [39, 3, 1, "", "get_potential_energy"], [39, 3, 1, "", "get_property"], [39, 3, 1, "", "get_stress"], [39, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [39, 3, 1, "", "get_stresses"], [39, 4, 1, "", "ignored_changes"], [39, 4, 1, "", "implemented_properties"], [39, 3, 1, "", "kspace_energy"], [39, 3, 1, "", "kspace_properties"], [39, 5, 1, "", "label"], [39, 4, 1, "", "name"], [39, 3, 1, "", "read"], [39, 3, 1, "", "read_atoms"], [39, 3, 1, "", "reset"], [39, 3, 1, "", "reset_kspace"], [39, 3, 1, "", "rms_kspace"], [39, 3, 1, "", "rms_rspace"], [39, 3, 1, "", "self_energy"], [39, 3, 1, "", "set"], [39, 3, 1, "", "set_label"], [39, 5, 1, "", "short_range"], [39, 3, 1, "", "stress_kspace"], [39, 3, 1, "", "todict"]], "matscipy.calculators.ewald.calculator.EwaldShortRange": [[39, 3, 1, "", "__init__"], [39, 5, 1, "", "cutoff"], [39, 3, 1, "", "derivative"], [39, 3, 1, "", "first_derivative"], [39, 3, 1, "", "get_cutoff"], [39, 3, 1, "", "second_derivative"]], "matscipy.calculators.fitting": [[40, 2, 1, "", "CombinedFit"], [40, 2, 1, "", "Fit"], [40, 2, 1, "", "FitB2"], [40, 2, 1, "", "FitBCC"], [40, 2, 1, "", "FitCubicCrystal"], [40, 2, 1, "", "FitDiamond"], [40, 2, 1, "", "FitDiamond100"], [40, 2, 1, "", "FitDiamond110"], [40, 2, 1, "", "FitDiamond111"], [40, 2, 1, "", "FitDimer"], [40, 2, 1, "", "FitFCC"], [40, 2, 1, "", "FitGraphene"], [40, 2, 1, "", "FitGraphite"], [40, 2, 1, "", "FitHexagonalCrystal"], [40, 2, 1, "", "FitL1_0"], [40, 2, 1, "", "FitL1_2"], [40, 2, 1, "", "FitSC"], [40, 2, 1, "", "FitSinglePoint"], [40, 2, 1, "", "FitSurface"], [40, 2, 1, "", "FitTetragonalCrystal"], [40, 2, 1, "", "Parameters"], [40, 2, 1, "", "Penalty"], [40, 2, 1, "", "RotatingFit"]], "matscipy.calculators.fitting.CombinedFit": [[40, 3, 1, "", "__init__"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "targets"]], "matscipy.calculators.fitting.Fit": [[40, 3, 1, "", "__init__"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.FitB2": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C11"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_Cp"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitBCC": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C11"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_Cp"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitCubicCrystal": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C11"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_Cp"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C11"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_Cp"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond100": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 3, 1, "", "get_surface_energy"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_surface"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "surfstr"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond110": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 3, 1, "", "get_surface_energy"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_surface"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "surfstr"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDiamond111": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 3, 1, "", "get_surface_energy"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_surface"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "surfstr"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitDimer": [[40, 4, 1, "", "D0"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_distance"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_dimer"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "r0"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_D0"], [40, 4, 1, "", "w_r0"]], "matscipy.calculators.fitting.FitFCC": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C11"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_Cp"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphene": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "c0"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitGraphite": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "c0"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitHexagonalCrystal": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "c0"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitL1_0": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "c0"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C33"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_C66"], [40, 3, 1, "", "get_D1"], [40, 3, 1, "", "get_D2"], [40, 3, 1, "", "get_D4"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"], [40, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.FitL1_2": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C11"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_Cp"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSC": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "crystalstr"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C11"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_Cp"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitSinglePoint": [[40, 3, 1, "", "__init__"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "energy"], [40, 4, 1, "", "forces"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "stress"], [40, 4, 1, "", "w_energy"], [40, 4, 1, "", "w_forces"], [40, 4, 1, "", "w_stress"]], "matscipy.calculators.fitting.FitSurface": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 3, 1, "", "get_surface_energy"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"]], "matscipy.calculators.fitting.FitTetragonalCrystal": [[40, 4, 1, "", "Ec"], [40, 3, 1, "", "__init__"], [40, 4, 1, "", "a0"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "c0"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "crystal"], [40, 4, 1, "", "fmax"], [40, 3, 1, "", "get_C33"], [40, 3, 1, "", "get_C44"], [40, 3, 1, "", "get_C66"], [40, 3, 1, "", "get_D1"], [40, 3, 1, "", "get_D2"], [40, 3, 1, "", "get_D4"], [40, 3, 1, "", "get_SFE"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_lattice_constant"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "new_bulk"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"], [40, 4, 1, "", "w_Ec"], [40, 4, 1, "", "w_a0"], [40, 4, 1, "", "w_c0"]], "matscipy.calculators.fitting.Parameters": [[40, 3, 1, "", "__init__"], [40, 4, 1, "", "constant"], [40, 4, 1, "", "default"], [40, 4, 1, "", "derived"], [40, 3, 1, "", "get"], [40, 3, 1, "", "get_array"], [40, 3, 1, "", "get_constant"], [40, 3, 1, "", "get_derived"], [40, 3, 1, "", "get_dict"], [40, 3, 1, "", "get_lower_bounds"], [40, 3, 1, "", "get_upper_bounds"], [40, 3, 1, "", "get_variable"], [40, 4, 1, "", "hidden"], [40, 3, 1, "", "in_range"], [40, 4, 1, "", "parameters"], [40, 4, 1, "", "range_mapping"], [40, 4, 1, "", "ranges"], [40, 3, 1, "", "set"], [40, 3, 1, "", "set_array"], [40, 3, 1, "", "set_constant"], [40, 3, 1, "", "set_derived"], [40, 3, 1, "", "set_dict"], [40, 3, 1, "", "set_range_derived"], [40, 3, 1, "", "set_variable"], [40, 4, 1, "", "variable"]], "matscipy.calculators.fitting.Penalty": [[40, 3, 1, "", "__init__"], [40, 4, 1, "", "atoms"], [40, 4, 1, "", "calc"], [40, 4, 1, "", "cost_history"], [40, 4, 1, "", "func"], [40, 3, 1, "", "get_cohesive_energy"], [40, 3, 1, "", "get_cost_function"], [40, 3, 1, "", "get_cost_history"], [40, 3, 1, "", "get_parameters_at_minimal_cost"], [40, 3, 1, "", "get_potential_energy"], [40, 3, 1, "", "get_residuals"], [40, 3, 1, "", "get_residuals_history"], [40, 3, 1, "", "get_square_residuals"], [40, 4, 1, "", "minimal_cost"], [40, 3, 1, "", "optimize"], [40, 3, 1, "", "optimize_anneal"], [40, 3, 1, "", "optimize_brute"], [40, 3, 1, "", "optimize_leastsq"], [40, 3, 1, "", "optimize_openopt"], [40, 4, 1, "", "par"], [40, 4, 1, "", "par_at_minimal_cost"], [40, 4, 1, "", "residuals_history"], [40, 3, 1, "", "set_calculator"], [40, 3, 1, "", "set_calculator_class"], [40, 3, 1, "", "set_parameters"], [40, 3, 1, "", "set_parameters_from_array"]], "matscipy.calculators.fitting.RotatingFit": [[40, 3, 1, "", "__init__"], [40, 3, 1, "", "optimize"], [40, 4, 1, "", "par"], [40, 4, 1, "", "targets"]], "matscipy.calculators.manybody": [[42, 0, 0, "-", "calculator"], [43, 0, 0, "-", "explicit_forms"], [48, 0, 0, "-", "newmb"], [49, 0, 0, "-", "potentials"]], "matscipy.calculators.manybody.calculator": [[42, 2, 1, "", "Manybody"], [42, 2, 1, "", "NiceManybody"]], "matscipy.calculators.manybody.calculator.Manybody": [[42, 3, 1, "", "__init__"], [42, 3, 1, "", "band_structure"], [42, 3, 1, "", "calculate"], [42, 3, 1, "", "calculate_numerical_forces"], [42, 3, 1, "", "calculate_numerical_stress"], [42, 3, 1, "", "calculate_properties"], [42, 3, 1, "", "calculation_required"], [42, 3, 1, "", "check_state"], [42, 4, 1, "", "default_parameters"], [42, 5, 1, "", "directory"], [42, 4, 1, "", "discard_results_on_any_change"], [42, 3, 1, "", "export_properties"], [42, 3, 1, "", "get_atoms"], [42, 3, 1, "", "get_birch_coefficients"], [42, 3, 1, "", "get_born_elastic_constants"], [42, 3, 1, "", "get_charges"], [42, 3, 1, "", "get_cutoff"], [42, 3, 1, "", "get_default_parameters"], [42, 3, 1, "", "get_dipole_moment"], [42, 3, 1, "", "get_dynamical_matrix"], [42, 3, 1, "", "get_elastic_constants"], [42, 3, 1, "", "get_forces"], [42, 3, 1, "", "get_hessian"], [42, 3, 1, "", "get_hessian_from_second_derivative"], [42, 3, 1, "", "get_magnetic_moment"], [42, 3, 1, "", "get_magnetic_moments"], [42, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [42, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [42, 3, 1, "", "get_nonaffine_forces"], [42, 3, 1, "", "get_numerical_non_affine_forces"], [42, 3, 1, "", "get_potential_energies"], [42, 3, 1, "", "get_potential_energy"], [42, 3, 1, "", "get_property"], [42, 3, 1, "", "get_second_derivative"], [42, 3, 1, "", "get_stress"], [42, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [42, 3, 1, "", "get_stresses"], [42, 4, 1, "", "ignored_changes"], [42, 4, 1, "", "implemented_properties"], [42, 5, 1, "", "label"], [42, 4, 1, "", "name"], [42, 3, 1, "", "read"], [42, 3, 1, "", "read_atoms"], [42, 3, 1, "", "reset"], [42, 3, 1, "", "set"], [42, 3, 1, "", "set_label"], [42, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody": [[42, 2, 1, "", "F"], [42, 2, 1, "", "G"], [42, 3, 1, "", "__init__"], [42, 3, 1, "", "band_structure"], [42, 3, 1, "", "calculate"], [42, 3, 1, "", "calculate_numerical_forces"], [42, 3, 1, "", "calculate_numerical_stress"], [42, 3, 1, "", "calculate_properties"], [42, 3, 1, "", "calculation_required"], [42, 3, 1, "", "check_state"], [42, 4, 1, "", "default_parameters"], [42, 5, 1, "", "directory"], [42, 4, 1, "", "discard_results_on_any_change"], [42, 3, 1, "", "export_properties"], [42, 3, 1, "", "get_atoms"], [42, 3, 1, "", "get_birch_coefficients"], [42, 3, 1, "", "get_born_elastic_constants"], [42, 3, 1, "", "get_charges"], [42, 3, 1, "", "get_cutoff"], [42, 3, 1, "", "get_default_parameters"], [42, 3, 1, "", "get_dipole_moment"], [42, 3, 1, "", "get_dynamical_matrix"], [42, 3, 1, "", "get_elastic_constants"], [42, 3, 1, "", "get_forces"], [42, 3, 1, "", "get_hessian"], [42, 3, 1, "", "get_hessian_from_second_derivative"], [42, 3, 1, "", "get_magnetic_moment"], [42, 3, 1, "", "get_magnetic_moments"], [42, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [42, 3, 1, "", "get_non_affine_forces_from_second_derivative"], [42, 3, 1, "", "get_nonaffine_forces"], [42, 3, 1, "", "get_numerical_non_affine_forces"], [42, 3, 1, "", "get_potential_energies"], [42, 3, 1, "", "get_potential_energy"], [42, 3, 1, "", "get_property"], [42, 3, 1, "", "get_second_derivative"], [42, 3, 1, "", "get_stress"], [42, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [42, 3, 1, "", "get_stresses"], [42, 4, 1, "", "ignored_changes"], [42, 4, 1, "", "implemented_properties"], [42, 5, 1, "", "label"], [42, 4, 1, "", "name"], [42, 3, 1, "", "read"], [42, 3, 1, "", "read_atoms"], [42, 3, 1, "", "reset"], [42, 3, 1, "", "set"], [42, 3, 1, "", "set_label"], [42, 3, 1, "", "todict"]], "matscipy.calculators.manybody.calculator.NiceManybody.F": [[42, 3, 1, "", "gradient"], [42, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.calculator.NiceManybody.G": [[42, 3, 1, "", "gradient"], [42, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms": [[44, 0, 0, "-", "harmonic"], [45, 0, 0, "-", "kumagai"], [46, 0, 0, "-", "stillinger_weber"], [47, 0, 0, "-", "tersoff_brenner"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[44, 2, 1, "", "HarmonicAngle"], [44, 2, 1, "", "HarmonicBond"], [44, 2, 1, "", "ZeroPair"], [44, 2, 1, "", "ZeroTriplet"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "gradient"], [44, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond": [[44, 3, 1, "", "__init__"], [44, 3, 1, "", "gradient"], [44, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair": [[44, 3, 1, "", "gradient"], [44, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet": [[44, 3, 1, "", "gradient"], [44, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[45, 1, 1, "", "Kumagai"], [45, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[46, 1, 1, "", "StillingerWeber"], [46, 1, 1, "", "ab"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[47, 1, 1, "", "TersoffBrenner"], [47, 1, 1, "", "mix"], [47, 1, 1, "", "mix_arithmetic"], [47, 1, 1, "", "mix_geometric"], [47, 1, 1, "", "pair_index"], [47, 1, 1, "", "triplet_index"]], "matscipy.calculators.manybody.newmb": [[48, 2, 1, "", "Manybody"]], "matscipy.calculators.manybody.newmb.Manybody": [[48, 2, 1, "", "Phi"], [48, 2, 1, "", "Theta"], [48, 3, 1, "", "__init__"], [48, 3, 1, "", "band_structure"], [48, 3, 1, "", "calculate"], [48, 3, 1, "", "calculate_numerical_forces"], [48, 3, 1, "", "calculate_numerical_stress"], [48, 3, 1, "", "calculate_properties"], [48, 3, 1, "", "calculation_required"], [48, 3, 1, "", "check_state"], [48, 4, 1, "", "default_parameters"], [48, 5, 1, "", "directory"], [48, 4, 1, "", "discard_results_on_any_change"], [48, 3, 1, "", "export_properties"], [48, 3, 1, "", "get_atoms"], [48, 3, 1, "", "get_birch_coefficients"], [48, 3, 1, "", "get_born_elastic_constants"], [48, 3, 1, "", "get_charges"], [48, 3, 1, "", "get_default_parameters"], [48, 3, 1, "", "get_dipole_moment"], [48, 3, 1, "", "get_dynamical_matrix"], [48, 3, 1, "", "get_elastic_constants"], [48, 3, 1, "", "get_forces"], [48, 3, 1, "", "get_hessian"], [48, 3, 1, "", "get_magnetic_moment"], [48, 3, 1, "", "get_magnetic_moments"], [48, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [48, 3, 1, "", "get_nonaffine_forces"], [48, 3, 1, "", "get_numerical_non_affine_forces"], [48, 3, 1, "", "get_potential_energies"], [48, 3, 1, "", "get_potential_energy"], [48, 3, 1, "", "get_property"], [48, 3, 1, "", "get_stress"], [48, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [48, 3, 1, "", "get_stresses"], [48, 4, 1, "", "ignored_changes"], [48, 4, 1, "", "implemented_properties"], [48, 5, 1, "", "label"], [48, 3, 1, "", "read"], [48, 3, 1, "", "read_atoms"], [48, 3, 1, "", "reset"], [48, 3, 1, "", "set"], [48, 3, 1, "", "set_label"], [48, 3, 1, "", "sum_XX_sum_ijk_tau_XX_mn"], [48, 3, 1, "", "sum_XY_sum_ijk_tau_XY_mn"], [48, 3, 1, "", "sum_X_sum_ijk_tau_ijX_mn"], [48, 3, 1, "", "sum_X_sum_ijk_tau_ij_XOR_X_mn"], [48, 3, 1, "", "sum_ij_pi_ij_n"], [48, 3, 1, "", "sum_ij_sum_X_pi_X_n"], [48, 3, 1, "", "sum_ijk_tau_XY_mn"], [48, 3, 1, "", "todict"]], "matscipy.calculators.manybody.newmb.Manybody.Phi": [[48, 3, 1, "", "gradient"], [48, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.newmb.Manybody.Theta": [[48, 3, 1, "", "gradient"], [48, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials": [[49, 2, 1, "", "BornMayerCut"], [49, 2, 1, "", "HarmonicAngle"], [49, 2, 1, "", "HarmonicPair"], [49, 2, 1, "", "KumagaiAngle"], [49, 2, 1, "", "KumagaiPair"], [49, 2, 1, "", "LennardJones"], [49, 2, 1, "", "StillingerWeberAngle"], [49, 2, 1, "", "StillingerWeberPair"], [49, 2, 1, "", "SymPhi"], [49, 2, 1, "", "SymTheta"], [49, 2, 1, "", "TersoffBrennerAngle"], [49, 2, 1, "", "TersoffBrennerPair"], [49, 2, 1, "", "ZeroAngle"], [49, 2, 1, "", "ZeroPair"], [49, 1, 1, "", "angle_distance_defined"], [49, 1, 1, "", "distance_defined"]], "matscipy.calculators.manybody.potentials.BornMayerCut": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicAngle": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.HarmonicPair": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiAngle": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.KumagaiPair": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.LennardJones": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberAngle": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.StillingerWeberPair": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.SymPhi": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.SymTheta": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerAngle": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.TersoffBrennerPair": [[49, 3, 1, "", "__init__"], [49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroAngle": [[49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.manybody.potentials.ZeroPair": [[49, 3, 1, "", "gradient"], [49, 3, 1, "", "hessian"]], "matscipy.calculators.mcfm": [[50, 2, 1, "", "MultiClusterForceMixingPotential"], [51, 0, 0, "-", "calculator"], [52, 0, 0, "-", "cluster_data"], [53, 0, 0, "-", "mcfm_parallel"], [56, 0, 0, "-", "neighbour_list_mcfm"], [59, 0, 0, "-", "qm_cluster"], [60, 0, 0, "-", "qm_cluster_tools"]], "matscipy.calculators.mcfm.MultiClusterForceMixingPotential": [[50, 3, 1, "", "__init__"], [50, 4, 1, "", "all_changes"], [50, 3, 1, "", "attach_hybrid_data"], [50, 3, 1, "", "band_structure"], [50, 3, 1, "", "calculate"], [50, 3, 1, "", "calculate_numerical_forces"], [50, 3, 1, "", "calculate_numerical_stress"], [50, 3, 1, "", "calculate_properties"], [50, 3, 1, "", "calculation_required"], [50, 3, 1, "", "check_state"], [50, 3, 1, "", "combine_qm_mm_forces"], [50, 3, 1, "", "compute_stress"], [50, 4, 1, "", "default_parameters"], [50, 5, 1, "", "directory"], [50, 4, 1, "", "discard_results_on_any_change"], [50, 3, 1, "", "evaluate_errors"], [50, 3, 1, "", "evaluate_qm_cluster_serial"], [50, 3, 1, "", "export_properties"], [50, 3, 1, "", "get_atoms"], [50, 3, 1, "", "get_charges"], [50, 3, 1, "", "get_default_parameters"], [50, 3, 1, "", "get_dipole_moment"], [50, 3, 1, "", "get_forces"], [50, 3, 1, "", "get_magnetic_moment"], [50, 3, 1, "", "get_magnetic_moments"], [50, 3, 1, "", "get_potential_energies"], [50, 3, 1, "", "get_potential_energy"], [50, 3, 1, "", "get_property"], [50, 3, 1, "", "get_stress"], [50, 3, 1, "", "get_stresses"], [50, 4, 1, "", "ignored_changes"], [50, 4, 1, "", "implemented_properties"], [50, 5, 1, "", "label"], [50, 3, 1, "", "print_message"], [50, 3, 1, "", "produce_classical_results"], [50, 3, 1, "", "produce_qm_clusters"], [50, 3, 1, "", "read"], [50, 3, 1, "", "read_atoms"], [50, 3, 1, "", "reset"], [50, 3, 1, "", "set"], [50, 3, 1, "", "set_label"], [50, 3, 1, "", "set_qm_atoms"], [50, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.calculator": [[51, 2, 1, "", "MultiClusterForceMixingPotential"]], "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential": [[51, 3, 1, "", "__init__"], [51, 4, 1, "", "all_changes"], [51, 3, 1, "", "attach_hybrid_data"], [51, 3, 1, "", "band_structure"], [51, 3, 1, "", "calculate"], [51, 3, 1, "", "calculate_numerical_forces"], [51, 3, 1, "", "calculate_numerical_stress"], [51, 3, 1, "", "calculate_properties"], [51, 3, 1, "", "calculation_required"], [51, 3, 1, "", "check_state"], [51, 3, 1, "", "combine_qm_mm_forces"], [51, 3, 1, "", "compute_stress"], [51, 4, 1, "", "default_parameters"], [51, 5, 1, "", "directory"], [51, 4, 1, "", "discard_results_on_any_change"], [51, 3, 1, "", "evaluate_errors"], [51, 3, 1, "", "evaluate_qm_cluster_serial"], [51, 3, 1, "", "export_properties"], [51, 3, 1, "", "get_atoms"], [51, 3, 1, "", "get_charges"], [51, 3, 1, "", "get_default_parameters"], [51, 3, 1, "", "get_dipole_moment"], [51, 3, 1, "", "get_forces"], [51, 3, 1, "", "get_magnetic_moment"], [51, 3, 1, "", "get_magnetic_moments"], [51, 3, 1, "", "get_potential_energies"], [51, 3, 1, "", "get_potential_energy"], [51, 3, 1, "", "get_property"], [51, 3, 1, "", "get_stress"], [51, 3, 1, "", "get_stresses"], [51, 4, 1, "", "ignored_changes"], [51, 4, 1, "", "implemented_properties"], [51, 5, 1, "", "label"], [51, 3, 1, "", "print_message"], [51, 3, 1, "", "produce_classical_results"], [51, 3, 1, "", "produce_qm_clusters"], [51, 3, 1, "", "read"], [51, 3, 1, "", "read_atoms"], [51, 3, 1, "", "reset"], [51, 3, 1, "", "set"], [51, 3, 1, "", "set_label"], [51, 3, 1, "", "set_qm_atoms"], [51, 3, 1, "", "todict"]], "matscipy.calculators.mcfm.cluster_data": [[52, 2, 1, "", "ClusterData"]], "matscipy.calculators.mcfm.cluster_data.ClusterData": [[52, 3, 1, "", "__init__"], [52, 4, 1, "", "forces"], [52, 4, 1, "", "mark"], [52, 4, 1, "", "qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[54, 0, 0, "-", "mcfm_parallel_control"], [55, 0, 0, "-", "mcfm_parallel_worker"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[54, 1, 1, "", "get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[55, 1, 1, "", "worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[57, 0, 0, "-", "neighbour_list_base"], [58, 0, 0, "-", "neighbour_list_mcfm"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[57, 2, 1, "", "NeighbourListBase"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase": [[57, 3, 1, "", "get_neighbours"], [57, 3, 1, "", "update"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[58, 2, 1, "", "NeighbourListMCFM"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "do_update"], [58, 3, 1, "", "get_neighbours"], [58, 3, 1, "", "update"]], "matscipy.calculators.mcfm.qm_cluster": [[59, 2, 1, "", "QMCluster"]], "matscipy.calculators.mcfm.qm_cluster.QMCluster": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "attach_clustering_module"], [59, 3, 1, "", "attach_flagging_module"], [59, 3, 1, "", "attach_neighbour_list"], [59, 3, 1, "", "carve_cluster"], [59, 3, 1, "", "reset_energized_list"], [59, 3, 1, "", "update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[61, 0, 0, "-", "base_qm_cluster_tool"], [62, 0, 0, "-", "qm_clustering_tool"], [63, 0, 0, "-", "qm_flagging_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[61, 2, 1, "", "BaseQMClusterTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool": [[61, 3, 1, "", "__init__"], [61, 3, 1, "", "find_neighbours"], [61, 3, 1, "", "hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[62, 2, 1, "", "QMClusteringTool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "carve_cluster"], [62, 3, 1, "", "complete_aromatic_rings"], [62, 3, 1, "", "create_buffer_region"], [62, 3, 1, "", "create_cluster_from_marks"], [62, 3, 1, "", "find_neighbours"], [62, 3, 1, "", "hydrogenate_cluster"], [62, 3, 1, "", "hydrogenate_dangling_bonds"], [62, 3, 1, "", "include_special_atom"], [62, 3, 1, "", "print_message"], [62, 3, 1, "", "replace_double_bond"], [62, 3, 1, "", "replace_single_bond"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[63, 2, 1, "", "QMFlaggingTool"], [63, 1, 1, "", "exponential_moving_average"], [63, 1, 1, "", "update_avg_property_per_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool": [[63, 3, 1, "", "__init__"], [63, 3, 1, "", "create_cluster_around_atom"], [63, 3, 1, "", "expand_cluster"], [63, 3, 1, "", "find_neighbours"], [63, 3, 1, "", "get_energized_list"], [63, 3, 1, "", "hydrogenate_cluster"], [63, 3, 1, "", "join_clusters"], [63, 3, 1, "", "update_qm_region"]], "matscipy.calculators.pair_potential": [[65, 0, 0, "-", "calculator"]], "matscipy.calculators.pair_potential.calculator": [[65, 2, 1, "", "BeestKramerSanten"], [65, 2, 1, "", "CutoffInteraction"], [65, 2, 1, "", "FeneLJCut"], [65, 2, 1, "", "LennardJones84"], [65, 2, 1, "", "LennardJonesCut"], [65, 2, 1, "", "LennardJonesLinear"], [65, 2, 1, "", "LennardJonesQuadratic"], [65, 2, 1, "", "PairPotential"]], "matscipy.calculators.pair_potential.calculator.BeestKramerSanten": [[65, 3, 1, "", "__init__"], [65, 5, 1, "", "cutoff"], [65, 3, 1, "", "derivative"], [65, 3, 1, "", "first_derivative"], [65, 3, 1, "", "get_cutoff"], [65, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.CutoffInteraction": [[65, 3, 1, "", "__init__"], [65, 5, 1, "", "cutoff"], [65, 3, 1, "", "derivative"], [65, 3, 1, "", "first_derivative"], [65, 3, 1, "", "get_cutoff"], [65, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.FeneLJCut": [[65, 3, 1, "", "__init__"], [65, 5, 1, "", "cutoff"], [65, 3, 1, "", "derivative"], [65, 3, 1, "", "first_derivative"], [65, 3, 1, "", "get_cutoff"], [65, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJones84": [[65, 3, 1, "", "__init__"], [65, 5, 1, "", "cutoff"], [65, 3, 1, "", "derivative"], [65, 3, 1, "", "first_derivative"], [65, 3, 1, "", "get_cutoff"], [65, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesCut": [[65, 3, 1, "", "__init__"], [65, 5, 1, "", "cutoff"], [65, 3, 1, "", "derivative"], [65, 3, 1, "", "first_derivative"], [65, 3, 1, "", "get_cutoff"], [65, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesLinear": [[65, 3, 1, "", "__init__"], [65, 5, 1, "", "cutoff"], [65, 3, 1, "", "derivative"], [65, 3, 1, "", "first_derivative"], [65, 3, 1, "", "get_cutoff"], [65, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic": [[65, 3, 1, "", "__init__"], [65, 5, 1, "", "cutoff"], [65, 3, 1, "", "derivative"], [65, 3, 1, "", "first_derivative"], [65, 3, 1, "", "get_cutoff"], [65, 3, 1, "", "second_derivative"]], "matscipy.calculators.pair_potential.calculator.PairPotential": [[65, 3, 1, "", "__init__"], [65, 3, 1, "", "band_structure"], [65, 3, 1, "", "calculate"], [65, 3, 1, "", "calculate_numerical_forces"], [65, 3, 1, "", "calculate_numerical_stress"], [65, 3, 1, "", "calculate_properties"], [65, 3, 1, "", "calculation_required"], [65, 3, 1, "", "check_state"], [65, 4, 1, "", "default_parameters"], [65, 5, 1, "", "directory"], [65, 4, 1, "", "discard_results_on_any_change"], [65, 3, 1, "", "export_properties"], [65, 3, 1, "", "get_atoms"], [65, 3, 1, "", "get_birch_coefficients"], [65, 3, 1, "", "get_born_elastic_constants"], [65, 3, 1, "", "get_charges"], [65, 3, 1, "", "get_default_parameters"], [65, 3, 1, "", "get_dipole_moment"], [65, 3, 1, "", "get_dynamical_matrix"], [65, 3, 1, "", "get_elastic_constants"], [65, 3, 1, "", "get_forces"], [65, 3, 1, "", "get_hessian"], [65, 3, 1, "", "get_magnetic_moment"], [65, 3, 1, "", "get_magnetic_moments"], [65, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [65, 3, 1, "", "get_nonaffine_forces"], [65, 3, 1, "", "get_numerical_non_affine_forces"], [65, 3, 1, "", "get_potential_energies"], [65, 3, 1, "", "get_potential_energy"], [65, 3, 1, "", "get_property"], [65, 3, 1, "", "get_stress"], [65, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [65, 3, 1, "", "get_stresses"], [65, 4, 1, "", "ignored_changes"], [65, 4, 1, "", "implemented_properties"], [65, 5, 1, "", "label"], [65, 4, 1, "", "name"], [65, 3, 1, "", "read"], [65, 3, 1, "", "read_atoms"], [65, 3, 1, "", "reset"], [65, 3, 1, "", "set"], [65, 3, 1, "", "set_label"], [65, 3, 1, "", "todict"]], "matscipy.calculators.polydisperse": [[67, 0, 0, "-", "calculator"]], "matscipy.calculators.polydisperse.calculator": [[67, 2, 1, "", "InversePowerLawPotential"], [67, 2, 1, "", "Polydisperse"]], "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "derivative"], [67, 3, 1, "", "first_derivative"], [67, 3, 1, "", "get_coeffs"], [67, 3, 1, "", "get_cutoff"], [67, 3, 1, "", "get_maxSize"], [67, 3, 1, "", "get_minSize"], [67, 3, 1, "", "mix_sizes"], [67, 3, 1, "", "second_derivative"]], "matscipy.calculators.polydisperse.calculator.Polydisperse": [[67, 3, 1, "", "__init__"], [67, 3, 1, "", "band_structure"], [67, 3, 1, "", "calculate"], [67, 3, 1, "", "calculate_numerical_forces"], [67, 3, 1, "", "calculate_numerical_stress"], [67, 3, 1, "", "calculate_properties"], [67, 3, 1, "", "calculation_required"], [67, 3, 1, "", "check_state"], [67, 4, 1, "", "default_parameters"], [67, 5, 1, "", "directory"], [67, 4, 1, "", "discard_results_on_any_change"], [67, 3, 1, "", "export_properties"], [67, 3, 1, "", "get_atoms"], [67, 3, 1, "", "get_birch_coefficients"], [67, 3, 1, "", "get_born_elastic_constants"], [67, 3, 1, "", "get_charges"], [67, 3, 1, "", "get_default_parameters"], [67, 3, 1, "", "get_dipole_moment"], [67, 3, 1, "", "get_dynamical_matrix"], [67, 3, 1, "", "get_elastic_constants"], [67, 3, 1, "", "get_forces"], [67, 3, 1, "", "get_hessian"], [67, 3, 1, "", "get_magnetic_moment"], [67, 3, 1, "", "get_magnetic_moments"], [67, 3, 1, "", "get_non_affine_contribution_to_elastic_constants"], [67, 3, 1, "", "get_nonaffine_forces"], [67, 3, 1, "", "get_numerical_non_affine_forces"], [67, 3, 1, "", "get_potential_energies"], [67, 3, 1, "", "get_potential_energy"], [67, 3, 1, "", "get_property"], [67, 3, 1, "", "get_stress"], [67, 3, 1, "", "get_stress_contribution_to_elastic_constants"], [67, 3, 1, "", "get_stresses"], [67, 4, 1, "", "ignored_changes"], [67, 4, 1, "", "implemented_properties"], [67, 5, 1, "", "label"], [67, 4, 1, "", "name"], [67, 3, 1, "", "read"], [67, 3, 1, "", "read_atoms"], [67, 3, 1, "", "reset"], [67, 3, 1, "", "set"], [67, 3, 1, "", "set_label"], [67, 3, 1, "", "todict"]], "matscipy.calculators.supercell_calculator": [[68, 2, 1, "", "SupercellCalculator"]], "matscipy.calculators.supercell_calculator.SupercellCalculator": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "band_structure"], [68, 3, 1, "", "calculate"], [68, 3, 1, "", "calculate_numerical_forces"], [68, 3, 1, "", "calculate_numerical_stress"], [68, 3, 1, "", "calculate_properties"], [68, 3, 1, "", "calculation_required"], [68, 3, 1, "", "check_state"], [68, 4, 1, "", "default_parameters"], [68, 5, 1, "", "directory"], [68, 4, 1, "", "discard_results_on_any_change"], [68, 3, 1, "", "export_properties"], [68, 3, 1, "", "get_atoms"], [68, 3, 1, "", "get_charges"], [68, 3, 1, "", "get_default_parameters"], [68, 3, 1, "", "get_dipole_moment"], [68, 3, 1, "", "get_forces"], [68, 3, 1, "", "get_magnetic_moment"], [68, 3, 1, "", "get_magnetic_moments"], [68, 3, 1, "", "get_potential_energies"], [68, 3, 1, "", "get_potential_energy"], [68, 3, 1, "", "get_property"], [68, 3, 1, "", "get_stress"], [68, 3, 1, "", "get_stresses"], [68, 4, 1, "", "ignored_changes"], [68, 4, 1, "", "implemented_properties"], [68, 5, 1, "", "label"], [68, 4, 1, "", "name"], [68, 3, 1, "", "read"], [68, 3, 1, "", "read_atoms"], [68, 3, 1, "", "reset"], [68, 3, 1, "", "set"], [68, 3, 1, "", "set_label"], [68, 3, 1, "", "todict"]], "matscipy.cauchy_born": [[69, 2, 1, "", "CubicCauchyBorn"], [69, 2, 1, "", "RegressionModel"]], "matscipy.cauchy_born.CubicCauchyBorn": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "apply_shifts"], [69, 3, 1, "", "basis_function_evaluation"], [69, 3, 1, "", "check_for_refit"], [69, 3, 1, "", "eval_shift"], [69, 3, 1, "", "evaluate_E"], [69, 3, 1, "", "evaluate_F"], [69, 3, 1, "", "evaluate_F_or_E"], [69, 3, 1, "", "evaluate_shift_gradient_regression"], [69, 3, 1, "", "evaluate_shift_model"], [69, 3, 1, "", "fit_taylor"], [69, 3, 1, "", "get_cb_error"], [69, 3, 1, "", "get_data_points"], [69, 3, 1, "", "get_model"], [69, 3, 1, "", "get_shift_gradients"], [69, 3, 1, "", "grad_basis_function_evaluation"], [69, 3, 1, "", "initial_regression_fit"], [69, 3, 1, "", "load_regression_model"], [69, 3, 1, "", "load_taylor"], [69, 3, 1, "", "permutation"], [69, 3, 1, "", "predict_shifts"], [69, 3, 1, "", "refit_regression"], [69, 3, 1, "", "save_regression_model"], [69, 3, 1, "", "save_taylor"], [69, 3, 1, "", "set_model"], [69, 3, 1, "", "set_sublattices"], [69, 3, 1, "", "switch_sublattices"], [69, 3, 1, "", "tensor_field_3D_from_atoms"]], "matscipy.cauchy_born.RegressionModel": [[69, 3, 1, "", "fit"], [69, 3, 1, "", "load"], [69, 3, 1, "", "predict"], [69, 3, 1, "", "predict_gradient"], [69, 3, 1, "", "save"]], "matscipy.cli": [[71, 0, 0, "-", "calculators"], [73, 0, 0, "-", "diffusion"], [75, 0, 0, "-", "electrochemistry"], [79, 0, 0, "-", "fracture_mechanics"], [83, 0, 0, "-", "glasses"]], "matscipy.cli.calculators": [[72, 0, 0, "-", "average_eam_potential"]], "matscipy.cli.calculators.average_eam_potential": [[72, 1, 1, "", "main"]], "matscipy.cli.diffusion": [[74, 0, 0, "-", "rms"]], "matscipy.cli.diffusion.rms": [[74, 1, 1, "", "main"]], "matscipy.cli.electrochemistry": [[76, 0, 0, "-", "continuous2discrete"], [77, 0, 0, "-", "poisson_nernst_planck_solver"], [78, 0, 0, "-", "stericify"]], "matscipy.cli.electrochemistry.continuous2discrete": [[76, 1, 1, "", "main"]], "matscipy.cli.electrochemistry.poisson_nernst_planck_solver": [[77, 1, 1, "", "main"]], "matscipy.cli.electrochemistry.stericify": [[78, 1, 1, "", "main"]], "matscipy.cli.fracture_mechanics": [[80, 0, 0, "-", "quasistatic_crack"], [81, 0, 0, "-", "setup_crack"], [82, 0, 0, "-", "sinclair_crack"]], "matscipy.cli.fracture_mechanics.quasistatic_crack": [[80, 1, 1, "", "main"]], "matscipy.cli.fracture_mechanics.setup_crack": [[81, 1, 1, "", "setup_crack"]], "matscipy.cli.fracture_mechanics.sinclair_crack": [[82, 1, 1, "", "main"]], "matscipy.cli.glasses": [[84, 0, 0, "-", "quench"]], "matscipy.cli.glasses.quench": [[84, 1, 1, "", "handle_sigusr2"], [84, 1, 1, "", "main"], [84, 1, 1, "", "random_solid"]], "matscipy.deformation": [[85, 2, 1, "", "RemoveSimpleShearDeformation"], [85, 1, 1, "", "get_shear_distance"]], "matscipy.deformation.RemoveSimpleShearDeformation": [[85, 3, 1, "", "__init__"]], "matscipy.dislocation": [[86, 2, 1, "", "AnisotropicDislocation"], [86, 2, 1, "", "BCCEdge100110Dislocation"], [86, 2, 1, "", "BCCEdge100Dislocation"], [86, 2, 1, "", "BCCEdge111Dislocation"], [86, 2, 1, "", "BCCEdge111barDislocation"], [86, 2, 1, "", "BCCMixed111Dislocation"], [86, 2, 1, "", "BCCScrew111Dislocation"], [86, 2, 1, "", "BodyCenteredCubicOctahedralFactory"], [86, 2, 1, "", "BodyCenteredCubicTetrahedralFactory"], [86, 2, 1, "", "CubicCrystalDislocation"], [86, 2, 1, "", "CubicCrystalDissociatedDislocation"], [86, 2, 1, "", "DiamondGlide30degreePartial"], [86, 2, 1, "", "DiamondGlide60Degree"], [86, 2, 1, "", "DiamondGlide90degreePartial"], [86, 2, 1, "", "DiamondGlideScrew"], [86, 2, 1, "", "FCCEdge110Dislocation"], [86, 2, 1, "", "FCCEdgeShockleyPartial"], [86, 2, 1, "", "FCCScrew110Dislocation"], [86, 2, 1, "", "FCCScrewShockleyPartial"], [86, 2, 1, "", "FixedLineAtoms"], [86, 1, 1, "", "check_duplicates"], [86, 1, 1, "", "compare_configurations"], [86, 1, 1, "", "cost_function"], [86, 1, 1, "", "dipole_displacement_angle"], [86, 1, 1, "", "fit_core_position"], [86, 1, 1, "", "fit_core_position_images"], [86, 1, 1, "", "gamma_line"], [86, 1, 1, "", "get_centering_mask"], [86, 1, 1, "", "get_elastic_constants"], [86, 1, 1, "", "get_u_img"], [86, 1, 1, "", "make_barrier_configurations"], [86, 1, 1, "", "make_edge_cyl"], [86, 1, 1, "", "make_edge_cyl_001_100"], [86, 1, 1, "", "make_screw_cyl"], [86, 1, 1, "", "make_screw_cyl_kink"], [86, 1, 1, "", "make_screw_quadrupole"], [86, 1, 1, "", "make_screw_quadrupole_kink"], [86, 1, 1, "", "ovito_dxa_straight_dislo_info"], [86, 1, 1, "", "plot_bulk"], [86, 1, 1, "", "plot_vitek"], [86, 1, 1, "", "read_dislo_QMMM"], [86, 1, 1, "", "screw_cyl_octahedral"], [86, 1, 1, "", "screw_cyl_tetrahedral"], [86, 1, 1, "", "show_NEB_configurations"], [86, 1, 1, "", "show_configuration"], [86, 1, 1, "", "slice_long_dislo"]], "matscipy.dislocation.AnisotropicDislocation": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "deformation_gradient"], [86, 3, 1, "", "displacement"]], "matscipy.dislocation.BCCEdge100110Dislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id68", "alat"], [86, 4, 1, "id70", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id74", "burgers"], [86, 4, 1, "id71", "burgers_dimensionless"], [86, 4, 1, "id73", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id75", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id72", "n_planes"], [86, 4, 1, "id76", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id77", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id69", "unit_cell"], [86, 5, 1, "id78", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCEdge100Dislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id57", "alat"], [86, 4, 1, "id59", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id63", "burgers"], [86, 4, 1, "id60", "burgers_dimensionless"], [86, 4, 1, "id62", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id64", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id61", "n_planes"], [86, 4, 1, "id65", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id66", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id58", "unit_cell"], [86, 5, 1, "id67", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCEdge111Dislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id24", "alat"], [86, 4, 1, "id26", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id30", "burgers"], [86, 4, 1, "id27", "burgers_dimensionless"], [86, 4, 1, "id29", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id31", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id28", "n_planes"], [86, 4, 1, "id32", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id33", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id25", "unit_cell"], [86, 5, 1, "id34", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCEdge111barDislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id35", "alat"], [86, 4, 1, "id37", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id41", "burgers"], [86, 4, 1, "id38", "burgers_dimensionless"], [86, 4, 1, "id40", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id42", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id39", "n_planes"], [86, 4, 1, "id43", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id44", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id36", "unit_cell"], [86, 5, 1, "id45", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCMixed111Dislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id46", "alat"], [86, 4, 1, "id48", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id51", "burgers"], [86, 4, 1, "id49", "burgers_dimensionless"], [86, 4, 1, "id50", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id52", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id53", "n_planes"], [86, 4, 1, "id54", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id55", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id47", "unit_cell"], [86, 5, 1, "id56", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BCCScrew111Dislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id13", "alat"], [86, 4, 1, "id15", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id18", "burgers"], [86, 4, 1, "id16", "burgers_dimensionless"], [86, 4, 1, "id17", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id19", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id20", "n_planes"], [86, 4, 1, "id21", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id22", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id14", "unit_cell"], [86, 5, 1, "id23", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.BodyCenteredCubicOctahedralFactory": [[86, 3, 1, "", "align"], [86, 4, 1, "", "atoms_in_unit_cell"], [86, 4, 1, "", "basis_factor"], [86, 4, 1, "", "bravais_basis"], [86, 3, 1, "", "calc_num_atoms"], [86, 3, 1, "", "check_basis_volume"], [86, 4, 1, "", "chop_tolerance"], [86, 3, 1, "", "convert_to_natural_basis"], [86, 4, 1, "", "element_basis"], [86, 3, 1, "", "find_directions"], [86, 3, 1, "", "find_ortho"], [86, 3, 1, "", "get_lattice_constant"], [86, 3, 1, "", "inside"], [86, 4, 1, "", "int_basis"], [86, 4, 1, "", "inverse_basis"], [86, 4, 1, "", "inverse_basis_factor"], [86, 3, 1, "", "make_crystal_basis"], [86, 3, 1, "", "make_list_of_atoms"], [86, 3, 1, "", "make_unit_cell"], [86, 4, 1, "", "other"], [86, 3, 1, "", "print_directions_and_miller"], [86, 3, 1, "", "process_element"], [86, 3, 1, "", "put_atom"], [86, 4, 1, "", "xtal_name"]], "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory": [[86, 3, 1, "", "align"], [86, 4, 1, "", "atoms_in_unit_cell"], [86, 4, 1, "", "basis_factor"], [86, 4, 1, "", "bravais_basis"], [86, 3, 1, "", "calc_num_atoms"], [86, 3, 1, "", "check_basis_volume"], [86, 4, 1, "", "chop_tolerance"], [86, 3, 1, "", "convert_to_natural_basis"], [86, 4, 1, "", "element_basis"], [86, 3, 1, "", "find_directions"], [86, 3, 1, "", "find_ortho"], [86, 3, 1, "", "get_lattice_constant"], [86, 3, 1, "", "inside"], [86, 4, 1, "", "int_basis"], [86, 4, 1, "", "inverse_basis"], [86, 4, 1, "", "inverse_basis_factor"], [86, 3, 1, "", "make_crystal_basis"], [86, 3, 1, "", "make_list_of_atoms"], [86, 3, 1, "", "make_unit_cell"], [86, 4, 1, "", "other"], [86, 3, 1, "", "print_directions_and_miller"], [86, 3, 1, "", "process_element"], [86, 3, 1, "", "put_atom"], [86, 4, 1, "", "xtal_name"]], "matscipy.dislocation.CubicCrystalDislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id7", "alat"], [86, 4, 1, "id4", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id9", "burgers"], [86, 4, 1, "id5", "burgers_dimensionless"], [86, 4, 1, "id12", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id11", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id0", "n_planes"], [86, 4, 1, "id6", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id3", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id8", "unit_cell"], [86, 5, 1, "id10", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.CubicCrystalDissociatedDislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "", "alat"], [86, 4, 1, "", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "", "burgers"], [86, 4, 1, "", "burgers_dimensionless"], [86, 4, 1, "", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "", "left_dislocation"], [86, 4, 1, "", "n_planes"], [86, 4, 1, "", "new_left_burgers"], [86, 4, 1, "", "new_right_burgers"], [86, 4, 1, "", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "", "right_dislocation"], [86, 4, 1, "", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "", "unit_cell"], [86, 5, 1, "", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlide30degreePartial": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id79", "alat"], [86, 4, 1, "id81", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id86", "burgers"], [86, 4, 1, "id82", "burgers_dimensionless"], [86, 4, 1, "id85", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id87", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id83", "n_planes"], [86, 4, 1, "id88", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id84", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id80", "unit_cell"], [86, 5, 1, "id89", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlide60Degree": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "", "alat"], [86, 4, 1, "", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "", "burgers"], [86, 4, 1, "", "burgers_dimensionless"], [86, 4, 1, "", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "", "left_dislocation"], [86, 4, 1, "", "n_planes"], [86, 4, 1, "", "new_left_burgers"], [86, 4, 1, "", "new_right_burgers"], [86, 4, 1, "", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "", "right_dislocation"], [86, 4, 1, "", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "", "unit_cell"], [86, 5, 1, "", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlide90degreePartial": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id90", "alat"], [86, 4, 1, "id92", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id97", "burgers"], [86, 4, 1, "id93", "burgers_dimensionless"], [86, 4, 1, "id96", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id98", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id94", "n_planes"], [86, 4, 1, "id99", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id95", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id91", "unit_cell"], [86, 5, 1, "id100", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.DiamondGlideScrew": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "", "alat"], [86, 4, 1, "", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "", "burgers"], [86, 4, 1, "", "burgers_dimensionless"], [86, 4, 1, "", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "", "left_dislocation"], [86, 4, 1, "", "n_planes"], [86, 4, 1, "", "new_left_burgers"], [86, 4, 1, "", "new_right_burgers"], [86, 4, 1, "", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "", "right_dislocation"], [86, 4, 1, "", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "", "unit_cell"], [86, 5, 1, "", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCEdge110Dislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "", "alat"], [86, 4, 1, "", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "", "burgers"], [86, 4, 1, "", "burgers_dimensionless"], [86, 4, 1, "", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "", "left_dislocation"], [86, 4, 1, "", "n_planes"], [86, 4, 1, "", "new_left_burgers"], [86, 4, 1, "", "new_right_burgers"], [86, 4, 1, "", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "", "right_dislocation"], [86, 4, 1, "", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "", "unit_cell"], [86, 5, 1, "", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCEdgeShockleyPartial": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id112", "alat"], [86, 4, 1, "id114", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id118", "burgers"], [86, 4, 1, "id115", "burgers_dimensionless"], [86, 4, 1, "id117", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id119", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id116", "n_planes"], [86, 4, 1, "id120", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id121", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id113", "unit_cell"], [86, 5, 1, "id122", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCScrew110Dislocation": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "", "alat"], [86, 4, 1, "", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "", "burgers"], [86, 4, 1, "", "burgers_dimensionless"], [86, 4, 1, "", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "", "left_dislocation"], [86, 4, 1, "", "n_planes"], [86, 4, 1, "", "new_left_burgers"], [86, 4, 1, "", "new_right_burgers"], [86, 4, 1, "", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "", "right_dislocation"], [86, 4, 1, "", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "", "unit_cell"], [86, 5, 1, "", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FCCScrewShockleyPartial": [[86, 4, 1, "", "ADstroh"], [86, 4, 1, "", "C11"], [86, 4, 1, "", "C12"], [86, 4, 1, "", "C44"], [86, 3, 1, "", "__init__"], [86, 4, 1, "id101", "alat"], [86, 4, 1, "id103", "axes"], [86, 3, 1, "", "build_cylinder"], [86, 3, 1, "", "build_glide_configurations"], [86, 3, 1, "", "build_impurity_cylinder"], [86, 5, 1, "id107", "burgers"], [86, 4, 1, "id104", "burgers_dimensionless"], [86, 4, 1, "id106", "crystalstructure"], [86, 3, 1, "", "displacements"], [86, 5, 1, "id108", "glide_distance"], [86, 4, 1, "", "glide_distance_dimensionless"], [86, 3, 1, "", "init_anisotropic_dislocation"], [86, 3, 1, "", "init_stroh"], [86, 4, 1, "id105", "n_planes"], [86, 4, 1, "id109", "parity"], [86, 4, 1, "", "pbc"], [86, 3, 1, "", "plot_unit_cell"], [86, 4, 1, "id110", "self_consistent"], [86, 3, 1, "", "self_consistent_displacements"], [86, 3, 1, "", "set_burgers"], [86, 4, 1, "", "stroh"], [86, 4, 1, "id102", "unit_cell"], [86, 5, 1, "id111", "unit_cell_core_position"], [86, 4, 1, "", "unit_cell_core_position_dimensionless"]], "matscipy.dislocation.FixedLineAtoms": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "adjust_forces"], [86, 3, 1, "", "adjust_positions"]], "matscipy.drift": [[87, 2, 1, "", "RemoveDrift"]], "matscipy.drift.RemoveDrift": [[87, 3, 1, "", "__init__"]], "matscipy.elasticity": [[88, 2, 1, "", "CubicElasticModuli"], [88, 1, 1, "", "Voigt_6_to_full_3x3_strain"], [88, 1, 1, "", "Voigt_6_to_full_3x3_stress"], [88, 1, 1, "", "Voigt_6x6_to_cubic"], [88, 1, 1, "", "Voigt_6x6_to_full_3x3x3x3"], [88, 1, 1, "", "cubic_to_Voigt_6x6"], [88, 1, 1, "", "elastic_moduli"], [88, 1, 1, "", "fit_elastic_constants"], [88, 1, 1, "", "full_3x3_to_Voigt_6_index"], [88, 1, 1, "", "full_3x3_to_Voigt_6_strain"], [88, 1, 1, "", "full_3x3_to_Voigt_6_stress"], [88, 1, 1, "", "full_3x3x3x3_to_Voigt_6x6"], [88, 1, 1, "", "generate_strained_configs"], [88, 1, 1, "", "invariants"], [88, 1, 1, "", "measure_triclinic_elastic_constants"], [88, 1, 1, "", "nonaffine_elastic_contribution"], [88, 1, 1, "", "poisson_ratio"], [88, 1, 1, "", "rotate_cubic_elastic_constants"], [88, 1, 1, "", "rotate_elastic_constants"], [88, 1, 1, "", "youngs_modulus"]], "matscipy.elasticity.CubicElasticModuli": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "compliance"], [88, 3, 1, "", "rotate"], [88, 3, 1, "", "stiffness"], [88, 4, 1, "", "tol"]], "matscipy.electrochemistry": [[90, 1, 1, "", "continuous2discrete"], [91, 0, 0, "-", "poisson_boltzmann_distribution"], [92, 0, 0, "-", "poisson_nernst_planck_solver"], [93, 0, 0, "-", "poisson_nernst_planck_solver_fenics"], [94, 0, 0, "-", "steric_correction"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[91, 1, 1, "", "charge_density"], [91, 1, 1, "", "concentration"], [91, 1, 1, "", "debye"], [91, 1, 1, "", "gamma"], [91, 1, 1, "", "ionic_strength"], [91, 1, 1, "", "main"], [91, 1, 1, "", "potential"], [91, 1, 1, "", "test"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[92, 1, 1, "", "B"], [92, 2, 1, "", "PoissonNernstPlanckSystem"], [92, 1, 1, "", "jacobian"]], "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem": [[92, 3, 1, "", "G"], [92, 3, 1, "", "__init__"], [92, 5, 1, "", "charge_density"], [92, 5, 1, "", "concentration"], [92, 3, 1, "", "discretize"], [92, 5, 1, "", "grid"], [92, 3, 1, "", "init"], [92, 3, 1, "", "initial_values"], [92, 5, 1, "", "ionic_strength"], [92, 5, 1, "", "lambda_D"], [92, 3, 1, "", "left_controlled_volume_scheme_flux_bc"], [92, 3, 1, "", "left_dirichlet_bc"], [92, 3, 1, "", "left_finite_difference_scheme_flux_bc"], [92, 3, 1, "", "left_potential_dirichlet_bc"], [92, 3, 1, "", "left_potential_robin_bc"], [92, 3, 1, "", "left_robin_bc"], [92, 3, 1, "", "nernst_planck_pde"], [92, 3, 1, "", "newton"], [92, 3, 1, "", "number_conservation_constraint"], [92, 3, 1, "", "poisson_pde"], [92, 5, 1, "", "potential"], [92, 3, 1, "", "right_controlled_volume_scheme_flux_bc"], [92, 3, 1, "", "right_dirichlet_bc"], [92, 3, 1, "", "right_finite_difference_scheme_flux_bc"], [92, 3, 1, "", "right_potential_dirichlet_bc"], [92, 3, 1, "", "right_potential_robin_bc"], [92, 3, 1, "", "right_robin_bc"], [92, 3, 1, "", "solve"], [92, 3, 1, "", "solver_callback"], [92, 3, 1, "", "use_standard_cell_bc"], [92, 3, 1, "", "use_standard_dirichlet_bc"], [92, 3, 1, "", "use_standard_interface_bc"], [92, 3, 1, "", "use_stern_layer_cell_bc"], [92, 5, 1, "", "x1_scaled"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[93, 2, 1, "", "Boundary"], [93, 2, 1, "", "PoissonNernstPlanckSystemFEniCS"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary": [[93, 3, 1, "", "__init__"], [93, 3, 1, "", "get_property"], [93, 3, 1, "", "inside"], [93, 3, 1, "", "map"], [93, 3, 1, "", "mark"], [93, 3, 1, "", "mark_cells"], [93, 3, 1, "", "mark_facets"], [93, 3, 1, "", "set_property"], [93, 3, 1, "", "snap"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS": [[93, 3, 1, "", "G"], [93, 5, 1, "", "X"], [93, 3, 1, "", "__init__"], [93, 3, 1, "", "apply_central_reference_concentration_constraint"], [93, 3, 1, "", "apply_left_concentration_dirichlet_bc"], [93, 3, 1, "", "apply_left_potential_dirichlet_bc"], [93, 3, 1, "", "apply_left_potential_robin_bc"], [93, 3, 1, "", "apply_number_conservation_constraint"], [93, 3, 1, "", "apply_potential_dirichlet_bc"], [93, 3, 1, "", "apply_potential_robin_bc"], [93, 3, 1, "", "apply_right_concentration_dirichlet_bc"], [93, 3, 1, "", "apply_right_potential_dirichlet_bc"], [93, 3, 1, "", "apply_right_potential_robin_bc"], [93, 3, 1, "", "boundary_C"], [93, 3, 1, "", "boundary_L"], [93, 3, 1, "", "boundary_R"], [93, 5, 1, "", "charge_density"], [93, 5, 1, "", "concentration"], [93, 3, 1, "", "discretize"], [93, 5, 1, "", "grid"], [93, 3, 1, "", "init"], [93, 3, 1, "", "initial_values"], [93, 5, 1, "", "ionic_strength"], [93, 5, 1, "", "lambda_D"], [93, 3, 1, "", "left_controlled_volume_scheme_flux_bc"], [93, 3, 1, "", "left_dirichlet_bc"], [93, 3, 1, "", "left_finite_difference_scheme_flux_bc"], [93, 3, 1, "", "left_potential_dirichlet_bc"], [93, 3, 1, "", "left_potential_robin_bc"], [93, 3, 1, "", "left_robin_bc"], [93, 3, 1, "", "nernst_planck_pde"], [93, 3, 1, "", "newton"], [93, 3, 1, "", "number_conservation_constraint"], [93, 3, 1, "", "poisson_pde"], [93, 5, 1, "", "potential"], [93, 3, 1, "", "right_controlled_volume_scheme_flux_bc"], [93, 3, 1, "", "right_dirichlet_bc"], [93, 3, 1, "", "right_finite_difference_scheme_flux_bc"], [93, 3, 1, "", "right_potential_dirichlet_bc"], [93, 3, 1, "", "right_potential_robin_bc"], [93, 3, 1, "", "right_robin_bc"], [93, 3, 1, "", "solve"], [93, 3, 1, "", "solver_callback"], [93, 3, 1, "", "use_central_reference_concentration_based_cell_bc"], [93, 3, 1, "", "use_standard_cell_bc"], [93, 3, 1, "", "use_standard_dirichlet_bc"], [93, 3, 1, "", "use_standard_interface_bc"], [93, 3, 1, "", "use_stern_layer_cell_bc"], [93, 5, 1, "", "x1_scaled"]], "matscipy.electrochemistry.steric_correction": [[94, 2, 1, "", "DeferredMessage"], [94, 1, 1, "", "apply_steric_correction"], [94, 1, 1, "", "box_constraint"], [94, 1, 1, "", "box_constraint_with_gradient"], [94, 1, 1, "", "brute_force_closest_pair"], [94, 1, 1, "", "brute_force_target_function"], [94, 1, 1, "", "neigh_list_based_target_function"], [94, 1, 1, "", "numpy_only_target_function"], [94, 1, 1, "", "planar_closest_pair"], [94, 1, 1, "", "recursive_closest_pair"], [94, 1, 1, "", "scipy_distance_based_closest_pair"], [94, 1, 1, "", "scipy_distance_based_target_function"]], "matscipy.electrochemistry.steric_correction.DeferredMessage": [[94, 3, 1, "", "__init__"]], "matscipy.fracture_mechanics": [[97, 0, 0, "-", "clusters"], [98, 0, 0, "-", "crack"], [99, 0, 0, "-", "crackpathsel"], [100, 0, 0, "-", "energy_release"], [101, 0, 0, "-", "idealbrittlesolid"]], "matscipy.fracture_mechanics.clusters": [[97, 1, 1, "", "bcc"], [97, 1, 1, "", "cluster"], [97, 1, 1, "", "diamond"], [97, 1, 1, "", "fcc"], [97, 1, 1, "", "generate_3D_cubic_111"], [97, 1, 1, "", "generate_3D_structure"], [97, 1, 1, "", "get_alpha_period"], [97, 1, 1, "", "sc"], [97, 1, 1, "", "set_groups"], [97, 1, 1, "", "set_regions"]], "matscipy.fracture_mechanics.crack": [[98, 2, 1, "", "ConstantStrainRate"], [98, 2, 1, "", "CubicCrystalCrack"], [98, 1, 1, "", "G_to_strain"], [98, 2, 1, "", "IsotropicStressField"], [98, 2, 1, "", "RectilinearAnisotropicCrack"], [98, 2, 1, "", "SinclairCrack"], [98, 1, 1, "", "counted"], [98, 1, 1, "", "deformation_gradient_residual"], [98, 1, 1, "", "deformation_gradient_residuals"], [98, 1, 1, "", "displacement_residual"], [98, 1, 1, "", "displacement_residuals"], [98, 1, 1, "", "find_tip_broken_bonds"], [98, 1, 1, "", "find_tip_coordination"], [98, 1, 1, "", "find_tip_stress_field"], [98, 1, 1, "", "fit_crack_stress_field"], [98, 1, 1, "", "get_energy_release_rate"], [98, 1, 1, "", "get_strain"], [98, 1, 1, "", "get_stress_intensity_factor"], [98, 1, 1, "", "isotropic_modeII_crack_tip_displacement_field"], [98, 1, 1, "", "isotropic_modeI_crack_tip_displacement_field"], [98, 1, 1, "", "isotropic_modeI_crack_tip_stress_field"], [98, 1, 1, "", "plot_stress_fields"], [98, 1, 1, "", "print_crack_system"], [98, 1, 1, "", "strain_to_G"], [98, 1, 1, "", "thin_strip_displacement_y"]], "matscipy.fracture_mechanics.crack.ConstantStrainRate": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "adjust_forces"], [98, 3, 1, "", "adjust_positions"], [98, 3, 1, "", "apply_strain"], [98, 3, 1, "", "copy"]], "matscipy.fracture_mechanics.crack.CubicCrystalCrack": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "crack_tip_position"], [98, 3, 1, "", "crack_tip_position_y"], [98, 3, 1, "", "deformation_gradient"], [98, 3, 1, "", "deformation_gradient_from_cartesian_coordinates"], [98, 3, 1, "", "deformation_gradient_from_cylinder_coordinates"], [98, 3, 1, "", "displacements"], [98, 3, 1, "", "displacements_from_cartesian_coordinates"], [98, 3, 1, "", "displacements_from_cylinder_coordinates"], [98, 3, 1, "", "k1g"], [98, 3, 1, "", "k1gsqG"], [98, 3, 1, "", "scale_displacements"], [98, 3, 1, "", "stresses"], [98, 3, 1, "", "stresses_from_cartesian_coordinates"], [98, 3, 1, "", "stresses_from_cylinder_coordinates"]], "matscipy.fracture_mechanics.crack.IsotropicStressField": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "get_stresses"]], "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "deformation_gradient"], [98, 3, 1, "", "displacements"], [98, 3, 1, "", "k1g"], [98, 3, 1, "", "k1gsqG"], [98, 3, 1, "", "rtheta"], [98, 3, 1, "", "set_plane_strain"], [98, 3, 1, "", "set_plane_stress"], [98, 3, 1, "", "stresses"]], "matscipy.fracture_mechanics.crack.SinclairCrack": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "animate"], [98, 3, 1, "", "arc_length_continuation"], [98, 3, 1, "", "convergence_line_plot"], [98, 3, 1, "", "dfk_dk_approx"], [98, 3, 1, "", "fit_cle"], [98, 3, 1, "", "get_crack_tip_force"], [98, 3, 1, "", "get_deformation_gradient"], [98, 3, 1, "", "get_dofs"], [98, 3, 1, "", "get_forces"], [98, 3, 1, "", "get_k_force"], [98, 3, 1, "", "get_potential_energy"], [98, 3, 1, "", "get_precon"], [98, 3, 1, "", "get_xdot"], [98, 5, 1, "", "k"], [98, 3, 1, "", "load_cb_model"], [98, 3, 1, "", "optimize"], [98, 3, 1, "", "pack"], [98, 3, 1, "", "plot"], [98, 3, 1, "", "rescale_k"], [98, 3, 1, "", "save_cb_model"], [98, 3, 1, "", "set_atoms"], [98, 3, 1, "", "set_dofs"], [98, 3, 1, "", "set_shiftmask"], [98, 3, 1, "", "strain_err"], [98, 3, 1, "", "u_cle"], [98, 3, 1, "", "unpack"], [98, 3, 1, "", "update_atoms"], [98, 3, 1, "", "update_precon"], [98, 3, 1, "", "write_atoms_to_file"]], "matscipy.fracture_mechanics.energy_release": [[100, 1, 1, "", "J_integral"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[101, 2, 1, "", "IdealBrittleSolid"], [101, 1, 1, "", "extend_strip"], [101, 1, 1, "", "find_crack_tip"], [101, 1, 1, "", "find_triangles_2d"], [101, 1, 1, "", "set_constraints"], [101, 1, 1, "", "set_initial_velocities"], [101, 1, 1, "", "triangular_lattice_slab"]], "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid": [[101, 3, 1, "", "__init__"], [101, 3, 1, "", "band_structure"], [101, 3, 1, "", "calculate"], [101, 3, 1, "", "calculate_numerical_forces"], [101, 3, 1, "", "calculate_numerical_stress"], [101, 3, 1, "", "calculate_properties"], [101, 3, 1, "", "calculation_required"], [101, 3, 1, "", "check_state"], [101, 4, 1, "", "default_parameters"], [101, 5, 1, "", "directory"], [101, 4, 1, "", "discard_results_on_any_change"], [101, 3, 1, "", "export_properties"], [101, 3, 1, "", "get_atoms"], [101, 3, 1, "", "get_charges"], [101, 3, 1, "", "get_default_parameters"], [101, 3, 1, "", "get_dipole_moment"], [101, 3, 1, "", "get_elastic_moduli"], [101, 3, 1, "", "get_forces"], [101, 3, 1, "", "get_magnetic_moment"], [101, 3, 1, "", "get_magnetic_moments"], [101, 3, 1, "", "get_poisson_ratio"], [101, 3, 1, "", "get_potential_energies"], [101, 3, 1, "", "get_potential_energy"], [101, 3, 1, "", "get_property"], [101, 3, 1, "", "get_stress"], [101, 3, 1, "", "get_stresses"], [101, 3, 1, "", "get_wave_speeds"], [101, 3, 1, "", "get_youngs_modulus"], [101, 4, 1, "", "ignored_changes"], [101, 4, 1, "", "implemented_properties"], [101, 5, 1, "", "label"], [101, 3, 1, "", "read"], [101, 3, 1, "", "read_atoms"], [101, 3, 1, "", "reset"], [101, 3, 1, "", "set"], [101, 3, 1, "", "set_label"], [101, 3, 1, "", "set_reference_crystal"], [101, 3, 1, "", "todict"]], "matscipy.gamma_surface": [[102, 2, 1, "", "GammaSurface"], [102, 2, 1, "", "StackingFault"]], "matscipy.gamma_surface.GammaSurface": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "generate_images"], [102, 3, 1, "", "get_energy_densities"], [102, 3, 1, "", "plot_energy_densities"], [102, 3, 1, "", "relax_images"], [102, 3, 1, "", "show"]], "matscipy.gamma_surface.GammaSurface.self": [[102, 4, 1, "", "cut_at"], [102, 4, 1, "", "images"], [102, 4, 1, "", "surf_directions"]], "matscipy.gamma_surface.StackingFault": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "generate_images"], [102, 3, 1, "", "get_energy_densities"], [102, 3, 1, "", "plot_energy_densities"], [102, 3, 1, "", "relax_images"], [102, 3, 1, "", "show"]], "matscipy.gamma_surface.StackingFault.self": [[102, 4, 1, "", "cut_at"], [102, 4, 1, "", "images"], [102, 4, 1, "", "surf_directions"]], "matscipy.hessian_finite_differences": [[103, 1, 1, "", "fd_hessian"]], "matscipy.hydrogenate": [[104, 1, 1, "", "hydrogenate"]], "matscipy.io": [[106, 0, 0, "-", "lammpsdata"], [107, 0, 0, "-", "metis"], [108, 0, 0, "-", "opls"], [109, 0, 0, "-", "tbl"]], "matscipy.io.lammpsdata": [[106, 2, 1, "", "LAMMPSData"], [106, 1, 1, "", "check_legal_name"], [106, 1, 1, "", "column_size"], [106, 1, 1, "", "read_molecules_from_lammps_data"]], "matscipy.io.lammpsdata.LAMMPSData": [[106, 3, 1, "", "__init__"], [106, 3, 1, "", "read"], [106, 3, 1, "", "write"]], "matscipy.io.metis": [[107, 1, 1, "", "save_metis"]], "matscipy.io.opls": [[108, 1, 1, "", "read_block"], [108, 1, 1, "", "read_cutoffs"], [108, 1, 1, "", "read_extended_xyz"], [108, 1, 1, "", "read_lammps_data"], [108, 1, 1, "", "read_lammps_definitions"], [108, 1, 1, "", "read_parameter_file"], [108, 1, 1, "", "update_from_lammps_dump"], [108, 1, 1, "", "write_lammps"], [108, 1, 1, "", "write_lammps_atoms"], [108, 1, 1, "", "write_lammps_definitions"], [108, 1, 1, "", "write_lammps_in"]], "matscipy.io.tbl": [[109, 1, 1, "", "loadtbl"], [109, 1, 1, "", "savetbl"]], "matscipy.logger": [[110, 2, 1, "", "Logger"], [110, 1, 1, "", "flatten"], [110, 1, 1, "", "hdr_str"], [110, 1, 1, "", "hdrfmt_str"], [110, 1, 1, "", "numfmt_str"]], "matscipy.logger.Logger": [[110, 3, 1, "", "__init__"], [110, 3, 1, "", "flush"], [110, 3, 1, "", "get_logfile"], [110, 3, 1, "", "has_logfile"], [110, 3, 1, "", "iteration_finished"], [110, 3, 1, "", "pr"], [110, 3, 1, "", "set_logfile"], [110, 3, 1, "", "set_outevery"], [110, 3, 1, "", "st"], [110, 3, 1, "", "warn"]], "matscipy.molecules": [[111, 2, 1, "", "Molecules"]], "matscipy.molecules.Molecules": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "from_atoms"], [111, 3, 1, "", "get_angles"], [111, 3, 1, "", "get_dihedrals"], [111, 3, 1, "", "get_distances"]], "matscipy.neighbours": [[112, 2, 1, "", "CutoffNeighbourhood"], [112, 2, 1, "", "MolecularNeighbourhood"], [112, 2, 1, "", "Neighbourhood"], [112, 1, 1, "", "find_common_neighbours"], [112, 1, 1, "", "find_indices_of_reversed_pairs"], [112, 1, 1, "", "mic"], [112, 1, 1, "", "neighbour_list"], [112, 1, 1, "", "triplet_list"]], "matscipy.neighbours.CutoffNeighbourhood": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "compute_distances"], [112, 3, 1, "", "connected_triplets"], [112, 3, 1, "", "double_neighbourhood"], [112, 3, 1, "", "find_triplet_types"], [112, 3, 1, "", "get_pairs"], [112, 3, 1, "", "get_triplets"], [112, 3, 1, "", "lexsort"], [112, 3, 1, "", "make_result"], [112, 3, 1, "", "mask"], [112, 3, 1, "", "reverse_pair_indices"], [112, 3, 1, "", "triplet_to_numbers"]], "matscipy.neighbours.MolecularNeighbourhood": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "complete_connectivity"], [112, 3, 1, "", "compute_distances"], [112, 3, 1, "", "connected_triplets"], [112, 3, 1, "", "double_connectivity"], [112, 3, 1, "", "double_neighbourhood"], [112, 3, 1, "", "find_triplet_types"], [112, 3, 1, "", "get_pairs"], [112, 3, 1, "", "get_triplets"], [112, 3, 1, "", "lexsort"], [112, 3, 1, "", "make_result"], [112, 3, 1, "", "mask"], [112, 5, 1, "", "molecules"], [112, 5, 1, "", "pair_type"], [112, 3, 1, "", "reverse_pair_indices"], [112, 3, 1, "", "triplet_to_numbers"], [112, 5, 1, "", "triplet_type"]], "matscipy.neighbours.Neighbourhood": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "compute_distances"], [112, 3, 1, "", "connected_triplets"], [112, 3, 1, "", "double_neighbourhood"], [112, 3, 1, "", "find_triplet_types"], [112, 3, 1, "", "get_pairs"], [112, 3, 1, "", "get_triplets"], [112, 3, 1, "", "lexsort"], [112, 3, 1, "", "make_result"], [112, 3, 1, "", "mask"], [112, 3, 1, "", "reverse_pair_indices"], [112, 3, 1, "", "triplet_to_numbers"]], "matscipy.numerical": [[113, 1, 1, "", "get_derivative_volume"], [113, 1, 1, "", "get_derivative_wave_vector"], [113, 1, 1, "", "numerical_forces"], [113, 1, 1, "", "numerical_hessian"], [113, 1, 1, "", "numerical_nonaffine_forces"], [113, 1, 1, "", "numerical_nonaffine_forces_reference"], [113, 1, 1, "", "numerical_stress"]], "matscipy.numpy_tricks": [[114, 1, 1, "", "mabincount"]], "matscipy.opls": [[115, 2, 1, "", "AnglesData"], [115, 2, 1, "", "BondData"], [115, 2, 1, "", "CutoffList"], [115, 2, 1, "", "DihedralsData"], [115, 2, 1, "", "LJQData"], [115, 2, 1, "", "OPLSStructure"], [115, 1, 1, "", "twochar"]], "matscipy.opls.AnglesData": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "add_name"], [115, 3, 1, "", "get_name"], [115, 3, 1, "", "name_value"], [115, 3, 1, "", "set_names"]], "matscipy.opls.BondData": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "get_name"], [115, 3, 1, "", "get_value"], [115, 3, 1, "", "name_value"], [115, 3, 1, "", "set_names"]], "matscipy.opls.CutoffList": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "get_name"], [115, 3, 1, "", "get_value"], [115, 3, 1, "", "max"], [115, 3, 1, "", "name_value"], [115, 3, 1, "", "set_names"]], "matscipy.opls.DihedralsData": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "add_name"], [115, 3, 1, "", "get_name"], [115, 3, 1, "", "name_value"], [115, 3, 1, "", "set_names"]], "matscipy.opls.LJQData": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "clear"], [115, 3, 1, "", "copy"], [115, 3, 1, "", "fromkeys"], [115, 3, 1, "", "get"], [115, 3, 1, "", "items"], [115, 3, 1, "", "keys"], [115, 3, 1, "", "pop"], [115, 3, 1, "", "popitem"], [115, 3, 1, "", "setdefault"], [115, 3, 1, "", "update"], [115, 3, 1, "", "values"]], "matscipy.opls.OPLSStructure": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "append"], [115, 4, 1, "", "ase_objtype"], [115, 5, 1, "", "calc"], [115, 5, 1, "", "cell"], [115, 3, 1, "", "center"], [115, 5, 1, "", "constraints"], [115, 3, 1, "", "copy"], [115, 4, 1, "", "default_map"], [115, 3, 1, "", "edit"], [115, 3, 1, "", "euler_rotate"], [115, 3, 1, "", "extend"], [115, 3, 1, "", "fromdict"], [115, 3, 1, "", "get_all_distances"], [115, 3, 1, "", "get_angle"], [115, 3, 1, "", "get_angles"], [115, 3, 1, "", "get_angular_momentum"], [115, 3, 1, "", "get_array"], [115, 3, 1, "", "get_atomic_numbers"], [115, 3, 1, "", "get_bonds"], [115, 3, 1, "", "get_calculator"], [115, 3, 1, "", "get_cell"], [115, 3, 1, "", "get_cell_lengths_and_angles"], [115, 3, 1, "", "get_celldisp"], [115, 3, 1, "", "get_center_of_mass"], [115, 3, 1, "", "get_charges"], [115, 3, 1, "", "get_chemical_formula"], [115, 3, 1, "", "get_chemical_symbols"], [115, 3, 1, "", "get_dihedral"], [115, 3, 1, "", "get_dihedrals"], [115, 3, 1, "", "get_dipole_moment"], [115, 3, 1, "", "get_distance"], [115, 3, 1, "", "get_distances"], [115, 3, 1, "", "get_forces"], [115, 3, 1, "", "get_global_number_of_atoms"], [115, 3, 1, "", "get_initial_charges"], [115, 3, 1, "", "get_initial_magnetic_moments"], [115, 3, 1, "", "get_kinetic_energy"], [115, 3, 1, "", "get_magnetic_moment"], [115, 3, 1, "", "get_magnetic_moments"], [115, 3, 1, "", "get_masses"], [115, 3, 1, "", "get_momenta"], [115, 3, 1, "", "get_moments_of_inertia"], [115, 3, 1, "", "get_neighbors"], [115, 3, 1, "", "get_number_of_atoms"], [115, 3, 1, "", "get_pbc"], [115, 3, 1, "", "get_positions"], [115, 3, 1, "", "get_potential_energies"], [115, 3, 1, "", "get_potential_energy"], [115, 3, 1, "", "get_properties"], [115, 3, 1, "", "get_reciprocal_cell"], [115, 3, 1, "", "get_scaled_positions"], [115, 3, 1, "", "get_stress"], [115, 3, 1, "", "get_stresses"], [115, 3, 1, "", "get_tags"], [115, 3, 1, "", "get_temperature"], [115, 3, 1, "", "get_total_energy"], [115, 3, 1, "", "get_types"], [115, 3, 1, "", "get_velocities"], [115, 3, 1, "", "get_volume"], [115, 3, 1, "", "has"], [115, 3, 1, "", "iterimages"], [115, 3, 1, "", "new_array"], [115, 5, 1, "", "number_of_lattice_vectors"], [115, 5, 1, "", "numbers"], [115, 5, 1, "", "pbc"], [115, 3, 1, "", "pop"], [115, 5, 1, "", "positions"], [115, 3, 1, "", "rattle"], [115, 3, 1, "", "repeat"], [115, 3, 1, "", "rotate"], [115, 3, 1, "", "rotate_dihedral"], [115, 3, 1, "", "set_angle"], [115, 3, 1, "", "set_array"], [115, 3, 1, "", "set_atom_data"], [115, 3, 1, "", "set_atomic_numbers"], [115, 3, 1, "", "set_calculator"], [115, 3, 1, "", "set_cell"], [115, 3, 1, "", "set_celldisp"], [115, 3, 1, "", "set_center_of_mass"], [115, 3, 1, "", "set_chemical_symbols"], [115, 3, 1, "", "set_constraint"], [115, 3, 1, "", "set_cutoffs"], [115, 3, 1, "", "set_dihedral"], [115, 3, 1, "", "set_distance"], [115, 3, 1, "", "set_initial_charges"], [115, 3, 1, "", "set_initial_magnetic_moments"], [115, 3, 1, "", "set_masses"], [115, 3, 1, "", "set_momenta"], [115, 3, 1, "", "set_pbc"], [115, 3, 1, "", "set_positions"], [115, 3, 1, "", "set_scaled_positions"], [115, 3, 1, "", "set_tags"], [115, 3, 1, "", "set_types"], [115, 3, 1, "", "set_velocities"], [115, 5, 1, "", "symbols"], [115, 3, 1, "", "todict"], [115, 3, 1, "", "translate"], [115, 3, 1, "", "wrap"], [115, 3, 1, "", "write"]], "matscipy.optimize": [[116, 1, 1, "", "ode12r"]], "matscipy.precon": [[117, 2, 1, "", "HessianPrecon"]], "matscipy.precon.HessianPrecon": [[117, 3, 1, "", "Pdot"], [117, 3, 1, "", "__init__"], [117, 3, 1, "", "apply"], [117, 3, 1, "", "asarray"], [117, 3, 1, "", "copy"], [117, 3, 1, "", "dot"], [117, 3, 1, "", "make_precon"], [117, 3, 1, "", "norm"], [117, 3, 1, "", "solve"], [117, 3, 1, "", "vdot"]], "matscipy.pressurecoupling": [[118, 2, 1, "", "AutoDamping"], [118, 2, 1, "", "FixedDamping"], [118, 2, 1, "", "FixedMassCriticalDamping"], [118, 2, 1, "", "SlideLog"], [118, 2, 1, "", "SlideLogger"], [118, 2, 1, "", "SlideWithNormalPressureCuboidCell"]], "matscipy.pressurecoupling.AutoDamping": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedDamping": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.FixedMassCriticalDamping": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "get_M_gamma"]], "matscipy.pressurecoupling.SlideLog": [[118, 4, 1, "", "P_bottom"], [118, 4, 1, "", "P_top"], [118, 4, 1, "", "T_thermostat"], [118, 3, 1, "", "__init__"], [118, 4, 1, "", "a"], [118, 4, 1, "", "h"], [118, 4, 1, "", "rows"], [118, 4, 1, "", "step"], [118, 4, 1, "", "tau_bottom"], [118, 4, 1, "", "tau_top"], [118, 4, 1, "", "time"], [118, 4, 1, "", "v"]], "matscipy.pressurecoupling.SlideLogger": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "write_header"]], "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell": [[118, 5, 1, "", "Tdir"], [118, 3, 1, "", "__init__"], [118, 3, 1, "", "adjust_forces"], [118, 3, 1, "", "adjust_momenta"], [118, 3, 1, "", "adjust_positions"], [118, 3, 1, "", "adjust_potential_energy"], [118, 3, 1, "", "get_A"], [118, 5, 1, "", "middle_mask"]], "matscipy.rings": [[119, 1, 1, "", "ring_statistics"]], "matscipy.socketcalc": [[120, 2, 1, "", "AtomsRequestHandler"], [120, 4, 1, "", "AtomsServer"], [120, 2, 1, "", "AtomsServerAsync"], [120, 2, 1, "", "AtomsServerSync"], [120, 2, 1, "", "CastepClient"], [120, 2, 1, "", "Client"], [120, 2, 1, "", "QMClient"], [120, 2, 1, "", "QUIPClient"], [120, 2, 1, "", "SocketCalculator"], [120, 2, 1, "", "VaspClient"], [120, 1, 1, "", "pack_atoms_to_reftraj_str"], [120, 1, 1, "", "pack_atoms_to_xyz_str"], [120, 1, 1, "", "pack_results_to_reftraj_output_str"], [120, 1, 1, "", "unpack_reftraj_output_str_to_results"], [120, 1, 1, "", "unpack_reftraj_str_to_atoms"], [120, 1, 1, "", "unpack_xyz_str_to_results"]], "matscipy.socketcalc.AtomsRequestHandler": [[120, 3, 1, "", "__init__"], [120, 4, 1, "", "disable_nagle_algorithm"], [120, 3, 1, "", "finish"], [120, 3, 1, "", "handle"], [120, 4, 1, "", "rbufsize"], [120, 3, 1, "", "setup"], [120, 4, 1, "", "timeout"], [120, 4, 1, "", "wbufsize"]], "matscipy.socketcalc.AtomsServerAsync": [[120, 3, 1, "", "__init__"], [120, 4, 1, "", "address_family"], [120, 4, 1, "", "allow_reuse_address"], [120, 4, 1, "", "block_on_close"], [120, 3, 1, "", "close_request"], [120, 4, 1, "", "daemon_threads"], [120, 3, 1, "", "fileno"], [120, 3, 1, "", "finish_request"], [120, 3, 1, "", "get_request"], [120, 3, 1, "", "get_results"], [120, 3, 1, "", "handle_error"], [120, 3, 1, "", "handle_request"], [120, 3, 1, "", "handle_timeout"], [120, 3, 1, "", "join_all"], [120, 3, 1, "", "process_request"], [120, 3, 1, "", "process_request_thread"], [120, 3, 1, "", "put"], [120, 4, 1, "", "request_queue_size"], [120, 3, 1, "", "serve_forever"], [120, 3, 1, "", "server_activate"], [120, 3, 1, "", "server_bind"], [120, 3, 1, "", "server_close"], [120, 3, 1, "", "service_actions"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "shutdown_clients"], [120, 3, 1, "", "shutdown_request"], [120, 4, 1, "", "socket_type"], [120, 4, 1, "", "timeout"], [120, 3, 1, "", "verify_request"]], "matscipy.socketcalc.AtomsServerSync": [[120, 3, 1, "", "__init__"], [120, 4, 1, "", "address_family"], [120, 4, 1, "", "allow_reuse_address"], [120, 3, 1, "", "close_request"], [120, 3, 1, "", "fileno"], [120, 3, 1, "", "finish_request"], [120, 3, 1, "", "get_request"], [120, 3, 1, "", "get_results"], [120, 3, 1, "", "handle_error"], [120, 3, 1, "", "handle_request"], [120, 3, 1, "", "handle_timeout"], [120, 3, 1, "", "join_all"], [120, 3, 1, "", "process_request"], [120, 3, 1, "", "put"], [120, 4, 1, "", "request_queue_size"], [120, 3, 1, "", "serve_forever"], [120, 3, 1, "", "server_activate"], [120, 3, 1, "", "server_bind"], [120, 3, 1, "", "server_close"], [120, 3, 1, "", "service_actions"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "shutdown_clients"], [120, 3, 1, "", "shutdown_request"], [120, 4, 1, "", "socket_type"], [120, 4, 1, "", "timeout"], [120, 3, 1, "", "verify_request"]], "matscipy.socketcalc.CastepClient": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "extra_args"], [120, 3, 1, "", "is_compatible"], [120, 3, 1, "", "postprocess"], [120, 3, 1, "", "preprocess"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "start"], [120, 3, 1, "", "start_or_restart"], [120, 3, 1, "", "wait_for_shutdown"], [120, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.Client": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "extra_args"], [120, 3, 1, "", "is_compatible"], [120, 3, 1, "", "postprocess"], [120, 3, 1, "", "preprocess"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "start"], [120, 3, 1, "", "start_or_restart"], [120, 3, 1, "", "wait_for_shutdown"], [120, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.QMClient": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "extra_args"], [120, 3, 1, "", "is_compatible"], [120, 3, 1, "", "postprocess"], [120, 3, 1, "", "preprocess"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "start"], [120, 3, 1, "", "start_or_restart"], [120, 3, 1, "", "wait_for_shutdown"], [120, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.QUIPClient": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "extra_args"], [120, 3, 1, "", "is_compatible"], [120, 3, 1, "", "postprocess"], [120, 3, 1, "", "preprocess"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "start"], [120, 3, 1, "", "start_or_restart"], [120, 3, 1, "", "wait_for_shutdown"], [120, 3, 1, "", "write_input_files"]], "matscipy.socketcalc.SocketCalculator": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "band_structure"], [120, 3, 1, "", "calculate"], [120, 3, 1, "", "calculate_numerical_forces"], [120, 3, 1, "", "calculate_numerical_stress"], [120, 3, 1, "", "calculate_properties"], [120, 3, 1, "", "calculation_required"], [120, 3, 1, "", "check_state"], [120, 4, 1, "", "default_parameters"], [120, 5, 1, "", "directory"], [120, 4, 1, "", "discard_results_on_any_change"], [120, 3, 1, "", "export_properties"], [120, 3, 1, "", "get_atoms"], [120, 3, 1, "", "get_charges"], [120, 3, 1, "", "get_default_parameters"], [120, 3, 1, "", "get_dipole_moment"], [120, 3, 1, "", "get_forces"], [120, 3, 1, "", "get_magnetic_moment"], [120, 3, 1, "", "get_magnetic_moments"], [120, 3, 1, "", "get_potential_energies"], [120, 3, 1, "", "get_potential_energy"], [120, 3, 1, "", "get_property"], [120, 3, 1, "", "get_stress"], [120, 3, 1, "", "get_stresses"], [120, 4, 1, "", "ignored_changes"], [120, 4, 1, "", "implemented_properties"], [120, 5, 1, "", "label"], [120, 4, 1, "", "name"], [120, 3, 1, "", "read"], [120, 3, 1, "", "read_atoms"], [120, 3, 1, "", "reset"], [120, 3, 1, "", "set"], [120, 3, 1, "", "set_label"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "todict"]], "matscipy.socketcalc.VaspClient": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "extra_args"], [120, 3, 1, "", "is_compatible"], [120, 3, 1, "", "postprocess"], [120, 3, 1, "", "preprocess"], [120, 3, 1, "", "shutdown"], [120, 3, 1, "", "start"], [120, 3, 1, "", "start_or_restart"], [120, 3, 1, "", "wait_for_shutdown"], [120, 3, 1, "", "write_input_files"]], "matscipy.spatial_correlation_function": [[121, 1, 1, "", "betrag"], [121, 1, 1, "", "max_rad"], [121, 1, 1, "", "spatial_correlation_function"], [121, 1, 1, "", "spatial_correlation_function_near"]], "matscipy.surface": [[122, 1, 1, "", "MillerDirection"], [122, 2, 1, "", "MillerIndex"], [122, 1, 1, "", "MillerPlane"], [122, 1, 1, "", "angle_between"], [122, 1, 1, "", "find_surface_energy"], [122, 1, 1, "", "gcd"], [122, 1, 1, "", "make_unit_slab"]], "matscipy.surface.MillerIndex": [[122, 4, 1, "", "ALIGNED"], [122, 4, 1, "", "BEHAVED"], [122, 4, 1, "", "CARRAY"], [122, 4, 1, "", "C_CONTIGUOUS"], [122, 4, 1, "", "FARRAY"], [122, 4, 1, "", "FNC"], [122, 4, 1, "", "FORC"], [122, 4, 1, "", "F_CONTIGUOUS"], [122, 4, 1, "", "OWNDATA"], [122, 4, 1, "", "T"], [122, 4, 1, "", "WRITEABLE"], [122, 4, 1, "", "WRITEBACKIFCOPY"], [122, 3, 1, "", "all"], [122, 4, 1, "", "all_brackets"], [122, 3, 1, "", "angle"], [122, 3, 1, "", "any"], [122, 3, 1, "", "argmax"], [122, 3, 1, "", "argmin"], [122, 3, 1, "", "argpartition"], [122, 3, 1, "", "argsort"], [122, 3, 1, "", "as3"], [122, 3, 1, "", "as4"], [122, 3, 1, "", "astype"], [122, 4, 1, "", "base"], [122, 4, 1, "", "brackets"], [122, 3, 1, "", "byteswap"], [122, 3, 1, "", "choose"], [122, 3, 1, "", "clip"], [122, 3, 1, "", "compress"], [122, 3, 1, "", "conj"], [122, 3, 1, "", "conjugate"], [122, 3, 1, "", "copy"], [122, 3, 1, "", "cosine"], [122, 3, 1, "", "cross"], [122, 4, 1, "", "ctypes"], [122, 3, 1, "", "cumprod"], [122, 3, 1, "", "cumsum"], [122, 4, 1, "", "data"], [122, 3, 1, "", "diagonal"], [122, 3, 1, "", "dot"], [122, 4, 1, "", "dtype"], [122, 3, 1, "", "dump"], [122, 3, 1, "", "dumps"], [122, 3, 1, "", "fill"], [122, 4, 1, "", "flags"], [122, 4, 1, "", "flat"], [122, 3, 1, "", "flatten"], [122, 3, 1, "", "getfield"], [122, 3, 1, "", "hat"], [122, 4, 1, "", "imag"], [122, 3, 1, "", "item"], [122, 3, 1, "", "itemset"], [122, 4, 1, "", "itemsize"], [122, 3, 1, "", "latex"], [122, 3, 1, "", "max"], [122, 3, 1, "", "mean"], [122, 3, 1, "", "min"], [122, 4, 1, "", "nbytes"], [122, 4, 1, "", "ndim"], [122, 3, 1, "", "newbyteorder"], [122, 3, 1, "", "nonzero"], [122, 3, 1, "", "norm"], [122, 3, 1, "", "normalised"], [122, 3, 1, "", "parse"], [122, 3, 1, "", "partition"], [122, 3, 1, "", "plane_spacing"], [122, 3, 1, "", "prod"], [122, 3, 1, "", "ptp"], [122, 3, 1, "", "put"], [122, 3, 1, "", "ravel"], [122, 4, 1, "", "real"], [122, 3, 1, "", "repeat"], [122, 3, 1, "", "reshape"], [122, 3, 1, "", "resize"], [122, 3, 1, "", "round"], [122, 3, 1, "", "searchsorted"], [122, 3, 1, "", "setfield"], [122, 3, 1, "", "setflags"], [122, 4, 1, "", "shape"], [122, 3, 1, "", "simplified"], [122, 3, 1, "", "simplify"], [122, 4, 1, "", "size"], [122, 3, 1, "", "sort"], [122, 3, 1, "", "squeeze"], [122, 3, 1, "", "std"], [122, 4, 1, "", "strides"], [122, 3, 1, "", "sum"], [122, 3, 1, "", "swapaxes"], [122, 3, 1, "", "take"], [122, 3, 1, "", "tobytes"], [122, 3, 1, "", "tofile"], [122, 3, 1, "", "tolist"], [122, 3, 1, "", "tostring"], [122, 3, 1, "", "trace"], [122, 3, 1, "", "transpose"], [122, 3, 1, "", "var"], [122, 3, 1, "", "view"]], "matscipy.surface_reconstruction": [[123, 2, 1, "", "SurfaceReconstruction"]], "matscipy.surface_reconstruction.SurfaceReconstruction": [[123, 3, 1, "", "__init__"], [123, 3, 1, "", "apply_pandey_111"], [123, 3, 1, "", "apply_si_110"], [123, 3, 1, "", "apply_surface_shift"], [123, 3, 1, "", "identify_layers"], [123, 3, 1, "", "identify_pandey_layers"], [123, 3, 1, "", "identify_si_110_layers"], [123, 3, 1, "", "map_pandey_111"], [123, 3, 1, "", "map_si_110_3x1"], [123, 3, 1, "", "map_surface"]], "matscipy.utils": [[124, 1, 1, "", "complete_basis"], [124, 1, 1, "", "get_structure_types"], [124, 1, 1, "", "validate_cubic_cell"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"api": 0, "refer": [0, 4, 6, 86], "applic": [0, 10], "domain": [0, 10], "structur": [0, 23, 132], "topologi": [0, 132, 134], "gener": [0, 6, 9, 23, 132, 134], "analysi": [0, 128, 131], "tool": [0, 128], "interatom": [0, 16, 18, 129], "potenti": [0, 16, 17, 18, 49, 129], "util": [0, 33, 124], "function": [0, 127, 130], "build": [1, 13, 134], "cylindr": 1, "configur": [1, 6], "disloc": [1, 8, 11, 86], "access": [1, 8], "kei": 1, "properti": [1, 13, 129], "avail": 1, "system": [1, 4, 5, 8, 11, 13, 14], "bodi": [1, 17], "center": 1, "cubic": 1, "1": [1, 6, 9], "2": [1, 6, 9], "111": 1, "110": [1, 123], "screw": 1, "edg": 1, "mix": 1, "100": 1, "junction": 1, "001": 1, "face": 1, "perfect": 1, "dissoci": 1, "diamond": 1, "60": 1, "degre": 1, "elast": [2, 13, 88], "constant": 2, "problem": 2, "setup": [2, 14, 133], "crystallin": 2, "With": 2, "second": 2, "order": 2, "deriv": 2, "amorph": [2, 134], "fit": [2, 40], "electrochemistri": [3, 20, 75, 76, 77, 78, 89, 90, 91, 92, 93, 94], "acknowledg": 3, "One": 4, "dimension": 4, "poisson": [4, 5], "nernst": [4, 5], "planck": [4, 5], "The": 4, "inert": 4, "electrod": 4, "prepar": 4, "solv": 4, "dirichlet": 4, "zero": 4, "flux": 4, "boundari": [4, 5], "condit": [4, 5], "valid": 4, "analyt": 4, "half": 4, "space": [4, 130], "solut": 4, "v": 4, "numer": [4, 113], "finit": [4, 5], "interv": 4, "pnp": 4, "electrochem": 4, "cell": [4, 9, 86], "visual": [4, 6], "from": [4, 6], "continu": [4, 6, 21], "doubl": 4, "layer": 4, "theori": 4, "discret": 4, "coordin": [4, 6], "set": 4, "stern": 4, "robin": 4, "sampl": [4, 6], "distribut": [4, 6, 127, 130], "export": [4, 6], "element": 5, "method": [5, 9], "agreement": 5, "solver": 5, "moder": 5, "converg": 5, "issu": 5, "extrem": 5, "nonlinear": 5, "steric": 6, "correct": 6, "step": 6, "concentr": 6, "3": 6, "enforc": 6, "radii": 6, "inspect": 6, "initi": [6, 13, 14], "appli": [6, 13], "fractur": [7, 13, 21], "mechan": [7, 21], "advanc": 8, "featur": 8, "gamma_surfac": [8, 102], "py": 8, "stack": [8, 9], "fault": [8, 9], "specif": 8, "differ": [8, 134], "plane": 8, "more": 8, "complex": 8, "gamma": 9, "surfac": [9, 122], "atom": [9, 129, 134], "move": 9, "exampl": [9, 95], "us": [9, 125, 126], "multi": 11, "speci": 11, "addit": 11, "multispeci": 11, "disord": 11, "plastic": 12, "instal": 12, "test": 12, "tutori": 12, "quasi": 13, "static": 13, "simul": [13, 14, 133, 134], "basic": [13, 129], "usag": [13, 20, 95, 129], "bulk": 13, "crack": [13, 21, 98], "strain": 13, "field": 13, "tribologi": 14, "pressur": 14, "equilibr": 14, "restart": 14, "slide": 14, "mani": 17, "kumagai": [17, 45], "other": 17, "matscipi": [18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "averag": 18, "eam": [18, 34, 35, 36, 37], "diffus": [19, 73, 74], "rm": [19, 74], "overview": 20, "command": [20, 22, 125, 126], "quasistat": 21, "sinclair": 21, "line": [22, 125, 126], "interfac": [22, 125, 126], "quench": [23, 84], "angle_distribut": 26, "atomic_strain": 27, "calcul": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 86], "committe": [30, 31, 32, 33], "log": 32, "average_atom": 35, "io": [37, 105, 106, 107, 108, 109], "ewald": [38, 39], "manybodi": [41, 42, 43, 44, 45, 46, 47, 48, 49], "explicit_form": [43, 44, 45, 46, 47], "harmon": 44, "stillinger_web": 46, "tersoff_brenn": 47, "newmb": 48, "mcfm": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "cluster_data": 52, "mcfm_parallel": [53, 54, 55], "mcfm_parallel_control": 54, "mcfm_parallel_work": 55, "neighbour_list_mcfm": [56, 57, 58], "neighbour_list_bas": 57, "qm_cluster": 59, "qm_cluster_tool": [60, 61, 62, 63], "base_qm_cluster_tool": 61, "qm_clustering_tool": 62, "qm_flagging_tool": 63, "pair_potenti": [64, 65], "polydispers": [66, 67], "supercell_calcul": 68, "cauchy_born": 69, "cli": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "average_eam_potenti": 72, "continuous2discret": [76, 90], "poisson_nernst_planck_solv": [77, 92], "stericifi": 78, "fracture_mechan": [79, 80, 81, 82, 96, 97, 98, 99, 100, 101], "quasistatic_crack": 80, "setup_crack": 81, "sinclair_crack": 82, "glass": [83, 84], "deform": 85, "vector": 86, "drift": 87, "poisson_boltzmann_distribut": 91, "poisson_nernst_planck_solver_fen": 93, "steric_correct": 94, "ffi": 95, "cluster": 97, "crackpathsel": 99, "energy_releas": 100, "idealbrittlesolid": 101, "hessian_finite_differ": 103, "hydrogen": 104, "lammpsdata": 106, "meti": 107, "opl": [108, 115], "tbl": 109, "logger": 110, "molecul": 111, "neighbour": [112, 129], "numpy_trick": 114, "optim": 116, "precon": 117, "pressurecoupl": 118, "ring": [119, 131], "socketcalc": 120, "spatial_correlation_funct": 121, "surface_reconstruct": 123, "map": 123, "silicon": 123, "3x1": 123, "relax": 123, "crystal": 123, "get": [125, 126], "start": [125, 126], "librari": [125, 126], "via": [125, 126], "tabl": 126, "content": 126, "indic": 126, "angl": 127, "list": 129, "per": 129, "pair": 130, "real": 130, "fourier": 130, "non": [133, 134], "reactiv": [133, 134], "lammp": [133, 134], "md": 134, "carbon": 134, "assign": 134, "type": 134, "bond": 134, "input": 134, "file": 134}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"matscipy.angle_distribution": [[26, "module-matscipy.angle_distribution"]], "Fracture mechanics": [[21, "fracture-mechanics"]], "matscipy-quasistatic-crack": [[21, "matscipy-quasistatic-crack"]], "matscipy-sinclair-crack": [[21, "matscipy-sinclair-crack"]], "matscipy-sinclair-continuation": [[21, "matscipy-sinclair-continuation"]], "matscipy.calculators": [[28, "module-matscipy.calculators"]], "Diffusion": [[19, "diffusion"]], "matscipy-rms": [[19, "matscipy-rms"]], "Interatomic potentials": [[18, "interatomic-potentials"], [16, "interatomic-potentials"], [0, "interatomic-potentials"]], "matscipy-average-eam-potential": [[18, "matscipy-average-eam-potential"]], "matscipy.atomic_strain": [[27, "module-matscipy.atomic_strain"]], "matscipy.calculators.eam.average_atom": [[35, "module-matscipy.calculators.eam.average_atom"]], "matscipy.calculators.calculator": [[29, "module-matscipy.calculators.calculator"]], "Structure generation": [[23, "structure-generation"]], "matscipy-quench": [[23, "matscipy-quench"]], "Electrochemistry": [[20, "electrochemistry"], [3, "electrochemistry"]], "Overview of commands": [[20, "overview-of-commands"]], "Usage": [[20, "usage"]], "matscipy.calculators.committee.utils": [[33, "module-matscipy.calculators.committee.utils"]], "matscipy.calculators.committee.log": [[32, "module-matscipy.calculators.committee.log"]], "matscipy.calculators.eam": [[34, "module-matscipy.calculators.eam"]], "matscipy.calculators.committee.committee": [[31, "module-matscipy.calculators.committee.committee"]], "matscipy.calculators.committee": [[30, "module-matscipy.calculators.committee"]], "Command line interface": [[22, "command-line-interface"]], "matscipy": [[25, "module-matscipy"], [126, "matscipy"], [125, "matscipy"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[56, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[55, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "matscipy.cli.calculators": [[71, "module-matscipy.cli.calculators"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[58, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "matscipy.calculators.polydisperse.calculator": [[67, "module-matscipy.calculators.polydisperse.calculator"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[61, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[62, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[57, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "matscipy.calculators.polydisperse": [[66, "module-matscipy.calculators.polydisperse"]], "matscipy.calculators.supercell_calculator": [[68, "module-matscipy.calculators.supercell_calculator"]], "matscipy.cli": [[70, "module-matscipy.cli"]], "matscipy.calculators.mcfm.qm_cluster": [[59, "module-matscipy.calculators.mcfm.qm_cluster"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[54, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.pair_potential.calculator": [[65, "module-matscipy.calculators.pair_potential.calculator"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[60, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "matscipy.calculators.pair_potential": [[64, "module-matscipy.calculators.pair_potential"]], "matscipy.cauchy_born": [[69, "module-matscipy.cauchy_born"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[63, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "Topology building for LAMMPS non-reactive MD simulations of amorphous carbon": [[134, "topology-building-for-lammps-non-reactive-md-simulations-of-amorphous-carbon"]], "Assignment of the different atom types": [[134, "assignment-of-the-different-atom-types"]], "Generation of the bonding topology and LAMMPS input files": [[134, "generation-of-the-bonding-topology-and-lammps-input-files"]], "Pair-distribution function": [[130, "pair-distribution-function"]], "Real-space": [[130, "real-space"]], "Fourier space": [[130, "fourier-space"]], "Setups for non-reactive simulations with LAMMPS": [[133, "setups-for-non-reactive-simulations-with-lammps"]], "Structure and topology generation": [[132, "structure-and-topology-generation"], [0, "structure-and-topology-generation"]], "Getting started": [[126, "getting-started"], [125, "getting-started"]], "Using the library": [[126, "using-the-library"], [125, "using-the-library"]], "Via the command-line interface": [[126, "via-the-command-line-interface"], [125, "via-the-command-line-interface"]], "Table of Contents": [[126, null]], "Indices and tables": [[126, "indices-and-tables"]], "Angle-distribution function": [[127, "angle-distribution-function"]], "Ring analysis": [[131, "ring-analysis"]], "Neighbour list": [[129, "neighbour-list"]], "Basic usage": [[129, "basic-usage"], [13, "basic-usage"]], "Per-atom properties": [[129, "per-atom-properties"]], "Interatomic potential": [[129, "interatomic-potential"]], "Analysis tools": [[128, "analysis-tools"], [0, "analysis-tools"]], "matscipy.ffi": [[95, "module-matscipy.ffi"]], "Example usage:": [[95, "example-usage"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[101, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "matscipy.fracture_mechanics.crack": [[98, "module-matscipy.fracture_mechanics.crack"]], "matscipy.fracture_mechanics.clusters": [[97, "module-matscipy.fracture_mechanics.clusters"]], "matscipy.gamma_surface": [[102, "module-matscipy.gamma_surface"]], "matscipy.hydrogenate": [[104, "module-matscipy.hydrogenate"]], "matscipy.electrochemistry.steric_correction": [[94, "module-matscipy.electrochemistry.steric_correction"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[93, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"]], "matscipy.io.metis": [[107, "module-matscipy.io.metis"]], "matscipy.hessian_finite_differences": [[103, "module-matscipy.hessian_finite_differences"]], "matscipy.electrochemistry.continuous2discrete": [[90, "matscipy-electrochemistry-continuous2discrete"]], "matscipy.fracture_mechanics": [[96, "module-matscipy.fracture_mechanics"]], "matscipy.fracture_mechanics.crackpathsel": [[99, "module-matscipy.fracture_mechanics.crackpathsel"]], "matscipy.fracture_mechanics.energy_release": [[100, "module-matscipy.fracture_mechanics.energy_release"]], "matscipy.io": [[105, "module-matscipy.io"]], "matscipy.io.lammpsdata": [[106, "module-matscipy.io.lammpsdata"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[92, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[91, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "matscipy.calculators.manybody": [[41, "module-matscipy.calculators.manybody"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[44, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[45, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[46, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "matscipy.calculators.fitting": [[40, "module-matscipy.calculators.fitting"]], "matscipy.calculators.ewald.calculator": [[39, "module-matscipy.calculators.ewald.calculator"]], "matscipy.calculators.manybody.newmb": [[48, "module-matscipy.calculators.manybody.newmb"]], "matscipy.calculators.mcfm.mcfm_parallel": [[53, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "matscipy.calculators.eam.io": [[37, "module-matscipy.calculators.eam.io"]], "matscipy.calculators.manybody.explicit_forms": [[43, "module-matscipy.calculators.manybody.explicit_forms"]], "matscipy.calculators.eam.calculator": [[36, "module-matscipy.calculators.eam.calculator"]], "matscipy.calculators.manybody.potentials": [[49, "module-matscipy.calculators.manybody.potentials"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[47, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "matscipy.calculators.manybody.calculator": [[42, "module-matscipy.calculators.manybody.calculator"]], "matscipy.calculators.mcfm.cluster_data": [[52, "module-matscipy.calculators.mcfm.cluster_data"]], "matscipy.calculators.mcfm.calculator": [[51, "module-matscipy.calculators.mcfm.calculator"]], "matscipy.calculators.ewald": [[38, "module-matscipy.calculators.ewald"]], "matscipy.calculators.mcfm": [[50, "module-matscipy.calculators.mcfm"]], "matscipy.numerical": [[113, "module-matscipy.numerical"]], "matscipy.neighbours": [[112, "module-matscipy.neighbours"]], "matscipy.numpy_tricks": [[114, "module-matscipy.numpy_tricks"]], "matscipy.spatial_correlation_function": [[121, "module-matscipy.spatial_correlation_function"]], "matscipy.surface": [[122, "module-matscipy.surface"]], "matscipy.precon": [[117, "module-matscipy.precon"]], "matscipy.optimize": [[116, "module-matscipy.optimize"]], "matscipy.io.opls": [[108, "module-matscipy.io.opls"]], "matscipy.opls": [[115, "module-matscipy.opls"]], "matscipy.utils": [[124, "module-matscipy.utils"]], "matscipy.molecules": [[111, "module-matscipy.molecules"]], "matscipy.surface_reconstruction": [[123, "module-matscipy.surface_reconstruction"]], "Map the silicon 110 3x1 relaxation of the crystal.": [[123, "map-the-silicon-110-3x1-relaxation-of-the-crystal"]], "matscipy.pressurecoupling": [[118, "module-matscipy.pressurecoupling"]], "matscipy.logger": [[110, "module-matscipy.logger"]], "matscipy.rings": [[119, "module-matscipy.rings"]], "matscipy.io.tbl": [[109, "module-matscipy.io.tbl"]], "matscipy.socketcalc": [[120, "module-matscipy.socketcalc"]], "matscipy.elasticity": [[88, "module-matscipy.elasticity"]], "matscipy.electrochemistry": [[89, "module-matscipy.electrochemistry"]], "matscipy.cli.electrochemistry.poisson_nernst_planck_solver": [[77, "module-matscipy.cli.electrochemistry.poisson_nernst_planck_solver"]], "matscipy.dislocation": [[86, "module-matscipy.dislocation"]], "Calculation of cell vectors": [[86, "calculation-of-cell-vectors"]], "References:": [[86, "references"]], "matscipy.cli.fracture_mechanics.sinclair_crack": [[82, "module-matscipy.cli.fracture_mechanics.sinclair_crack"]], "matscipy.deformation": [[85, "module-matscipy.deformation"]], "matscipy.cli.diffusion": [[73, "module-matscipy.cli.diffusion"]], "matscipy.cli.diffusion.rms": [[74, "module-matscipy.cli.diffusion.rms"]], "matscipy.drift": [[87, "module-matscipy.drift"]], "matscipy.cli.electrochemistry.continuous2discrete": [[76, "module-matscipy.cli.electrochemistry.continuous2discrete"]], "matscipy.cli.fracture_mechanics": [[79, "module-matscipy.cli.fracture_mechanics"]], "matscipy.cli.electrochemistry": [[75, "module-matscipy.cli.electrochemistry"]], "matscipy.cli.glasses.quench": [[84, "module-matscipy.cli.glasses.quench"]], "matscipy.cli.fracture_mechanics.quasistatic_crack": [[80, "module-matscipy.cli.fracture_mechanics.quasistatic_crack"]], "matscipy.cli.electrochemistry.stericify": [[78, "module-matscipy.cli.electrochemistry.stericify"]], "matscipy.cli.glasses": [[83, "module-matscipy.cli.glasses"]], "matscipy.cli.calculators.average_eam_potential": [[72, "module-matscipy.cli.calculators.average_eam_potential"]], "matscipy.cli.fracture_mechanics.setup_crack": [[81, "module-matscipy.cli.fracture_mechanics.setup_crack"]], "Steric correction": [[6, "steric-correction"]], "Step 1: generating continuous concentration distributions": [[6, "step-1-generating-continuous-concentration-distributions"]], "Step 2: sampling from distributions": [[6, "step-2-sampling-from-distributions"]], "Step 3: enforcing steric radii": [[6, "step-3-enforcing-steric-radii"]], "Inspect the initial coordinate sample": [[6, "inspect-the-initial-coordinate-sample"]], "Apply the steric correction": [[6, "apply-the-steric-correction"]], "Visualize the applied corrections": [[6, "visualize-the-applied-corrections"]], "Export initial and steric configurations": [[6, "export-initial-and-steric-configurations"]], "References": [[6, "references"], [4, "references"]], "Many-body potentials": [[17, "many-body-potentials"]], "Kumagai potential": [[17, "kumagai-potential"]], "Other many-body potentials": [[17, "other-many-body-potentials"]], "Advanced Features of gamma_surface.py": [[8, "advanced-features-of-gamma-surface-py"]], "Stacking Faults of Specific Dislocations": [[8, "stacking-faults-of-specific-dislocations"]], "Accessing Different Stacking Fault Planes": [[8, "accessing-different-stacking-fault-planes"]], "Stacking Faults in more complex systems": [[8, "stacking-faults-in-more-complex-systems"]], "Elastic Constants": [[2, "elastic-constants"]], "Problem setup": [[2, "problem-setup"], [2, "id1"]], "Crystalline elastic constants": [[2, "crystalline-elastic-constants"]], "With second-order derivatives": [[2, "with-second-order-derivatives"]], "Amorphous elastic constants": [[2, "amorphous-elastic-constants"]], "Fitting elastic constants": [[2, "fitting-elastic-constants"]], "Fracture Mechanics": [[7, "fracture-mechanics"]], "Plasticity": [[12, "plasticity"]], "Installation and tests": [[12, "installation-and-tests"]], "Tutorials:": [[12, "tutorials"]], "Acknowledgements": [[3, "acknowledgements"]], "Building cylindrical configurations with dislocations": [[1, "building-cylindrical-configurations-with-dislocations"]], "Accessing Key Dislocation Properties": [[1, "accessing-key-dislocation-properties"]], "Available Dislocation Systems": [[1, "available-dislocation-systems"]], "Body Centered Cubic": [[1, "body-centered-cubic"]], "1/2<111>{110} screw dislocation": [[1, "screw-dislocation"]], "1/2<111>{110} edge dislocation": [[1, "edge-dislocation"]], "1/2<111>{110} mixed dislocation": [[1, "mixed-dislocation"]], "<100>{110} edge \u2018junction\u2019 dislocation": [[1, "edge-junction-dislocation"]], "<100>{001} edge dislocation": [[1, "id1"]], "Face Centered Cubic": [[1, "face-centered-cubic"]], "1/2<110>{111} screw dislocation (perfect and dissociated)": [[1, "screw-dislocation-perfect-and-dissociated"], [1, "id2"]], "1/2<110>{111} edge dislocation (perfect and dissociated)": [[1, "edge-dislocation-perfect-and-dissociated"]], "Diamond Cubic": [[1, "diamond-cubic"]], "1/2<110>{111} 60 degree screw dislocation (perfect and dissociated)": [[1, "degree-screw-dislocation-perfect-and-dissociated"]], "Generating Gamma Surfaces & Stacking Faults": [[9, "generating-gamma-surfaces-stacking-faults"]], "Method 1 - \u201cAtom Move\u201d Method": [[9, "method-1-atom-move-method"]], "Method 2 - \u201cCell Move\u201d Method": [[9, "method-2-cell-move-method"]], "Gamma Surface Example using Method 1": [[9, "gamma-surface-example-using-method-1"]], "Stacking Fault Example using Method 2": [[9, "stacking-fault-example-using-method-2"]], "Poisson-Nernst-Planck systems by finite element method": [[5, "poisson-nernst-planck-systems-by-finite-element-method"]], "Agreement of solvers for moderate boundary conditions": [[5, "agreement-of-solvers-for-moderate-boundary-conditions"]], "Convergence issues for extreme nonlinearities": [[5, "convergence-issues-for-extreme-nonlinearities"]], "Application domains": [[10, "application-domains"], [0, "application-domains"]], "Multi-species Dislocation Systems": [[11, "multi-species-dislocation-systems"]], "Additional Dislocations in Multispecies Systems": [[11, "additional-dislocations-in-multispecies-systems"]], "Dislocations in Disordered Systems": [[11, "dislocations-in-disordered-systems"]], "API Reference": [[0, "api-reference"]], "Utility functions": [[0, "utility-functions"]], "One-dimensional Poisson-Nernst-Planck systems": [[4, "one-dimensional-poisson-nernst-planck-systems"]], "The inert electrode": [[4, "the-inert-electrode"]], "Preparations": [[4, "preparations"]], "Solving with Dirichlet and zero flux boundary conditions": [[4, "solving-with-dirichlet-and-zero-flux-boundary-conditions"], [4, "id1"]], "Validation: Analytical half-space solution vs. numerical finite-interval PNP system": [[4, "validation-analytical-half-space-solution-vs-numerical-finite-interval-pnp-system"]], "The electrochemical cell": [[4, "the-electrochemical-cell"]], "Visualization": [[4, "visualization"], [4, "id2"]], "From continuous double layer theory to discrete coordinate sets": [[4, "from-continuous-double-layer-theory-to-discrete-coordinate-sets"]], "Poisson-Nernst-Planck-System with Stern layer boundary conditions": [[4, "poisson-nernst-planck-system-with-stern-layer-boundary-conditions"]], "Solving with Robin and zero flux boundary conditions": [[4, "solving-with-robin-and-zero-flux-boundary-conditions"]], "Sampling from continuous distributions": [[4, "sampling-from-continuous-distributions"]], "Coordinates export": [[4, "coordinates-export"]], "Tribology": [[14, "tribology"]], "System setup": [[14, "system-setup"]], "Initial pressure equilibration": [[14, "initial-pressure-equilibration"]], "Restarting a pressure equilibration": [[14, "restarting-a-pressure-equilibration"]], "Sliding simulation": [[14, "sliding-simulation"]], "Restarting a sliding simulation": [[14, "restarting-a-sliding-simulation"]], "Quasi static fracture simulations": [[13, "quasi-static-fracture-simulations"]], "Bulk and Elastic properties": [[13, "bulk-and-elastic-properties"]], "Build crack system": [[13, "build-crack-system"]], "Apply initial strain field": [[13, "apply-initial-strain-field"]]}, "indexentries": {"has_parameter() (in module matscipy)": [[25, "matscipy.has_parameter"]], "matscipy": [[25, "module-matscipy"]], "module": [[25, "module-matscipy"], [26, "module-matscipy.angle_distribution"], [27, "module-matscipy.atomic_strain"], [28, "module-matscipy.calculators"], [29, "module-matscipy.calculators.calculator"], [30, "module-matscipy.calculators.committee"], [31, "module-matscipy.calculators.committee.committee"], [32, "module-matscipy.calculators.committee.log"], [33, "module-matscipy.calculators.committee.utils"], [34, "module-matscipy.calculators.eam"], [35, "module-matscipy.calculators.eam.average_atom"], [36, "module-matscipy.calculators.eam.calculator"], [37, "module-matscipy.calculators.eam.io"], [38, "module-matscipy.calculators.ewald"], [39, "module-matscipy.calculators.ewald.calculator"], [40, "module-matscipy.calculators.fitting"], [41, "module-matscipy.calculators.manybody"], [42, "module-matscipy.calculators.manybody.calculator"], [43, "module-matscipy.calculators.manybody.explicit_forms"], [44, "module-matscipy.calculators.manybody.explicit_forms.harmonic"], [45, "module-matscipy.calculators.manybody.explicit_forms.kumagai"], [46, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"], [47, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"], [48, "module-matscipy.calculators.manybody.newmb"], [49, "module-matscipy.calculators.manybody.potentials"], [50, "module-matscipy.calculators.mcfm"], [51, "module-matscipy.calculators.mcfm.calculator"], [52, "module-matscipy.calculators.mcfm.cluster_data"], [53, "module-matscipy.calculators.mcfm.mcfm_parallel"], [54, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"], [55, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"], [56, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"], [57, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"], [58, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"], [59, "module-matscipy.calculators.mcfm.qm_cluster"], [60, "module-matscipy.calculators.mcfm.qm_cluster_tools"], [61, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"], [62, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"], [63, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"], [64, "module-matscipy.calculators.pair_potential"], [65, "module-matscipy.calculators.pair_potential.calculator"], [66, "module-matscipy.calculators.polydisperse"], [67, "module-matscipy.calculators.polydisperse.calculator"], [68, "module-matscipy.calculators.supercell_calculator"], [69, "module-matscipy.cauchy_born"], [70, "module-matscipy.cli"], [71, "module-matscipy.cli.calculators"], [72, "module-matscipy.cli.calculators.average_eam_potential"], [73, "module-matscipy.cli.diffusion"], [74, "module-matscipy.cli.diffusion.rms"], [75, "module-matscipy.cli.electrochemistry"], [76, "module-matscipy.cli.electrochemistry.continuous2discrete"], [77, "module-matscipy.cli.electrochemistry.poisson_nernst_planck_solver"], [78, "module-matscipy.cli.electrochemistry.stericify"], [79, "module-matscipy.cli.fracture_mechanics"], [80, "module-matscipy.cli.fracture_mechanics.quasistatic_crack"], [81, "module-matscipy.cli.fracture_mechanics.setup_crack"], [82, "module-matscipy.cli.fracture_mechanics.sinclair_crack"], [83, "module-matscipy.cli.glasses"], [84, "module-matscipy.cli.glasses.quench"], [85, "module-matscipy.deformation"], [86, "module-matscipy.dislocation"], [87, "module-matscipy.drift"], [88, "module-matscipy.elasticity"], [89, "module-matscipy.electrochemistry"], [91, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"], [92, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"], [93, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"], [94, "module-matscipy.electrochemistry.steric_correction"], [95, "module-matscipy.ffi"], [96, "module-matscipy.fracture_mechanics"], [97, "module-matscipy.fracture_mechanics.clusters"], [98, "module-matscipy.fracture_mechanics.crack"], [99, "module-matscipy.fracture_mechanics.crackpathsel"], [100, "module-matscipy.fracture_mechanics.energy_release"], [101, "module-matscipy.fracture_mechanics.idealbrittlesolid"], [102, "module-matscipy.gamma_surface"], [103, "module-matscipy.hessian_finite_differences"], [104, "module-matscipy.hydrogenate"], [105, "module-matscipy.io"], [106, "module-matscipy.io.lammpsdata"], [107, "module-matscipy.io.metis"], [108, "module-matscipy.io.opls"], [109, "module-matscipy.io.tbl"], [110, "module-matscipy.logger"], [111, "module-matscipy.molecules"], [112, "module-matscipy.neighbours"], [113, "module-matscipy.numerical"], [114, "module-matscipy.numpy_tricks"], [115, "module-matscipy.opls"], [116, "module-matscipy.optimize"], [117, "module-matscipy.precon"], [118, "module-matscipy.pressurecoupling"], [119, "module-matscipy.rings"], [120, "module-matscipy.socketcalc"], [121, "module-matscipy.spatial_correlation_function"], [122, "module-matscipy.surface"], [123, "module-matscipy.surface_reconstruction"], [124, "module-matscipy.utils"]], "parameter() (in module matscipy)": [[25, "matscipy.parameter"]], "angle_distribution() (in module matscipy.angle_distribution)": [[26, "matscipy.angle_distribution.angle_distribution"]], "matscipy.angle_distribution": [[26, "module-matscipy.angle_distribution"]], "array_inverse() (in module matscipy.atomic_strain)": [[27, "matscipy.atomic_strain.array_inverse"]], "atomic_strain() (in module matscipy.atomic_strain)": [[27, "matscipy.atomic_strain.atomic_strain"]], "get_d_square_min() (in module matscipy.atomic_strain)": [[27, "matscipy.atomic_strain.get_D_square_min"]], "get_xij() (in module matscipy.atomic_strain)": [[27, "matscipy.atomic_strain.get_XIJ"]], "get_yij() (in module matscipy.atomic_strain)": [[27, "matscipy.atomic_strain.get_YIJ"]], "get_delta_plus_epsilon() (in module matscipy.atomic_strain)": [[27, "matscipy.atomic_strain.get_delta_plus_epsilon"]], "get_delta_plus_epsilon_dgesv() (in module matscipy.atomic_strain)": [[27, "matscipy.atomic_strain.get_delta_plus_epsilon_dgesv"]], "matscipy.atomic_strain": [[27, "module-matscipy.atomic_strain"]], "matscipy.calculators": [[28, "module-matscipy.calculators"]], "matscipycalculator (class in matscipy.calculators.calculator)": [[29, "matscipy.calculators.calculator.MatscipyCalculator"]], "__init__() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.__init__"]], "band_structure() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.band_structure"]], "calculate() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.calculation_required"]], "check_state() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.check_state"]], "default_parameters (matscipy.calculators.calculator.matscipycalculator attribute)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.default_parameters"]], "directory (matscipy.calculators.calculator.matscipycalculator property)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.calculator.matscipycalculator attribute)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.export_properties"]], "get_atoms() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_elastic_constants"]], "get_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_forces"]], "get_hessian() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_property"]], "get_stress() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.calculator.matscipycalculator attribute)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.calculator.matscipycalculator attribute)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.implemented_properties"]], "label (matscipy.calculators.calculator.matscipycalculator property)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.label"]], "matscipy.calculators.calculator": [[29, "module-matscipy.calculators.calculator"]], "read() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.read"]], "read_atoms() (matscipy.calculators.calculator.matscipycalculator class method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.read_atoms"]], "reset() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.reset"]], "set() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.set"]], "set_label() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.set_label"]], "todict() (matscipy.calculators.calculator.matscipycalculator method)": [[29, "matscipy.calculators.calculator.MatscipyCalculator.todict"]], "matscipy.calculators.committee": [[30, "module-matscipy.calculators.committee"]], "committee (class in matscipy.calculators.committee.committee)": [[31, "matscipy.calculators.committee.committee.Committee"]], "committeemember (class in matscipy.calculators.committee.committee)": [[31, "matscipy.calculators.committee.committee.CommitteeMember"]], "committeeuncertainty (class in matscipy.calculators.committee.committee)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty"]], "__init__() (matscipy.calculators.committee.committee.committee method)": [[31, "matscipy.calculators.committee.committee.Committee.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeemember method)": [[31, "matscipy.calculators.committee.committee.CommitteeMember.__init__"]], "__init__() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.__init__"]], "add_member() (matscipy.calculators.committee.committee.committee method)": [[31, "matscipy.calculators.committee.committee.Committee.add_member"]], "alphas (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.alphas"]], "atoms (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.atoms"]], "atoms (matscipy.calculators.committee.committee.committeemember property)": [[31, "matscipy.calculators.committee.committee.CommitteeMember.atoms"]], "band_structure() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.band_structure"]], "calculate() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate"]], "calculate_numerical_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculate_properties"]], "calculation_required() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.calculation_required"]], "calculator (matscipy.calculators.committee.committee.committeemember property)": [[31, "matscipy.calculators.committee.committee.CommitteeMember.calculator"]], "calibrate() (matscipy.calculators.committee.committee.committee method)": [[31, "matscipy.calculators.committee.committee.Committee.calibrate"]], "calibrated_for (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.calibrated_for"]], "check_state() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.check_state"]], "default_parameters (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.default_parameters"]], "directory (matscipy.calculators.committee.committee.committeeuncertainty property)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.directory"]], "discard_results_on_any_change (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.export_properties"]], "filename (matscipy.calculators.committee.committee.committeemember property)": [[31, "matscipy.calculators.committee.committee.CommitteeMember.filename"]], "get_atoms() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_atoms"]], "get_charges() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_charges"]], "get_default_parameters() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_dipole_moment"]], "get_forces() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_forces"]], "get_magnetic_moment() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_potential_energy"]], "get_property() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_property"]], "get_stress() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stress"]], "get_stresses() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.get_stresses"]], "id_counter (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.id_counter"]], "id_to_atoms (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.id_to_atoms"]], "ids (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.ids"]], "ids (matscipy.calculators.committee.committee.committeemember property)": [[31, "matscipy.calculators.committee.committee.CommitteeMember.ids"]], "ignored_changes (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.ignored_changes"]], "implemented_properties (matscipy.calculators.committee.committee.committeeuncertainty attribute)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.implemented_properties"]], "is_calibrated_for() (matscipy.calculators.committee.committee.committee method)": [[31, "matscipy.calculators.committee.committee.Committee.is_calibrated_for"]], "is_sample_in_atoms() (matscipy.calculators.committee.committee.committeemember method)": [[31, "matscipy.calculators.committee.committee.CommitteeMember.is_sample_in_atoms"]], "label (matscipy.calculators.committee.committee.committeeuncertainty property)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.label"]], "matscipy.calculators.committee.committee": [[31, "module-matscipy.calculators.committee.committee"]], "members (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.members"]], "number (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.number"]], "read() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.read"]], "read_atoms() (matscipy.calculators.committee.committee.committeeuncertainty class method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.read_atoms"]], "reset() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.reset"]], "scale_uncertainty() (matscipy.calculators.committee.committee.committee method)": [[31, "matscipy.calculators.committee.committee.Committee.scale_uncertainty"]], "set() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.set"]], "set_internal_validation_set() (matscipy.calculators.committee.committee.committee method)": [[31, "matscipy.calculators.committee.committee.Committee.set_internal_validation_set"]], "set_label() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.set_label"]], "set_training_data() (matscipy.calculators.committee.committee.committeemember method)": [[31, "matscipy.calculators.committee.committee.CommitteeMember.set_training_data"]], "todict() (matscipy.calculators.committee.committee.committeeuncertainty method)": [[31, "matscipy.calculators.committee.committee.CommitteeUncertainty.todict"]], "validation_set (matscipy.calculators.committee.committee.committee property)": [[31, "matscipy.calculators.committee.committee.Committee.validation_set"]], "create_logger() (in module matscipy.calculators.committee.log)": [[32, "matscipy.calculators.committee.log.create_logger"]], "matscipy.calculators.committee.log": [[32, "module-matscipy.calculators.committee.log"]], "set_logging() (in module matscipy.calculators.committee.log)": [[32, "matscipy.calculators.committee.log.set_logging"]], "matscipy.calculators.committee.utils": [[33, "module-matscipy.calculators.committee.utils"]], "subsample() (in module matscipy.calculators.committee.utils)": [[33, "matscipy.calculators.committee.utils.subsample"]], "matscipy.calculators.eam": [[34, "module-matscipy.calculators.eam"]], "average_potential() (in module matscipy.calculators.eam.average_atom)": [[35, "matscipy.calculators.eam.average_atom.average_potential"]], "matscipy.calculators.eam.average_atom": [[35, "module-matscipy.calculators.eam.average_atom"]], "eam (class in matscipy.calculators.eam.calculator)": [[36, "matscipy.calculators.eam.calculator.EAM"]], "__init__() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.__init__"]], "band_structure() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.band_structure"]], "calculate() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.calculate"]], "calculate_hessian_matrix() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.calculate_hessian_matrix"]], "calculate_numerical_forces() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.calculate_properties"]], "calculation_required() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.calculation_required"]], "check_state() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.check_state"]], "cutoff (matscipy.calculators.eam.calculator.eam property)": [[36, "matscipy.calculators.eam.calculator.EAM.cutoff"]], "default_parameters (matscipy.calculators.eam.calculator.eam attribute)": [[36, "matscipy.calculators.eam.calculator.EAM.default_parameters"]], "directory (matscipy.calculators.eam.calculator.eam property)": [[36, "matscipy.calculators.eam.calculator.EAM.directory"]], "discard_results_on_any_change (matscipy.calculators.eam.calculator.eam attribute)": [[36, "matscipy.calculators.eam.calculator.EAM.discard_results_on_any_change"]], "energy_virial_and_forces() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.energy_virial_and_forces"]], "export_properties() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.export_properties"]], "get_atoms() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_charges"]], "get_default_parameters() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_elastic_constants"]], "get_forces() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_forces"]], "get_hessian() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_potential_energy"]], "get_property() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_property"]], "get_stress() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.get_stresses"]], "ignored_changes (matscipy.calculators.eam.calculator.eam attribute)": [[36, "matscipy.calculators.eam.calculator.EAM.ignored_changes"]], "implemented_properties (matscipy.calculators.eam.calculator.eam attribute)": [[36, "matscipy.calculators.eam.calculator.EAM.implemented_properties"]], "label (matscipy.calculators.eam.calculator.eam property)": [[36, "matscipy.calculators.eam.calculator.EAM.label"]], "matscipy.calculators.eam.calculator": [[36, "module-matscipy.calculators.eam.calculator"]], "name (matscipy.calculators.eam.calculator.eam attribute)": [[36, "matscipy.calculators.eam.calculator.EAM.name"]], "read() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.read"]], "read_atoms() (matscipy.calculators.eam.calculator.eam class method)": [[36, "matscipy.calculators.eam.calculator.EAM.read_atoms"]], "reset() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.reset"]], "set() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.set"]], "set_label() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.set_label"]], "todict() (matscipy.calculators.eam.calculator.eam method)": [[36, "matscipy.calculators.eam.calculator.EAM.todict"]], "eamparameters (class in matscipy.calculators.eam.io)": [[37, "matscipy.calculators.eam.io.EAMParameters"]], "atomic_masses (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.atomic_masses"]], "atomic_numbers (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.atomic_numbers"]], "count() (matscipy.calculators.eam.io.eamparameters method)": [[37, "matscipy.calculators.eam.io.EAMParameters.count"]], "crystal_structures (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.crystal_structures"]], "cutoff (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.cutoff"]], "density_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.density_grid_spacing"]], "distance_grid_spacing (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.distance_grid_spacing"]], "index() (matscipy.calculators.eam.io.eamparameters method)": [[37, "matscipy.calculators.eam.io.EAMParameters.index"]], "lattice_constants (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.lattice_constants"]], "matscipy.calculators.eam.io": [[37, "module-matscipy.calculators.eam.io"]], "mix_eam() (in module matscipy.calculators.eam.io)": [[37, "matscipy.calculators.eam.io.mix_eam"]], "number_of_density_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.number_of_density_grid_points"]], "number_of_distance_grid_points (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.number_of_distance_grid_points"]], "read_eam() (in module matscipy.calculators.eam.io)": [[37, "matscipy.calculators.eam.io.read_eam"]], "symbols (matscipy.calculators.eam.io.eamparameters attribute)": [[37, "matscipy.calculators.eam.io.EAMParameters.symbols"]], "write_eam() (in module matscipy.calculators.eam.io)": [[37, "matscipy.calculators.eam.io.write_eam"]], "matscipy.calculators.ewald": [[38, "module-matscipy.calculators.ewald"]], "ewald (class in matscipy.calculators.ewald.calculator)": [[39, "matscipy.calculators.ewald.calculator.Ewald"]], "ewaldshortrange (class in matscipy.calculators.ewald.calculator)": [[39, "matscipy.calculators.ewald.calculator.EwaldShortRange"]], "__init__() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.__init__"]], "__init__() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[39, "matscipy.calculators.ewald.calculator.EwaldShortRange.__init__"]], "allowed_wave_vectors() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.allowed_wave_vectors"]], "alpha (matscipy.calculators.ewald.calculator.ewald property)": [[39, "matscipy.calculators.ewald.calculator.Ewald.alpha"]], "band_structure() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.band_structure"]], "calculate() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.calculate"]], "calculate_numerical_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.calculate_properties"]], "calculation_required() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.calculation_required"]], "check_state() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.check_state"]], "cutoff (matscipy.calculators.ewald.calculator.ewaldshortrange property)": [[39, "matscipy.calculators.ewald.calculator.EwaldShortRange.cutoff"]], "default_parameters (matscipy.calculators.ewald.calculator.ewald attribute)": [[39, "matscipy.calculators.ewald.calculator.Ewald.default_parameters"]], "derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[39, "matscipy.calculators.ewald.calculator.EwaldShortRange.derivative"]], "determine_alpha() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.determine_alpha"]], "determine_kc() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.determine_kc"]], "determine_nk() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.determine_nk"]], "directory (matscipy.calculators.ewald.calculator.ewald property)": [[39, "matscipy.calculators.ewald.calculator.Ewald.directory"]], "discard_results_on_any_change (matscipy.calculators.ewald.calculator.ewald attribute)": [[39, "matscipy.calculators.ewald.calculator.Ewald.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.export_properties"]], "first_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[39, "matscipy.calculators.ewald.calculator.EwaldShortRange.first_derivative"]], "first_derivative_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.first_derivative_kspace"]], "get_atoms() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_charges"]], "get_cutoff() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[39, "matscipy.calculators.ewald.calculator.EwaldShortRange.get_cutoff"]], "get_default_parameters() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_elastic_constants"]], "get_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_forces"]], "get_hessian() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_potential_energy"]], "get_property() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_property"]], "get_stress() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.get_stresses"]], "ignored_changes (matscipy.calculators.ewald.calculator.ewald attribute)": [[39, "matscipy.calculators.ewald.calculator.Ewald.ignored_changes"]], "implemented_properties (matscipy.calculators.ewald.calculator.ewald attribute)": [[39, "matscipy.calculators.ewald.calculator.Ewald.implemented_properties"]], "kspace_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.kspace_energy"]], "kspace_properties() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.kspace_properties"]], "label (matscipy.calculators.ewald.calculator.ewald property)": [[39, "matscipy.calculators.ewald.calculator.Ewald.label"]], "matscipy.calculators.ewald.calculator": [[39, "module-matscipy.calculators.ewald.calculator"]], "name (matscipy.calculators.ewald.calculator.ewald attribute)": [[39, "matscipy.calculators.ewald.calculator.Ewald.name"]], "read() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.read"]], "read_atoms() (matscipy.calculators.ewald.calculator.ewald class method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.read_atoms"]], "reset() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.reset"]], "reset_kspace() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.reset_kspace"]], "rms_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.rms_kspace"]], "rms_rspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.rms_rspace"]], "second_derivative() (matscipy.calculators.ewald.calculator.ewaldshortrange method)": [[39, "matscipy.calculators.ewald.calculator.EwaldShortRange.second_derivative"]], "self_energy() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.self_energy"]], "set() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.set"]], "set_label() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.set_label"]], "short_range (matscipy.calculators.ewald.calculator.ewald property)": [[39, "matscipy.calculators.ewald.calculator.Ewald.short_range"]], "stress_kspace() (matscipy.calculators.ewald.calculator.ewald static method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.stress_kspace"]], "todict() (matscipy.calculators.ewald.calculator.ewald method)": [[39, "matscipy.calculators.ewald.calculator.Ewald.todict"]], "combinedfit (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.CombinedFit"]], "d0 (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.D0"]], "ec (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.Ec"]], "ec (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.Ec"]], "ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.Ec"]], "ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.Ec"]], "ec (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.Ec"]], "ec (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.Ec"]], "ec (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.Ec"]], "ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.Ec"]], "ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.Ec"]], "ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.Ec"]], "ec (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.Ec"]], "ec (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.Ec"]], "ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.Ec"]], "fit (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.Fit"]], "fitb2 (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitB2"]], "fitbcc (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitBCC"]], "fitcubiccrystal (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitCubicCrystal"]], "fitdiamond (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitDiamond"]], "fitdiamond100 (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitDiamond100"]], "fitdiamond110 (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitDiamond110"]], "fitdiamond111 (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitDiamond111"]], "fitdimer (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitDimer"]], "fitfcc (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitFCC"]], "fitgraphene (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitGraphene"]], "fitgraphite (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitGraphite"]], "fithexagonalcrystal (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal"]], "fitl1_0 (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitL1_0"]], "fitl1_2 (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitL1_2"]], "fitsc (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitSC"]], "fitsinglepoint (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitSinglePoint"]], "fitsurface (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitSurface"]], "fittetragonalcrystal (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal"]], "parameters (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.Parameters"]], "penalty (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.Penalty"]], "rotatingfit (class in matscipy.calculators.fitting)": [[40, "matscipy.calculators.fitting.RotatingFit"]], "__init__() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.__init__"]], "__init__() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.__init__"]], "__init__() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.__init__"]], "__init__() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.__init__"]], "__init__() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.__init__"]], "__init__() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.__init__"]], "__init__() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.__init__"]], "__init__() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.__init__"]], "__init__() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.__init__"]], "__init__() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.__init__"]], "__init__() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.__init__"]], "__init__() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.__init__"]], "__init__() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.__init__"]], "__init__() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.__init__"]], "__init__() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.__init__"]], "__init__() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.__init__"]], "__init__() (matscipy.calculators.fitting.rotatingfit method)": [[40, "matscipy.calculators.fitting.RotatingFit.__init__"]], "a0 (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.a0"]], "a0 (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.a0"]], "a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.a0"]], "a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.a0"]], "a0 (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.a0"]], "a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.a0"]], "a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.a0"]], "a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.a0"]], "a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.a0"]], "a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.a0"]], "a0 (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.a0"]], "a0 (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.a0"]], "a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.a0"]], "atoms (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.atoms"]], "atoms (matscipy.calculators.fitting.fit attribute)": [[40, "matscipy.calculators.fitting.Fit.atoms"]], "atoms (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.atoms"]], "atoms (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.atoms"]], "atoms (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.atoms"]], "atoms (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.atoms"]], "atoms (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.atoms"]], "atoms (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.atoms"]], "atoms (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.atoms"]], "atoms (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.atoms"]], "atoms (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.atoms"]], "atoms (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.atoms"]], "atoms (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.atoms"]], "atoms (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.atoms"]], "atoms (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.atoms"]], "atoms (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.atoms"]], "c0 (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.c0"]], "c0 (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.c0"]], "c0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.c0"]], "c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.c0"]], "c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.c0"]], "calc (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.calc"]], "calc (matscipy.calculators.fitting.fit attribute)": [[40, "matscipy.calculators.fitting.Fit.calc"]], "calc (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.calc"]], "calc (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.calc"]], "calc (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.calc"]], "calc (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.calc"]], "calc (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.calc"]], "calc (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.calc"]], "calc (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.calc"]], "calc (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.calc"]], "calc (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.calc"]], "calc (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.calc"]], "calc (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.calc"]], "calc (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.calc"]], "calc (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.calc"]], "calc (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.calc"]], "calc (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.calc"]], "calc (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.calc"]], "calc (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.calc"]], "calc (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.calc"]], "calc (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.calc"]], "constant (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.constant"]], "cost_history (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.cost_history"]], "cost_history (matscipy.calculators.fitting.fit attribute)": [[40, "matscipy.calculators.fitting.Fit.cost_history"]], "cost_history (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.cost_history"]], "cost_history (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.cost_history"]], "cost_history (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.cost_history"]], "cost_history (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.cost_history"]], "cost_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.cost_history"]], "cost_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.cost_history"]], "cost_history (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.cost_history"]], "cost_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.cost_history"]], "cost_history (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.cost_history"]], "crystal (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.crystal"]], "crystal (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.crystal"]], "crystal (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.crystal"]], "crystal (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.crystal"]], "crystal (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.crystal"]], "crystal (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.crystal"]], "crystal (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.crystal"]], "crystal (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.crystal"]], "crystal (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.crystal"]], "crystal (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.crystal"]], "crystal (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.crystal"]], "crystalstr (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.crystalstr"]], "crystalstr (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.crystalstr"]], "default (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.default"]], "derived (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.derived"]], "energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.energy"]], "fmax (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.fmax"]], "fmax (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.fmax"]], "fmax (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.fmax"]], "fmax (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.fmax"]], "fmax (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.fmax"]], "fmax (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.fmax"]], "fmax (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.fmax"]], "fmax (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.fmax"]], "fmax (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.fmax"]], "fmax (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.fmax"]], "fmax (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.fmax"]], "fmax (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.fmax"]], "forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.forces"]], "func (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.func"]], "get() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get"]], "get_c11() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_C11"]], "get_c11() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_C11"]], "get_c33() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_C33"]], "get_c33() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C33"]], "get_c44() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_C44"]], "get_c44() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_C44"]], "get_c44() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C44"]], "get_c66() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_C66"]], "get_c66() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_C66"]], "get_cp() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_Cp"]], "get_cp() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_Cp"]], "get_d1() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_D1"]], "get_d1() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D1"]], "get_d2() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_D2"]], "get_d2() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D2"]], "get_d4() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_D4"]], "get_d4() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_D4"]], "get_sfe() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_SFE"]], "get_sfe() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_SFE"]], "get_array() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get_array"]], "get_cohesive_energy() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cohesive_energy"]], "get_cohesive_energy() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_cohesive_energy"]], "get_constant() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get_constant"]], "get_cost_function() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_function"]], "get_cost_function() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_cost_function"]], "get_cost_history() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_cost_history"]], "get_cost_history() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_cost_history"]], "get_derived() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get_derived"]], "get_dict() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get_dict"]], "get_distance() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_distance"]], "get_lattice_constant() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_lattice_constant"]], "get_lattice_constant() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_lattice_constant"]], "get_lower_bounds() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get_lower_bounds"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_parameters_at_minimal_cost"]], "get_parameters_at_minimal_cost() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_parameters_at_minimal_cost"]], "get_potential_energy() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_potential_energy"]], "get_residuals() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals"]], "get_residuals() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_residuals"]], "get_residuals_history() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_residuals_history"]], "get_residuals_history() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_residuals_history"]], "get_square_residuals() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.get_square_residuals"]], "get_square_residuals() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.get_square_residuals"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.get_surface_energy"]], "get_surface_energy() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.get_surface_energy"]], "get_upper_bounds() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get_upper_bounds"]], "get_variable() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.get_variable"]], "hidden (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.hidden"]], "in_range() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.in_range"]], "matscipy.calculators.fitting": [[40, "module-matscipy.calculators.fitting"]], "minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fit attribute)": [[40, "matscipy.calculators.fitting.Fit.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.minimal_cost"]], "minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.minimal_cost"]], "new_bulk() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.new_bulk"]], "new_bulk() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.new_bulk"]], "new_dimer() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.new_dimer"]], "new_surface() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.new_surface"]], "new_surface() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.new_surface"]], "optimize() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.optimize"]], "optimize() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.optimize"]], "optimize() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.optimize"]], "optimize() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.optimize"]], "optimize() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.optimize"]], "optimize() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.optimize"]], "optimize() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.optimize"]], "optimize() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.optimize"]], "optimize() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.optimize"]], "optimize() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.optimize"]], "optimize() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.optimize"]], "optimize() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.optimize"]], "optimize() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.optimize"]], "optimize() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize"]], "optimize() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.optimize"]], "optimize() (matscipy.calculators.fitting.rotatingfit method)": [[40, "matscipy.calculators.fitting.RotatingFit.optimize"]], "optimize_anneal() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_anneal"]], "optimize_anneal() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.optimize_anneal"]], "optimize_brute() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_brute"]], "optimize_brute() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.optimize_brute"]], "optimize_leastsq() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_leastsq"]], "optimize_leastsq() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.optimize_leastsq"]], "optimize_openopt() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.optimize_openopt"]], "optimize_openopt() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.optimize_openopt"]], "par (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.par"]], "par (matscipy.calculators.fitting.fit attribute)": [[40, "matscipy.calculators.fitting.Fit.par"]], "par (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.par"]], "par (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.par"]], "par (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.par"]], "par (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.par"]], "par (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.par"]], "par (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.par"]], "par (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.par"]], "par (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.par"]], "par (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.par"]], "par (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.par"]], "par (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.par"]], "par (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.par"]], "par (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.par"]], "par (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.par"]], "par (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.par"]], "par (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.par"]], "par (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.par"]], "par (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.par"]], "par (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.par"]], "par (matscipy.calculators.fitting.rotatingfit attribute)": [[40, "matscipy.calculators.fitting.RotatingFit.par"]], "par_at_minimal_cost (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fit attribute)": [[40, "matscipy.calculators.fitting.Fit.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.par_at_minimal_cost"]], "par_at_minimal_cost (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.par_at_minimal_cost"]], "parameters (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.parameters"]], "r0 (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.r0"]], "range_mapping (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.range_mapping"]], "ranges (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.ranges"]], "residuals_history (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fit attribute)": [[40, "matscipy.calculators.fitting.Fit.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.residuals_history"]], "residuals_history (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.residuals_history"]], "residuals_history (matscipy.calculators.fitting.penalty attribute)": [[40, "matscipy.calculators.fitting.Penalty.residuals_history"]], "set() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.set"]], "set_array() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.set_array"]], "set_calculator() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator"]], "set_calculator() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.set_calculator"]], "set_calculator_class() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.set_calculator_class"]], "set_calculator_class() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.set_calculator_class"]], "set_constant() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.set_constant"]], "set_derived() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.set_derived"]], "set_dict() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.set_dict"]], "set_parameters() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters"]], "set_parameters() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.set_parameters"]], "set_parameters_from_array() (matscipy.calculators.fitting.combinedfit method)": [[40, "matscipy.calculators.fitting.CombinedFit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fit method)": [[40, "matscipy.calculators.fitting.Fit.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitb2 method)": [[40, "matscipy.calculators.fitting.FitB2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitbcc method)": [[40, "matscipy.calculators.fitting.FitBCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitcubiccrystal method)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond method)": [[40, "matscipy.calculators.fitting.FitDiamond.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond100 method)": [[40, "matscipy.calculators.fitting.FitDiamond100.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond110 method)": [[40, "matscipy.calculators.fitting.FitDiamond110.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdiamond111 method)": [[40, "matscipy.calculators.fitting.FitDiamond111.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitdimer method)": [[40, "matscipy.calculators.fitting.FitDimer.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitfcc method)": [[40, "matscipy.calculators.fitting.FitFCC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphene method)": [[40, "matscipy.calculators.fitting.FitGraphene.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitgraphite method)": [[40, "matscipy.calculators.fitting.FitGraphite.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fithexagonalcrystal method)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_0 method)": [[40, "matscipy.calculators.fitting.FitL1_0.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitl1_2 method)": [[40, "matscipy.calculators.fitting.FitL1_2.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsc method)": [[40, "matscipy.calculators.fitting.FitSC.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsinglepoint method)": [[40, "matscipy.calculators.fitting.FitSinglePoint.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fitsurface method)": [[40, "matscipy.calculators.fitting.FitSurface.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.fittetragonalcrystal method)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.set_parameters_from_array"]], "set_parameters_from_array() (matscipy.calculators.fitting.penalty method)": [[40, "matscipy.calculators.fitting.Penalty.set_parameters_from_array"]], "set_range_derived() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.set_range_derived"]], "set_variable() (matscipy.calculators.fitting.parameters method)": [[40, "matscipy.calculators.fitting.Parameters.set_variable"]], "stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.stress"]], "surfstr (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.surfstr"]], "surfstr (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.surfstr"]], "targets (matscipy.calculators.fitting.combinedfit attribute)": [[40, "matscipy.calculators.fitting.CombinedFit.targets"]], "targets (matscipy.calculators.fitting.rotatingfit attribute)": [[40, "matscipy.calculators.fitting.RotatingFit.targets"]], "variable (matscipy.calculators.fitting.parameters attribute)": [[40, "matscipy.calculators.fitting.Parameters.variable"]], "w_d0 (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.w_D0"]], "w_ec (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.w_Ec"]], "w_ec (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.w_Ec"]], "w_ec (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.w_Ec"]], "w_ec (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.w_Ec"]], "w_a0 (matscipy.calculators.fitting.fitb2 attribute)": [[40, "matscipy.calculators.fitting.FitB2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitbcc attribute)": [[40, "matscipy.calculators.fitting.FitBCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitcubiccrystal attribute)": [[40, "matscipy.calculators.fitting.FitCubicCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond attribute)": [[40, "matscipy.calculators.fitting.FitDiamond.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond100 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond100.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond110 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond110.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitdiamond111 attribute)": [[40, "matscipy.calculators.fitting.FitDiamond111.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitfcc attribute)": [[40, "matscipy.calculators.fitting.FitFCC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphene attribute)": [[40, "matscipy.calculators.fitting.FitGraphene.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitgraphite attribute)": [[40, "matscipy.calculators.fitting.FitGraphite.w_a0"]], "w_a0 (matscipy.calculators.fitting.fithexagonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitHexagonalCrystal.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitl1_2 attribute)": [[40, "matscipy.calculators.fitting.FitL1_2.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsc attribute)": [[40, "matscipy.calculators.fitting.FitSC.w_a0"]], "w_a0 (matscipy.calculators.fitting.fitsurface attribute)": [[40, "matscipy.calculators.fitting.FitSurface.w_a0"]], "w_a0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.w_a0"]], "w_c0 (matscipy.calculators.fitting.fitl1_0 attribute)": [[40, "matscipy.calculators.fitting.FitL1_0.w_c0"]], "w_c0 (matscipy.calculators.fitting.fittetragonalcrystal attribute)": [[40, "matscipy.calculators.fitting.FitTetragonalCrystal.w_c0"]], "w_energy (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.w_energy"]], "w_forces (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.w_forces"]], "w_r0 (matscipy.calculators.fitting.fitdimer attribute)": [[40, "matscipy.calculators.fitting.FitDimer.w_r0"]], "w_stress (matscipy.calculators.fitting.fitsinglepoint attribute)": [[40, "matscipy.calculators.fitting.FitSinglePoint.w_stress"]], "matscipy.calculators.manybody": [[41, "module-matscipy.calculators.manybody"]], "manybody (class in matscipy.calculators.manybody.calculator)": [[42, "matscipy.calculators.manybody.calculator.Manybody"]], "nicemanybody (class in matscipy.calculators.manybody.calculator)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody"]], "nicemanybody.f (class in matscipy.calculators.manybody.calculator)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.F"]], "nicemanybody.g (class in matscipy.calculators.manybody.calculator)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.G"]], "__init__() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.__init__"]], "__init__() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.__init__"]], "band_structure() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.band_structure"]], "band_structure() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.band_structure"]], "calculate() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.calculate"]], "calculate() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_forces"]], "calculate_numerical_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.calculate_numerical_stress"]], "calculate_numerical_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.calculate_properties"]], "calculate_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.calculation_required"]], "calculation_required() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.check_state"]], "check_state() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.check_state"]], "default_parameters (matscipy.calculators.manybody.calculator.manybody attribute)": [[42, "matscipy.calculators.manybody.calculator.Manybody.default_parameters"]], "default_parameters (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.default_parameters"]], "directory (matscipy.calculators.manybody.calculator.manybody property)": [[42, "matscipy.calculators.manybody.calculator.Manybody.directory"]], "directory (matscipy.calculators.manybody.calculator.nicemanybody property)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.manybody attribute)": [[42, "matscipy.calculators.manybody.calculator.Manybody.discard_results_on_any_change"]], "discard_results_on_any_change (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.export_properties"]], "export_properties() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_atoms"]], "get_atoms() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_birch_coefficients"]], "get_birch_coefficients() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_born_elastic_constants"]], "get_born_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_charges"]], "get_charges() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_charges"]], "get_cutoff() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_cutoff"]], "get_cutoff() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_cutoff"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_default_parameters"]], "get_default_parameters() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_dipole_moment"]], "get_dipole_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_dynamical_matrix"]], "get_dynamical_matrix() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_elastic_constants"]], "get_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_forces"]], "get_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_hessian"]], "get_hessian() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_hessian_from_second_derivative"]], "get_hessian_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_hessian_from_second_derivative"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moment"]], "get_magnetic_moment() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_magnetic_moments"]], "get_magnetic_moments() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_contribution_to_elastic_constants"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_non_affine_forces_from_second_derivative"]], "get_non_affine_forces_from_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_non_affine_forces_from_second_derivative"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_nonaffine_forces"]], "get_nonaffine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_numerical_non_affine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energies"]], "get_potential_energies() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_potential_energy"]], "get_potential_energy() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_property"]], "get_property() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_property"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_second_derivative"]], "get_second_derivative() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_second_derivative"]], "get_stress() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_stress"]], "get_stress() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.get_stresses"]], "get_stresses() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.F.gradient"]], "gradient() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.G.gradient"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.f method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.F.hessian"]], "hessian() (matscipy.calculators.manybody.calculator.nicemanybody.g method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.G.hessian"]], "ignored_changes (matscipy.calculators.manybody.calculator.manybody attribute)": [[42, "matscipy.calculators.manybody.calculator.Manybody.ignored_changes"]], "ignored_changes (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.calculator.manybody attribute)": [[42, "matscipy.calculators.manybody.calculator.Manybody.implemented_properties"]], "implemented_properties (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.implemented_properties"]], "label (matscipy.calculators.manybody.calculator.manybody property)": [[42, "matscipy.calculators.manybody.calculator.Manybody.label"]], "label (matscipy.calculators.manybody.calculator.nicemanybody property)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.label"]], "matscipy.calculators.manybody.calculator": [[42, "module-matscipy.calculators.manybody.calculator"]], "name (matscipy.calculators.manybody.calculator.manybody attribute)": [[42, "matscipy.calculators.manybody.calculator.Manybody.name"]], "name (matscipy.calculators.manybody.calculator.nicemanybody attribute)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.name"]], "read() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.read"]], "read() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.read"]], "read_atoms() (matscipy.calculators.manybody.calculator.manybody class method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.read_atoms"]], "read_atoms() (matscipy.calculators.manybody.calculator.nicemanybody class method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.read_atoms"]], "reset() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.reset"]], "reset() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.reset"]], "set() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.set"]], "set() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.set"]], "set_label() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.set_label"]], "set_label() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.set_label"]], "todict() (matscipy.calculators.manybody.calculator.manybody method)": [[42, "matscipy.calculators.manybody.calculator.Manybody.todict"]], "todict() (matscipy.calculators.manybody.calculator.nicemanybody method)": [[42, "matscipy.calculators.manybody.calculator.NiceManybody.todict"]], "matscipy.calculators.manybody.explicit_forms": [[43, "module-matscipy.calculators.manybody.explicit_forms"]], "harmonicangle (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle"]], "harmonicbond (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond"]], "zeropair (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair"]], "zerotriplet (class in matscipy.calculators.manybody.explicit_forms.harmonic)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.__init__"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.gradient"]], "gradient() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.gradient"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicangle method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.harmonicbond method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.HarmonicBond.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zeropair method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroPair.hessian"]], "hessian() (matscipy.calculators.manybody.explicit_forms.harmonic.zerotriplet method)": [[44, "matscipy.calculators.manybody.explicit_forms.harmonic.ZeroTriplet.hessian"]], "matscipy.calculators.manybody.explicit_forms.harmonic": [[44, "module-matscipy.calculators.manybody.explicit_forms.harmonic"]], "kumagai() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[45, "matscipy.calculators.manybody.explicit_forms.kumagai.Kumagai"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.kumagai)": [[45, "matscipy.calculators.manybody.explicit_forms.kumagai.ab"]], "matscipy.calculators.manybody.explicit_forms.kumagai": [[45, "module-matscipy.calculators.manybody.explicit_forms.kumagai"]], "stillingerweber() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[46, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.StillingerWeber"]], "ab() (in module matscipy.calculators.manybody.explicit_forms.stillinger_weber)": [[46, "matscipy.calculators.manybody.explicit_forms.stillinger_weber.ab"]], "matscipy.calculators.manybody.explicit_forms.stillinger_weber": [[46, "module-matscipy.calculators.manybody.explicit_forms.stillinger_weber"]], "tersoffbrenner() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[47, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.TersoffBrenner"]], "matscipy.calculators.manybody.explicit_forms.tersoff_brenner": [[47, "module-matscipy.calculators.manybody.explicit_forms.tersoff_brenner"]], "mix() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[47, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix"]], "mix_arithmetic() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[47, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_arithmetic"]], "mix_geometric() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[47, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.mix_geometric"]], "pair_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[47, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.pair_index"]], "triplet_index() (in module matscipy.calculators.manybody.explicit_forms.tersoff_brenner)": [[47, "matscipy.calculators.manybody.explicit_forms.tersoff_brenner.triplet_index"]], "manybody (class in matscipy.calculators.manybody.newmb)": [[48, "matscipy.calculators.manybody.newmb.Manybody"]], "manybody.phi (class in matscipy.calculators.manybody.newmb)": [[48, "matscipy.calculators.manybody.newmb.Manybody.Phi"]], "manybody.theta (class in matscipy.calculators.manybody.newmb)": [[48, "matscipy.calculators.manybody.newmb.Manybody.Theta"]], "__init__() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.__init__"]], "band_structure() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.band_structure"]], "calculate() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.calculate"]], "calculate_numerical_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.calculate_properties"]], "calculation_required() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.calculation_required"]], "check_state() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.check_state"]], "default_parameters (matscipy.calculators.manybody.newmb.manybody attribute)": [[48, "matscipy.calculators.manybody.newmb.Manybody.default_parameters"]], "directory (matscipy.calculators.manybody.newmb.manybody property)": [[48, "matscipy.calculators.manybody.newmb.Manybody.directory"]], "discard_results_on_any_change (matscipy.calculators.manybody.newmb.manybody attribute)": [[48, "matscipy.calculators.manybody.newmb.Manybody.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.export_properties"]], "get_atoms() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_charges"]], "get_default_parameters() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_elastic_constants"]], "get_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_forces"]], "get_hessian() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_potential_energy"]], "get_property() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_property"]], "get_stress() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.get_stresses"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.Phi.gradient"]], "gradient() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.Theta.gradient"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.phi method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.Phi.hessian"]], "hessian() (matscipy.calculators.manybody.newmb.manybody.theta method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.Theta.hessian"]], "ignored_changes (matscipy.calculators.manybody.newmb.manybody attribute)": [[48, "matscipy.calculators.manybody.newmb.Manybody.ignored_changes"]], "implemented_properties (matscipy.calculators.manybody.newmb.manybody attribute)": [[48, "matscipy.calculators.manybody.newmb.Manybody.implemented_properties"]], "label (matscipy.calculators.manybody.newmb.manybody property)": [[48, "matscipy.calculators.manybody.newmb.Manybody.label"]], "matscipy.calculators.manybody.newmb": [[48, "module-matscipy.calculators.manybody.newmb"]], "read() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.read"]], "read_atoms() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.read_atoms"]], "reset() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.reset"]], "set() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.set"]], "set_label() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.set_label"]], "sum_xx_sum_ijk_tau_xx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.sum_XX_sum_ijk_tau_XX_mn"]], "sum_xy_sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.sum_XY_sum_ijk_tau_XY_mn"]], "sum_x_sum_ijk_tau_ijx_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ijX_mn"]], "sum_x_sum_ijk_tau_ij_xor_x_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.sum_X_sum_ijk_tau_ij_XOR_X_mn"]], "sum_ij_pi_ij_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_pi_ij_n"]], "sum_ij_sum_x_pi_x_n() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.sum_ij_sum_X_pi_X_n"]], "sum_ijk_tau_xy_mn() (matscipy.calculators.manybody.newmb.manybody class method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.sum_ijk_tau_XY_mn"]], "todict() (matscipy.calculators.manybody.newmb.manybody method)": [[48, "matscipy.calculators.manybody.newmb.Manybody.todict"]], "bornmayercut (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.BornMayerCut"]], "harmonicangle (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.HarmonicAngle"]], "harmonicpair (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.HarmonicPair"]], "kumagaiangle (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.KumagaiAngle"]], "kumagaipair (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.KumagaiPair"]], "lennardjones (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.LennardJones"]], "stillingerweberangle (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberAngle"]], "stillingerweberpair (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberPair"]], "symphi (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.SymPhi"]], "symtheta (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.SymTheta"]], "tersoffbrennerangle (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle"]], "tersoffbrennerpair (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerPair"]], "zeroangle (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.ZeroAngle"]], "zeropair (class in matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.ZeroPair"]], "__init__() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[49, "matscipy.calculators.manybody.potentials.BornMayerCut.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[49, "matscipy.calculators.manybody.potentials.HarmonicAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[49, "matscipy.calculators.manybody.potentials.HarmonicPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[49, "matscipy.calculators.manybody.potentials.KumagaiAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[49, "matscipy.calculators.manybody.potentials.KumagaiPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.lennardjones method)": [[49, "matscipy.calculators.manybody.potentials.LennardJones.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberPair.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.symphi method)": [[49, "matscipy.calculators.manybody.potentials.SymPhi.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.symtheta method)": [[49, "matscipy.calculators.manybody.potentials.SymTheta.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.__init__"]], "__init__() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.__init__"]], "angle_distance_defined() (in module matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.angle_distance_defined"]], "distance_defined() (in module matscipy.calculators.manybody.potentials)": [[49, "matscipy.calculators.manybody.potentials.distance_defined"]], "gradient() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[49, "matscipy.calculators.manybody.potentials.BornMayerCut.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[49, "matscipy.calculators.manybody.potentials.HarmonicAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[49, "matscipy.calculators.manybody.potentials.HarmonicPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[49, "matscipy.calculators.manybody.potentials.KumagaiAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[49, "matscipy.calculators.manybody.potentials.KumagaiPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.lennardjones method)": [[49, "matscipy.calculators.manybody.potentials.LennardJones.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.symphi method)": [[49, "matscipy.calculators.manybody.potentials.SymPhi.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.symtheta method)": [[49, "matscipy.calculators.manybody.potentials.SymTheta.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeroangle method)": [[49, "matscipy.calculators.manybody.potentials.ZeroAngle.gradient"]], "gradient() (matscipy.calculators.manybody.potentials.zeropair method)": [[49, "matscipy.calculators.manybody.potentials.ZeroPair.gradient"]], "hessian() (matscipy.calculators.manybody.potentials.bornmayercut method)": [[49, "matscipy.calculators.manybody.potentials.BornMayerCut.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicangle method)": [[49, "matscipy.calculators.manybody.potentials.HarmonicAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.harmonicpair method)": [[49, "matscipy.calculators.manybody.potentials.HarmonicPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaiangle method)": [[49, "matscipy.calculators.manybody.potentials.KumagaiAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.kumagaipair method)": [[49, "matscipy.calculators.manybody.potentials.KumagaiPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.lennardjones method)": [[49, "matscipy.calculators.manybody.potentials.LennardJones.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberangle method)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.stillingerweberpair method)": [[49, "matscipy.calculators.manybody.potentials.StillingerWeberPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.symphi method)": [[49, "matscipy.calculators.manybody.potentials.SymPhi.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.symtheta method)": [[49, "matscipy.calculators.manybody.potentials.SymTheta.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerangle method)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.tersoffbrennerpair method)": [[49, "matscipy.calculators.manybody.potentials.TersoffBrennerPair.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeroangle method)": [[49, "matscipy.calculators.manybody.potentials.ZeroAngle.hessian"]], "hessian() (matscipy.calculators.manybody.potentials.zeropair method)": [[49, "matscipy.calculators.manybody.potentials.ZeroPair.hessian"]], "matscipy.calculators.manybody.potentials": [[49, "module-matscipy.calculators.manybody.potentials"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.multiclusterforcemixingpotential attribute)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.multiclusterforcemixingpotential property)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm": [[50, "module-matscipy.calculators.mcfm"]], "print_message() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential class method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.multiclusterforcemixingpotential method)": [[50, "matscipy.calculators.mcfm.MultiClusterForceMixingPotential.todict"]], "multiclusterforcemixingpotential (class in matscipy.calculators.mcfm.calculator)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential"]], "__init__() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.__init__"]], "all_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.all_changes"]], "attach_hybrid_data() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.attach_hybrid_data"]], "band_structure() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.band_structure"]], "calculate() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.calculation_required"]], "check_state() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.check_state"]], "combine_qm_mm_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.combine_qm_mm_forces"]], "compute_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.compute_stress"]], "default_parameters (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.default_parameters"]], "directory (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.discard_results_on_any_change"]], "evaluate_errors() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_errors"]], "evaluate_qm_cluster_serial() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.evaluate_qm_cluster_serial"]], "export_properties() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.export_properties"]], "get_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_atoms"]], "get_charges() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_charges"]], "get_default_parameters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_dipole_moment"]], "get_forces() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_forces"]], "get_magnetic_moment() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_potential_energy"]], "get_property() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_property"]], "get_stress() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stress"]], "get_stresses() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.get_stresses"]], "ignored_changes (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential attribute)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.implemented_properties"]], "label (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential property)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.label"]], "matscipy.calculators.mcfm.calculator": [[51, "module-matscipy.calculators.mcfm.calculator"]], "print_message() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.print_message"]], "produce_classical_results() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_classical_results"]], "produce_qm_clusters() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.produce_qm_clusters"]], "read() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read"]], "read_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential class method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.read_atoms"]], "reset() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.reset"]], "set() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set"]], "set_label() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_label"]], "set_qm_atoms() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.set_qm_atoms"]], "todict() (matscipy.calculators.mcfm.calculator.multiclusterforcemixingpotential method)": [[51, "matscipy.calculators.mcfm.calculator.MultiClusterForceMixingPotential.todict"]], "clusterdata (class in matscipy.calculators.mcfm.cluster_data)": [[52, "matscipy.calculators.mcfm.cluster_data.ClusterData"]], "__init__() (matscipy.calculators.mcfm.cluster_data.clusterdata method)": [[52, "matscipy.calculators.mcfm.cluster_data.ClusterData.__init__"]], "forces (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[52, "matscipy.calculators.mcfm.cluster_data.ClusterData.forces"]], "mark (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[52, "matscipy.calculators.mcfm.cluster_data.ClusterData.mark"]], "matscipy.calculators.mcfm.cluster_data": [[52, "module-matscipy.calculators.mcfm.cluster_data"]], "qm_list (matscipy.calculators.mcfm.cluster_data.clusterdata attribute)": [[52, "matscipy.calculators.mcfm.cluster_data.ClusterData.qm_list"]], "matscipy.calculators.mcfm.mcfm_parallel": [[53, "module-matscipy.calculators.mcfm.mcfm_parallel"]], "get_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control)": [[54, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control.get_cluster_data"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control": [[54, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_control"]], "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker": [[55, "module-matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker"]], "worker_populate_cluster_data() (in module matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker)": [[55, "matscipy.calculators.mcfm.mcfm_parallel.mcfm_parallel_worker.worker_populate_cluster_data"]], "matscipy.calculators.mcfm.neighbour_list_mcfm": [[56, "module-matscipy.calculators.mcfm.neighbour_list_mcfm"]], "neighbourlistbase (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base)": [[57, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[57, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base": [[57, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.neighbourlistbase method)": [[57, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_base.NeighbourListBase.update"]], "neighbourlistmcfm (class in matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM"]], "__init__() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.__init__"]], "do_update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.do_update"]], "get_neighbours() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.get_neighbours"]], "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm": [[58, "module-matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm"]], "update() (matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.neighbourlistmcfm method)": [[58, "matscipy.calculators.mcfm.neighbour_list_mcfm.neighbour_list_mcfm.NeighbourListMCFM.update"]], "qmcluster (class in matscipy.calculators.mcfm.qm_cluster)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster"]], "__init__() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster.__init__"]], "attach_clustering_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_clustering_module"]], "attach_flagging_module() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_flagging_module"]], "attach_neighbour_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster.attach_neighbour_list"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster.carve_cluster"]], "matscipy.calculators.mcfm.qm_cluster": [[59, "module-matscipy.calculators.mcfm.qm_cluster"]], "reset_energized_list() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster.reset_energized_list"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster.qmcluster method)": [[59, "matscipy.calculators.mcfm.qm_cluster.QMCluster.update_qm_region"]], "matscipy.calculators.mcfm.qm_cluster_tools": [[60, "module-matscipy.calculators.mcfm.qm_cluster_tools"]], "baseqmclustertool (class in matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool)": [[61, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[61, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.__init__"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[61, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.baseqmclustertool method)": [[61, "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool.BaseQMClusterTool.hydrogenate_cluster"]], "matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool": [[61, "module-matscipy.calculators.mcfm.qm_cluster_tools.base_qm_cluster_tool"]], "qmclusteringtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.__init__"]], "carve_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.carve_cluster"]], "complete_aromatic_rings() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.complete_aromatic_rings"]], "create_buffer_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_buffer_region"]], "create_cluster_from_marks() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.create_cluster_from_marks"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.find_neighbours"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_cluster"]], "hydrogenate_dangling_bonds() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.hydrogenate_dangling_bonds"]], "include_special_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.include_special_atom"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool": [[62, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool"]], "print_message() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.print_message"]], "replace_double_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_double_bond"]], "replace_single_bond() (matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.qmclusteringtool method)": [[62, "matscipy.calculators.mcfm.qm_cluster_tools.qm_clustering_tool.QMClusteringTool.replace_single_bond"]], "qmflaggingtool (class in matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool"]], "__init__() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.__init__"]], "create_cluster_around_atom() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.create_cluster_around_atom"]], "expand_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.expand_cluster"]], "exponential_moving_average() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.exponential_moving_average"]], "find_neighbours() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.find_neighbours"]], "get_energized_list() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.get_energized_list"]], "hydrogenate_cluster() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.hydrogenate_cluster"]], "join_clusters() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.join_clusters"]], "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool": [[63, "module-matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool"]], "update_avg_property_per_atom() (in module matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.update_avg_property_per_atom"]], "update_qm_region() (matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.qmflaggingtool method)": [[63, "matscipy.calculators.mcfm.qm_cluster_tools.qm_flagging_tool.QMFlaggingTool.update_qm_region"]], "matscipy.calculators.pair_potential": [[64, "module-matscipy.calculators.pair_potential"]], "beestkramersanten (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten"]], "cutoffinteraction (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.CutoffInteraction"]], "feneljcut (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.FeneLJCut"]], "lennardjones84 (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJones84"]], "lennardjonescut (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesCut"]], "lennardjoneslinear (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear"]], "lennardjonesquadratic (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic"]], "pairpotential (class in matscipy.calculators.pair_potential.calculator)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential"]], "__init__() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[65, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[65, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[65, "matscipy.calculators.pair_potential.calculator.FeneLJCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJones84.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.__init__"]], "__init__() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.__init__"]], "band_structure() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.band_structure"]], "calculate() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate"]], "calculate_numerical_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.calculate_properties"]], "calculation_required() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.calculation_required"]], "check_state() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.check_state"]], "cutoff (matscipy.calculators.pair_potential.calculator.beestkramersanten property)": [[65, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.cutoffinteraction property)": [[65, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.feneljcut property)": [[65, "matscipy.calculators.pair_potential.calculator.FeneLJCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjones84 property)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJones84.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonescut property)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjoneslinear property)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.cutoff"]], "cutoff (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic property)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.cutoff"]], "default_parameters (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.default_parameters"]], "derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[65, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[65, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[65, "matscipy.calculators.pair_potential.calculator.FeneLJCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJones84.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.derivative"]], "derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.derivative"]], "directory (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.directory"]], "discard_results_on_any_change (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.export_properties"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[65, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[65, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[65, "matscipy.calculators.pair_potential.calculator.FeneLJCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJones84.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.first_derivative"]], "first_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.first_derivative"]], "get_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_charges"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[65, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[65, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[65, "matscipy.calculators.pair_potential.calculator.FeneLJCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJones84.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.get_cutoff"]], "get_cutoff() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.get_cutoff"]], "get_default_parameters() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_elastic_constants"]], "get_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_forces"]], "get_hessian() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_magnetic_moments"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_potential_energy"]], "get_property() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_property"]], "get_stress() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.get_stresses"]], "ignored_changes (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.ignored_changes"]], "implemented_properties (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.implemented_properties"]], "label (matscipy.calculators.pair_potential.calculator.pairpotential property)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.label"]], "matscipy.calculators.pair_potential.calculator": [[65, "module-matscipy.calculators.pair_potential.calculator"]], "name (matscipy.calculators.pair_potential.calculator.pairpotential attribute)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.name"]], "read() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.read"]], "read_atoms() (matscipy.calculators.pair_potential.calculator.pairpotential class method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.read_atoms"]], "reset() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.reset"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.beestkramersanten method)": [[65, "matscipy.calculators.pair_potential.calculator.BeestKramerSanten.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.cutoffinteraction method)": [[65, "matscipy.calculators.pair_potential.calculator.CutoffInteraction.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.feneljcut method)": [[65, "matscipy.calculators.pair_potential.calculator.FeneLJCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjones84 method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJones84.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonescut method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesCut.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjoneslinear method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesLinear.second_derivative"]], "second_derivative() (matscipy.calculators.pair_potential.calculator.lennardjonesquadratic method)": [[65, "matscipy.calculators.pair_potential.calculator.LennardJonesQuadratic.second_derivative"]], "set() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.set"]], "set_label() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.set_label"]], "todict() (matscipy.calculators.pair_potential.calculator.pairpotential method)": [[65, "matscipy.calculators.pair_potential.calculator.PairPotential.todict"]], "matscipy.calculators.polydisperse": [[66, "module-matscipy.calculators.polydisperse"]], "inversepowerlawpotential (class in matscipy.calculators.polydisperse.calculator)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential"]], "polydisperse (class in matscipy.calculators.polydisperse.calculator)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse"]], "__init__() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.__init__"]], "__init__() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.__init__"]], "band_structure() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.band_structure"]], "calculate() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate"]], "calculate_numerical_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculate_properties"]], "calculation_required() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.calculation_required"]], "check_state() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.check_state"]], "default_parameters (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.default_parameters"]], "derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.derivative"]], "directory (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.directory"]], "discard_results_on_any_change (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.export_properties"]], "first_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.first_derivative"]], "get_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_atoms"]], "get_birch_coefficients() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_birch_coefficients"]], "get_born_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_born_elastic_constants"]], "get_charges() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_charges"]], "get_coeffs() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_coeffs"]], "get_cutoff() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_cutoff"]], "get_default_parameters() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dipole_moment"]], "get_dynamical_matrix() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_dynamical_matrix"]], "get_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_elastic_constants"]], "get_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_forces"]], "get_hessian() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_hessian"]], "get_magnetic_moment() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_magnetic_moments"]], "get_maxsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_maxSize"]], "get_minsize() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.get_minSize"]], "get_non_affine_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_non_affine_contribution_to_elastic_constants"]], "get_nonaffine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_nonaffine_forces"]], "get_numerical_non_affine_forces() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_numerical_non_affine_forces"]], "get_potential_energies() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_potential_energy"]], "get_property() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_property"]], "get_stress() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress"]], "get_stress_contribution_to_elastic_constants() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stress_contribution_to_elastic_constants"]], "get_stresses() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.get_stresses"]], "ignored_changes (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.ignored_changes"]], "implemented_properties (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.implemented_properties"]], "label (matscipy.calculators.polydisperse.calculator.polydisperse property)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.label"]], "matscipy.calculators.polydisperse.calculator": [[67, "module-matscipy.calculators.polydisperse.calculator"]], "mix_sizes() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.mix_sizes"]], "name (matscipy.calculators.polydisperse.calculator.polydisperse attribute)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.name"]], "read() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.read"]], "read_atoms() (matscipy.calculators.polydisperse.calculator.polydisperse class method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.read_atoms"]], "reset() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.reset"]], "second_derivative() (matscipy.calculators.polydisperse.calculator.inversepowerlawpotential method)": [[67, "matscipy.calculators.polydisperse.calculator.InversePowerLawPotential.second_derivative"]], "set() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.set"]], "set_label() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.set_label"]], "todict() (matscipy.calculators.polydisperse.calculator.polydisperse method)": [[67, "matscipy.calculators.polydisperse.calculator.Polydisperse.todict"]], "supercellcalculator (class in matscipy.calculators.supercell_calculator)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator"]], "__init__() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.__init__"]], "band_structure() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.band_structure"]], "calculate() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate"]], "calculate_numerical_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculate_properties"]], "calculation_required() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.calculation_required"]], "check_state() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.check_state"]], "default_parameters (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.default_parameters"]], "directory (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.directory"]], "discard_results_on_any_change (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.export_properties"]], "get_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_atoms"]], "get_charges() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_charges"]], "get_default_parameters() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_dipole_moment"]], "get_forces() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_forces"]], "get_magnetic_moment() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_potential_energy"]], "get_property() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_property"]], "get_stress() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stress"]], "get_stresses() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.get_stresses"]], "ignored_changes (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.ignored_changes"]], "implemented_properties (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.implemented_properties"]], "label (matscipy.calculators.supercell_calculator.supercellcalculator property)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.label"]], "matscipy.calculators.supercell_calculator": [[68, "module-matscipy.calculators.supercell_calculator"]], "name (matscipy.calculators.supercell_calculator.supercellcalculator attribute)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.name"]], "read() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.read"]], "read_atoms() (matscipy.calculators.supercell_calculator.supercellcalculator class method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.read_atoms"]], "reset() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.reset"]], "set() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.set"]], "set_label() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.set_label"]], "todict() (matscipy.calculators.supercell_calculator.supercellcalculator method)": [[68, "matscipy.calculators.supercell_calculator.SupercellCalculator.todict"]], "cubiccauchyborn (class in matscipy.cauchy_born)": [[69, "matscipy.cauchy_born.CubicCauchyBorn"]], "regressionmodel (class in matscipy.cauchy_born)": [[69, "matscipy.cauchy_born.RegressionModel"]], "__init__() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.__init__"]], "apply_shifts() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.apply_shifts"]], "basis_function_evaluation() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.basis_function_evaluation"]], "check_for_refit() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.check_for_refit"]], "eval_shift() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.eval_shift"]], "evaluate_e() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_E"]], "evaluate_f() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_F"]], "evaluate_f_or_e() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_F_or_E"]], "evaluate_shift_gradient_regression() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_shift_gradient_regression"]], "evaluate_shift_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.evaluate_shift_model"]], "fit() (matscipy.cauchy_born.regressionmodel method)": [[69, "matscipy.cauchy_born.RegressionModel.fit"]], "fit_taylor() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.fit_taylor"]], "get_cb_error() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.get_cb_error"]], "get_data_points() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.get_data_points"]], "get_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.get_model"]], "get_shift_gradients() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.get_shift_gradients"]], "grad_basis_function_evaluation() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.grad_basis_function_evaluation"]], "initial_regression_fit() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.initial_regression_fit"]], "load() (matscipy.cauchy_born.regressionmodel method)": [[69, "matscipy.cauchy_born.RegressionModel.load"]], "load_regression_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.load_regression_model"]], "load_taylor() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.load_taylor"]], "matscipy.cauchy_born": [[69, "module-matscipy.cauchy_born"]], "permutation() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.permutation"]], "predict() (matscipy.cauchy_born.regressionmodel method)": [[69, "matscipy.cauchy_born.RegressionModel.predict"]], "predict_gradient() (matscipy.cauchy_born.regressionmodel method)": [[69, "matscipy.cauchy_born.RegressionModel.predict_gradient"]], "predict_shifts() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.predict_shifts"]], "refit_regression() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.refit_regression"]], "save() (matscipy.cauchy_born.regressionmodel method)": [[69, "matscipy.cauchy_born.RegressionModel.save"]], "save_regression_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.save_regression_model"]], "save_taylor() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.save_taylor"]], "set_model() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.set_model"]], "set_sublattices() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.set_sublattices"]], "switch_sublattices() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.switch_sublattices"]], "tensor_field_3d_from_atoms() (matscipy.cauchy_born.cubiccauchyborn method)": [[69, "matscipy.cauchy_born.CubicCauchyBorn.tensor_field_3D_from_atoms"]], "matscipy.cli": [[70, "module-matscipy.cli"]], "matscipy.cli.calculators": [[71, "module-matscipy.cli.calculators"]], "main() (in module matscipy.cli.calculators.average_eam_potential)": [[72, "matscipy.cli.calculators.average_eam_potential.main"]], "matscipy.cli.calculators.average_eam_potential": [[72, "module-matscipy.cli.calculators.average_eam_potential"]], "matscipy.cli.diffusion": [[73, "module-matscipy.cli.diffusion"]], "main() (in module matscipy.cli.diffusion.rms)": [[74, "matscipy.cli.diffusion.rms.main"]], "matscipy.cli.diffusion.rms": [[74, "module-matscipy.cli.diffusion.rms"]], "matscipy.cli.electrochemistry": [[75, "module-matscipy.cli.electrochemistry"]], "main() (in module matscipy.cli.electrochemistry.continuous2discrete)": [[76, "matscipy.cli.electrochemistry.continuous2discrete.main"]], "matscipy.cli.electrochemistry.continuous2discrete": [[76, "module-matscipy.cli.electrochemistry.continuous2discrete"]], "main() (in module matscipy.cli.electrochemistry.poisson_nernst_planck_solver)": [[77, "matscipy.cli.electrochemistry.poisson_nernst_planck_solver.main"]], "matscipy.cli.electrochemistry.poisson_nernst_planck_solver": [[77, "module-matscipy.cli.electrochemistry.poisson_nernst_planck_solver"]], "main() (in module matscipy.cli.electrochemistry.stericify)": [[78, "matscipy.cli.electrochemistry.stericify.main"]], "matscipy.cli.electrochemistry.stericify": [[78, "module-matscipy.cli.electrochemistry.stericify"]], "matscipy.cli.fracture_mechanics": [[79, "module-matscipy.cli.fracture_mechanics"]], "main() (in module matscipy.cli.fracture_mechanics.quasistatic_crack)": [[80, "matscipy.cli.fracture_mechanics.quasistatic_crack.main"]], "matscipy.cli.fracture_mechanics.quasistatic_crack": [[80, "module-matscipy.cli.fracture_mechanics.quasistatic_crack"]], "matscipy.cli.fracture_mechanics.setup_crack": [[81, "module-matscipy.cli.fracture_mechanics.setup_crack"]], "setup_crack() (in module matscipy.cli.fracture_mechanics.setup_crack)": [[81, "matscipy.cli.fracture_mechanics.setup_crack.setup_crack"]], "main() (in module matscipy.cli.fracture_mechanics.sinclair_crack)": [[82, "matscipy.cli.fracture_mechanics.sinclair_crack.main"]], "matscipy.cli.fracture_mechanics.sinclair_crack": [[82, "module-matscipy.cli.fracture_mechanics.sinclair_crack"]], "matscipy.cli.glasses": [[83, "module-matscipy.cli.glasses"]], "handle_sigusr2() (in module matscipy.cli.glasses.quench)": [[84, "matscipy.cli.glasses.quench.handle_sigusr2"]], "main() (in module matscipy.cli.glasses.quench)": [[84, "matscipy.cli.glasses.quench.main"]], "matscipy.cli.glasses.quench": [[84, "module-matscipy.cli.glasses.quench"]], "random_solid() (in module matscipy.cli.glasses.quench)": [[84, "matscipy.cli.glasses.quench.random_solid"]], "removesimplesheardeformation (class in matscipy.deformation)": [[85, "matscipy.deformation.RemoveSimpleShearDeformation"]], "__init__() (matscipy.deformation.removesimplesheardeformation method)": [[85, "matscipy.deformation.RemoveSimpleShearDeformation.__init__"]], "get_shear_distance() (in module matscipy.deformation)": [[85, "matscipy.deformation.get_shear_distance"]], "matscipy.deformation": [[85, "module-matscipy.deformation"]], "adstroh (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.ADstroh"]], "adstroh (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.ADstroh"]], "adstroh (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.ADstroh"]], "adstroh (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.ADstroh"]], "adstroh (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.ADstroh"]], "adstroh (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.ADstroh"]], "adstroh (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.ADstroh"]], "anisotropicdislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.AnisotropicDislocation"]], "bccedge100110dislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation"]], "bccedge100dislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BCCEdge100Dislocation"]], "bccedge111dislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BCCEdge111Dislocation"]], "bccedge111bardislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BCCEdge111barDislocation"]], "bccmixed111dislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BCCMixed111Dislocation"]], "bccscrew111dislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BCCScrew111Dislocation"]], "bodycenteredcubicoctahedralfactory (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory"]], "bodycenteredcubictetrahedralfactory (class in matscipy.dislocation)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory"]], "c11 (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.C11"]], "c11 (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.C11"]], "c11 (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.C11"]], "c11 (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.C11"]], "c11 (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.C11"]], "c11 (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.C11"]], "c11 (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.C11"]], "c11 (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.C11"]], "c11 (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.C11"]], "c11 (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.C11"]], "c11 (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.C11"]], "c11 (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.C11"]], "c11 (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.C11"]], "c11 (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.C11"]], "c11 (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.C11"]], "c11 (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.C11"]], "c12 (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.C12"]], "c12 (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.C12"]], "c12 (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.C12"]], "c12 (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.C12"]], "c12 (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.C12"]], "c12 (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.C12"]], "c12 (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.C12"]], "c12 (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.C12"]], "c12 (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.C12"]], "c12 (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.C12"]], "c12 (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.C12"]], "c12 (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.C12"]], "c12 (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.C12"]], "c12 (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.C12"]], "c12 (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.C12"]], "c12 (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.C12"]], "c44 (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.C44"]], "c44 (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.C44"]], "c44 (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.C44"]], "c44 (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.C44"]], "c44 (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.C44"]], "c44 (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.C44"]], "c44 (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.C44"]], "c44 (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.C44"]], "c44 (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.C44"]], "c44 (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.C44"]], "c44 (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.C44"]], "c44 (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.C44"]], "c44 (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.C44"]], "c44 (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.C44"]], "c44 (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.C44"]], "c44 (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.C44"]], "cubiccrystaldislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.CubicCrystalDislocation"]], "cubiccrystaldissociateddislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation"]], "diamondglide30degreepartial (class in matscipy.dislocation)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial"]], "diamondglide60degree (class in matscipy.dislocation)": [[86, "matscipy.dislocation.DiamondGlide60Degree"]], "diamondglide90degreepartial (class in matscipy.dislocation)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial"]], "diamondglidescrew (class in matscipy.dislocation)": [[86, "matscipy.dislocation.DiamondGlideScrew"]], "fccedge110dislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.FCCEdge110Dislocation"]], "fccedgeshockleypartial (class in matscipy.dislocation)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial"]], "fccscrew110dislocation (class in matscipy.dislocation)": [[86, "matscipy.dislocation.FCCScrew110Dislocation"]], "fccscrewshockleypartial (class in matscipy.dislocation)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial"]], "fixedlineatoms (class in matscipy.dislocation)": [[86, "matscipy.dislocation.FixedLineAtoms"]], "__init__() (matscipy.dislocation.anisotropicdislocation method)": [[86, "matscipy.dislocation.AnisotropicDislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.__init__"]], "__init__() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.__init__"]], "__init__() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.__init__"]], "__init__() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.__init__"]], "__init__() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.__init__"]], "__init__() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.__init__"]], "__init__() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.__init__"]], "__init__() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.__init__"]], "__init__() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.__init__"]], "__init__() (matscipy.dislocation.fixedlineatoms method)": [[86, "matscipy.dislocation.FixedLineAtoms.__init__"]], "adjust_forces() (matscipy.dislocation.fixedlineatoms method)": [[86, "matscipy.dislocation.FixedLineAtoms.adjust_forces"]], "adjust_positions() (matscipy.dislocation.fixedlineatoms method)": [[86, "matscipy.dislocation.FixedLineAtoms.adjust_positions"]], "alat (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id68"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.alat"]], "alat (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id57"], [86, "matscipy.dislocation.BCCEdge100Dislocation.alat"]], "alat (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id24"], [86, "matscipy.dislocation.BCCEdge111Dislocation.alat"]], "alat (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id35"], [86, "matscipy.dislocation.BCCEdge111barDislocation.alat"]], "alat (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id46"], [86, "matscipy.dislocation.BCCMixed111Dislocation.alat"]], "alat (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id13"], [86, "matscipy.dislocation.BCCScrew111Dislocation.alat"]], "alat (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id7"], [86, "matscipy.dislocation.CubicCrystalDislocation.alat"]], "alat (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.alat"]], "alat (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id79"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.alat"]], "alat (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.alat"]], "alat (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id90"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.alat"]], "alat (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.alat"]], "alat (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.alat"]], "alat (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id112"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.alat"]], "alat (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.alat"]], "alat (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id101"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.alat"]], "align() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.align"]], "align() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.align"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.atoms_in_unit_cell"]], "atoms_in_unit_cell (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.atoms_in_unit_cell"]], "axes (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id70"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.axes"]], "axes (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id59"], [86, "matscipy.dislocation.BCCEdge100Dislocation.axes"]], "axes (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id26"], [86, "matscipy.dislocation.BCCEdge111Dislocation.axes"]], "axes (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id37"], [86, "matscipy.dislocation.BCCEdge111barDislocation.axes"]], "axes (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id48"], [86, "matscipy.dislocation.BCCMixed111Dislocation.axes"]], "axes (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id15"], [86, "matscipy.dislocation.BCCScrew111Dislocation.axes"]], "axes (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id4"], [86, "matscipy.dislocation.CubicCrystalDislocation.axes"]], "axes (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.axes"]], "axes (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id81"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.axes"]], "axes (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.axes"]], "axes (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id92"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.axes"]], "axes (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.axes"]], "axes (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.axes"]], "axes (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id114"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.axes"]], "axes (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.axes"]], "axes (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id103"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.axes"]], "basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.basis_factor"]], "basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.basis_factor"]], "bravais_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.bravais_basis"]], "bravais_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.bravais_basis"]], "build_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.build_cylinder"]], "build_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.build_cylinder"]], "build_glide_configurations() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.build_glide_configurations"]], "build_glide_configurations() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.build_glide_configurations"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.build_impurity_cylinder"]], "build_impurity_cylinder() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.build_impurity_cylinder"]], "burgers (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge100110dislocation property)": [[86, "id74"]], "burgers (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge100dislocation property)": [[86, "id63"]], "burgers (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccedge111dislocation property)": [[86, "id30"]], "burgers (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.burgers"]], "burgers (matscipy.dislocation.bccedge111bardislocation property)": [[86, "id41"]], "burgers (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccmixed111dislocation property)": [[86, "id51"]], "burgers (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.burgers"]], "burgers (matscipy.dislocation.bccscrew111dislocation property)": [[86, "id18"]], "burgers (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.burgers"]], "burgers (matscipy.dislocation.cubiccrystaldislocation property)": [[86, "id9"]], "burgers (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.burgers"]], "burgers (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.burgers"]], "burgers (matscipy.dislocation.diamondglide30degreepartial property)": [[86, "id86"]], "burgers (matscipy.dislocation.diamondglide60degree property)": [[86, "matscipy.dislocation.DiamondGlide60Degree.burgers"]], "burgers (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.burgers"]], "burgers (matscipy.dislocation.diamondglide90degreepartial property)": [[86, "id97"]], "burgers (matscipy.dislocation.diamondglidescrew property)": [[86, "matscipy.dislocation.DiamondGlideScrew.burgers"]], "burgers (matscipy.dislocation.fccedge110dislocation property)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.burgers"]], "burgers (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.burgers"]], "burgers (matscipy.dislocation.fccedgeshockleypartial property)": [[86, "id118"]], "burgers (matscipy.dislocation.fccscrew110dislocation property)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.burgers"]], "burgers (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.burgers"]], "burgers (matscipy.dislocation.fccscrewshockleypartial property)": [[86, "id107"]], "burgers_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id71"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id60"], [86, "matscipy.dislocation.BCCEdge100Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id27"], [86, "matscipy.dislocation.BCCEdge111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id38"], [86, "matscipy.dislocation.BCCEdge111barDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id49"], [86, "matscipy.dislocation.BCCMixed111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id16"], [86, "matscipy.dislocation.BCCScrew111Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id5"], [86, "matscipy.dislocation.CubicCrystalDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id82"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id93"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id115"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.burgers_dimensionless"]], "burgers_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id104"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.burgers_dimensionless"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.calc_num_atoms"]], "calc_num_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.calc_num_atoms"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.check_basis_volume"]], "check_basis_volume() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.check_basis_volume"]], "check_duplicates() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.check_duplicates"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.chop_tolerance"]], "chop_tolerance (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.chop_tolerance"]], "compare_configurations() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.compare_configurations"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.convert_to_natural_basis"]], "convert_to_natural_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.convert_to_natural_basis"]], "cost_function() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.cost_function"]], "crystalstructure (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id73"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id62"], [86, "matscipy.dislocation.BCCEdge100Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id29"], [86, "matscipy.dislocation.BCCEdge111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id40"], [86, "matscipy.dislocation.BCCEdge111barDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id50"], [86, "matscipy.dislocation.BCCMixed111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id17"], [86, "matscipy.dislocation.BCCScrew111Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id12"], [86, "matscipy.dislocation.CubicCrystalDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id85"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id96"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id117"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.crystalstructure"]], "crystalstructure (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id106"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.crystalstructure"]], "deformation_gradient() (matscipy.dislocation.anisotropicdislocation method)": [[86, "matscipy.dislocation.AnisotropicDislocation.deformation_gradient"]], "dipole_displacement_angle() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.dipole_displacement_angle"]], "displacement() (matscipy.dislocation.anisotropicdislocation method)": [[86, "matscipy.dislocation.AnisotropicDislocation.displacement"]], "displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.displacements"]], "displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.displacements"]], "displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.displacements"]], "displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.displacements"]], "displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.displacements"]], "displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.displacements"]], "displacements() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.displacements"]], "displacements() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.displacements"]], "displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.displacements"]], "displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.displacements"]], "element_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.element_basis"]], "element_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.element_basis"]], "find_directions() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_directions"]], "find_directions() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_directions"]], "find_ortho() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.find_ortho"]], "find_ortho() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.find_ortho"]], "fit_core_position() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.fit_core_position"]], "fit_core_position_images() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.fit_core_position_images"]], "gamma_line() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.gamma_line"]], "get_centering_mask() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.get_centering_mask"]], "get_elastic_constants() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.get_elastic_constants"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.get_lattice_constant"]], "get_lattice_constant() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.get_lattice_constant"]], "get_u_img() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.get_u_img"]], "glide_distance (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge100110dislocation property)": [[86, "id75"]], "glide_distance (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge100dislocation property)": [[86, "id64"]], "glide_distance (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge111dislocation property)": [[86, "id31"]], "glide_distance (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccedge111bardislocation property)": [[86, "id42"]], "glide_distance (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccmixed111dislocation property)": [[86, "id52"]], "glide_distance (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.bccscrew111dislocation property)": [[86, "id19"]], "glide_distance (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.cubiccrystaldislocation property)": [[86, "id11"]], "glide_distance (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide30degreepartial property)": [[86, "id87"]], "glide_distance (matscipy.dislocation.diamondglide60degree property)": [[86, "matscipy.dislocation.DiamondGlide60Degree.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.glide_distance"]], "glide_distance (matscipy.dislocation.diamondglide90degreepartial property)": [[86, "id98"]], "glide_distance (matscipy.dislocation.diamondglidescrew property)": [[86, "matscipy.dislocation.DiamondGlideScrew.glide_distance"]], "glide_distance (matscipy.dislocation.fccedge110dislocation property)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.glide_distance"]], "glide_distance (matscipy.dislocation.fccedgeshockleypartial property)": [[86, "id119"]], "glide_distance (matscipy.dislocation.fccscrew110dislocation property)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.glide_distance"]], "glide_distance (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.glide_distance"]], "glide_distance (matscipy.dislocation.fccscrewshockleypartial property)": [[86, "id108"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.glide_distance_dimensionless"]], "glide_distance_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.glide_distance_dimensionless"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.init_anisotropic_dislocation"]], "init_anisotropic_dislocation() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.init_anisotropic_dislocation"]], "init_stroh() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.init_stroh"]], "init_stroh() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.init_stroh"]], "init_stroh() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.init_stroh"]], "inside() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inside"]], "inside() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inside"]], "int_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.int_basis"]], "int_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.int_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis"]], "inverse_basis (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.inverse_basis_factor"]], "inverse_basis_factor (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.inverse_basis_factor"]], "left_dislocation (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.left_dislocation"]], "left_dislocation (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.left_dislocation"]], "left_dislocation (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.left_dislocation"]], "left_dislocation (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.left_dislocation"]], "left_dislocation (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.left_dislocation"]], "make_barrier_configurations() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.make_barrier_configurations"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_crystal_basis"]], "make_crystal_basis() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_crystal_basis"]], "make_edge_cyl() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.make_edge_cyl"]], "make_edge_cyl_001_100() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.make_edge_cyl_001_100"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_list_of_atoms"]], "make_list_of_atoms() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_list_of_atoms"]], "make_screw_cyl() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.make_screw_cyl"]], "make_screw_cyl_kink() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.make_screw_cyl_kink"]], "make_screw_quadrupole() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.make_screw_quadrupole"]], "make_screw_quadrupole_kink() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.make_screw_quadrupole_kink"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.make_unit_cell"]], "make_unit_cell() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.make_unit_cell"]], "matscipy.dislocation": [[86, "module-matscipy.dislocation"]], "n_planes (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id72"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id61"], [86, "matscipy.dislocation.BCCEdge100Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id28"], [86, "matscipy.dislocation.BCCEdge111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id39"], [86, "matscipy.dislocation.BCCEdge111barDislocation.n_planes"]], "n_planes (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id53"], [86, "matscipy.dislocation.BCCMixed111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id20"], [86, "matscipy.dislocation.BCCScrew111Dislocation.n_planes"]], "n_planes (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id0"], [86, "matscipy.dislocation.CubicCrystalDislocation.n_planes"]], "n_planes (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.n_planes"]], "n_planes (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id83"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.n_planes"]], "n_planes (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.n_planes"]], "n_planes (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id94"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.n_planes"]], "n_planes (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.n_planes"]], "n_planes (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id116"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.n_planes"]], "n_planes (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.n_planes"]], "n_planes (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id105"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.n_planes"]], "new_left_burgers (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.new_left_burgers"]], "new_left_burgers (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.new_left_burgers"]], "new_right_burgers (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.new_right_burgers"]], "new_right_burgers (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.new_right_burgers"]], "other (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.other"]], "other (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.other"]], "ovito_dxa_straight_dislo_info() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.ovito_dxa_straight_dislo_info"]], "parity (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id76"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.parity"]], "parity (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id65"], [86, "matscipy.dislocation.BCCEdge100Dislocation.parity"]], "parity (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id32"], [86, "matscipy.dislocation.BCCEdge111Dislocation.parity"]], "parity (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id43"], [86, "matscipy.dislocation.BCCEdge111barDislocation.parity"]], "parity (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id54"], [86, "matscipy.dislocation.BCCMixed111Dislocation.parity"]], "parity (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id21"], [86, "matscipy.dislocation.BCCScrew111Dislocation.parity"]], "parity (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id6"], [86, "matscipy.dislocation.CubicCrystalDislocation.parity"]], "parity (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.parity"]], "parity (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id88"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.parity"]], "parity (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.parity"]], "parity (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id99"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.parity"]], "parity (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.parity"]], "parity (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.parity"]], "parity (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id120"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.parity"]], "parity (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.parity"]], "parity (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id109"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.parity"]], "pbc (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.pbc"]], "pbc (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.pbc"]], "pbc (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.pbc"]], "pbc (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.pbc"]], "pbc (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.pbc"]], "pbc (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.pbc"]], "pbc (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.pbc"]], "pbc (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.pbc"]], "pbc (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.pbc"]], "pbc (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.pbc"]], "pbc (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.pbc"]], "pbc (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.pbc"]], "pbc (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.pbc"]], "pbc (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.pbc"]], "plot_bulk() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.plot_bulk"]], "plot_unit_cell() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.plot_unit_cell"]], "plot_unit_cell() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.plot_unit_cell"]], "plot_vitek() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.plot_vitek"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.print_directions_and_miller"]], "print_directions_and_miller() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.print_directions_and_miller"]], "process_element() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.process_element"]], "process_element() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.process_element"]], "put_atom() (matscipy.dislocation.bodycenteredcubicoctahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.put_atom"]], "put_atom() (matscipy.dislocation.bodycenteredcubictetrahedralfactory method)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.put_atom"]], "read_dislo_qmmm() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.read_dislo_QMMM"]], "right_dislocation (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.right_dislocation"]], "right_dislocation (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.right_dislocation"]], "right_dislocation (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.right_dislocation"]], "right_dislocation (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.right_dislocation"]], "right_dislocation (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.right_dislocation"]], "screw_cyl_octahedral() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.screw_cyl_octahedral"]], "screw_cyl_tetrahedral() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.screw_cyl_tetrahedral"]], "self_consistent (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id77"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id66"], [86, "matscipy.dislocation.BCCEdge100Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id33"], [86, "matscipy.dislocation.BCCEdge111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id44"], [86, "matscipy.dislocation.BCCEdge111barDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id55"], [86, "matscipy.dislocation.BCCMixed111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id22"], [86, "matscipy.dislocation.BCCScrew111Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id3"], [86, "matscipy.dislocation.CubicCrystalDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id84"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id95"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.self_consistent"]], "self_consistent (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.self_consistent"]], "self_consistent (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id121"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.self_consistent"]], "self_consistent (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.self_consistent"]], "self_consistent (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id110"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.self_consistent"]], "self_consistent_displacements() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.self_consistent_displacements"]], "self_consistent_displacements() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.self_consistent_displacements"]], "set_burgers() (matscipy.dislocation.bccedge100110dislocation method)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge100dislocation method)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111dislocation method)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccedge111bardislocation method)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccmixed111dislocation method)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.bccscrew111dislocation method)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldislocation method)": [[86, "matscipy.dislocation.CubicCrystalDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.cubiccrystaldissociateddislocation method)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide30degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide60degree method)": [[86, "matscipy.dislocation.DiamondGlide60Degree.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglide90degreepartial method)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.set_burgers"]], "set_burgers() (matscipy.dislocation.diamondglidescrew method)": [[86, "matscipy.dislocation.DiamondGlideScrew.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedge110dislocation method)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccedgeshockleypartial method)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrew110dislocation method)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.set_burgers"]], "set_burgers() (matscipy.dislocation.fccscrewshockleypartial method)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.set_burgers"]], "show_neb_configurations() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.show_NEB_configurations"]], "show_configuration() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.show_configuration"]], "slice_long_dislo() (in module matscipy.dislocation)": [[86, "matscipy.dislocation.slice_long_dislo"]], "stroh (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.stroh"]], "stroh (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.stroh"]], "stroh (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.stroh"]], "stroh (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.stroh"]], "stroh (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.stroh"]], "stroh (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.stroh"]], "stroh (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.stroh"]], "stroh (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.stroh"]], "stroh (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.stroh"]], "stroh (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.stroh"]], "stroh (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.stroh"]], "stroh (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.stroh"]], "stroh (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.stroh"]], "stroh (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.stroh"]], "unit_cell (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "id69"], [86, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "id58"], [86, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "id25"], [86, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "id36"], [86, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "id47"], [86, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "id14"], [86, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "id8"], [86, "matscipy.dislocation.CubicCrystalDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "id80"], [86, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "id91"], [86, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell"]], "unit_cell (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.unit_cell"]], "unit_cell (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "id113"], [86, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell"]], "unit_cell (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell"]], "unit_cell (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "id102"], [86, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell"]], "unit_cell_core_position (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge100110dislocation property)": [[86, "id78"]], "unit_cell_core_position (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge100dislocation property)": [[86, "id67"]], "unit_cell_core_position (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge111dislocation property)": [[86, "id34"]], "unit_cell_core_position (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccedge111bardislocation property)": [[86, "id45"]], "unit_cell_core_position (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccmixed111dislocation property)": [[86, "id56"]], "unit_cell_core_position (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.bccscrew111dislocation property)": [[86, "id23"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldislocation property)": [[86, "id10"]], "unit_cell_core_position (matscipy.dislocation.cubiccrystaldissociateddislocation property)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide30degreepartial property)": [[86, "id89"]], "unit_cell_core_position (matscipy.dislocation.diamondglide60degree property)": [[86, "matscipy.dislocation.DiamondGlide60Degree.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.diamondglide90degreepartial property)": [[86, "id100"]], "unit_cell_core_position (matscipy.dislocation.diamondglidescrew property)": [[86, "matscipy.dislocation.DiamondGlideScrew.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedge110dislocation property)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccedgeshockleypartial property)": [[86, "id122"]], "unit_cell_core_position (matscipy.dislocation.fccscrew110dislocation property)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell_core_position"]], "unit_cell_core_position (matscipy.dislocation.fccscrewshockleypartial property)": [[86, "id111"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge100110dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge100dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge100Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge111dislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccedge111bardislocation attribute)": [[86, "matscipy.dislocation.BCCEdge111barDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccmixed111dislocation attribute)": [[86, "matscipy.dislocation.BCCMixed111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.bccscrew111dislocation attribute)": [[86, "matscipy.dislocation.BCCScrew111Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.cubiccrystaldislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.cubiccrystaldissociateddislocation attribute)": [[86, "matscipy.dislocation.CubicCrystalDissociatedDislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide30degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide30degreePartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide60degree attribute)": [[86, "matscipy.dislocation.DiamondGlide60Degree.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglide90degreepartial attribute)": [[86, "matscipy.dislocation.DiamondGlide90degreePartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.diamondglidescrew attribute)": [[86, "matscipy.dislocation.DiamondGlideScrew.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccedge110dislocation attribute)": [[86, "matscipy.dislocation.FCCEdge110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccedgeshockleypartial attribute)": [[86, "matscipy.dislocation.FCCEdgeShockleyPartial.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccscrew110dislocation attribute)": [[86, "matscipy.dislocation.FCCScrew110Dislocation.unit_cell_core_position_dimensionless"]], "unit_cell_core_position_dimensionless (matscipy.dislocation.fccscrewshockleypartial attribute)": [[86, "matscipy.dislocation.FCCScrewShockleyPartial.unit_cell_core_position_dimensionless"]], "xtal_name (matscipy.dislocation.bodycenteredcubicoctahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicOctahedralFactory.xtal_name"]], "xtal_name (matscipy.dislocation.bodycenteredcubictetrahedralfactory attribute)": [[86, "matscipy.dislocation.BodyCenteredCubicTetrahedralFactory.xtal_name"]], "removedrift (class in matscipy.drift)": [[87, "matscipy.drift.RemoveDrift"]], "__init__() (matscipy.drift.removedrift method)": [[87, "matscipy.drift.RemoveDrift.__init__"]], "matscipy.drift": [[87, "module-matscipy.drift"]], "cubicelasticmoduli (class in matscipy.elasticity)": [[88, "matscipy.elasticity.CubicElasticModuli"]], "voigt_6_to_full_3x3_strain() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.Voigt_6_to_full_3x3_strain"]], "voigt_6_to_full_3x3_stress() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.Voigt_6_to_full_3x3_stress"]], "voigt_6x6_to_cubic() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.Voigt_6x6_to_cubic"]], "voigt_6x6_to_full_3x3x3x3() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.Voigt_6x6_to_full_3x3x3x3"]], "__init__() (matscipy.elasticity.cubicelasticmoduli method)": [[88, "matscipy.elasticity.CubicElasticModuli.__init__"]], "compliance() (matscipy.elasticity.cubicelasticmoduli method)": [[88, "matscipy.elasticity.CubicElasticModuli.compliance"]], "cubic_to_voigt_6x6() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.cubic_to_Voigt_6x6"]], "elastic_moduli() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.elastic_moduli"]], "fit_elastic_constants() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.fit_elastic_constants"]], "full_3x3_to_voigt_6_index() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.full_3x3_to_Voigt_6_index"]], "full_3x3_to_voigt_6_strain() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.full_3x3_to_Voigt_6_strain"]], "full_3x3_to_voigt_6_stress() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.full_3x3_to_Voigt_6_stress"]], "full_3x3x3x3_to_voigt_6x6() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.full_3x3x3x3_to_Voigt_6x6"]], "generate_strained_configs() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.generate_strained_configs"]], "invariants() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.invariants"]], "matscipy.elasticity": [[88, "module-matscipy.elasticity"]], "measure_triclinic_elastic_constants() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.measure_triclinic_elastic_constants"]], "nonaffine_elastic_contribution() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.nonaffine_elastic_contribution"]], "poisson_ratio() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.poisson_ratio"]], "rotate() (matscipy.elasticity.cubicelasticmoduli method)": [[88, "matscipy.elasticity.CubicElasticModuli.rotate"]], "rotate_cubic_elastic_constants() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.rotate_cubic_elastic_constants"]], "rotate_elastic_constants() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.rotate_elastic_constants"]], "stiffness() (matscipy.elasticity.cubicelasticmoduli method)": [[88, "matscipy.elasticity.CubicElasticModuli.stiffness"]], "tol (matscipy.elasticity.cubicelasticmoduli attribute)": [[88, "matscipy.elasticity.CubicElasticModuli.tol"]], "youngs_modulus() (in module matscipy.elasticity)": [[88, "matscipy.elasticity.youngs_modulus"]], "matscipy.electrochemistry": [[89, "module-matscipy.electrochemistry"]], "continuous2discrete() (in module matscipy.electrochemistry)": [[90, "matscipy.electrochemistry.continuous2discrete"]], "charge_density() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.charge_density"]], "concentration() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.concentration"]], "debye() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.debye"]], "gamma() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.gamma"]], "ionic_strength() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.ionic_strength"]], "main() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.main"]], "matscipy.electrochemistry.poisson_boltzmann_distribution": [[91, "module-matscipy.electrochemistry.poisson_boltzmann_distribution"]], "potential() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.potential"]], "test() (in module matscipy.electrochemistry.poisson_boltzmann_distribution)": [[91, "matscipy.electrochemistry.poisson_boltzmann_distribution.test"]], "b() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.B"]], "g() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.G"]], "poissonnernstplancksystem (class in matscipy.electrochemistry.poisson_nernst_planck_solver)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.__init__"]], "charge_density (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.charge_density"]], "concentration (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.concentration"]], "discretize() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.discretize"]], "grid (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.grid"]], "init() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.init"]], "initial_values() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.initial_values"]], "ionic_strength (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.ionic_strength"]], "jacobian() (in module matscipy.electrochemistry.poisson_nernst_planck_solver)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.jacobian"]], "lambda_d (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.lambda_D"]], "left_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_controlled_volume_scheme_flux_bc"]], "left_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_dirichlet_bc"]], "left_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_finite_difference_scheme_flux_bc"]], "left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_potential_dirichlet_bc"]], "left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_potential_robin_bc"]], "left_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.left_robin_bc"]], "matscipy.electrochemistry.poisson_nernst_planck_solver": [[92, "module-matscipy.electrochemistry.poisson_nernst_planck_solver"]], "nernst_planck_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.nernst_planck_pde"]], "newton() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.newton"]], "number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.number_conservation_constraint"]], "poisson_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.poisson_pde"]], "potential (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.potential"]], "right_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_controlled_volume_scheme_flux_bc"]], "right_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_dirichlet_bc"]], "right_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_finite_difference_scheme_flux_bc"]], "right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_potential_dirichlet_bc"]], "right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_potential_robin_bc"]], "right_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.right_robin_bc"]], "solve() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solve"]], "solver_callback() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.solver_callback"]], "use_standard_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_cell_bc"]], "use_standard_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_dirichlet_bc"]], "use_standard_interface_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_standard_interface_bc"]], "use_stern_layer_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem method)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.use_stern_layer_cell_bc"]], "x1_scaled (matscipy.electrochemistry.poisson_nernst_planck_solver.poissonnernstplancksystem property)": [[92, "matscipy.electrochemistry.poisson_nernst_planck_solver.PoissonNernstPlanckSystem.x1_scaled"]], "boundary (class in matscipy.electrochemistry.poisson_nernst_planck_solver_fenics)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary"]], "g() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.G"]], "poissonnernstplancksystemfenics (class in matscipy.electrochemistry.poisson_nernst_planck_solver_fenics)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS"]], "x (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.X"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.__init__"]], "__init__() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.__init__"]], "apply_central_reference_concentration_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_central_reference_concentration_constraint"]], "apply_left_concentration_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_concentration_dirichlet_bc"]], "apply_left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_potential_dirichlet_bc"]], "apply_left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_left_potential_robin_bc"]], "apply_number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_number_conservation_constraint"]], "apply_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_potential_dirichlet_bc"]], "apply_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_potential_robin_bc"]], "apply_right_concentration_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_concentration_dirichlet_bc"]], "apply_right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_potential_dirichlet_bc"]], "apply_right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.apply_right_potential_robin_bc"]], "boundary_c() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_C"]], "boundary_l() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_L"]], "boundary_r() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.boundary_R"]], "charge_density (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.charge_density"]], "concentration (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.concentration"]], "discretize() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.discretize"]], "get_property() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.get_property"]], "grid (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.grid"]], "init() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.init"]], "initial_values() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.initial_values"]], "inside() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.inside"]], "ionic_strength (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.ionic_strength"]], "lambda_d (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.lambda_D"]], "left_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_controlled_volume_scheme_flux_bc"]], "left_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_dirichlet_bc"]], "left_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_finite_difference_scheme_flux_bc"]], "left_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_potential_dirichlet_bc"]], "left_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_potential_robin_bc"]], "left_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.left_robin_bc"]], "map() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.map"]], "mark() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark"]], "mark_cells() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark_cells"]], "mark_facets() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.mark_facets"]], "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics": [[93, "module-matscipy.electrochemistry.poisson_nernst_planck_solver_fenics"]], "nernst_planck_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.nernst_planck_pde"]], "newton() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.newton"]], "number_conservation_constraint() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.number_conservation_constraint"]], "poisson_pde() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.poisson_pde"]], "potential (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.potential"]], "right_controlled_volume_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_controlled_volume_scheme_flux_bc"]], "right_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_dirichlet_bc"]], "right_finite_difference_scheme_flux_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_finite_difference_scheme_flux_bc"]], "right_potential_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_potential_dirichlet_bc"]], "right_potential_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_potential_robin_bc"]], "right_robin_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.right_robin_bc"]], "set_property() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.set_property"]], "snap() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.boundary method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.Boundary.snap"]], "solve() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.solve"]], "solver_callback() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.solver_callback"]], "use_central_reference_concentration_based_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_central_reference_concentration_based_cell_bc"]], "use_standard_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_cell_bc"]], "use_standard_dirichlet_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_dirichlet_bc"]], "use_standard_interface_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_standard_interface_bc"]], "use_stern_layer_cell_bc() (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics method)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.use_stern_layer_cell_bc"]], "x1_scaled (matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.poissonnernstplancksystemfenics property)": [[93, "matscipy.electrochemistry.poisson_nernst_planck_solver_fenics.PoissonNernstPlanckSystemFEniCS.x1_scaled"]], "deferredmessage (class in matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.DeferredMessage"]], "__init__() (matscipy.electrochemistry.steric_correction.deferredmessage method)": [[94, "matscipy.electrochemistry.steric_correction.DeferredMessage.__init__"]], "apply_steric_correction() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.apply_steric_correction"]], "box_constraint() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.box_constraint"]], "box_constraint_with_gradient() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.box_constraint_with_gradient"]], "brute_force_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.brute_force_closest_pair"]], "brute_force_target_function() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.brute_force_target_function"]], "matscipy.electrochemistry.steric_correction": [[94, "module-matscipy.electrochemistry.steric_correction"]], "neigh_list_based_target_function() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.neigh_list_based_target_function"]], "numpy_only_target_function() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.numpy_only_target_function"]], "planar_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.planar_closest_pair"]], "recursive_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.recursive_closest_pair"]], "scipy_distance_based_closest_pair() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.scipy_distance_based_closest_pair"]], "scipy_distance_based_target_function() (in module matscipy.electrochemistry.steric_correction)": [[94, "matscipy.electrochemistry.steric_correction.scipy_distance_based_target_function"]], "matscipy.ffi": [[95, "module-matscipy.ffi"]], "matscipy.fracture_mechanics": [[96, "module-matscipy.fracture_mechanics"]], "bcc() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.bcc"]], "cluster() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.cluster"]], "diamond() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.diamond"]], "fcc() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.fcc"]], "generate_3d_cubic_111() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.generate_3D_cubic_111"]], "generate_3d_structure() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.generate_3D_structure"]], "get_alpha_period() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.get_alpha_period"]], "matscipy.fracture_mechanics.clusters": [[97, "module-matscipy.fracture_mechanics.clusters"]], "sc() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.sc"]], "set_groups() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.set_groups"]], "set_regions() (in module matscipy.fracture_mechanics.clusters)": [[97, "matscipy.fracture_mechanics.clusters.set_regions"]], "constantstrainrate (class in matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.ConstantStrainRate"]], "cubiccrystalcrack (class in matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack"]], "g_to_strain() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.G_to_strain"]], "isotropicstressfield (class in matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.IsotropicStressField"]], "rectilinearanisotropiccrack (class in matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack"]], "sinclaircrack (class in matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack"]], "__init__() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[98, "matscipy.fracture_mechanics.crack.ConstantStrainRate.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[98, "matscipy.fracture_mechanics.crack.IsotropicStressField.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.__init__"]], "__init__() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.__init__"]], "adjust_forces() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[98, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_forces"]], "adjust_positions() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[98, "matscipy.fracture_mechanics.crack.ConstantStrainRate.adjust_positions"]], "animate() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.animate"]], "apply_strain() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[98, "matscipy.fracture_mechanics.crack.ConstantStrainRate.apply_strain"]], "arc_length_continuation() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.arc_length_continuation"]], "convergence_line_plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.convergence_line_plot"]], "copy() (matscipy.fracture_mechanics.crack.constantstrainrate method)": [[98, "matscipy.fracture_mechanics.crack.ConstantStrainRate.copy"]], "counted() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.counted"]], "crack_tip_position() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position"]], "crack_tip_position_y() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.crack_tip_position_y"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient"]], "deformation_gradient() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.deformation_gradient"]], "deformation_gradient_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cartesian_coordinates"]], "deformation_gradient_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.deformation_gradient_from_cylinder_coordinates"]], "deformation_gradient_residual() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.deformation_gradient_residual"]], "deformation_gradient_residuals() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.deformation_gradient_residuals"]], "dfk_dk_approx() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.dfk_dk_approx"]], "displacement_residual() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.displacement_residual"]], "displacement_residuals() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.displacement_residuals"]], "displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements"]], "displacements() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.displacements"]], "displacements_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cartesian_coordinates"]], "displacements_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.displacements_from_cylinder_coordinates"]], "find_tip_broken_bonds() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.find_tip_broken_bonds"]], "find_tip_coordination() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.find_tip_coordination"]], "find_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.find_tip_stress_field"]], "fit_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.fit_cle"]], "fit_crack_stress_field() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.fit_crack_stress_field"]], "get_crack_tip_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_crack_tip_force"]], "get_deformation_gradient() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_deformation_gradient"]], "get_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_dofs"]], "get_energy_release_rate() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.get_energy_release_rate"]], "get_forces() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_forces"]], "get_k_force() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_k_force"]], "get_potential_energy() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_potential_energy"]], "get_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_precon"]], "get_strain() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.get_strain"]], "get_stress_intensity_factor() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.get_stress_intensity_factor"]], "get_stresses() (matscipy.fracture_mechanics.crack.isotropicstressfield method)": [[98, "matscipy.fracture_mechanics.crack.IsotropicStressField.get_stresses"]], "get_xdot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.get_xdot"]], "isotropic_modeii_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.isotropic_modeII_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_displacement_field() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_displacement_field"]], "isotropic_modei_crack_tip_stress_field() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.isotropic_modeI_crack_tip_stress_field"]], "k (matscipy.fracture_mechanics.crack.sinclaircrack property)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.k"]], "k1g() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1g"]], "k1g() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1g"]], "k1gsqg() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.k1gsqG"]], "k1gsqg() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.k1gsqG"]], "load_cb_model() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.load_cb_model"]], "matscipy.fracture_mechanics.crack": [[98, "module-matscipy.fracture_mechanics.crack"]], "optimize() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.optimize"]], "pack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.pack"]], "plot() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.plot"]], "plot_stress_fields() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.plot_stress_fields"]], "print_crack_system() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.print_crack_system"]], "rescale_k() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.rescale_k"]], "rtheta() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.rtheta"]], "save_cb_model() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.save_cb_model"]], "scale_displacements() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.scale_displacements"]], "set_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.set_atoms"]], "set_dofs() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.set_dofs"]], "set_plane_strain() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_strain"]], "set_plane_stress() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.set_plane_stress"]], "set_shiftmask() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.set_shiftmask"]], "strain_err() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.strain_err"]], "strain_to_g() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.strain_to_G"]], "stresses() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses"]], "stresses() (matscipy.fracture_mechanics.crack.rectilinearanisotropiccrack method)": [[98, "matscipy.fracture_mechanics.crack.RectilinearAnisotropicCrack.stresses"]], "stresses_from_cartesian_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cartesian_coordinates"]], "stresses_from_cylinder_coordinates() (matscipy.fracture_mechanics.crack.cubiccrystalcrack method)": [[98, "matscipy.fracture_mechanics.crack.CubicCrystalCrack.stresses_from_cylinder_coordinates"]], "thin_strip_displacement_y() (in module matscipy.fracture_mechanics.crack)": [[98, "matscipy.fracture_mechanics.crack.thin_strip_displacement_y"]], "u_cle() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.u_cle"]], "unpack() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.unpack"]], "update_atoms() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.update_atoms"]], "update_precon() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.update_precon"]], "write_atoms_to_file() (matscipy.fracture_mechanics.crack.sinclaircrack method)": [[98, "matscipy.fracture_mechanics.crack.SinclairCrack.write_atoms_to_file"]], "matscipy.fracture_mechanics.crackpathsel": [[99, "module-matscipy.fracture_mechanics.crackpathsel"]], "j_integral() (in module matscipy.fracture_mechanics.energy_release)": [[100, "matscipy.fracture_mechanics.energy_release.J_integral"]], "matscipy.fracture_mechanics.energy_release": [[100, "module-matscipy.fracture_mechanics.energy_release"]], "idealbrittlesolid (class in matscipy.fracture_mechanics.idealbrittlesolid)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid"]], "__init__() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.__init__"]], "band_structure() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.band_structure"]], "calculate() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate"]], "calculate_numerical_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_numerical_stress"]], "calculate_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculate_properties"]], "calculation_required() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.calculation_required"]], "check_state() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.check_state"]], "default_parameters (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.default_parameters"]], "directory (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.directory"]], "discard_results_on_any_change (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.discard_results_on_any_change"]], "export_properties() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.export_properties"]], "extend_strip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.extend_strip"]], "find_crack_tip() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.find_crack_tip"]], "find_triangles_2d() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.find_triangles_2d"]], "get_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_atoms"]], "get_charges() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_charges"]], "get_default_parameters() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_default_parameters"]], "get_dipole_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_dipole_moment"]], "get_elastic_moduli() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_elastic_moduli"]], "get_forces() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_forces"]], "get_magnetic_moment() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_magnetic_moments"]], "get_poisson_ratio() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_poisson_ratio"]], "get_potential_energies() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energies"]], "get_potential_energy() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_potential_energy"]], "get_property() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_property"]], "get_stress() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stress"]], "get_stresses() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_stresses"]], "get_wave_speeds() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_wave_speeds"]], "get_youngs_modulus() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.get_youngs_modulus"]], "ignored_changes (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.ignored_changes"]], "implemented_properties (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid attribute)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.implemented_properties"]], "label (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid property)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.label"]], "matscipy.fracture_mechanics.idealbrittlesolid": [[101, "module-matscipy.fracture_mechanics.idealbrittlesolid"]], "read() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read"]], "read_atoms() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid class method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.read_atoms"]], "reset() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.reset"]], "set() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set"]], "set_constraints() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.set_constraints"]], "set_initial_velocities() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.set_initial_velocities"]], "set_label() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_label"]], "set_reference_crystal() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.set_reference_crystal"]], "todict() (matscipy.fracture_mechanics.idealbrittlesolid.idealbrittlesolid method)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.IdealBrittleSolid.todict"]], "triangular_lattice_slab() (in module matscipy.fracture_mechanics.idealbrittlesolid)": [[101, "matscipy.fracture_mechanics.idealbrittlesolid.triangular_lattice_slab"]], "gammasurface (class in matscipy.gamma_surface)": [[102, "matscipy.gamma_surface.GammaSurface"]], "stackingfault (class in matscipy.gamma_surface)": [[102, "matscipy.gamma_surface.StackingFault"]], "__init__() (matscipy.gamma_surface.gammasurface method)": [[102, "matscipy.gamma_surface.GammaSurface.__init__"]], "__init__() (matscipy.gamma_surface.stackingfault method)": [[102, "matscipy.gamma_surface.StackingFault.__init__"]], "cut_at (matscipy.gamma_surface.gammasurface.self attribute)": [[102, "matscipy.gamma_surface.GammaSurface.self.cut_at"]], "cut_at (matscipy.gamma_surface.stackingfault.self attribute)": [[102, "matscipy.gamma_surface.StackingFault.self.cut_at"]], "generate_images() (matscipy.gamma_surface.gammasurface method)": [[102, "matscipy.gamma_surface.GammaSurface.generate_images"]], "generate_images() (matscipy.gamma_surface.stackingfault method)": [[102, "matscipy.gamma_surface.StackingFault.generate_images"]], "get_energy_densities() (matscipy.gamma_surface.gammasurface method)": [[102, "matscipy.gamma_surface.GammaSurface.get_energy_densities"]], "get_energy_densities() (matscipy.gamma_surface.stackingfault method)": [[102, "matscipy.gamma_surface.StackingFault.get_energy_densities"]], "images (matscipy.gamma_surface.gammasurface.self attribute)": [[102, "matscipy.gamma_surface.GammaSurface.self.images"]], "images (matscipy.gamma_surface.stackingfault.self attribute)": [[102, "matscipy.gamma_surface.StackingFault.self.images"]], "matscipy.gamma_surface": [[102, "module-matscipy.gamma_surface"]], "plot_energy_densities() (matscipy.gamma_surface.gammasurface method)": [[102, "matscipy.gamma_surface.GammaSurface.plot_energy_densities"]], "plot_energy_densities() (matscipy.gamma_surface.stackingfault method)": [[102, "matscipy.gamma_surface.StackingFault.plot_energy_densities"]], "relax_images() (matscipy.gamma_surface.gammasurface method)": [[102, "matscipy.gamma_surface.GammaSurface.relax_images"]], "relax_images() (matscipy.gamma_surface.stackingfault method)": [[102, "matscipy.gamma_surface.StackingFault.relax_images"]], "show() (matscipy.gamma_surface.gammasurface method)": [[102, "matscipy.gamma_surface.GammaSurface.show"]], "show() (matscipy.gamma_surface.stackingfault method)": [[102, "matscipy.gamma_surface.StackingFault.show"]], "surf_directions (matscipy.gamma_surface.gammasurface.self attribute)": [[102, "matscipy.gamma_surface.GammaSurface.self.surf_directions"]], "surf_directions (matscipy.gamma_surface.stackingfault.self attribute)": [[102, "matscipy.gamma_surface.StackingFault.self.surf_directions"]], "fd_hessian() (in module matscipy.hessian_finite_differences)": [[103, "matscipy.hessian_finite_differences.fd_hessian"]], "matscipy.hessian_finite_differences": [[103, "module-matscipy.hessian_finite_differences"]], "hydrogenate() (in module matscipy.hydrogenate)": [[104, "matscipy.hydrogenate.hydrogenate"]], "matscipy.hydrogenate": [[104, "module-matscipy.hydrogenate"]], "matscipy.io": [[105, "module-matscipy.io"]], "lammpsdata (class in matscipy.io.lammpsdata)": [[106, "matscipy.io.lammpsdata.LAMMPSData"]], "__init__() (matscipy.io.lammpsdata.lammpsdata method)": [[106, "matscipy.io.lammpsdata.LAMMPSData.__init__"]], "check_legal_name() (in module matscipy.io.lammpsdata)": [[106, "matscipy.io.lammpsdata.check_legal_name"]], "column_size() (in module matscipy.io.lammpsdata)": [[106, "matscipy.io.lammpsdata.column_size"]], "matscipy.io.lammpsdata": [[106, "module-matscipy.io.lammpsdata"]], "read() (matscipy.io.lammpsdata.lammpsdata method)": [[106, "matscipy.io.lammpsdata.LAMMPSData.read"]], "read_molecules_from_lammps_data() (in module matscipy.io.lammpsdata)": [[106, "matscipy.io.lammpsdata.read_molecules_from_lammps_data"]], "write() (matscipy.io.lammpsdata.lammpsdata method)": [[106, "matscipy.io.lammpsdata.LAMMPSData.write"]], "matscipy.io.metis": [[107, "module-matscipy.io.metis"]], "save_metis() (in module matscipy.io.metis)": [[107, "matscipy.io.metis.save_metis"]], "matscipy.io.opls": [[108, "module-matscipy.io.opls"]], "read_block() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.read_block"]], "read_cutoffs() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.read_cutoffs"]], "read_extended_xyz() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.read_extended_xyz"]], "read_lammps_data() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.read_lammps_data"]], "read_lammps_definitions() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.read_lammps_definitions"]], "read_parameter_file() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.read_parameter_file"]], "update_from_lammps_dump() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.update_from_lammps_dump"]], "write_lammps() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.write_lammps"]], "write_lammps_atoms() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.write_lammps_atoms"]], "write_lammps_definitions() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.write_lammps_definitions"]], "write_lammps_in() (in module matscipy.io.opls)": [[108, "matscipy.io.opls.write_lammps_in"]], "loadtbl() (in module matscipy.io.tbl)": [[109, "matscipy.io.tbl.loadtbl"]], "matscipy.io.tbl": [[109, "module-matscipy.io.tbl"]], "savetbl() (in module matscipy.io.tbl)": [[109, "matscipy.io.tbl.savetbl"]], "logger (class in matscipy.logger)": [[110, "matscipy.logger.Logger"]], "__init__() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.__init__"]], "flatten() (in module matscipy.logger)": [[110, "matscipy.logger.flatten"]], "flush() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.flush"]], "get_logfile() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.get_logfile"]], "has_logfile() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.has_logfile"]], "hdr_str() (in module matscipy.logger)": [[110, "matscipy.logger.hdr_str"]], "hdrfmt_str() (in module matscipy.logger)": [[110, "matscipy.logger.hdrfmt_str"]], "iteration_finished() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.iteration_finished"]], "matscipy.logger": [[110, "module-matscipy.logger"]], "numfmt_str() (in module matscipy.logger)": [[110, "matscipy.logger.numfmt_str"]], "pr() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.pr"]], "set_logfile() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.set_logfile"]], "set_outevery() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.set_outevery"]], "st() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.st"]], "warn() (matscipy.logger.logger method)": [[110, "matscipy.logger.Logger.warn"]], "molecules (class in matscipy.molecules)": [[111, "matscipy.molecules.Molecules"]], "__init__() (matscipy.molecules.molecules method)": [[111, "matscipy.molecules.Molecules.__init__"]], "from_atoms() (matscipy.molecules.molecules static method)": [[111, "matscipy.molecules.Molecules.from_atoms"]], "get_angles() (matscipy.molecules.molecules method)": [[111, "matscipy.molecules.Molecules.get_angles"]], "get_dihedrals() (matscipy.molecules.molecules method)": [[111, "matscipy.molecules.Molecules.get_dihedrals"]], "get_distances() (matscipy.molecules.molecules method)": [[111, "matscipy.molecules.Molecules.get_distances"]], "matscipy.molecules": [[111, "module-matscipy.molecules"]], "cutoffneighbourhood (class in matscipy.neighbours)": [[112, "matscipy.neighbours.CutoffNeighbourhood"]], "molecularneighbourhood (class in matscipy.neighbours)": [[112, "matscipy.neighbours.MolecularNeighbourhood"]], "neighbourhood (class in matscipy.neighbours)": [[112, "matscipy.neighbours.Neighbourhood"]], "__init__() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.__init__"]], "__init__() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.__init__"]], "complete_connectivity() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.complete_connectivity"]], "compute_distances() (matscipy.neighbours.cutoffneighbourhood static method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.molecularneighbourhood static method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.compute_distances"]], "compute_distances() (matscipy.neighbours.neighbourhood static method)": [[112, "matscipy.neighbours.Neighbourhood.compute_distances"]], "connected_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.connected_triplets"]], "connected_triplets() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.connected_triplets"]], "double_connectivity() (matscipy.neighbours.molecularneighbourhood static method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.double_connectivity"]], "double_neighbourhood() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.double_neighbourhood"]], "double_neighbourhood() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.double_neighbourhood"]], "find_common_neighbours() (in module matscipy.neighbours)": [[112, "matscipy.neighbours.find_common_neighbours"]], "find_indices_of_reversed_pairs() (in module matscipy.neighbours)": [[112, "matscipy.neighbours.find_indices_of_reversed_pairs"]], "find_triplet_types() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.find_triplet_types"]], "find_triplet_types() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.find_triplet_types"]], "get_pairs() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.get_pairs"]], "get_pairs() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.get_pairs"]], "get_triplets() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.get_triplets"]], "get_triplets() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.get_triplets"]], "lexsort() (matscipy.neighbours.cutoffneighbourhood static method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.molecularneighbourhood static method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.lexsort"]], "lexsort() (matscipy.neighbours.neighbourhood static method)": [[112, "matscipy.neighbours.Neighbourhood.lexsort"]], "make_result() (matscipy.neighbours.cutoffneighbourhood static method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.molecularneighbourhood static method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.make_result"]], "make_result() (matscipy.neighbours.neighbourhood static method)": [[112, "matscipy.neighbours.Neighbourhood.make_result"]], "mask() (matscipy.neighbours.cutoffneighbourhood static method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.mask"]], "mask() (matscipy.neighbours.molecularneighbourhood static method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.mask"]], "mask() (matscipy.neighbours.neighbourhood static method)": [[112, "matscipy.neighbours.Neighbourhood.mask"]], "matscipy.neighbours": [[112, "module-matscipy.neighbours"]], "mic() (in module matscipy.neighbours)": [[112, "matscipy.neighbours.mic"]], "molecules (matscipy.neighbours.molecularneighbourhood property)": [[112, "matscipy.neighbours.MolecularNeighbourhood.molecules"]], "neighbour_list() (in module matscipy.neighbours)": [[112, "matscipy.neighbours.neighbour_list"]], "pair_type (matscipy.neighbours.molecularneighbourhood property)": [[112, "matscipy.neighbours.MolecularNeighbourhood.pair_type"]], "reverse_pair_indices() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.reverse_pair_indices"]], "reverse_pair_indices() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.reverse_pair_indices"]], "triplet_list() (in module matscipy.neighbours)": [[112, "matscipy.neighbours.triplet_list"]], "triplet_to_numbers() (matscipy.neighbours.cutoffneighbourhood method)": [[112, "matscipy.neighbours.CutoffNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.molecularneighbourhood method)": [[112, "matscipy.neighbours.MolecularNeighbourhood.triplet_to_numbers"]], "triplet_to_numbers() (matscipy.neighbours.neighbourhood method)": [[112, "matscipy.neighbours.Neighbourhood.triplet_to_numbers"]], "triplet_type (matscipy.neighbours.molecularneighbourhood property)": [[112, "matscipy.neighbours.MolecularNeighbourhood.triplet_type"]], "get_derivative_volume() (in module matscipy.numerical)": [[113, "matscipy.numerical.get_derivative_volume"]], "get_derivative_wave_vector() (in module matscipy.numerical)": [[113, "matscipy.numerical.get_derivative_wave_vector"]], "matscipy.numerical": [[113, "module-matscipy.numerical"]], "numerical_forces() (in module matscipy.numerical)": [[113, "matscipy.numerical.numerical_forces"]], "numerical_hessian() (in module matscipy.numerical)": [[113, "matscipy.numerical.numerical_hessian"]], "numerical_nonaffine_forces() (in module matscipy.numerical)": [[113, "matscipy.numerical.numerical_nonaffine_forces"]], "numerical_nonaffine_forces_reference() (in module matscipy.numerical)": [[113, "matscipy.numerical.numerical_nonaffine_forces_reference"]], "numerical_stress() (in module matscipy.numerical)": [[113, "matscipy.numerical.numerical_stress"]], "mabincount() (in module matscipy.numpy_tricks)": [[114, "matscipy.numpy_tricks.mabincount"]], "matscipy.numpy_tricks": [[114, "module-matscipy.numpy_tricks"]], "anglesdata (class in matscipy.opls)": [[115, "matscipy.opls.AnglesData"]], "bonddata (class in matscipy.opls)": [[115, "matscipy.opls.BondData"]], "cutofflist (class in matscipy.opls)": [[115, "matscipy.opls.CutoffList"]], "dihedralsdata (class in matscipy.opls)": [[115, "matscipy.opls.DihedralsData"]], "ljqdata (class in matscipy.opls)": [[115, "matscipy.opls.LJQData"]], "oplsstructure (class in matscipy.opls)": [[115, "matscipy.opls.OPLSStructure"]], "__init__() (matscipy.opls.anglesdata method)": [[115, "matscipy.opls.AnglesData.__init__"]], "__init__() (matscipy.opls.bonddata method)": [[115, "matscipy.opls.BondData.__init__"]], "__init__() (matscipy.opls.cutofflist method)": [[115, "matscipy.opls.CutoffList.__init__"]], "__init__() (matscipy.opls.dihedralsdata method)": [[115, "matscipy.opls.DihedralsData.__init__"]], "__init__() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.__init__"]], "__init__() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.__init__"]], "add_name() (matscipy.opls.anglesdata method)": [[115, "matscipy.opls.AnglesData.add_name"]], "add_name() (matscipy.opls.dihedralsdata method)": [[115, "matscipy.opls.DihedralsData.add_name"]], "append() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.append"]], "ase_objtype (matscipy.opls.oplsstructure attribute)": [[115, "matscipy.opls.OPLSStructure.ase_objtype"]], "calc (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.calc"]], "cell (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.cell"]], "center() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.center"]], "clear() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.clear"]], "constraints (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.constraints"]], "copy() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.copy"]], "copy() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.copy"]], "default_map (matscipy.opls.oplsstructure attribute)": [[115, "matscipy.opls.OPLSStructure.default_map"]], "edit() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.edit"]], "euler_rotate() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.euler_rotate"]], "extend() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.extend"]], "fromdict() (matscipy.opls.oplsstructure class method)": [[115, "matscipy.opls.OPLSStructure.fromdict"]], "fromkeys() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.fromkeys"]], "get() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.get"]], "get_all_distances() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_all_distances"]], "get_angle() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_angle"]], "get_angles() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_angles"]], "get_angular_momentum() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_angular_momentum"]], "get_array() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_array"]], "get_atomic_numbers() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_atomic_numbers"]], "get_bonds() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_bonds"]], "get_calculator() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_calculator"]], "get_cell() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_cell"]], "get_cell_lengths_and_angles() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_cell_lengths_and_angles"]], "get_celldisp() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_celldisp"]], "get_center_of_mass() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_center_of_mass"]], "get_charges() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_charges"]], "get_chemical_formula() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_chemical_formula"]], "get_chemical_symbols() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_chemical_symbols"]], "get_dihedral() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_dihedral"]], "get_dihedrals() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_dihedrals"]], "get_dipole_moment() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_dipole_moment"]], "get_distance() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_distance"]], "get_distances() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_distances"]], "get_forces() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_forces"]], "get_global_number_of_atoms() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_global_number_of_atoms"]], "get_initial_charges() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_initial_charges"]], "get_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_initial_magnetic_moments"]], "get_kinetic_energy() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_kinetic_energy"]], "get_magnetic_moment() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_magnetic_moments"]], "get_masses() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_masses"]], "get_momenta() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_momenta"]], "get_moments_of_inertia() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_moments_of_inertia"]], "get_name() (matscipy.opls.anglesdata method)": [[115, "matscipy.opls.AnglesData.get_name"]], "get_name() (matscipy.opls.bonddata method)": [[115, "matscipy.opls.BondData.get_name"]], "get_name() (matscipy.opls.cutofflist method)": [[115, "matscipy.opls.CutoffList.get_name"]], "get_name() (matscipy.opls.dihedralsdata method)": [[115, "matscipy.opls.DihedralsData.get_name"]], "get_neighbors() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_neighbors"]], "get_number_of_atoms() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_number_of_atoms"]], "get_pbc() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_pbc"]], "get_positions() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_positions"]], "get_potential_energies() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_potential_energies"]], "get_potential_energy() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_potential_energy"]], "get_properties() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_properties"]], "get_reciprocal_cell() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_reciprocal_cell"]], "get_scaled_positions() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_scaled_positions"]], "get_stress() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_stress"]], "get_stresses() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_stresses"]], "get_tags() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_tags"]], "get_temperature() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_temperature"]], "get_total_energy() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_total_energy"]], "get_types() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_types"]], "get_value() (matscipy.opls.bonddata method)": [[115, "matscipy.opls.BondData.get_value"]], "get_value() (matscipy.opls.cutofflist method)": [[115, "matscipy.opls.CutoffList.get_value"]], "get_velocities() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_velocities"]], "get_volume() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.get_volume"]], "has() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.has"]], "items() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.items"]], "iterimages() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.iterimages"]], "keys() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.keys"]], "matscipy.opls": [[115, "module-matscipy.opls"]], "max() (matscipy.opls.cutofflist method)": [[115, "matscipy.opls.CutoffList.max"]], "name_value() (matscipy.opls.anglesdata method)": [[115, "matscipy.opls.AnglesData.name_value"]], "name_value() (matscipy.opls.bonddata method)": [[115, "matscipy.opls.BondData.name_value"]], "name_value() (matscipy.opls.cutofflist method)": [[115, "matscipy.opls.CutoffList.name_value"]], "name_value() (matscipy.opls.dihedralsdata method)": [[115, "matscipy.opls.DihedralsData.name_value"]], "new_array() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.new_array"]], "number_of_lattice_vectors (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.number_of_lattice_vectors"]], "numbers (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.numbers"]], "pbc (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.pbc"]], "pop() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.pop"]], "pop() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.pop"]], "popitem() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.popitem"]], "positions (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.positions"]], "rattle() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.rattle"]], "repeat() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.repeat"]], "rotate() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.rotate"]], "rotate_dihedral() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.rotate_dihedral"]], "set_angle() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_angle"]], "set_array() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_array"]], "set_atom_data() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_atom_data"]], "set_atomic_numbers() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_atomic_numbers"]], "set_calculator() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_calculator"]], "set_cell() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_cell"]], "set_celldisp() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_celldisp"]], "set_center_of_mass() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_center_of_mass"]], "set_chemical_symbols() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_chemical_symbols"]], "set_constraint() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_constraint"]], "set_cutoffs() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_cutoffs"]], "set_dihedral() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_dihedral"]], "set_distance() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_distance"]], "set_initial_charges() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_initial_charges"]], "set_initial_magnetic_moments() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_initial_magnetic_moments"]], "set_masses() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_masses"]], "set_momenta() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_momenta"]], "set_names() (matscipy.opls.anglesdata method)": [[115, "matscipy.opls.AnglesData.set_names"]], "set_names() (matscipy.opls.bonddata method)": [[115, "matscipy.opls.BondData.set_names"]], "set_names() (matscipy.opls.cutofflist method)": [[115, "matscipy.opls.CutoffList.set_names"]], "set_names() (matscipy.opls.dihedralsdata method)": [[115, "matscipy.opls.DihedralsData.set_names"]], "set_pbc() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_pbc"]], "set_positions() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_positions"]], "set_scaled_positions() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_scaled_positions"]], "set_tags() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_tags"]], "set_types() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_types"]], "set_velocities() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.set_velocities"]], "setdefault() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.setdefault"]], "symbols (matscipy.opls.oplsstructure property)": [[115, "matscipy.opls.OPLSStructure.symbols"]], "todict() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.todict"]], "translate() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.translate"]], "twochar() (in module matscipy.opls)": [[115, "matscipy.opls.twochar"]], "update() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.update"]], "values() (matscipy.opls.ljqdata method)": [[115, "matscipy.opls.LJQData.values"]], "wrap() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.wrap"]], "write() (matscipy.opls.oplsstructure method)": [[115, "matscipy.opls.OPLSStructure.write"]], "matscipy.optimize": [[116, "module-matscipy.optimize"]], "ode12r() (in module matscipy.optimize)": [[116, "matscipy.optimize.ode12r"]], "hessianprecon (class in matscipy.precon)": [[117, "matscipy.precon.HessianPrecon"]], "pdot() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.Pdot"]], "__init__() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.__init__"]], "apply() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.apply"]], "asarray() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.asarray"]], "copy() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.copy"]], "dot() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.dot"]], "make_precon() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.make_precon"]], "matscipy.precon": [[117, "module-matscipy.precon"]], "norm() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.norm"]], "solve() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.solve"]], "vdot() (matscipy.precon.hessianprecon method)": [[117, "matscipy.precon.HessianPrecon.vdot"]], "autodamping (class in matscipy.pressurecoupling)": [[118, "matscipy.pressurecoupling.AutoDamping"]], "fixeddamping (class in matscipy.pressurecoupling)": [[118, "matscipy.pressurecoupling.FixedDamping"]], "fixedmasscriticaldamping (class in matscipy.pressurecoupling)": [[118, "matscipy.pressurecoupling.FixedMassCriticalDamping"]], "p_bottom (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.P_bottom"]], "p_top (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.P_top"]], "slidelog (class in matscipy.pressurecoupling)": [[118, "matscipy.pressurecoupling.SlideLog"]], "slidelogger (class in matscipy.pressurecoupling)": [[118, "matscipy.pressurecoupling.SlideLogger"]], "slidewithnormalpressurecuboidcell (class in matscipy.pressurecoupling)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell"]], "t_thermostat (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.T_thermostat"]], "tdir (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.Tdir"]], "__init__() (matscipy.pressurecoupling.autodamping method)": [[118, "matscipy.pressurecoupling.AutoDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixeddamping method)": [[118, "matscipy.pressurecoupling.FixedDamping.__init__"]], "__init__() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[118, "matscipy.pressurecoupling.FixedMassCriticalDamping.__init__"]], "__init__() (matscipy.pressurecoupling.slidelog method)": [[118, "matscipy.pressurecoupling.SlideLog.__init__"]], "__init__() (matscipy.pressurecoupling.slidelogger method)": [[118, "matscipy.pressurecoupling.SlideLogger.__init__"]], "__init__() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.__init__"]], "a (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.a"]], "adjust_forces() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_forces"]], "adjust_momenta() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_momenta"]], "adjust_positions() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_positions"]], "adjust_potential_energy() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.adjust_potential_energy"]], "get_a() (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell method)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.get_A"]], "get_m_gamma() (matscipy.pressurecoupling.autodamping method)": [[118, "matscipy.pressurecoupling.AutoDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixeddamping method)": [[118, "matscipy.pressurecoupling.FixedDamping.get_M_gamma"]], "get_m_gamma() (matscipy.pressurecoupling.fixedmasscriticaldamping method)": [[118, "matscipy.pressurecoupling.FixedMassCriticalDamping.get_M_gamma"]], "h (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.h"]], "matscipy.pressurecoupling": [[118, "module-matscipy.pressurecoupling"]], "middle_mask (matscipy.pressurecoupling.slidewithnormalpressurecuboidcell property)": [[118, "matscipy.pressurecoupling.SlideWithNormalPressureCuboidCell.middle_mask"]], "rows (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.rows"]], "step (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.step"]], "tau_bottom (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.tau_bottom"]], "tau_top (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.tau_top"]], "time (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.time"]], "v (matscipy.pressurecoupling.slidelog attribute)": [[118, "matscipy.pressurecoupling.SlideLog.v"]], "write_header() (matscipy.pressurecoupling.slidelogger method)": [[118, "matscipy.pressurecoupling.SlideLogger.write_header"]], "matscipy.rings": [[119, "module-matscipy.rings"]], "ring_statistics() (in module matscipy.rings)": [[119, "matscipy.rings.ring_statistics"]], "atomsrequesthandler (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.AtomsRequestHandler"]], "atomsserver (in module matscipy.socketcalc)": [[120, "matscipy.socketcalc.AtomsServer"]], "atomsserverasync (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.AtomsServerAsync"]], "atomsserversync (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.AtomsServerSync"]], "castepclient (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.CastepClient"]], "client (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.Client"]], "qmclient (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.QMClient"]], "quipclient (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.QUIPClient"]], "socketcalculator (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.SocketCalculator"]], "vaspclient (class in matscipy.socketcalc)": [[120, "matscipy.socketcalc.VaspClient"]], "__init__() (matscipy.socketcalc.atomsrequesthandler method)": [[120, "matscipy.socketcalc.AtomsRequestHandler.__init__"]], "__init__() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.__init__"]], "__init__() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.__init__"]], "__init__() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.__init__"]], "__init__() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.__init__"]], "__init__() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.__init__"]], "__init__() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.__init__"]], "__init__() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.__init__"]], "__init__() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.__init__"]], "address_family (matscipy.socketcalc.atomsserverasync attribute)": [[120, "matscipy.socketcalc.AtomsServerAsync.address_family"]], "address_family (matscipy.socketcalc.atomsserversync attribute)": [[120, "matscipy.socketcalc.AtomsServerSync.address_family"]], "allow_reuse_address (matscipy.socketcalc.atomsserverasync attribute)": [[120, "matscipy.socketcalc.AtomsServerAsync.allow_reuse_address"]], "allow_reuse_address (matscipy.socketcalc.atomsserversync attribute)": [[120, "matscipy.socketcalc.AtomsServerSync.allow_reuse_address"]], "band_structure() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.band_structure"]], "block_on_close (matscipy.socketcalc.atomsserverasync attribute)": [[120, "matscipy.socketcalc.AtomsServerAsync.block_on_close"]], "calculate() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.calculate"]], "calculate_numerical_forces() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.calculate_numerical_forces"]], "calculate_numerical_stress() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.calculate_numerical_stress"]], "calculate_properties() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.calculate_properties"]], "calculation_required() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.calculation_required"]], "check_state() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.check_state"]], "close_request() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.close_request"]], "close_request() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.close_request"]], "daemon_threads (matscipy.socketcalc.atomsserverasync attribute)": [[120, "matscipy.socketcalc.AtomsServerAsync.daemon_threads"]], "default_parameters (matscipy.socketcalc.socketcalculator attribute)": [[120, "matscipy.socketcalc.SocketCalculator.default_parameters"]], "directory (matscipy.socketcalc.socketcalculator property)": [[120, "matscipy.socketcalc.SocketCalculator.directory"]], "disable_nagle_algorithm (matscipy.socketcalc.atomsrequesthandler attribute)": [[120, "matscipy.socketcalc.AtomsRequestHandler.disable_nagle_algorithm"]], "discard_results_on_any_change (matscipy.socketcalc.socketcalculator attribute)": [[120, "matscipy.socketcalc.SocketCalculator.discard_results_on_any_change"]], "export_properties() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.export_properties"]], "extra_args() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.extra_args"]], "extra_args() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.extra_args"]], "extra_args() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.extra_args"]], "extra_args() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.extra_args"]], "extra_args() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.extra_args"]], "fileno() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.fileno"]], "fileno() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.fileno"]], "finish() (matscipy.socketcalc.atomsrequesthandler method)": [[120, "matscipy.socketcalc.AtomsRequestHandler.finish"]], "finish_request() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.finish_request"]], "finish_request() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.finish_request"]], "get_atoms() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_atoms"]], "get_charges() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_charges"]], "get_default_parameters() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_default_parameters"]], "get_dipole_moment() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_dipole_moment"]], "get_forces() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_forces"]], "get_magnetic_moment() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_magnetic_moment"]], "get_magnetic_moments() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_magnetic_moments"]], "get_potential_energies() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_potential_energies"]], "get_potential_energy() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_potential_energy"]], "get_property() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_property"]], "get_request() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.get_request"]], "get_request() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.get_request"]], "get_results() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.get_results"]], "get_results() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.get_results"]], "get_stress() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_stress"]], "get_stresses() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.get_stresses"]], "handle() (matscipy.socketcalc.atomsrequesthandler method)": [[120, "matscipy.socketcalc.AtomsRequestHandler.handle"]], "handle_error() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.handle_error"]], "handle_error() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.handle_error"]], "handle_request() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.handle_request"]], "handle_request() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.handle_request"]], "handle_timeout() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.handle_timeout"]], "handle_timeout() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.handle_timeout"]], "ignored_changes (matscipy.socketcalc.socketcalculator attribute)": [[120, "matscipy.socketcalc.SocketCalculator.ignored_changes"]], "implemented_properties (matscipy.socketcalc.socketcalculator attribute)": [[120, "matscipy.socketcalc.SocketCalculator.implemented_properties"]], "is_compatible() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.is_compatible"]], "is_compatible() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.is_compatible"]], "is_compatible() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.is_compatible"]], "join_all() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.join_all"]], "join_all() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.join_all"]], "label (matscipy.socketcalc.socketcalculator property)": [[120, "matscipy.socketcalc.SocketCalculator.label"]], "matscipy.socketcalc": [[120, "module-matscipy.socketcalc"]], "name (matscipy.socketcalc.socketcalculator attribute)": [[120, "matscipy.socketcalc.SocketCalculator.name"]], "pack_atoms_to_reftraj_str() (in module matscipy.socketcalc)": [[120, "matscipy.socketcalc.pack_atoms_to_reftraj_str"]], "pack_atoms_to_xyz_str() (in module matscipy.socketcalc)": [[120, "matscipy.socketcalc.pack_atoms_to_xyz_str"]], "pack_results_to_reftraj_output_str() (in module matscipy.socketcalc)": [[120, "matscipy.socketcalc.pack_results_to_reftraj_output_str"]], "postprocess() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.postprocess"]], "postprocess() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.postprocess"]], "postprocess() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.postprocess"]], "postprocess() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.postprocess"]], "postprocess() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.postprocess"]], "preprocess() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.preprocess"]], "preprocess() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.preprocess"]], "preprocess() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.preprocess"]], "preprocess() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.preprocess"]], "preprocess() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.preprocess"]], "process_request() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.process_request"]], "process_request() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.process_request"]], "process_request_thread() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.process_request_thread"]], "put() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.put"]], "put() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.put"]], "rbufsize (matscipy.socketcalc.atomsrequesthandler attribute)": [[120, "matscipy.socketcalc.AtomsRequestHandler.rbufsize"]], "read() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.read"]], "read_atoms() (matscipy.socketcalc.socketcalculator class method)": [[120, "matscipy.socketcalc.SocketCalculator.read_atoms"]], "request_queue_size (matscipy.socketcalc.atomsserverasync attribute)": [[120, "matscipy.socketcalc.AtomsServerAsync.request_queue_size"]], "request_queue_size (matscipy.socketcalc.atomsserversync attribute)": [[120, "matscipy.socketcalc.AtomsServerSync.request_queue_size"]], "reset() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.reset"]], "serve_forever() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.serve_forever"]], "serve_forever() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.serve_forever"]], "server_activate() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.server_activate"]], "server_activate() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.server_activate"]], "server_bind() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.server_bind"]], "server_bind() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.server_bind"]], "server_close() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.server_close"]], "server_close() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.server_close"]], "service_actions() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.service_actions"]], "service_actions() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.service_actions"]], "set() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.set"]], "set_label() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.set_label"]], "setup() (matscipy.socketcalc.atomsrequesthandler method)": [[120, "matscipy.socketcalc.AtomsRequestHandler.setup"]], "shutdown() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.shutdown"]], "shutdown() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.shutdown"]], "shutdown() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.shutdown"]], "shutdown() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.shutdown"]], "shutdown() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.shutdown"]], "shutdown() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.shutdown"]], "shutdown() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.shutdown"]], "shutdown() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.shutdown"]], "shutdown_clients() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.shutdown_clients"]], "shutdown_clients() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.shutdown_clients"]], "shutdown_request() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.shutdown_request"]], "shutdown_request() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.shutdown_request"]], "socket_type (matscipy.socketcalc.atomsserverasync attribute)": [[120, "matscipy.socketcalc.AtomsServerAsync.socket_type"]], "socket_type (matscipy.socketcalc.atomsserversync attribute)": [[120, "matscipy.socketcalc.AtomsServerSync.socket_type"]], "start() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.start"]], "start() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.start"]], "start() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.start"]], "start() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.start"]], "start() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.start"]], "start_or_restart() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.start_or_restart"]], "start_or_restart() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.start_or_restart"]], "timeout (matscipy.socketcalc.atomsrequesthandler attribute)": [[120, "matscipy.socketcalc.AtomsRequestHandler.timeout"]], "timeout (matscipy.socketcalc.atomsserverasync attribute)": [[120, "matscipy.socketcalc.AtomsServerAsync.timeout"]], "timeout (matscipy.socketcalc.atomsserversync attribute)": [[120, "matscipy.socketcalc.AtomsServerSync.timeout"]], "todict() (matscipy.socketcalc.socketcalculator method)": [[120, "matscipy.socketcalc.SocketCalculator.todict"]], "unpack_reftraj_output_str_to_results() (in module matscipy.socketcalc)": [[120, "matscipy.socketcalc.unpack_reftraj_output_str_to_results"]], "unpack_reftraj_str_to_atoms() (in module matscipy.socketcalc)": [[120, "matscipy.socketcalc.unpack_reftraj_str_to_atoms"]], "unpack_xyz_str_to_results() (in module matscipy.socketcalc)": [[120, "matscipy.socketcalc.unpack_xyz_str_to_results"]], "verify_request() (matscipy.socketcalc.atomsserverasync method)": [[120, "matscipy.socketcalc.AtomsServerAsync.verify_request"]], "verify_request() (matscipy.socketcalc.atomsserversync method)": [[120, "matscipy.socketcalc.AtomsServerSync.verify_request"]], "wait_for_shutdown() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.wait_for_shutdown"]], "wait_for_shutdown() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.wait_for_shutdown"]], "wbufsize (matscipy.socketcalc.atomsrequesthandler attribute)": [[120, "matscipy.socketcalc.AtomsRequestHandler.wbufsize"]], "write_input_files() (matscipy.socketcalc.castepclient method)": [[120, "matscipy.socketcalc.CastepClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.client method)": [[120, "matscipy.socketcalc.Client.write_input_files"]], "write_input_files() (matscipy.socketcalc.qmclient method)": [[120, "matscipy.socketcalc.QMClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.quipclient method)": [[120, "matscipy.socketcalc.QUIPClient.write_input_files"]], "write_input_files() (matscipy.socketcalc.vaspclient method)": [[120, "matscipy.socketcalc.VaspClient.write_input_files"]], "betrag() (in module matscipy.spatial_correlation_function)": [[121, "matscipy.spatial_correlation_function.betrag"]], "matscipy.spatial_correlation_function": [[121, "module-matscipy.spatial_correlation_function"]], "max_rad() (in module matscipy.spatial_correlation_function)": [[121, "matscipy.spatial_correlation_function.max_rad"]], "spatial_correlation_function() (in module matscipy.spatial_correlation_function)": [[121, "matscipy.spatial_correlation_function.spatial_correlation_function"]], "spatial_correlation_function_near() (in module matscipy.spatial_correlation_function)": [[121, "matscipy.spatial_correlation_function.spatial_correlation_function_near"]], "aligned (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.ALIGNED"]], "behaved (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.BEHAVED"]], "carray (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.CARRAY"]], "c_contiguous (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.C_CONTIGUOUS"]], "farray (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.FARRAY"]], "fnc (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.FNC"]], "forc (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.FORC"]], "f_contiguous (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.F_CONTIGUOUS"]], "millerdirection() (in module matscipy.surface)": [[122, "matscipy.surface.MillerDirection"]], "millerindex (class in matscipy.surface)": [[122, "matscipy.surface.MillerIndex"]], "millerplane() (in module matscipy.surface)": [[122, "matscipy.surface.MillerPlane"]], "owndata (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.OWNDATA"]], "t (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.T"]], "writeable (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.WRITEABLE"]], "writebackifcopy (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.WRITEBACKIFCOPY"]], "all() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.all"]], "all_brackets (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.all_brackets"]], "angle() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.angle"]], "angle_between() (in module matscipy.surface)": [[122, "matscipy.surface.angle_between"]], "any() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.any"]], "argmax() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.argmax"]], "argmin() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.argmin"]], "argpartition() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.argpartition"]], "argsort() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.argsort"]], "as3() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.as3"]], "as4() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.as4"]], "astype() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.astype"]], "base (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.base"]], "brackets (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.brackets"]], "byteswap() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.byteswap"]], "choose() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.choose"]], "clip() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.clip"]], "compress() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.compress"]], "conj() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.conj"]], "conjugate() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.conjugate"]], "copy() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.copy"]], "cosine() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.cosine"]], "cross() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.cross"]], "ctypes (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.ctypes"]], "cumprod() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.cumprod"]], "cumsum() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.cumsum"]], "data (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.data"]], "diagonal() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.diagonal"]], "dot() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.dot"]], "dtype (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.dtype"]], "dump() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.dump"]], "dumps() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.dumps"]], "fill() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.fill"]], "find_surface_energy() (in module matscipy.surface)": [[122, "matscipy.surface.find_surface_energy"]], "flags (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.flags"]], "flat (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.flat"]], "flatten() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.flatten"]], "gcd() (in module matscipy.surface)": [[122, "matscipy.surface.gcd"]], "getfield() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.getfield"]], "hat() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.hat"]], "imag (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.imag"]], "item() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.item"]], "itemset() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.itemset"]], "itemsize (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.itemsize"]], "latex() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.latex"]], "make_unit_slab() (in module matscipy.surface)": [[122, "matscipy.surface.make_unit_slab"]], "matscipy.surface": [[122, "module-matscipy.surface"]], "max() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.max"]], "mean() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.mean"]], "min() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.min"]], "nbytes (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.nbytes"]], "ndim (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.ndim"]], "newbyteorder() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.newbyteorder"]], "nonzero() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.nonzero"]], "norm() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.norm"]], "normalised() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.normalised"]], "parse() (matscipy.surface.millerindex class method)": [[122, "matscipy.surface.MillerIndex.parse"]], "partition() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.partition"]], "plane_spacing() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.plane_spacing"]], "prod() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.prod"]], "ptp() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.ptp"]], "put() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.put"]], "ravel() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.ravel"]], "real (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.real"]], "repeat() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.repeat"]], "reshape() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.reshape"]], "resize() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.resize"]], "round() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.round"]], "searchsorted() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.searchsorted"]], "setfield() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.setfield"]], "setflags() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.setflags"]], "shape (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.shape"]], "simplified() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.simplified"]], "simplify() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.simplify"]], "size (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.size"]], "sort() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.sort"]], "squeeze() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.squeeze"]], "std() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.std"]], "strides (matscipy.surface.millerindex attribute)": [[122, "matscipy.surface.MillerIndex.strides"]], "sum() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.sum"]], "swapaxes() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.swapaxes"]], "take() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.take"]], "tobytes() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.tobytes"]], "tofile() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.tofile"]], "tolist() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.tolist"]], "tostring() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.tostring"]], "trace() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.trace"]], "transpose() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.transpose"]], "var() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.var"]], "view() (matscipy.surface.millerindex method)": [[122, "matscipy.surface.MillerIndex.view"]], "surfacereconstruction (class in matscipy.surface_reconstruction)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction"]], "__init__() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.__init__"]], "apply_pandey_111() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.apply_pandey_111"]], "apply_si_110() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.apply_si_110"]], "apply_surface_shift() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.apply_surface_shift"]], "identify_layers() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.identify_layers"]], "identify_pandey_layers() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.identify_pandey_layers"]], "identify_si_110_layers() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.identify_si_110_layers"]], "map_pandey_111() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.map_pandey_111"]], "map_si_110_3x1() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.map_si_110_3x1"]], "map_surface() (matscipy.surface_reconstruction.surfacereconstruction method)": [[123, "matscipy.surface_reconstruction.SurfaceReconstruction.map_surface"]], "matscipy.surface_reconstruction": [[123, "module-matscipy.surface_reconstruction"]], "complete_basis() (in module matscipy.utils)": [[124, "matscipy.utils.complete_basis"]], "get_structure_types() (in module matscipy.utils)": [[124, "matscipy.utils.get_structure_types"]], "matscipy.utils": [[124, "module-matscipy.utils"]], "validate_cubic_cell() (in module matscipy.utils)": [[124, "matscipy.utils.validate_cubic_cell"]]}})